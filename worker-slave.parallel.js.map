{"version":3,"sources":["webpack:///worker-slave.parallel.js","webpack:///webpack/bootstrap 0640d048e5724c2c8965","webpack:///./~/simjs-random/simjs-random.js","webpack:///./webpack:/webpack/bootstrap 4741d80d2fbbed2965b7","webpack:///webpack:///src/common/util/arrays.ts","webpack:///webpack:///src/common/function/serialized-function-call.ts","webpack:///webpack:///src/common/worker/worker-messages.ts","webpack:///webpack:///src/browser/worker-slave/browser-worker-slave.ts","webpack:///webpack:///src/common/function/slave-function-lookup-table.ts","webpack:///webpack:///src/common/parallel/slave/register-parallel-worker-functions.ts","webpack:///webpack:///src/browser/worker-slave/browser-worker-slave-states.ts","webpack:///webpack:///src/common/function/function-call-deserializer.ts","webpack:///webpack:///src/common/function/function-id.ts","webpack:///webpack:///src/common/parallel/slave/filter-iterator.ts","webpack:///webpack:///src/common/parallel/slave/map-iterator.ts","webpack:///webpack:///src/common/parallel/slave/parallel-job-executor.ts","webpack:///webpack:///src/common/parallel/slave/parallel-worker-functions.ts","webpack:///webpack:///src/common/parallel/slave/range-iterator.ts","webpack:///webpack:///src/common/parallel/slave/reduce-iterator.ts","webpack:///webpack:///src/common/util/assign.ts","webpack:///webpack:///src/common/util/identity.ts","webpack:///webpack:///src/common/util/simple-map.ts","webpack:///webpack:///src/browser/worker-slave/index.ts","webpack:///./src/transpiled/mandelbrot.ts","webpack:///./src/transpiled/knights-tour.ts","webpack:///./src/transpiled/monte-carlo.ts"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","i","l","call","m","c","value","d","name","getter","Object","defineProperty","configurable","enumerable","get","n","__esModule","o","object","property","prototype","hasOwnProperty","p","s","Random","seed","undefined","Date","getTime","Math","ceil","floor","TypeError","this","N","M","MATRIX_A","UPPER_MASK","LOWER_MASK","mt","Array","mti","init_by_array","init_genrand","init_key","key_length","j","k","genrand_int32","y","mag01","kk","genrand_int31","genrand_real1","random","pythonCompatibility","skip","genrand_real3","genrand_res53","a","b","LOG4","log","SG_MAGICCONST","exponential","lambda","arguments","length","SyntaxError","r","gamma","alpha","beta","u","E","x","pow","u1","exp","ainv","sqrt","bbb","ccc","u2","v","z","normal","mu","sigma","lastNormal","NaN","PI","cos","sin","pareto","triangular","lower","upper","mode","uniform","weibull","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","create","constructor","writable","setPrototypeOf","__proto__","_toConsumableArray","arr","isArray","arr2","from","_classCallCheck","instance","Constructor","_toArray","__WEBPACK_IMPORTED_MODULE_0_simjs_random__","__WEBPACK_IMPORTED_MODULE_0_simjs_random___default","_createClass","defineProperties","target","props","descriptor","key","protoProps","staticProps","toIterator","data","Symbol","iterator","toArray","result","current","next","done","push","isSerializedFunctionCall","potentialFunc","______serializedFunctionCall","requestFunctionMessage","functionId","_len","otherFunctionIds","_key","functionIds","concat","type","WorkerMessageType","FunctionRequest","workerResultMessage","WorkerResult","functionExecutionError","error","errorObject","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","getOwnPropertyNames","prop","JSON","stringify","err","return","FunctionExecutionError","isScheduleTask","message","ScheduleTask","isInitializeMessage","InitializeWorker","isFunctionResponse","FunctionResponse","isStopMesssage","Stop","__WEBPACK_IMPORTED_MODULE_0__common_worker_worker_messages__","__WEBPACK_IMPORTED_MODULE_1__browser_worker_slave_states__","BrowserWorkerSlave","functionCache","id","Number","state","enter","event","close","onMessage","Error","_postMessage","postMessage","_x","apply","toString","__WEBPACK_IMPORTED_MODULE_0__util_simple_map__","SlaveFunctionLookupTable","cache","identifier","definition","f","toFunction","set","func","has","args","argumentNames","join","wrapper","Function","body","registerStaticParallelFunctions","lookupTable","registerStaticFunction","__WEBPACK_IMPORTED_MODULE_0__parallel_worker_functions__","IDENTITY","__WEBPACK_IMPORTED_MODULE_1__util_identity__","FILTER","__WEBPACK_IMPORTED_MODULE_2__filter_iterator__","MAP","__WEBPACK_IMPORTED_MODULE_3__map_iterator__","PARALLEL_JOB_EXECUTOR","__WEBPACK_IMPORTED_MODULE_4__parallel_job_executor__","RANGE","__WEBPACK_IMPORTED_MODULE_5__range_iterator__","REDUCE","__WEBPACK_IMPORTED_MODULE_6__reduce_iterator__","TO_ITERATOR","__WEBPACK_IMPORTED_MODULE_7__util_arrays__","__WEBPACK_IMPORTED_MODULE_0__common_function_function_call_deserializer__","__WEBPACK_IMPORTED_MODULE_1__common_worker_worker_messages__","BrowserWorkerSlaveState","slave","DefaultBrowserWorkerSlaveState","getPrototypeOf","_BrowserWorkerSlaveSt","workerId","changeState","IdleBrowserWorkerSlaveState","_BrowserWorkerSlaveSt2","_this3","task","missingFunctions","usedFunctionIds","filter","ExecuteFunctionBrowserWorkerSlaveState","_missingFunctions","head","tail","slice","WaitingForFunctionDefinitionBrowserWorkerSlaveState","_this4","_BrowserWorkerSlaveSt3","identifiers","map","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","functions","registerFunction","_this5","_BrowserWorkerSlaveSt4","functionDeserializer","main","deserializeFunctionCall","functionCallDeserializer","bind","fn","params","_len3","additionalParams","_key3","__WEBPACK_IMPORTED_MODULE_0__serialized_function_call__","FunctionCallDeserializer","functionLookupTable","functionCall","_this6","deserializeParams","getFunction","parameters","param","namespace","_______isFunctionId","filterIterator","predicate","env","mapIterator","iteratee","createTaskEnvironment","taskEnvironment","taskIndex","valuesPerTask","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","environments","environment","currentEnvironment","__WEBPACK_IMPORTED_MODULE_1__function_serialized_function_call__","__WEBPACK_IMPORTED_MODULE_2__util_assign__","parallelJobExecutor","_ref","generatorFunction","generator","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","operations","operation","iteratorFunction","__WEBPACK_IMPORTED_MODULE_0__util_arrays__","__WEBPACK_IMPORTED_MODULE_0__function_function_id__","ParallelWorkerFunctionIds","TIMES","rangeIterator","start","end","step","distance","max","reduceIterator","defaultValue","accumulatedValue","assign","_len4","sources","_key4","index","source","identity","element","SimpleMap","internalKey","toInternalKey","__WEBPACK_IMPORTED_MODULE_0__browser_worker_slave__","__WEBPACK_IMPORTED_MODULE_1__common_function_slave_function_lookup_table__","__WEBPACK_IMPORTED_MODULE_2__common_parallel_slave_register_parallel_worker_functions__","slaveFunctionLookupTable","_computeMandelbrotLin","calculateZ","real","iterations","zI","line","Uint8ClampedArray","imageWidth","cI","scalingFactor","min","base","_entry_computeMandelbrotLin","_environment","_anonymous","memo","count","visitField","field","board","boardSize","fieldIndex","moves","move","successor","accessible","knightTours","startPath","fill","_entryknightTours","calculateRequiredAmount","project","amount","totalAmount","projectsSameYear","projectsByStartYear","startYear","_isArray2","_i2","_ref2","otherProject","compareNumbersInverse","createGroups","requiredAmount","noInterestReference","description","percentage","separator","liquidity","to","groupForValue","groups","find","group","computeBucket","bucketStart","bucketSize","simulatedValuesThisYear","valuesByGroup","bucket","MIN_SAFE_INTEGER","MAX_SAFE_INTEGER","subBuckets","green","empty","yellow","gray","red","bucketEnd","subBucket","computeBuckets","NUMBER_OF_BUCKETS","round","buckets","median","values","half","calculateProject","simulatedValues","sort","noInterestReferenceLine","_computeBuckets","nonEmptyGroups","forEach","oneSixth","twoThird","toAbsoluteIndices","indices","cashFlows","investmentAmount","absolute","currentPortfolioValue","previousYearIndex","relativeYear","currentYearIndex","cashFlowStartOfYear","performance","simulateSingleAbsoluteOutcome","numYears","options","randomPerformance","volatility","simulateOutcomes","year","numRuns","run","createMonteCarloEnvironment","projectsToCashFlows","projectsByThisYear","cashFlow","reduce","calculateNoInterestReferenceLine","investmentAmountLeft","projectsToSimulate","projects","_isArray","_i","onmessage"],"mappings":"CAAS,SAAUA,SCInB,QAAAC,qBAAAC,UAGA,GAAAC,iBAAAD,UACA,MAAAC,kBAAAD,UAAAE,OAGA,IAAAC,QAAAF,iBAAAD,WACAI,EAAAJ,SACAK,GAAA,EACAH,WAUA,OANAJ,SAAAE,UAAAM,KAAAH,OAAAD,QAAAC,cAAAD,QAAAH,qBAGAI,OAAAE,GAAA,EAGAF,OAAAD,QAvBA,GAAAD,oBA6DA,OAjCAF,qBAAAQ,EAAAT,QAGAC,oBAAAS,EAAAP,iBAGAF,oBAAAK,EAAA,SAAAK,OAA2C,MAAAA,QAG3CV,oBAAAW,EAAA,SAAAR,QAAAS,KAAAC,QACAC,OAAAC,eAAAZ,QAAAS,MACAI,cAAA,EACAC,YAAA,EACAC,IAAAL,UAKAb,oBAAAmB,EAAA,SAAAf,QACA,GAAAS,QAAAT,eAAAgB,WACA,WAA2B,MAAAhB,QAAA,SAC3B,WAAiC,MAAAA,QAEjC,OADAJ,qBAAAW,EAAAE,OAAA,IAAAA,QACAA,QAIAb,oBAAAqB,EAAA,SAAAC,OAAAC,UAAsD,MAAAT,QAAAU,UAAAC,eAAAlB,KAAAe,OAAAC,WAGtDvB,oBAAA0B,EAAA,GAGA1B,wCAAA2B,EAAA,KDMM,SAASvB,OAAQD;;;;AEfvB,GAAAyB,QAAA,SAAAC,MAEA,GADAA,KAAAC,SAAAD,MAAA,GAAAE,OAAAC,UAAAH,KACA,uBACAI,KAAAC,KAAAL,OAAAI,KAAAE,MAAAN,MACA,SAAAO,WAAA,gCAKAC,MAAAC,EAAA,IACAD,KAAAE,EAAA,IACAF,KAAAG,SAAA,WACAH,KAAAI,WAAA,WACAJ,KAAAK,WAAA,WAEAL,KAAAM,GAAA,GAAAC,OAAAP,KAAAC,GACAD,KAAAQ,IAAAR,KAAAC,EAAA,EAGAD,KAAAS,eAAAjB,MAAA,GAIAD,QAAAJ,UAAAuB,aAAA,SAAApB,GAEA,IADAU,KAAAM,GAAA,GAAAhB,IAAA,EACAU,KAAAQ,IAAA,EAAiBR,KAAAQ,IAAAR,KAAAC,EAAiBD,KAAAQ,MAAA,CAClC,GAAAlB,GAAAU,KAAAM,GAAAN,KAAAQ,IAAA,GAAAR,KAAAM,GAAAN,KAAAQ,IAAA,OACAR,MAAAM,GAAAN,KAAAQ,MAAA,wBAAAlB,KAAA,2BAAAA,GACAU,KAAAQ,IAKAR,KAAAM,GAAAN,KAAAQ,QAAA,IASAjB,OAAAJ,UAAAsB,cAAA,SAAAE,SAAAC,YACA,GAAA5C,GAAA6C,EAAAC,CAIA,KAHAd,KAAAU,aAAA,UACA1C,EAAA,EAAK6C,EAAA,EACLC,EAAAd,KAAAC,EAAAW,WAAAZ,KAAAC,EAAAW,WACOE,EAAGA,IAAA,CACV,GAAAxB,GAAAU,KAAAM,GAAAtC,EAAA,GAAAgC,KAAAM,GAAAtC,EAAA,OACAgC,MAAAM,GAAAtC,IAAAgC,KAAAM,GAAAtC,IAAA,qBAAAsB,KAAA,wBAAAA,IACAqB,SAAAE,KACAb,KAAAM,GAAAtC,MAAA,EACAA,IAAM6C,IACN7C,GAAAgC,KAAAC,IAAkBD,KAAAM,GAAA,GAAAN,KAAAM,GAAAN,KAAAC,EAAA,GAAgCjC,EAAA,GAClD6C,GAAAD,aAAAC,EAAA,GAEA,IAAAC,EAAAd,KAAAC,EAAA,EAAiBa,EAAGA,IAAA,CACpB,GAAAxB,GAAAU,KAAAM,GAAAtC,EAAA,GAAAgC,KAAAM,GAAAtC,EAAA,OACAgC,MAAAM,GAAAtC,IAAAgC,KAAAM,GAAAtC,IAAA,wBAAAsB,KAAA,2BAAAA,IACAtB,EACAgC,KAAAM,GAAAtC,MAAA,EACAA,IACAA,GAAAgC,KAAAC,IAAkBD,KAAAM,GAAA,GAAAN,KAAAM,GAAAN,KAAAC,EAAA,GAAgCjC,EAAA,GAGlDgC,KAAAM,GAAA,eAIAf,OAAAJ,UAAA4B,cAAA,WACA,GAAAC,GACAC,MAAA,GAAAV,OAAA,EAAAP,KAAAG,SAGA,IAAAH,KAAAQ,KAAAR,KAAAC,EAAA,CACA,GAAAiB,GAKA,KAHAlB,KAAAQ,KAAAR,KAAAC,EAAA,GACAD,KAAAU,aAAA,MAEAQ,GAAA,EAAYA,GAAAlB,KAAAC,EAAAD,KAAAE,EAAiBgB,KAC7BF,EAAAhB,KAAAM,GAAAY,IAAAlB,KAAAI,WAAAJ,KAAAM,GAAAY,GAAA,GAAAlB,KAAAK,WACAL,KAAAM,GAAAY,IAAAlB,KAAAM,GAAAY,GAAAlB,KAAAE,GAAAc,IAAA,EAAAC,MAAA,EAAAD,EAEA,MAAQE,GAAAlB,KAAAC,EAAA,EAAYiB,KACpBF,EAAAhB,KAAAM,GAAAY,IAAAlB,KAAAI,WAAAJ,KAAAM,GAAAY,GAAA,GAAAlB,KAAAK,WACAL,KAAAM,GAAAY,IAAAlB,KAAAM,GAAAY,IAAAlB,KAAAE,EAAAF,KAAAC,IAAAe,IAAA,EAAAC,MAAA,EAAAD,EAEAA,GAAAhB,KAAAM,GAAAN,KAAAC,EAAA,GAAAD,KAAAI,WAAAJ,KAAAM,GAAA,GAAAN,KAAAK,WACAL,KAAAM,GAAAN,KAAAC,EAAA,GAAAD,KAAAM,GAAAN,KAAAE,EAAA,GAAAc,IAAA,EAAAC,MAAA,EAAAD,GAEAhB,KAAAQ,IAAA,EAWA,MARAQ,GAAAhB,KAAAM,GAAAN,KAAAQ,OAGAQ,OAAA,GACAA,MAAA,aACAA,MAAA,cACAA,OAAA,GAEAA,IAAA,GAIAzB,OAAAJ,UAAAgC,cAAA,WACA,MAAAnB,MAAAe,kBAAA,GAIAxB,OAAAJ,UAAAiC,cAAA,WACA,MAAApB,MAAAe,iBAAA,eAKAxB,OAAAJ,UAAAkC,OAAA,WAOA,MANArB,MAAAsB,sBACAtB,KAAAuB,MACAvB,KAAAe,gBAEAf,KAAAuB,MAAA,GAEAvB,KAAAe,iBAAA,eAKAxB,OAAAJ,UAAAqC,cAAA,WACA,OAAAxB,KAAAe,gBAAA,oBAKAxB,OAAAJ,UAAAsC,cAAA,WACA,GAAAC,GAAA1B,KAAAe,kBAAA,EAAAY,EAAA3B,KAAAe,kBAAA,CACA,iBAAAW,EAAAC,IAAA,qBAOApC,OAAAJ,UAAAyC,KAAAhC,KAAAiC,IAAA,GACAtC,OAAAJ,UAAA2C,cAAA,EAAAlC,KAAAiC,IAAA,KAEAtC,OAAAJ,UAAA4C,YAAA,SAAAC,QACA,MAAAC,UAAAC,OACA,SAAAC,aAAA,wDAIA,IAAAC,GAAApC,KAAAqB,QACA,QAAAzB,KAAAiC,IAAAO,GAAAJ,QAGAzC,OAAAJ,UAAAkD,MAAA,SAAAC,MAAAC,MACA,MAAAN,UAAAC,OACA,SAAAC,aAAA,wDAOA,MAAAG,MAAA,GAmBE,OAAAA,MAAA,CAEF,IADA,GAAAE,GAAAxC,KAAAqB,SACAmB,GAAA,MACAA,EAAAxC,KAAAqB,QAEA,QAAAzB,KAAAiC,IAAAW,GAAAD,KAEA,QACA,GAAAC,GAAAxC,KAAAqB,SACAM,GAAA/B,KAAA6C,EAAAH,OAAA1C,KAAA6C,EACApD,EAAAsC,EAAAa,CACA,IAAAnD,GAAA,EACA,GAAAqD,GAAA9C,KAAA+C,IAAAtD,EAAA,EAAAiD,WAEA,IAAAI,IAAA9C,KAAAiC,KAAAF,EAAAtC,GAAAiD,MAEA,IAAAM,IAAA5C,KAAAqB,QACA,IAAAhC,EAAA,GACA,GAAAuD,IAAAhD,KAAA+C,IAAAD,EAAAJ,MAAA,GACA,UAEI,IAAAM,IAAAhD,KAAAiD,KAAAH,GACJ,MAGA,MAAAA,GAAAH,KAvCA,IAJA,GAAAO,MAAAlD,KAAAmD,KAAA,EAAAT,MAAA,GACAU,IAAAV,MAAAtC,KAAA4B,KACAqB,IAAAX,MAAAQ,OAEA,CACA,GAAAF,IAAA5C,KAAAqB,QACA,MAAAuB,GAAA,MAAAJ,EAAA,WAGA,GAAAU,IAAA,EAAAlD,KAAAqB,SACA8B,EAAAvD,KAAAiC,IAAAe,IAAA,EAAAA,KAAAE,KACAJ,EAAAJ,MAAA1C,KAAAiD,IAAAM,GACAC,EAAAR,MAAAM,GACAd,EAAAY,IAAAC,IAAAE,EAAAT,CACA,IAAAN,EAAApC,KAAA8B,cAAA,IAAAsB,GAAA,GAAAhB,GAAAxC,KAAAiC,IAAAuB,GACA,MAAAV,GAAAH,QAiCAhD,OAAAJ,UAAAkE,OAAA,SAAAC,GAAAC,OACA,MAAAtB,UAAAC,OACA,SAAAC,aAAA,uDAIA,IAAAiB,GAAApD,KAAAwD,UAEA,IADAxD,KAAAwD,WAAAC,KACAL,EAAA,CACA,GAAA1B,GAAA,EAAA1B,KAAAqB,SAAAzB,KAAA8D,GACA/B,EAAA/B,KAAAmD,MAAA,EAAAnD,KAAAiC,IAAA,EAAA7B,KAAAqB,UACA+B,GAAAxD,KAAA+D,IAAAjC,GAAAC,EACA3B,KAAAwD,WAAA5D,KAAAgE,IAAAlC,GAAAC,EAEA,MAAA2B,IAAAF,EAAAG,OAGAhE,OAAAJ,UAAA0E,OAAA,SAAAvB,OACA,MAAAL,UAAAC,OACA,SAAAC,aAAA,+CAIA,IAAAK,GAAAxC,KAAAqB,QACA,UAAAzB,KAAA+C,IAAA,EAAAH,EAAA,EAAAF,QAGA/C,OAAAJ,UAAA2E,WAAA,SAAAC,MAAAC,MAAAC,MAEA,MAAAhC,UAAAC,OACA,SAAAC,aAAA,oEAIA,IAAA/D,IAAA6F,KAAAF,QAAAC,MAAAD,OACAvB,EAAAxC,KAAAqB,QAEA,OAAAmB,IAAApE,EACA2F,MAAAnE,KAAAmD,KAAAP,GAAAwB,MAAAD,QAAAE,KAAAF,QAEAC,MAAApE,KAAAmD,MAAA,EAAAP,IAAAwB,MAAAD,QAAAC,MAAAC,QAIA1E,OAAAJ,UAAA+E,QAAA,SAAAH,MAAAC,OACA,MAAA/B,UAAAC,OACA,SAAAC,aAAA,2DAGA,OAAA4B,OAAA/D,KAAAqB,UAAA2C,MAAAD,QAGAxE,OAAAJ,UAAAgF,QAAA,SAAA7B,MAAAC,MACA,MAAAN,UAAAC,OACA,SAAAC,aAAA,0DAGA,IAAAK,GAAA,EAAAxC,KAAAqB,QACA,OAAAiB,OAAA1C,KAAA+C,KAAA/C,KAAAiC,IAAAW,GAAA,EAAAD,OAGAxE,OAAAD,QAAAyB,QF0EM,SAASxB,OAAQD,QAASH,qBAEhC,YAOA,SAASyG,4BAA2BC,KAAMnG,MAAQ,IAAKmG,KAAQ,KAAM,IAAIC,gBAAe,4DAAgE,QAAOpG,MAAyB,gBAATA,OAAqC,kBAATA,MAA8BmG,KAAPnG,KAElO,QAASqG,WAAUC,SAAUC,YAAc,GAA0B,kBAAfA,aAA4C,OAAfA,WAAuB,KAAM,IAAI1E,WAAU,iEAAoE0E,YAAeD,UAASrF,UAAYV,OAAOiG,OAAOD,YAAcA,WAAWtF,WAAawF,aAAetG,MAAOmG,SAAU5F,YAAY,EAAOgG,UAAU,EAAMjG,cAAc,KAAe8F,aAAYhG,OAAOoG,eAAiBpG,OAAOoG,eAAeL,SAAUC,YAAcD,SAASM,UAAYL,YAEje,QAASM,oBAAmBC,KAAO,GAAIzE,MAAM0E,QAAQD,KAAM,CAAE,IAAK,GAAIhH,GAAI,EAAGkH,KAAO3E,MAAMyE,IAAI9C,QAASlE,EAAIgH,IAAI9C,OAAQlE,IAAOkH,KAAKlH,GAAKgH,IAAIhH,EAAM,OAAOkH,MAAe,MAAO3E,OAAM4E,KAAKH,KAE1L,QAASI,iBAAgBC,SAAUC,aAAe,KAAMD,mBAAoBC,cAAgB,KAAM,IAAIvF,WAAU,qCAEhH,QAASwF,UAASP,KAAO,MAAOzE,OAAM0E,QAAQD,KAAOA,IAAMzE,MAAM4E,KAAKH,KAdjD,GAAIQ,4CAA6C7H,oBAAoB,GACjE8H,mDAAqD9H,oBAAoBmB,EAAE0G,4CAGhGE,aAAe,WAAc,QAASC,kBAAiBC,OAAQC,OAAS,IAAK,GAAI7H,GAAI,EAAGA,EAAI6H,MAAM3D,OAAQlE,IAAK,CAAE,GAAI8H,YAAaD,MAAM7H,EAAI8H,YAAWlH,WAAakH,WAAWlH,aAAc,EAAOkH,WAAWnH,cAAe,EAAU,SAAWmH,cAAYA,WAAWlB,UAAW,GAAMnG,OAAOC,eAAekH,OAAQE,WAAWC,IAAKD,aAAiB,MAAO,UAAUR,YAAaU,WAAYC,aAAiJ,MAA9HD,aAAYL,iBAAiBL,YAAYnG,UAAW6G,YAAiBC,aAAaN,iBAAiBL,YAAaW,aAAqBX,iBAYxhB,SAAW5H,SGlanB,QAAAC,qBAAAC,UAGA,GAAAC,iBAAAD,UACA,MAAAC,kBAAAD,UAAAE,OAGA,IAAAC,QAAAF,iBAAAD,WACAI,EAAAJ,SACAK,GAAA,EACAH,WAUA,OANAJ,SAAAE,UAAAM,KAAAH,OAAAD,QAAAC,cAAAD,QAAAH,qBAGAI,OAAAE,GAAA,EAGAF,OAAAD,QAvBA,GAAAD,oBA6DA,OAjCAF,qBAAAQ,EAAAT,QAGAC,oBAAAS,EAAAP,iBAGAF,oBAAAK,EAAA,SAAAK,OAA2C,MAAAA,QAG3CV,oBAAAW,EAAA,SAAAR,QAAAS,KAAAC,QACAC,OAAAC,eAAAZ,QAAAS,MACAI,cAAA,EACAC,YAAA,EACAC,IAAAL,UAKAb,oBAAAmB,EAAA,SAAAf,QACA,GAAAS,QAAAT,eAAAgB,WACA,WAA2B,MAAAhB,QAAA,SAC3B,WAAiC,MAAAA,QAEjC,OADAJ,qBAAAW,EAAAE,OAAA,IAAAA,QACAA,QAIAb,oBAAAqB,EAAA,SAAAC,OAAAC,UAAsD,MAAAT,QAAAU,UAAAC,eAAAlB,KAAAe,OAAAC,WAGtDvB,oBAAA0B,EAAA,GAGA1B,wCAAA2B,EAAA,MHybK,SAAUvB,OAAQD,QAASH,qBIjf1B,QAAAuI,YAAwBC,MAC1B,MAAOA,MAAKC,OAAOC,YASjB,QAAAC,SAAqBD,UAIvB,IAHA,GAAME,WACFC,iBAEKA,QAAUH,SAASI,QAAQC,MAChCH,OAAOI,KAAKH,QAAQnI,MAExB,OAAOkI,QJoePzI,QAAW,EAAIoI,WACiBpI,QAAW,EAAIwI,SA6D9C,SAAUvI,OAAQD,QAASH,qBKzhB1B,QAAAiJ,0BAAmCC,eACrC,QAASA,eAAiBA,cAAcC,gCAAiC,EAjC7EhJ,QAAA,EAAA8I,0BL8kBK,SAAU7I,OAAQD,QAASH,qBM7b1B,QAAAoJ,wBAAiCC,YAA2D,OAAAC,MAAAhF,UAAAC,OAA/BgF,iBAA+B3G,MAAA0G,KAAA,EAAAA,KAAA,KAAAE,KAAA,EAAAA,KAAAF,KAAAE,OAA/BD,iBAA+BC,KAAA,GAAAlF,UAAAkF,KAC9F,QAASC,aAAcJ,YAAdK,OAA6BH,kBAAmBI,KAAMC,kBAAkBC,iBAiB/E,QAAAC,qBAA8BlB,QAChC,OAASA,cAAQe,KAAMC,kBAAkBG,cAQvC,QAAAC,wBAAiCC,OACnC,GAAIC,gBAD2CC,2BAAA,EAAAC,mBAAA,EAAAC,eAAAvI,MAAA,KAG/C,OAAAwI,OAAAC,UAAmBzJ,OAAO0J,oBAAoBP,OAA9CxB,OAAAC,cAAAyB,2BAAAG,MAAAC,UAAAzB,QAAAC,MAAAoB,2BAAA,EAAsD,IAA3CM,MAA2CH,MAAA5J,KAClDwJ,aAAYO,MAAQC,KAAKC,UAAWV,MAAcQ,QAJP,MAAAG,KAAAR,mBAAA,EAAAC,eAAAO,IAAA,aAAAT,2BAAAI,UAAAM,QAAAN,UAAAM,SAAA,WAAAT,kBAAA,KAAAC,iBAO/C,OAASJ,MAAOC,YAAaP,KAAMC,kBAAkBkB,wBAgBnD,QAAAC,gBAAyBC,SAC3B,MAAOA,SAAQrB,OAASC,kBAAkBqB,aAQxC,QAAAC,qBAA8BF,SAChC,MAAOA,SAAQrB,OAASC,kBAAkBuB,iBAiBxC,QAAAC,oBAA6BJ,SAC/B,MAAOA,SAAQrB,OAASC,kBAAkByB,iBA0BxC,QAAAC,gBAAyBN,SAC3B,MAAOA,SAAQrB,OAASC,kBAAkB2B,KN2V1CpL,QAAW,EAAIiJ,uBAEiBjJ,QAAW,EAAI2J,oBACf3J,QAAW,EAAI6J,uBAEf7J,QAAW,EAAI4K,eACf5K,QAAW,EAAI+K,oBAEf/K,QAAW,EAAIiL,mBMzlBnDjL,QAAA,EAAAmL,cAGA,IAAkB1B,oBAAlB,SAAkBA,mBAIdA,oCAAA,uCAKAA,oCAAA,+BAKAA,oCAAA,qCAMAA,oCAAA,uCAKAA,oCAAA,+BAKAA,oCAAA,mDAKAA,oCAAA,gBAnCcA,4CNmxBb,SAAUxJ,OAAQD,QAASH,qBAI5B,GAAIwL,8DAA+DxL,oBAAoB,GAC/DyL,2DAA6DzL,oBAAoB,GOrxBvG0L,8BASF,QAAAA,oBAAmBC,eAAuClE,gBAAApF,KAAAqJ,oBAAvCrJ,KAAAsJ,4BAJZtJ,KAAAuJ,GAAaC,OAAO/F,IAEnBzD,KAAAyJ,MAAiC,GAAIL,4DAAA,EAA+BpJ,MPg1BxE,MA1CA0F,cAAa2D,qBACTtD,IAAK,cACL1H,MAAO,SO9xBIoL,OACfzJ,KAAKyJ,MAAQA,MACbzJ,KAAKyJ,MAAMC,WPsyBP3D,IAAK,YACL1H,MAAO,SOhyBEsL,OACb,GAAIhM,oBAAAK,EAAAmL,6DAAA,GAAeQ,MAAMxD,MACrByD,YACG,KAAK5J,KAAKyJ,MAAMI,UAAUF,OAC7B,KAAM,IAAIG,OAAJ,qBAA+BH,MAAMxD,KAAKmB,KAA1C,+BAA6EtH,SPoyBnF+F,IAAK,cACL1H,MAAO,SAAU0L,cACb,QAASC,aAAYC,IACjB,MAAOF,cAAaG,MAAMlK,KAAMiC,WAOpC,MAJA+H,aAAYG,SAAW,WACnB,MAAOJ,cAAaI,YAGjBH,aACT,SO3yBSrB,SACfqB,YAAYrB,aP8yBR5C,IAAK,WACL1H,MAAO,WO3yBX,4BAA6B2B,KAAKuJ,GAAlC,aAAiDvJ,KAAKyJ,MAAMlL,KAA5D,UPgzBO8K,qBO9yBdvL,SAAA,EAAAuL,oBPuzBI,SAAUtL,OAAQD,QAASH,qBAI5B,GAAIyM,gDAAiDzM,oBAAoB,IQp2BvE0M,oCAAN,QAAAA,4BAAAjF,gBAAApF,KAAAqK,0BACYrK,KAAAsK,MAAQ,GAAIF,gDAAA,ERy6BhB,MAjDA1E,cAAa2E,2BACTtE,IAAK,cACL1H,MAAO,SQn3BIkL,IACf,MAAOvJ,MAAKsK,MAAMzL,IAAI0K,GAAGgB,eR43BrBxE,IAAK,mBACL1H,MAAO,SQr3BSmM,YACpB,GAAMC,GAAIzK,KAAK0K,WAAWF,WAE1B,OADAxK,MAAKsK,MAAMK,IAAIH,WAAWjB,GAAGgB,WAAYE,GAClCA,KRw3BH1E,IAAK,yBACL1H,MAAO,SQt3BekL,GAAiBqB,MAC3C,GAAI5K,KAAK6K,IAAItB,IACT,KAAM,IAAIO,OAAJ,0BAAoCP,GAAGgB,WAAvC,iFAEVvK,MAAKsK,MAAMK,IAAIpB,GAAGgB,WAAYK,SR+3B1B7E,IAAK,MACL1H,MAAO,SQx3BJkL,IACP,MAAOvJ,MAAKsK,MAAMO,IAAItB,GAAGgB,eR23BrBxE,IAAK,aACL1H,MAAO,SQz3BImM,YACf,GAAIA,WAAWjM,KAAM,CACjB,GAAMuM,MAAON,WAAWO,cAAcC,KAAK,MACrCC,QAAUC,SAAShB,MAAMzK,QAAW,mBAAoB+K,WAAWjM,KAA/B,KAAwCuM,KAAxC,OAAmDN,WAAWW,KAA9D,QAC1C,OAAOF,WAEX,MAAOC,UAAShB,MAAMzK,UAAf4H,OAAAtC,mBAA8ByF,WAAWO,gBAAeP,WAAWW,YR63BnEd,2BQ33BdvM,SAAA,EAAAuM,0BRo4BI,SAAUtM,OAAQD,QAASH,qBS/6B1B,QAAAyN,iCAA0CC,aAC5CA,YAAYC,uBAAuBC,yDAAA,EAA0BC,SAAUC,6CAAA,GACvEJ,YAAYC,uBAAuBC,yDAAA,EAA0BG,OAAQC,+CAAA,GACrEN,YAAYC,uBAAuBC,yDAAA,EAA0BK,IAAKC,4CAAA,GAClER,YAAYC,uBAAuBC,yDAAA,EAA0BO,sBAAuBC,qDAAA,GACpFV,YAAYC,uBAAuBC,yDAAA,EAA0BS,MAAOC,8CAAA,GACpEZ,YAAYC,uBAAuBC,yDAAA,EAA0BW,OAAQC,+CAAA,GACrEd,YAAYC,uBAAuBC,yDAAA,EAA0Ba,YAAaC,2CAAA,GT46B1E,GAAId,0DAA2D5N,oBAAoB,IAC3D8N,6CAA+C9N,oBAAoB,IACnEgO,+CAAiDhO,oBAAoB,GACrEkO,4CAA8ClO,oBAAoB,IAClEoO,qDAAuDpO,oBAAoB,IAC3EsO,8CAAgDtO,oBAAoB,IACpEwO,+CAAiDxO,oBAAoB,IACrE0O,2CAA6C1O,oBAAoB,EACzDG,SAAW,EAAIsN,iCAmB9C,SAAUrN,OAAQD,QAASH,qBAI5B,GAAI2O,2EAA4E3O,oBAAoB,GAC5E4O,6DAA+D5O,oBAAoB,GUt9BzG6O,mCACF,QAAAA,yBAAmBjO,KAAwBkO,OAAyBrH,gBAAApF,KAAAwM,yBAAjDxM,KAAAzB,UAAwByB,KAAAyM,YVy/BvC,MAlBA/G,cAAa8G,0BACTzG,IAAK,QACL1H,MAAO,eAUP0H,IAAK,YACL1H,MAAO,SUt+BEsL,OAAgC,OAAO,MV2+B7C6C,2BUr+BTE,+DACC,QAAAA,gCAAYD,OAAyB,MAAArH,iBAAApF,KAAA0M,gCAAAtI,2BAAApE,MAAA0M,+BAAA5H,WAAArG,OAAAkO,eAAAD,iCAAAxO,KAAA8B,KAC9B,UAAWyM,QVigCjB,MApBAlI,WAAUmI,+BAAgCE,uBAQ1ClH,aAAagH,iCACT3G,IAAK,YACL1H,MAAO,SUp/BEsL,OACb,QAAIhM,oBAAAK,EAAAuO,6DAAA,GAAoB5C,MAAMxD,QAC1BnG,KAAKyM,MAAMlD,GAAKI,MAAMxD,KAAK0G,SAC3B7M,KAAKyM,MAAMK,YAAY,GAAIC,6BAA4B/M,KAAKyM,SACrD,OV0/BJC,gCUngCqCF,wBAanD1O,SAAA,EAAA4O,8BVggCG,IU3/BEK,8DACF,QAAAA,6BAAYN,OAAyB,MAAArH,iBAAApF,KAAA+M,6BAAA3I,2BAAApE,MAAA+M,4BAAAjI,WAAArG,OAAAkO,eAAAI,8BAAA7O,KAAA8B,KAC3B,OAAQyM,QV4hCd,MAlCAlI,WAAUwI,4BAA6BC,wBAQvCtH,aAAaqH,8BACThH,IAAK,YACL1H,MAAO,SUjgCEsL,OAAmB,GAAAsD,QAAAjN,IAChC,KAAKrC,oBAAAK,EAAAuO,6DAAA,GAAe5C,MAAMxD,MACtB,OAAO,CAGX,IAAM+G,MAAwBvD,MAAMxD,KAAK+G,KACnCC,iBAAmBD,KAAKE,gBAAgBC,OAAO,SAAA9D,IAAA,OAAO0D,OAAKR,MAAMnD,cAAcuB,IAAItB,KAEzF,IAAgC,IAA5B4D,iBAAiBjL,OACjBlC,KAAKyM,MAAMK,YAAY,GAAIQ,wCAAuCtN,KAAKyM,MAAOS,WAC3E,IAAAK,mBAAAhI,SACuB4H,kBAAlBK,KADLD,kBAAA,GACcE,KADdF,kBAAAG,MAAA,EAEH1N,MAAKyM,MAAMzC,YAAYrM,oBAAAK,EAAAuO,6DAAA,GAAArC,MAAAzK,QAAuB+N,MAAvBnG,OAAAtC,mBAAgC0I,SACvDzN,KAAKyM,MAAMK,YAAY,GAAIa,qDAAoD3N,KAAKyM,MAAOS,OAG/F,OAAO,MVygCAH,6BU9hCkCP,yBA4B3CmB,qFACF,QAAAA,qDAAYlB,MAAmCS,MAAqB9H,gBAAApF,KAAA2N,oDAAA,IAAAC,QAAAxJ,2BAAApE,MAAA2N,oDAAA7I,WAAArG,OAAAkO,eAAAgB,sDAAAzP,KAAA8B,KAC1D,+BAAgCyM,OAD0B,OAArBmB,QAAAV,UAAqBU,OVmkChE,MAxDArJ,WAAUoJ,oDAAqDE,wBAW/DnI,aAAaiI,sDACT5H,IAAK,YACL1H,MAAO,SUphCEsL,OACb,GAAMhB,SAAUgB,MAAMxD,IACtB,IAAIxI,oBAAAK,EAAAuO,6DAAA,GAAmB5D,SAAU,CAC7B,GAAIA,QAAQwE,iBAAiBjL,OAAS,EAAG,CACrC,GAAM4L,aAAcnF,QAAQwE,iBAAiBY,IAAI,SAAA/G,YAAA,MAAcA,YAAWuD,aAAYS,KAAK,KAC3FhL,MAAKyM,MAAMzC,YAAYrM,oBAAAK,EAAAuO,6DAAA,GAAuB,GAAIzC,OAAJ,qBAA+BgE,YAA/B,oCAA8E9N,KAAKyM,MAAMlD,GAAzF,OAC9CvJ,KAAKyM,MAAMK,YAAY,GAAIC,6BAA4B/M,KAAKyM,YACzD,IAAAuB,6BAAA,EAAAC,oBAAA,EAAAC,gBAAAzO,MAAA,KACH,OAAA0O,QAAAC,WAAyBzF,QAAQ0F,UAAjCjI,OAAAC,cAAA2H,4BAAAG,OAAAC,WAAA3H,QAAAC,MAAAsH,4BAAA,EAAqE,IAA1DxD,YAA0D2D,OAAA9P,KACjE2B,MAAKyM,MAAMnD,cAAcgF,iBAAiB9D,aAF3C,MAAAjC,KAAA0F,oBAAA,EAAAC,gBAAA3F,IAAA,aAAAyF,4BAAAI,WAAA5F,QAAA4F,WAAA5F,SAAA,WAAAyF,mBAAA,KAAAC,kBAKHlO,KAAKyM,MAAMK,YAAY,GAAIQ,wCAAuCtN,KAAKyM,MAAOzM,KAAKkN,OAEvF,OAAO,EAEX,OAAO,MV+iCAS,qDUpkC0DnB,yBA4BnEc,wEACF,QAAAA,wCAAYb,MAAmCS,MAAqB9H,gBAAApF,KAAAsN,uCAAA,IAAAiB,QAAAnK,2BAAApE,MAAAsN,uCAAAxI,WAAArG,OAAAkO,eAAAW,yCAAApP,KAAA8B,KAC1D,YAAayM,OAD6C,OAArB8B,QAAArB,UAAqBqB,OV2kChE,MA1BAhK,WAAU+I,uCAAwCkB,wBAWlD9I,aAAa4H,yCACTvH,IAAK,QACL1H,MAAO,WUzjCX,GAAMoQ,sBAAuB,GAAInC,2EAAA,EAAyBtM,KAAKyM,MAAMnD,cAErE,KACI,GAAMoF,MAAOD,qBAAqBE,wBAAwB3O,KAAKkN,KAAKwB,MAC9DnI,OAASmI,MAAME,yBAA0BH,sBAC/CzO,MAAKyM,MAAMzC,YAAYrM,oBAAAK,EAAAuO,6DAAA,GAAoBhG,SAC7C,MAAOqB,OACL5H,KAAKyM,MAAMzC,YAAYrM,oBAAAK,EAAAuO,6DAAA,GAAuB3E,QAGlD5H,KAAKyM,MAAMK,YAAY,GAAIC,6BAA4B/M,KAAKyM,YV4jCrDa,wCU5kC6Cd,0BVmlCvD,SAAUzO,OAAQD,QAASH,qBWnrChC,QAAAkR,MAAuBC,GAAcC,QACjC,MAAwB,kBAAbD,IAAGD,KACHC,GAAGD,KAAH3E,MAAA4E,IAAQrP,QAAR4H,OAAAtC,mBAAsBgK,UAG1B,WAAyC,OAAAC,OAAA/M,UAAAC,OAAvB+M,iBAAuB1O,MAAAyO,OAAAE,MAAA,EAAAA,MAAAF,MAAAE,QAAvBD,iBAAuBC,OAAAjN,UAAAiN,MAC5C,OAAOJ,IAAG5E,MAAMzK,OAAWsP,OAAO1H,OAAO4H,oBXirC7C,GAAIE,yDAA0DxR,oBAAoB,GW1qChFyR,oCAKF,QAAAA,0BAAoBC,qBAAyCjK,gBAAApF,KAAAoP,0BAAzCpP,KAAAqP,wCXwuChB,MAxBA3J,cAAa0J,2BACTrJ,IAAK,0BACL1H,MAAO,SW1sCyBiR,cAAgE,GAAAC,QAAAvP,KAAzBwP,kBAAyBvN,UAAAC,OAAA,GAAAzC,SAAAwC,UAAA,IAAAA,UAAA,GAC9F2I,KAAO5K,KAAKqP,oBAAoBI,YAAYH,aAAatI,WAC/D,KAAK4D,KACD,KAAM,IAAId,OAAJ,4BAAsCwF,aAAatI,WAAWuD,WAA9D,uGAGV,IAAIwE,QAASO,aAAaI,cAW1B,OATIF,qBACAT,OAASA,OAAOhB,IAAI,SAAA4B,OAChB,MAAIhS,qBAAAK,EAAAmR,wDAAA,GAAyBQ,OAClBJ,OAAKZ,wBAAwBgB,OAEjCA,SAIRd,KAAcjE,KAAMmE,YX+sCpBK,2BW7sCdtR,SAAA,EAAAsR,0BXstCI,SAAUrR,OAAQD,QAASH,qBYnvC1B,QAAAqJ,YAAqB4I,UAAmBrG,IAC1C,OACIsG,qBAAqB,EACrBtF,WAAeqF,UAAf,IAA4BrG,IZovChCzL,QAAW,EAAIkJ,YA8Bd,SAAUjJ,OAAQD,QAASH,qBatyC1B,QAAAmS,gBAA4BzJ,SAAuB0J,UAA6EC,KAClI,OACIvJ,KADG,WAIC,IAFA,GAAID,kBAEKA,QAAUH,SAASI,QAAQC,MAChC,GAAIqJ,UAAUvJ,QAAQnI,MAAO2R,KACzB,MAAOxJ,QAIf,OAAOA,WAnBnB1I,QAAA,EAAAgS,gBb60CK,SAAU/R,OAAQD,QAASH,qBcp0C1B,QAAAsS,aAAkC5J,SAAuB6J,SAA4EF,KACvI,OACIvJ,KADG,WAEC,GAAMF,QAASF,SAASI,MACxB,OAAIF,QAAOG,MACEA,MAAM,IAGfA,KAAMH,OAAOG,KACbrI,MAAO6R,SAAS3J,OAAOlI,MAAO2R,QAlB9ClS,QAAA,EAAAmS,ad62CK,SAAUlS,OAAQD,QAASH,qBe10ChC,QAAAwS,uBAA+B3F,WAAoCoE,0BAC/D,GAAIwB,kBAA8CC,UAAW7F,WAAW6F,UAAWC,cAAe9F,WAAW8F,eADIC,4BAAA,EAAAC,oBAAA,EAAAC,gBAAAhR,MAAA,KAGjH,OAAAiR,QAAAC,WAA0BnG,WAAWoG,aAArCxK,OAAAC,cAAAkK,4BAAAG,OAAAC,WAAAlK,QAAAC,MAAA6J,4BAAA,EAAmD,IAAxCM,aAAwCH,OAAArS,MAC3CyS,yBAEAA,oBADAnT,oBAAAK,EAAA+S,iEAAA,GAAyBF,aACJjC,yBAAyBD,wBAAwBkC,aAAaT,iBAE9DS,YAEzBT,gBAAkBzS,oBAAAK,EAAAgT,2CAAA,MAAWZ,gBAAiBU,qBAV+D,MAAAvI,KAAAiI,oBAAA,EAAAC,gBAAAlI,IAAA,aAAAgI,4BAAAI,WAAAnI,QAAAmI,WAAAnI,SAAA,WAAAgI,mBAAA,KAAAC,kBAajH,MAAOL,iBAWL,QAAAa,qBAA0CzG,WAA1C0G,MAAkK,GAAlFtC,0BAAkFsC,KAAlFtC,yBAC5EiC,YAAcV,sBAAsB3F,WAAYoE,0BAChDuC,kBAAoBvC,yBAAyBD,wBAAwBnE,WAAW4G,WAAW,GAC7F/K,SAAW8K,kBAAkBN,aAHmIQ,4BAAA,EAAAC,oBAAA,EAAAC,gBAAA9R,MAAA,KAKpK,OAAA+R,QAAAC,WAAwBjH,WAAWkH,WAAnCtL,OAAAC,cAAAgL,4BAAAG,OAAAC,WAAAhL,QAAAC,MAAA2K,4BAAA,EAA+C,IAApCM,WAAoCH,OAAAnT,MACrCuT,iBAAmBhD,yBAAyBD,wBAAqCgD,UAAUtL,UAC3F6J,SAAWtB,yBAAyBD,wBAAwBgD,UAAUzB,SAC5E7J,UAAWuL,iBAAiBvL,SAAU6J,SAAUW,cARgH,MAAAtI,KAAA+I,oBAAA,EAAAC,gBAAAhJ,IAAA,aAAA8I,4BAAAI,WAAAjJ,QAAAiJ,WAAAjJ,SAAA,WAAA8I,mBAAA,KAAAC,kBAWpK,MAAO5T,qBAAAK,EAAA6T,2CAAA,GAAiBxL,Uf2yCxB,GAAIwL,4CAA6ClU,oBAAoB,GAC7CoT,iEAAmEpT,oBAAoB,GACvFqT,2CAA6CrT,oBAAoB,GACzDG,SAAW,EAAImT,qBAoF9C,SAAUlT,OAAQD,QAASH,qBAI5B,GAAImU,qDAAsDnU,oBAAoB,GgB38CrEoU,2BACTrG,OAAQ/N,oBAAAK,EAAA8T,oDAAA,GAAW,WAAY,GAC/BtG,SAAU7N,oBAAAK,EAAA8T,oDAAA,GAAW,WAAY,GACjClG,IAAKjO,oBAAAK,EAAA8T,oDAAA,GAAW,WAAY,GAC5BhG,sBAAuBnO,oBAAAK,EAAA8T,oDAAA,GAAW,WAAY,GAC9C9F,MAAOrO,oBAAAK,EAAA8T,oDAAA,GAAW,WAAY,GAC9B5F,OAAQvO,oBAAAK,EAAA8T,oDAAA,GAAW,WAAY,GAC/BE,MAAOrU,oBAAAK,EAAA8T,oDAAA,GAAW,WAAY,GAC9B1F,YAAazO,oBAAAK,EAAA8T,oDAAA,GAAW,WAAY,GACtChU,SAAA,EAAAiU,2BhBm9CG,SAAUhU,OAAQD,QAASH,qBiBv9C1B,QAAAsU,eAAwBC,MAAeC,IAAaC,MACtD,GAAMC,UAAWF,IAAMD,MACnBhQ,OAAStC,KAAK0S,IAAI1S,KAAKE,MAAMuS,UAAYD,MAAQ,IAAK,GACtD3L,MAAOyL,KAEX,QACIzL,KADG,WAEC,GAAID,SAAUC,KAEd,OADAA,QAAc2L,KACG,IAAblQ,UACSwE,MAAM,EAAOrI,MAAOmI,UAExBE,MAAM,KAnB3B5I,QAAA,EAAAmU,ejBmgDK,SAAUlU,OAAQD,QAASH,qBkBt/C1B,QAAA4U,gBAAqCC,aAAuBnM,SAAuB6J,SAAmHF,KAKxM,IAJA,GAAIyC,kBAAmBD,aACnBhM,iBAGKA,QAAUH,SAASI,QAAQC,MAChC+L,iBAAmBvC,SAASuC,iBAAkBjM,QAAQnI,MAAO2R,IAGjE,OAAOrS,qBAAAK,EAAA6T,2CAAA,IAAYY,mBlBi/CnB,GAAIZ,4CAA6ClU,oBAAoB,EACrCG,SAAW,EAAIyU,gBA0B9C,SAAUxU,OAAQD,QAASH,qBmBzhD1B,QAAA+U,QAAoB9M,QAA4B,OAAA+M,OAAA1Q,UAAAC,OAAd0Q,QAAcrS,MAAAoS,MAAA,EAAAA,MAAA,KAAAE,MAAA,EAAAA,MAAAF,MAAAE,QAAdD,QAAcC,MAAA,GAAA5Q,UAAA4Q,MAClD,IAAc,MAAVjN,OACA,KAAM,IAAI7F,WAAU,6CAGxB6F,QAASnH,OAAOmH,OAChB,KAAK,GAAIkN,OAAQ,EAAGA,MAAQ7Q,UAAUC,OAAQ4Q,QAAS,CACnD,GAAMC,QAAS9Q,UAAU6Q,MACzB,IAAc,MAAVC,OACA,IAAK,GAAMhN,OAAOgN,QACVtU,OAAOU,UAAUC,eAAelB,KAAK6U,OAAQhN,OAC5CH,OAAeG,KAAOgN,OAAOhN,MAK9C,MAAOH,QArBX9H,QAAA,EAAA4U,QnBikDK,SAAU3U,OAAQD,QAASH,qBoBhkD1B,QAAAqV,UAAsBC,SACxB,MAAOA,SANXnV,QAAA,EAAAkV,UpB0lDK,SAAUjV,OAAQD,QAASH,qBAc5B,GqBnmDEuV,sBAAN,QAAAA,aAAA9N,gBAAApF,KAAAkT,WACYlT,KAAAmG,QrB4pDJ,MA7CAT,cAAawN,YACTnN,IAAK,MACL1H,MAAO,SqB1mDJ0H,KACP,GAAMoN,aAAcnT,KAAKoT,cAAcrN,IACvC,OAAO/F,MAAK6K,IAAI9E,KAAO/F,KAAKmG,KAAKgN,aAAe1T,UrBmnD5CsG,IAAK,MACL1H,MAAO,SqB5mDJ0H,KACP,MAAO/F,MAAKZ,eAAelB,KAAK8B,KAAKmG,KAAMnG,KAAKoT,cAAcrN,SrBsnD1DA,IAAK,MACL1H,MAAO,SqB9mDJ0H,IAAQ1H,OACf2B,KAAKmG,KAAKnG,KAAKoT,cAAcrN,MAAQ1H,SrBqnDjC0H,IAAK,QACL1H,MAAO,WqB/mDX2B,KAAKmG,WrBmnDDJ,IAAK,gBACL1H,MAAO,SqBjnDO0H,KAClB,UAAWA,QrBqnDJmN,YqBnnDdpV,SAAA,EAAAoV,WrB4nDI,SAAUnV,OAAQD,QAASH,qBAI5B,GAAI0V,qDAAsD1V,oBAAoB,GACtD2V,2EAA6E3V,oBAAoB,GACjG4V,wFAA0F5V,oBAAoB,GsB7qDpI6V,yBAA2B,GAAIF,4EAAA,CACrC3V,qBAAAK,EAAAuV,wFAAA,GAAgCC,0BtBirDuD,WAO/E,QAASC,uBuBxqD4BzS,GAGjC,QAAA0S,YAAoBtV,GAIhB,IAHA,GAAMgF,IAAMpF,EAAGI,EAAEJ,EAAG2V,KAAMvV,EAAEuV,MACxB7U,EAAI,EAEDA,EAAI8U,cACHhU,KAAA+C,IAAAS,EAAEuQ,KAAQ,GAAI/T,KAAA+C,IAAAS,EAAEpF,EAAK,GAAI,KADRc,EAAG,CAMxB,GAAM+U,IAAKzQ,EAAEpF,CACboF,GAAEpF,EAAI,EAAIoF,EAAEuQ,KAAOvQ,EAAEpF,EAAII,EAAEJ,EAC3BoF,EAAEuQ,KAAO/T,KAAA+C,IAAAS,EAAEuQ,KAAQ,GAAI/T,KAAA+C,IAAAkR,GAAM,GAAIzV,EAAEuV,KAGvC,MAAO7U,GAMX,IAAK,GAHCgV,MAAO,GAAIC,mBAA+B,EAAbC,YAC7BC,GAAK3B,IAAItU,EAAIgD,EAAIkT,cAAclW,EAE5B0E,EAAI,EAAGA,EAAIsR,aAActR,EAAG,CACjC,GAAMtE,IACFJ,EAAGiW,GACHN,KAAMQ,IAAIR,KAAOjR,EAAIwR,cAAcP,MAGjC7U,EAAI4U,WAAWtV,GACfgW,KAAW,EAAJ1R,CAEboR,MAAKM,MAAY,IAAJtV,EACbgV,KAAKM,KAAO,GAAS,MAAJtV,EACjBgV,KAAKM,KAAO,GAAS,SAAJtV,EACjBgV,KAAKM,KAAO,GAAK,IAErB,MAAON,MvBipDX,QAASO,+BACL,IACI,GAAIC,cAAerS,UAAUA,UAAUC,OAAS,EAMhD,OALA0R,YAAaU,aAAaV,WAC1BI,WAAaM,aAAaN,WAC1B1B,IAAMgC,aAAahC,IACnB4B,cAAgBI,aAAaJ,cAC7BC,IAAMG,aAAaH,IACZV,sBAAsBvJ,MAAMlK,KAAMiC,WAC3C,QACE2R,WAAanU,OACbuU,WAAavU,OACb6S,IAAM7S,OACNyU,cAAgBzU,OAChB0U,IAAM1U,QAnCd,GAAImU,YAAa,OACbI,WAAa,OACb1B,IAAM,OACN4B,cAAgB,OAChBC,IAAM,MAmCVX,0BAAyBlI,wBACrBf,WAAY,qHACZsF,qBAAqB,GACtBwE,gCAG8E,WAGjF,QAASE,YwBzoDGC,KAAMC,OxB0oDd,MwB1oDwBD,MAAOC,MAlF3C,QAAAC,YAAoBC,MAAoB7V,EAAW8V,OAC/C,GAAMC,WAAYjV,KAAKmD,KAAK6R,MAAM1S,OAElC,IAAIpD,IAAM8V,MAAM1S,OACZ,MAAO,EAGX,IAAIqE,QAAS,EACPuO,WAAaH,MAAMjS,EAAImS,UAAYF,MAAM3T,CAE/C4T,OAAME,YAAchW,CAEpB,KAAK,GAAId,GAAI,EAAGA,EAAI+W,MAAM7S,SAAUlE,EAAG,CACnC,GAAMgX,MAAOD,MAAM/W,GACbiX,WAAcvS,EAAGiS,MAAMjS,EAAIsS,KAAKtS,EAAG1B,EAAG2T,MAAM3T,EAAIgU,KAAKhU,GAGrDkU,WAAaD,UAAUvS,GAAK,GAAKuS,UAAUjU,GAAK,GAAKiU,UAAUvS,EAAImS,WAAcI,UAAUjU,EAAI6T,WAA8D,IAAjDD,MAAMK,UAAUvS,EAAImS,UAAYI,UAAUjU,EAExJkU,cACA3O,QApBZmO,WAoBiCO,UAAWnW,EAAI,EAAG8V,QAM/C,MAFAA,OAAME,YAAc,EAEbvO,OAGL,QAAA4O,aAAsBC,UAAtBlE,MAAoF,GAAlC2D,WAAkC3D,KAAlC2D,UAC9CD,MAAkB,GAAIrU,OAAMsU,UAAYA,UAC9CD,OAAMS,KAAK,EAEX,KAAK,GAAIvC,OAAQ,EAAGA,MAAQsC,UAAUlT,OAAS,IAAK4Q,MAAO,CACvD,GAAMgC,YAAaM,UAAUtC,OAAOpQ,EAAImS,UAAYO,UAAUtC,OAAO9R,CACrE4T,OAAME,YAAchC,MAAQ,EAGhC,MAtCJ4B,YAsCsBU,UAAUA,UAAUlT,OAAS,GAAIkT,UAAUlT,OAAQ0S,OxBwsDjE,QAASU,qBACL,IACI,GAAIhB,cAAerS,UAAUA,UAAUC,OAAS,EAEhD,OADA6S,OAAQT,aAAaS,MwBptD/BI,kCxBstDQ,QACEJ,MAAQtV,QA3BhB,GAAIsV,OAAQ,MA+BZvB,0BAAyBlI,wBACrBf,WAAY,sGACZsF,qBAAqB,GACtB0E,YACHf,yBAAyBlI,wBACrBf,WAAY,6GACZsF,qBAAqB,GACtByF,sBAG6E,WyBthDxF,QAAAC,yBAAiCC,QAAmB3E,aAIhD,OAHI4E,QAASD,QAAQE,YACfC,iBAAmB9E,YAAY+E,oBAAoBJ,QAAQK,WAEjEzH,WAA2BuH,iBAA3BG,UAAAvV,MAAA0E,QAAAmJ,YAAA2H,IAAA,EAAA3H,WAAA0H,UAAA1H,sBAAAhI,OAAAC,cAA6C,IAAA2P,MAAA,IAAAF,UAAA,IAAAC,KAAA3H,WAAAlM,OAAA,KAAA8T,OAAA5H,WAAA2H,WAAA,IAAAA,IAAA3H,WAAA3H,OAAAsP,IAAArP,KAAA,KAAAsP,OAAAD,IAAA1X,MAAA,GAAlC4X,cAAkCD,KACzC,IAAIC,eAAiBT,QACjB,KAEJC,SAAUQ,aAAaP,YAE3B,MAAOD,QAuFX,QAAAS,uBAA+BxU,EAAWC,GACtC,MAAOD,GAAIC,EA3Gf,QAAAwU,cAAsBC,eAAwBC,oBAA6BxF,aACvE,QACMyF,YAAa,kBAAmBnR,KAAMiR,eAAgB7X,KAAM,QAASgY,WAAY,EAAGC,WAAW,IAC/FF,YAAa,kCAAmCnR,KAAMiR,eAAiBvF,YAAY4F,UAAWlY,KAAM,SAAUgY,WAAY,EAAGC,WAAW,EAAME,GAAIN,iBAClJE,YAAa,mBAAoBnR,KAAMkR,oBAAqB9X,KAAM,OAAQgY,WAAY,EAAGC,WAAW,EAAOE,GAAIN,eAAiBvF,YAAY4F,YAC5IH,YAAa;AAAiC/X,KAAM,MAAOgY,WAAY,EAAGC,WAAW,EAAOE,GAAIL,sBAT1G,QAAAM,eAAuBtY,MAAeuY,QAClC,MAAOA,QAAOC,KAAK,SAAAC,OAAA,OAAkC,mBAAhBA,OAAM3R,MAAyB2R,MAAM3R,MAAQ9G,SAAiC,mBAAdyY,OAAMJ,IAAuBI,MAAMJ,GAAKrY,SAmCjJ,QAAA0Y,eAAuBC,YAAqBC,WAAoBC,wBAAmCN,OAAkBO,eAmCjH,IAAK,GAlCCC,SACF9E,IAAK9I,OAAO6N,iBACZlD,IAAK3K,OAAO8N,iBAEZC,YACIC,OACIV,MAAO,QACPxE,IAAK9I,OAAO6N,iBACZlD,IAAK3K,OAAO8N,iBACZG,OAAO,GAEXC,QACIZ,MAAO,SACPxE,IAAK9I,OAAO6N,iBACZlD,IAAK3K,OAAO8N,iBACZG,OAAO,GAEXE,MACIb,MAAO,OACPxE,IAAK9I,OAAO6N,iBACZlD,IAAK3K,OAAO8N,iBACZG,OAAO,GAEXG,KACId,MAAO,MACPxE,IAAK9I,OAAO6N,iBACZlD,IAAK3K,OAAO8N,iBACZG,OAAO,KAKbI,UAAYb,YAAcC,WAEvBpW,EAAImW,YAAanW,EAAIgX,YAAahX,EAAG,CAC1C,GAAMxC,OAAQ6Y,wBAAwBrW,EAEtCuW,QAAOjD,IAAMvU,KAAKuU,IAAIiD,OAAOjD,IAAK9V,OAClC+Y,OAAO9E,IAAM1S,KAAK0S,IAAI8E,OAAO9E,IAAKjU,MAElC,IAAMyY,OA7EdH,cA6EoCO,wBAAwBrW,GAAI+V,UACtDO,cAAcL,MAAMvY,KAEtB,IAAMuZ,WAAYV,OAAOG,WAAWT,MAAMvY,KAC1CuZ,WAAU3D,IAAMvU,KAAKuU,IAAI2D,UAAU3D,IAAK9V,OACxCyZ,UAAUxF,IAAM1S,KAAK0S,IAAIwF,UAAUxF,IAAKjU,OACxCyZ,UAAUL,OAAQ,EAGtB,MAAOL,QAGX,QAAAW,gBAAwBnB,OAAkBM,yBAYtC,IAAK,GAXCc,mBAAoB,GACpBb,eACFK,MAAO,EACPE,OAAQ,EACRC,KAAM,EACNC,IAAK,GAGHX,WAAarX,KAAKqY,MAAMf,wBAAwBhV,OAAS8V,mBACzDE,WAEGla,EAAI,EAAGA,EAAIkZ,wBAAwBhV,OAAQlE,GAAKiZ,WAAY,CACjE,GAAMG,QAlEdL,cAkEqC/Y,EAAGiZ,WAAYC,wBAAyBN,OAAQO,cAE7Ee,SAAQvR,KAAKyQ,QAGjB,OAASc,gBAASf,6BAjFtB,QAAAgB,QAAgBC,QACZ,GAAMC,MAAOzY,KAAKE,MAAMsY,OAAOlW,OAAS,EAExC,OAAIkW,QAAOlW,OAAS,EACTkW,OAAOC,OAGVD,OAAOC,KAAO,GAAKD,OAAOC,OAAS,EAiF/C,QAAAC,kBAA0B9C,QAAmB3E,aACzC,GAAMuF,gBAtGVb,wBAsGmDC,QAAS3E,aAClDqG,wBAA0BrG,YAAY0H,gBAAgB/C,QAAQK,UACpEqB,yBAAwBsB,KAP5BtC,sBASI,IAAMU,QAnHVT,aAmHgCC,eAAgBvF,YAAY4H,wBAAwBjD,QAAQK,WAAYhF,aALxB6H,gBAzBhFX,eA+BoDnB,OAAQM,yBAAjDgB,QANqEQ,gBAMrER,QAASf,cAN4DuB,gBAM5DvB,cAEVwB,eAAiB/B,OAAOvJ,OAAO,SAAAyJ,OAAA,QAAWK,cAAcL,MAAMvY,OACpEoa,gBAAeC,QAAQ,SAAA9B,OAAA,MAASA,OAAMP,WAAaY,cAAcL,MAAMvY,MAAQ2Y,wBAAwBhV,QAEvG,IAAM2W,UAAWjZ,KAAKqY,MAAMf,wBAAwBhV,OAAS,EAC7D,QACIgW,gBACAtB,OAAQ+B,eACRrG,IAAK4E,wBAAwBA,wBAAwBhV,OAAS,GAC9DiW,OAxGRA,OAwGuBjB,yBACf/C,IAAK+C,wBAAwB,GAC7B1B,gBACAsD,UACIxG,IAAK4E,wBAAwBA,wBAAwBhV,OAAS2W,UAC9D1E,IAAK+C,wBAAwB2B,YApPzC,QAAAE,mBAA2BC,QAAmBC,UAAqBC,kBAK/D,IAAK,GAJCC,UAAW,GAAI5Y,OAAcyY,QAAQ9W,QACvCkX,sBAAwBF,iBACxBG,kBAAoB,IAEfC,aAAe,EAAGA,aAAeN,QAAQ9W,SAAUoX,aAAc,CACtE,GAAMC,kBAAmBP,QAAQM,cAC3BE,oBAAuC,IAAjBF,aAAqB,EAAIL,UAAUK,aAAe,GAGxEG,YAAcF,iBAAmBF,iBACvCD,wBAAyBA,sBAAwBI,qBAAuBC,YAExEN,SAASG,cAAgB1Z,KAAKqY,MAAMmB,uBACpCC,kBAAoBE,iBAGxB,MAAOJ,UAGX,QAAAO,+BAAwCC,SAAkBV,UAAqBW,QAAkDvY,QAC7H,GAAM2X,SAAU,GAAIzY,OAAcoZ,SAAW,EAC7CX,SAAQ,GAAK,GAEb,KAAK,GAAIhb,GAAI,EAAGA,EAAI2b,WAAY3b,EAAG,CAC/B,GAAM6b,mBAAoB,EAAIxY,OAAOgC,OAAOuW,QAAQH,YAAaG,QAAQE,WACzEd,SAAQhb,EAAI,GAAKgb,QAAQhb,GAAK6b,kBAIlC,MA9BJd,mBA8B6BC,QAASC,UAAWW,QAAQV,kBASzD,QAAAa,kBAA0Bd,UAAqBU,SAAkBC,SAI7D,IAAK,GAHCvY,QAAS,GAAIoE,oDAAA/D,EAAO,IAEpB6E,OAAqB,GAAIhG,OAAMoZ,UAC5BK,KAAO,EAAGA,MAAQL,WAAYK,KACnCzT,OAAOyT,MAAQ,GAAIzZ,OAAMqZ,QAAQK,QAGrC,KAAK,GAAIC,KAAM,EAAGA,IAAMN,QAAQK,UAAWC,IAGvC,IAAK,GAFClB,SA5BdU,8BA4BsDC,SAAUV,UAAWW,QAASvY,QAEnE2Y,MAAO,EAAGA,MAAOhB,QAAQ9W,SAAU8X,MACxCzT,OAAOyT,OAAME,KAAOlB,QAAQgB,MAIpC,OAAOzT,QAGX,QAAA4T,6BAAqCP,QAAkDxJ,iBACnF,QAAAgK,qBAA6BT,UAEzB,IAAK,GADCV,cACGe,KAAO,EAAGA,KAAOL,WAAYK,KAAM,CACxC,GAAMK,oBAAqBzE,oBAAoBoE,UACzCM,UAAYD,mBAAmBE,OAAO,SAAC/F,KAAMgB,SAAP,MAAmBhB,MAAOgB,QAAQE,aAAa,EAC3FuD,WAAUtS,KAAK2T,UAEnB,MAAOrB,WAGX,QAAAuB,kCAA0CvB,UAAqBU,UAI3D,IAAK,GAHClB,4BAEFgC,qBAAuBb,QAAQV,iBAC1Bc,KAAO,EAAGA,KAAOL,WAAYK,KAClCS,sBAA8CxB,UAAUe,MACxDvB,wBAAwB9R,KAAK8T,qBAEjC,OAAOhC,yBAGX,GAAIiC,oBAAiCd,QAAQe,QACzCvK,mBACAsK,mBAAqBd,QAAQe,SAASjN,MAAM0C,gBAAgBC,UAAYD,gBAAgBE,eAAgBF,gBAAgBC,UAAY,GAAKD,gBAAgBE,eAO7J,QAJMqK,UAAWf,QAAQe,SAASnC,KAAK,SAAC9W,EAAGC,GAAJ,MAAUD,GAAEmU,UAAYlU,EAAEkU,YAG3DD,uBACN1N,UAAsByS,SAAtBC,SAAAra,MAAA0E,QAAAiD,WAAA2S,GAAA,EAAA3S,UAAA0S,SAAA1S,oBAAA9B,OAAAC,cAAgC,IAAA6K,KAAA,IAAA0J,SAAA,IAAAC,IAAA3S,UAAAhG,OAAA,KAAAgP,MAAAhJ,UAAA2S,UAAA,IAAAA,GAAA3S,UAAAzB,OAAAoU,GAAAnU,KAAA,KAAAwK,MAAA2J,GAAAxc,MAAA,GAArBmX,SAAqBtE,KACtBlM,IAAM4Q,oBAAoBJ,QAAQK,WAAaD,oBAAoBJ,QAAQK,cACjF7Q,KAAI2B,KAAK6O,SAGb,GAAMmE,UAAWe,mBAAmBH,OAAO,SAAC/F,KAAMgB,SAAP,MAAmB5V,MAAK0S,IAAIkC,KAAMgB,QAAQK,YAAY,GAC3FoD,UAAYmB,oBAAoBT,UAChClB,wBAA0B+B,iCAAiCvB,UAAWU,SAE5E,QACIT,iBAAkBU,QAAQV,iBAC1BzC,UAAWmD,QAAQnD,UACnBgC,gDACAwB,QAASL,QAAQK,QACjBN,kBACA/D,wCACA2C,gBAlERwB,iBAkE0Cd,UAAWU,SAAUC,UAE9DpG,yBAAAlI,wBzBgpDWf,WAAY,2GACZsF,qBAAqB,GyB7hDjCyI,kBzB+hDQ9E,yBAAyBlI,wBACrBf,WAAY,sHACZsF,qBAAqB,GyBtsDjCsK,+BH/KA,IAAM1N,OAAQ,GAAI4G,qDAAA,EAAmBG,yBACrCsH,WAAY,WACRrO,MAAM5C,UAAUK,MAAMuC,MAAOxK","file":"worker-slave.parallel.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmory imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmory exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tObject.defineProperty(exports, name, {\n/******/ \t\t\tconfigurable: false,\n/******/ \t\t\tenumerable: true,\n/******/ \t\t\tget: getter\n/******/ \t\t});\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 1);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports) {\n\n/*!\n * Random.js version 0.2.6\n * curl http://simjs.com/_downloads/random-0.26-debug.js\n */\n\n /** Random.js library.\n *\n * The code is licensed as LGPL.\n*/\n\n/*\n   A C-program for MT19937, with initialization improved 2002/1/26.\n   Coded by Takuji Nishimura and Makoto Matsumoto.\n\n   Before using, initialize the state by using init_genrand(seed)\n   or init_by_array(init_key, key_length).\n\n   Copyright (C) 1997 - 2002, Makoto Matsumoto and Takuji Nishimura,\n   All rights reserved.\n\n   Redistribution and use in source and binary forms, with or without\n   modification, are permitted provided that the following conditions\n   are met:\n\n     1. Redistributions of source code must retain the above copyright\n        notice, this list of conditions and the following disclaimer.\n\n     2. Redistributions in binary form must reproduce the above copyright\n        notice, this list of conditions and the following disclaimer in the\n        documentation and/or other materials provided with the distribution.\n\n     3. The names of its contributors may not be used to endorse or promote\n        products derived from this software without specific prior written\n        permission.\n\n   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n   \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n   LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n   A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR\n   CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n   EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n   PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n   PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n   LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n   NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n\n   Any feedback is very welcome.\n   http://www.math.sci.hiroshima-u.ac.jp/~m-mat/MT/emt.html\n   email: m-mat @ math.sci.hiroshima-u.ac.jp (remove space)\n */\n\nvar Random = function(seed) {\n\tseed = (seed === undefined) ? (new Date()).getTime() : seed;\n\tif (typeof(seed) !== 'number'                             // ARG_CHECK\n\t\t|| Math.ceil(seed) != Math.floor(seed)) {             // ARG_CHECK\n\t\tthrow new TypeError(\"seed value must be an integer\"); // ARG_CHECK\n\t}                                                         // ARG_CHECK\n\n\n\t/* Period parameters */\n\tthis.N = 624;\n\tthis.M = 397;\n\tthis.MATRIX_A = 0x9908b0df;   /* constant vector a */\n\tthis.UPPER_MASK = 0x80000000; /* most significant w-r bits */\n\tthis.LOWER_MASK = 0x7fffffff; /* least significant r bits */\n\n\tthis.mt = new Array(this.N); /* the array for the state vector */\n\tthis.mti=this.N+1; /* mti==N+1 means mt[N] is not initialized */\n\n\t//this.init_genrand(seed);\n\tthis.init_by_array([seed], 1);\n};\n\n/* initializes mt[N] with a seed */\nRandom.prototype.init_genrand = function(s) {\n\tthis.mt[0] = s >>> 0;\n\tfor (this.mti=1; this.mti<this.N; this.mti++) {\n\t\tvar s = this.mt[this.mti-1] ^ (this.mt[this.mti-1] >>> 30);\n\t\tthis.mt[this.mti] = (((((s & 0xffff0000) >>> 16) * 1812433253) << 16) + (s & 0x0000ffff) * 1812433253)\n\t\t+ this.mti;\n\t\t/* See Knuth TAOCP Vol2. 3rd Ed. P.106 for multiplier. */\n\t\t/* In the previous versions, MSBs of the seed affect   */\n\t\t/* only MSBs of the array mt[].                        */\n\t\t/* 2002/01/09 modified by Makoto Matsumoto             */\n\t\tthis.mt[this.mti] >>>= 0;\n\t\t/* for >32 bit machines */\n\t}\n};\n\n/* initialize by an array with array-length */\n/* init_key is the array for initializing keys */\n/* key_length is its length */\n/* slight change for C++, 2004/2/26 */\nRandom.prototype.init_by_array = function(init_key, key_length) {\n\tvar i, j, k;\n\tthis.init_genrand(19650218);\n\ti=1; j=0;\n\tk = (this.N>key_length ? this.N : key_length);\n\tfor (; k; k--) {\n\t\tvar s = this.mt[i-1] ^ (this.mt[i-1] >>> 30);\n\t\tthis.mt[i] = (this.mt[i] ^ (((((s & 0xffff0000) >>> 16) * 1664525) << 16) + ((s & 0x0000ffff) * 1664525)))\n\t\t+ init_key[j] + j; /* non linear */\n\t\tthis.mt[i] >>>= 0; /* for WORDSIZE > 32 machines */\n\t\ti++; j++;\n\t\tif (i>=this.N) { this.mt[0] = this.mt[this.N-1]; i=1; }\n\t\tif (j>=key_length) j=0;\n\t}\n\tfor (k=this.N-1; k; k--) {\n\t\tvar s = this.mt[i-1] ^ (this.mt[i-1] >>> 30);\n\t\tthis.mt[i] = (this.mt[i] ^ (((((s & 0xffff0000) >>> 16) * 1566083941) << 16) + (s & 0x0000ffff) * 1566083941))\n\t\t- i; /* non linear */\n\t\tthis.mt[i] >>>= 0; /* for WORDSIZE > 32 machines */\n\t\ti++;\n\t\tif (i>=this.N) { this.mt[0] = this.mt[this.N-1]; i=1; }\n\t}\n\n\tthis.mt[0] = 0x80000000; /* MSB is 1; assuring non-zero initial array */\n};\n\n/* generates a random number on [0,0xffffffff]-interval */\nRandom.prototype.genrand_int32 = function() {\n\tvar y;\n\tvar mag01 = new Array(0x0, this.MATRIX_A);\n\t/* mag01[x] = x * MATRIX_A  for x=0,1 */\n\n\tif (this.mti >= this.N) { /* generate N words at one time */\n\t\tvar kk;\n\n\t\tif (this.mti == this.N+1)   /* if init_genrand() has not been called, */\n\t\t\tthis.init_genrand(5489); /* a default initial seed is used */\n\n\t\tfor (kk=0;kk<this.N-this.M;kk++) {\n\t\t\ty = (this.mt[kk]&this.UPPER_MASK)|(this.mt[kk+1]&this.LOWER_MASK);\n\t\t\tthis.mt[kk] = this.mt[kk+this.M] ^ (y >>> 1) ^ mag01[y & 0x1];\n\t\t}\n\t\tfor (;kk<this.N-1;kk++) {\n\t\t\ty = (this.mt[kk]&this.UPPER_MASK)|(this.mt[kk+1]&this.LOWER_MASK);\n\t\t\tthis.mt[kk] = this.mt[kk+(this.M-this.N)] ^ (y >>> 1) ^ mag01[y & 0x1];\n\t\t}\n\t\ty = (this.mt[this.N-1]&this.UPPER_MASK)|(this.mt[0]&this.LOWER_MASK);\n\t\tthis.mt[this.N-1] = this.mt[this.M-1] ^ (y >>> 1) ^ mag01[y & 0x1];\n\n\t\tthis.mti = 0;\n\t}\n\n\ty = this.mt[this.mti++];\n\n\t/* Tempering */\n\ty ^= (y >>> 11);\n\ty ^= (y << 7) & 0x9d2c5680;\n\ty ^= (y << 15) & 0xefc60000;\n\ty ^= (y >>> 18);\n\n\treturn y >>> 0;\n};\n\n/* generates a random number on [0,0x7fffffff]-interval */\nRandom.prototype.genrand_int31 = function() {\n\treturn (this.genrand_int32()>>>1);\n};\n\n/* generates a random number on [0,1]-real-interval */\nRandom.prototype.genrand_real1 = function() {\n\treturn this.genrand_int32()*(1.0/4294967295.0);\n\t/* divided by 2^32-1 */\n};\n\n/* generates a random number on [0,1)-real-interval */\nRandom.prototype.random = function() {\n\tif (this.pythonCompatibility) {\n\t\tif (this.skip) {\n\t\t\tthis.genrand_int32();\n\t\t}\n\t\tthis.skip = true;\n\t}\n\treturn this.genrand_int32()*(1.0/4294967296.0);\n\t/* divided by 2^32 */\n};\n\n/* generates a random number on (0,1)-real-interval */\nRandom.prototype.genrand_real3 = function() {\n\treturn (this.genrand_int32() + 0.5)*(1.0/4294967296.0);\n\t/* divided by 2^32 */\n};\n\n/* generates a random number on [0,1) with 53-bit resolution*/\nRandom.prototype.genrand_res53 = function() {\n\tvar a=this.genrand_int32()>>>5, b=this.genrand_int32()>>>6;\n\treturn(a*67108864.0+b)*(1.0/9007199254740992.0);\n};\n\n/* These real versions are due to Isaku Wada, 2002/01/09 added */\n\n\n/**************************************************************************/\nRandom.prototype.LOG4 = Math.log(4.0);\nRandom.prototype.SG_MAGICCONST = 1.0 + Math.log(4.5);\n\nRandom.prototype.exponential = function (lambda) {\n\tif (arguments.length != 1) {                         // ARG_CHECK\n\t\tthrow new SyntaxError(\"exponential() must \"     // ARG_CHECK\n\t\t\t\t+ \" be called with 'lambda' parameter\"); // ARG_CHECK\n\t}                                                   // ARG_CHECK\n\n\tvar r = this.random();\n\treturn -Math.log(r) / lambda;\n};\n\nRandom.prototype.gamma = function (alpha, beta) {\n\tif (arguments.length != 2) {                         // ARG_CHECK\n\t\tthrow new SyntaxError(\"gamma() must be called\"  // ARG_CHECK\n\t\t\t\t+ \" with alpha and beta parameters\"); // ARG_CHECK\n\t}                                                   // ARG_CHECK\n\n\t/* Based on Python 2.6 source code of random.py.\n\t */\n\n\tif (alpha > 1.0) {\n\t\tvar ainv = Math.sqrt(2.0 * alpha - 1.0);\n\t\tvar bbb = alpha - this.LOG4;\n\t\tvar ccc = alpha + ainv;\n\n\t\twhile (true) {\n\t\t\tvar u1 = this.random();\n\t\t\tif ((u1 < 1e-7) || (u > 0.9999999)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tvar u2 = 1.0 - this.random();\n\t\t\tvar v = Math.log(u1 / (1.0 - u1)) / ainv;\n\t\t\tvar x = alpha * Math.exp(v);\n\t\t\tvar z = u1 * u1 * u2;\n\t\t\tvar r = bbb + ccc * v - x;\n\t\t\tif ((r + this.SG_MAGICCONST - 4.5 * z >= 0.0) || (r >= Math.log(z))) {\n\t\t\t\treturn x * beta;\n\t\t\t}\n\t\t}\n\t} else if (alpha == 1.0) {\n\t\tvar u = this.random();\n\t\twhile (u <= 1e-7) {\n\t\t\tu = this.random();\n\t\t}\n\t\treturn - Math.log(u) * beta;\n\t} else {\n\t\twhile (true) {\n\t\t\tvar u = this.random();\n\t\t\tvar b = (Math.E + alpha) / Math.E;\n\t\t\tvar p = b * u;\n\t\t\tif (p <= 1.0) {\n\t\t\t\tvar x = Math.pow(p, 1.0 / alpha);\n\t\t\t} else {\n\t\t\t\tvar x = - Math.log((b - p) / alpha);\n\t\t\t}\n\t\t\tvar u1 = this.random();\n\t\t\tif (p > 1.0) {\n\t\t\t\tif (u1 <= Math.pow(x, (alpha - 1.0))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else if (u1 <= Math.exp(-x)) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn x * beta;\n\t}\n\n};\n\nRandom.prototype.normal = function (mu, sigma) {\n\tif (arguments.length != 2) {                          // ARG_CHECK\n\t\tthrow new SyntaxError(\"normal() must be called\"  // ARG_CHECK\n\t\t\t\t+ \" with mu and sigma parameters\");      // ARG_CHECK\n\t}                                                    // ARG_CHECK\n\n\tvar z = this.lastNormal;\n\tthis.lastNormal = NaN;\n\tif (!z) {\n\t\tvar a = this.random() * 2 * Math.PI;\n\t\tvar b = Math.sqrt(-2.0 * Math.log(1.0 - this.random()));\n\t\tz = Math.cos(a) * b;\n\t\tthis.lastNormal = Math.sin(a) * b;\n\t}\n\treturn mu + z * sigma;\n};\n\nRandom.prototype.pareto = function (alpha) {\n\tif (arguments.length != 1) {                         // ARG_CHECK\n\t\tthrow new SyntaxError(\"pareto() must be called\" // ARG_CHECK\n\t\t\t\t+ \" with alpha parameter\");             // ARG_CHECK\n\t}                                                   // ARG_CHECK\n\n\tvar u = this.random();\n\treturn 1.0 / Math.pow((1 - u), 1.0 / alpha);\n};\n\nRandom.prototype.triangular = function (lower, upper, mode) {\n\t// http://en.wikipedia.org/wiki/Triangular_distribution\n\tif (arguments.length != 3) {                         // ARG_CHECK\n\t\tthrow new SyntaxError(\"triangular() must be called\" // ARG_CHECK\n\t\t+ \" with lower, upper and mode parameters\");    // ARG_CHECK\n\t}                                                   // ARG_CHECK\n\n\tvar c = (mode - lower) / (upper - lower);\n\tvar u = this.random();\n\n\tif (u <= c) {\n\t\treturn lower + Math.sqrt(u * (upper - lower) * (mode - lower));\n\t} else {\n\t\treturn upper - Math.sqrt((1 - u) * (upper - lower) * (upper - mode));\n\t}\n};\n\nRandom.prototype.uniform = function (lower, upper) {\n\tif (arguments.length != 2) {                         // ARG_CHECK\n\t\tthrow new SyntaxError(\"uniform() must be called\" // ARG_CHECK\n\t\t+ \" with lower and upper parameters\");    // ARG_CHECK\n\t}                                                   // ARG_CHECK\n\treturn lower + this.random() * (upper - lower);\n};\n\nRandom.prototype.weibull = function (alpha, beta) {\n\tif (arguments.length != 2) {                         // ARG_CHECK\n\t\tthrow new SyntaxError(\"weibull() must be called\" // ARG_CHECK\n\t\t+ \" with alpha and beta parameters\");    // ARG_CHECK\n\t}                                                   // ARG_CHECK\n\tvar u = 1.0 - this.random();\n\treturn alpha * Math.pow(-Math.log(u), 1.0 / beta);\n};\n\nmodule.exports = Random;\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_simjs_random__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_simjs_random___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_simjs_random__);\n\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _toArray(arr) { return Array.isArray(arr) ? arr : Array.from(arr); }\n\n/******/(function (modules) {\n    // webpackBootstrap\n    /******/ // The module cache\n    /******/var installedModules = {};\n    /******/\n    /******/ // The require function\n    /******/function __webpack_require__(moduleId) {\n        /******/\n        /******/ // Check if module is in cache\n        /******/if (installedModules[moduleId])\n            /******/return installedModules[moduleId].exports;\n        /******/\n        /******/ // Create a new module (and put it into the cache)\n        /******/var module = installedModules[moduleId] = {\n            /******/i: moduleId,\n            /******/l: false,\n            /******/exports: {}\n            /******/ };\n        /******/\n        /******/ // Execute the module function\n        /******/modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n        /******/\n        /******/ // Flag the module as loaded\n        /******/module.l = true;\n        /******/\n        /******/ // Return the exports of the module\n        /******/return module.exports;\n        /******/\n    }\n    /******/\n    /******/\n    /******/ // expose the modules object (__webpack_modules__)\n    /******/__webpack_require__.m = modules;\n    /******/\n    /******/ // expose the module cache\n    /******/__webpack_require__.c = installedModules;\n    /******/\n    /******/ // identity function for calling harmory imports with the correct context\n    /******/__webpack_require__.i = function (value) {\n        return value;\n    };\n    /******/\n    /******/ // define getter function for harmory exports\n    /******/__webpack_require__.d = function (exports, name, getter) {\n        /******/Object.defineProperty(exports, name, {\n            /******/configurable: false,\n            /******/enumerable: true,\n            /******/get: getter\n            /******/ });\n        /******/\n    };\n    /******/\n    /******/ // getDefaultExport function for compatibility with non-harmony modules\n    /******/__webpack_require__.n = function (module) {\n        /******/var getter = module && module.__esModule ?\n        /******/function getDefault() {\n            return module['default'];\n        } :\n        /******/function getModuleExports() {\n            return module;\n        };\n        /******/__webpack_require__.d(getter, 'a', getter);\n        /******/return getter;\n        /******/\n    };\n    /******/\n    /******/ // Object.prototype.hasOwnProperty.call\n    /******/__webpack_require__.o = function (object, property) {\n        return Object.prototype.hasOwnProperty.call(object, property);\n    };\n    /******/\n    /******/ // __webpack_public_path__\n    /******/__webpack_require__.p = \"\";\n    /******/\n    /******/ // Load entry module and return exports\n    /******/return __webpack_require__(__webpack_require__.s = 18);\n    /******/\n})(\n/************************************************************************/\n/******/[\n/* 0 */\n/***/function (module, exports, __webpack_require__) {\n\n    \"use strict\";\n    /* harmony export (immutable) */\n    exports[\"b\"] = toIterator;\n    /* harmony export (immutable) */exports[\"a\"] = toArray;\n    /* unused harmony export flattenArray */\n    /* unused harmony export concatInPlace */\n    /**\n     * Creates an iterator that iterates over the given array\n     * @param data the array\n     * @param T element type\n     * @returns the iterator\n     */\n    /**\n     * Creates an iterator that iterates over the given array\n     * @param data the array\n     * @param T element type\n     * @returns the iterator\n     */function toIterator(data) {\n        return data[Symbol.iterator]();\n    }\n    /**\n     * Converts the given iterator to an array\n     * @param iterator the iterator that is to be converted into an array\n     * @param T element type\n     * @returns {T[]} the array representation of the given iterator\n     */\n    function toArray(iterator) {\n        var result = [];\n        var current = void 0;\n        /* tslint:disable:no-conditional-assignment */\n        while (!(current = iterator.next()).done) {\n            result.push(current.value);\n        }\n        return result;\n    }\n    /**\n     * Flattens the given array.\n     * @param deepArray the array to flatten\n     * @param type of the array elements\n     * @returns returns an array containing all the values contained in the sub arrays of deep array.\n     */\n    function flattenArray(deepArray) {\n        if (deepArray.length === 0) {\n            return [];\n        }\n\n        var _deepArray = _toArray(deepArray),\n            head = _deepArray[0],\n            tail = _deepArray.slice(1);\n\n        return Array.prototype.concat.apply(head, tail);\n    }\n    function concatInPlace(target, toAppend) {\n        var insertionIndex = target.length;\n        target.length += toAppend.length;\n        for (var i = 0; i < toAppend.length; ++i) {\n            target[insertionIndex + i] = toAppend[i];\n        }\n        return target;\n    }\n\n    /***/\n},\n/* 1 */\n/***/function (module, exports, __webpack_require__) {\n\n    \"use strict\";\n    /* harmony export (immutable) */\n    exports[\"a\"] = isSerializedFunctionCall;\n    /**\n     * @module parallel\n     */\n    /** */\n    /**\n     * Tests if the given object is a serialized function call\n     * @param potentialFunc a potentially serialized function call\n     * @returns {boolean} true if it is a serialized function call, false otherwise\n     */\n    function isSerializedFunctionCall(potentialFunc) {\n        return !!potentialFunc && potentialFunc.______serializedFunctionCall === true;\n    }\n\n    /***/\n},\n/* 2 */\n/***/function (module, exports, __webpack_require__) {\n\n    \"use strict\";\n    /* unused harmony export WorkerMessageType */\n    /* unused harmony export initializeWorkerMessage */\n    /* unused harmony export scheduleTaskMessage */\n    /* harmony export (immutable) */\n    exports[\"c\"] = requestFunctionMessage;\n    /* unused harmony export functionResponseMessage */\n    /* harmony export (immutable) */exports[\"f\"] = workerResultMessage;\n    /* harmony export (immutable) */exports[\"e\"] = functionExecutionError;\n    /* unused harmony export stopMessage */\n    /* harmony export (immutable) */exports[\"b\"] = isScheduleTask;\n    /* harmony export (immutable) */exports[\"a\"] = isInitializeMessage;\n    /* unused harmony export isFunctionRequest */\n    /* harmony export (immutable) */exports[\"d\"] = isFunctionResponse;\n    /* unused harmony export isWorkerResult */\n    /* unused harmony export isFunctionExecutionError */\n    /* harmony export (immutable) */exports[\"g\"] = isStopMesssage;\n    /**\n     * Message types\n     */\n    var WorkerMessageType;\n    (function (WorkerMessageType) {\n        /**\n         * Sent from the worker facade to the worker slave to initialize the slave.\n         */\n        WorkerMessageType[WorkerMessageType[\"InitializeWorker\"] = 0] = \"InitializeWorker\";\n        /**\n         * Sent from the worker facade to the worker slave to schedule a new task on the slave.\n         */\n        WorkerMessageType[WorkerMessageType[\"ScheduleTask\"] = 1] = \"ScheduleTask\";\n        /**\n         * Send from the worker slave to the worker thread to request the definition of a function needed to execute a scheduled task\n         */\n        WorkerMessageType[WorkerMessageType[\"FunctionRequest\"] = 2] = \"FunctionRequest\";\n        /**\n         * Send from the worker thread to the worker slave as response to a {@link WorkerMessageType.FunctionRequest}. Includes\n         * the definitions of all requested functions\n         */\n        WorkerMessageType[WorkerMessageType[\"FunctionResponse\"] = 3] = \"FunctionResponse\";\n        /**\n         * Sent from the worker slave to the worker thread containing the computed result\n         */\n        WorkerMessageType[WorkerMessageType[\"WorkerResult\"] = 4] = \"WorkerResult\";\n        /**\n         * Sent from the worker slave to the worker thread for the case an error occurred during the evaluation of the scheduled task.\n         */\n        WorkerMessageType[WorkerMessageType[\"FunctionExecutionError\"] = 5] = \"FunctionExecutionError\";\n        /**\n         * Sent from the worker thread to the worker slave to request the slave to terminate.\n         */\n        WorkerMessageType[WorkerMessageType[\"Stop\"] = 6] = \"Stop\";\n    })(WorkerMessageType || (WorkerMessageType = {}));\n    /**\n     * Creates an initialize worker message\n     * @param id the unique id of the worker\n     * @returns the initialize worker message\n     */\n    function initializeWorkerMessage(id) {\n        return { type: WorkerMessageType.InitializeWorker, workerId: id };\n    }\n    /**\n     * Creates a message to schedule the given task on a worker slave\n     * @param task the task to schedule\n     * @returns the schedule message\n     */\n    function scheduleTaskMessage(task) {\n        return { task: task, type: WorkerMessageType.ScheduleTask };\n    }\n    /**\n     * Creates an {@link IFunctionRequest} message that requests the given function ids from the worker thread\n     * @param functionId the id of a function to request\n     * @param otherFunctionIds additional ids to request from the worker slave\n     * @returns the function request message\n     */\n    function requestFunctionMessage(functionId) {\n        for (var _len = arguments.length, otherFunctionIds = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n            otherFunctionIds[_key - 1] = arguments[_key];\n        }\n\n        return { functionIds: [functionId].concat(otherFunctionIds), type: WorkerMessageType.FunctionRequest };\n    }\n    /**\n     * Creates a function response message containing the passed function definitions\n     * @param functions the function definitions to respond to the worker slave\n     * @returns the function response message\n     */\n    function functionResponseMessage(functions) {\n        for (var _len2 = arguments.length, missingFunctionIds = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n            missingFunctionIds[_key2 - 1] = arguments[_key2];\n        }\n\n        return { functions: functions, missingFunctions: missingFunctionIds, type: WorkerMessageType.FunctionResponse };\n    }\n    /**\n     * Creates a worker result message for the given result\n     * @param result the computed result for the scheduled task\n     * @returns the message\n     */\n    function workerResultMessage(result) {\n        return { result: result, type: WorkerMessageType.WorkerResult };\n    }\n    /**\n     * Creates a function execution error message containing the given error\n     * @param error the error object thrown by the task computation\n     * @returns the message\n     */\n    function functionExecutionError(error) {\n        var errorObject = {};\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n            for (var _iterator = Object.getOwnPropertyNames(error)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                var prop = _step.value;\n\n                errorObject[prop] = JSON.stringify(error[prop]);\n            }\n        } catch (err) {\n            _didIteratorError = true;\n            _iteratorError = err;\n        } finally {\n            try {\n                if (!_iteratorNormalCompletion && _iterator.return) {\n                    _iterator.return();\n                }\n            } finally {\n                if (_didIteratorError) {\n                    throw _iteratorError;\n                }\n            }\n        }\n\n        return { error: errorObject, type: WorkerMessageType.FunctionExecutionError };\n    }\n    /**\n     * Creates a stop message\n     * @returns the message\n     */\n    function stopMessage() {\n        return { type: WorkerMessageType.Stop };\n    }\n    /**\n     * Tests if the given message is an {@link IScheduleTaskMessage} message\n     * @param message the message to test\n     * @returns {boolean} {@code true} if the message is an {@link IScheduleTaskMessage}\n     */\n    function isScheduleTask(message) {\n        return message.type === WorkerMessageType.ScheduleTask;\n    }\n    /**\n     * Tests if the given message is an {@link IInitializeWorkerMessage} message\n     * @param message the message to test\n     * @returns {boolean} {@code true} if the message is an {@link IInitializeWorkerMessage}\n     */\n    function isInitializeMessage(message) {\n        return message.type === WorkerMessageType.InitializeWorker;\n    }\n    /**\n     * Tests if the given message is an {@link IFunctionRequest} message\n     * @param message the message to test\n     * @returns {boolean} {@code true} if the message is an {@link IFunctionRequest}\n     */\n    function isFunctionRequest(message) {\n        return message.type === WorkerMessageType.FunctionRequest;\n    }\n    /**\n     * Tests if the given message is an {@link IFunctionResponse} message\n     * @param message the message to test\n     * @returns {boolean} {@code true} if the message is an {@link IFunctionResponse}\n     */\n    function isFunctionResponse(message) {\n        return message.type === WorkerMessageType.FunctionResponse;\n    }\n    /**\n     * Tests if the given message is an {@link IWorkerResultMessage} message\n     * @param message the message to test\n     * @returns {boolean} {@code true} if the message is an {@link IWorkerResultMessage}\n     */\n    function isWorkerResult(message) {\n        return message.type === WorkerMessageType.WorkerResult;\n    }\n    /**\n     * Tests if the given message is an {@link IFunctionExecutionError} message\n     * @param message the message to test\n     * @returns {boolean} {@code true} if the message is an {@link IFunctionExecutionError}\n     */\n    function isFunctionExecutionError(message) {\n        return message.type === WorkerMessageType.FunctionExecutionError;\n    }\n    /**\n     * Tests if the given message is a stop message\n     * @param message the message to test\n     * @returns {boolean} {@code true} if the message is a stop message\n     */\n    function isStopMesssage(message) {\n        return message.type === WorkerMessageType.Stop;\n    }\n\n    /***/\n},\n/* 3 */\n/***/function (module, exports, __webpack_require__) {\n\n    \"use strict\";\n    /* harmony import */\n    var __WEBPACK_IMPORTED_MODULE_0__common_worker_worker_messages__ = __webpack_require__(2);\n    /* harmony import */var __WEBPACK_IMPORTED_MODULE_1__browser_worker_slave_states__ = __webpack_require__(6);\n\n    /**\n     * Worker thread endpoint executed in the web worker thread.\n     * Executes the tasks assigned by the thread pool via the {@link BrowserWorkerThread}.\n     */\n\n    var BrowserWorkerSlave = function () {\n        function BrowserWorkerSlave(functionCache) {\n            _classCallCheck(this, BrowserWorkerSlave);\n\n            this.functionCache = functionCache;\n            /**\n             * The unique id of the slave instance\n             */\n            this.id = Number.NaN;\n            this.state = new __WEBPACK_IMPORTED_MODULE_1__browser_worker_slave_states__[\"a\" /* DefaultBrowserWorkerSlaveState */](this);\n        }\n        /**\n         * Changes the state of the slave to the new state\n         * @param state the new state to assign\n         */\n\n\n        _createClass(BrowserWorkerSlave, [{\n            key: 'changeState',\n            value: function changeState(state) {\n                this.state = state;\n                this.state.enter();\n            }\n            /**\n             * Executed when the slave receives a message from the ui-thread\n             * @param event the received message\n             */\n\n        }, {\n            key: 'onMessage',\n            value: function onMessage(event) {\n                if (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__common_worker_worker_messages__[\"g\" /* isStopMesssage */])(event.data)) {\n                    close();\n                } else if (!this.state.onMessage(event)) {\n                    throw new Error('Message with type ' + event.data.type + ' cannot be handled by slave ' + this);\n                }\n            }\n        }, {\n            key: 'postMessage',\n            value: function (_postMessage) {\n                function postMessage(_x) {\n                    return _postMessage.apply(this, arguments);\n                }\n\n                postMessage.toString = function () {\n                    return _postMessage.toString();\n                };\n\n                return postMessage;\n            }(function (message) {\n                postMessage(message);\n            })\n        }, {\n            key: 'toString',\n            value: function toString() {\n                return 'BrowserSlave { id: ' + this.id + ', state: \\'' + this.state.name + '\\' }';\n            }\n        }]);\n\n        return BrowserWorkerSlave;\n    }();\n    /* harmony export (immutable) */\n\n    exports[\"a\"] = BrowserWorkerSlave;\n\n    /***/\n},\n/* 4 */\n/***/function (module, exports, __webpack_require__) {\n\n    \"use strict\";\n    /* harmony import */\n    var __WEBPACK_IMPORTED_MODULE_0__util_simple_map__ = __webpack_require__(17);\n\n    /**\n     * Cache used by each worker slave to cache the received functions.\n     * Caching the functions has the advantage that function only is serialized, transmitted and deserialized once. This also\n     * has the advantage, that the function instance stays the same and therefore can be optimized by the runtime system.\n     */\n\n    var SlaveFunctionLookupTable = function () {\n        function SlaveFunctionLookupTable() {\n            _classCallCheck(this, SlaveFunctionLookupTable);\n\n            this.cache = new __WEBPACK_IMPORTED_MODULE_0__util_simple_map__[\"a\" /* SimpleMap */]();\n        }\n        /**\n         * Resolves the function with the given id\n         * @param id the id of the function to resolve\n         * @returns the resolved function or undefined if not known\n         */\n\n\n        _createClass(SlaveFunctionLookupTable, [{\n            key: 'getFunction',\n            value: function getFunction(id) {\n                return this.cache.get(id.identifier);\n            }\n            /**\n             * Registers a new function in the cache\n             * @param definition the definition of the function to register\n             * @returns the registered function\n             */\n\n        }, {\n            key: 'registerFunction',\n            value: function registerFunction(definition) {\n                var f = this.toFunction(definition);\n                this.cache.set(definition.id.identifier, f);\n                return f;\n            }\n        }, {\n            key: 'registerStaticFunction',\n            value: function registerStaticFunction(id, func) {\n                if (this.has(id)) {\n                    throw new Error('The given function id \\'' + id.identifier + '\\' is already used by another function registration, the id needs to be unique.');\n                }\n                this.cache.set(id.identifier, func);\n            }\n            /**\n             * Tests if the cache contains a function with the given id\n             * @param id the id of the function to test for existence\n             * @returns true if the cache contains a function with the given id\n             */\n\n        }, {\n            key: 'has',\n            value: function has(id) {\n                return this.cache.has(id.identifier);\n            }\n        }, {\n            key: 'toFunction',\n            value: function toFunction(definition) {\n                if (definition.name) {\n                    var args = definition.argumentNames.join(\", \");\n                    var wrapper = Function.apply(undefined, ['return function ' + definition.name + ' (' + args + ') { ' + definition.body + ' }; ']);\n                    return wrapper();\n                }\n                return Function.apply(undefined, [].concat(_toConsumableArray(definition.argumentNames), [definition.body]));\n            }\n        }]);\n\n        return SlaveFunctionLookupTable;\n    }();\n    /* harmony export (immutable) */\n\n    exports[\"a\"] = SlaveFunctionLookupTable;\n\n    /***/\n},\n/* 5 */\n/***/function (module, exports, __webpack_require__) {\n\n    \"use strict\";\n    /* harmony import */\n    var __WEBPACK_IMPORTED_MODULE_0__parallel_worker_functions__ = __webpack_require__(12);\n    /* harmony import */var __WEBPACK_IMPORTED_MODULE_1__util_identity__ = __webpack_require__(16);\n    /* harmony import */var __WEBPACK_IMPORTED_MODULE_2__filter_iterator__ = __webpack_require__(9);\n    /* harmony import */var __WEBPACK_IMPORTED_MODULE_3__map_iterator__ = __webpack_require__(10);\n    /* harmony import */var __WEBPACK_IMPORTED_MODULE_4__parallel_job_executor__ = __webpack_require__(11);\n    /* harmony import */var __WEBPACK_IMPORTED_MODULE_5__range_iterator__ = __webpack_require__(13);\n    /* harmony import */var __WEBPACK_IMPORTED_MODULE_6__reduce_iterator__ = __webpack_require__(14);\n    /* harmony import */var __WEBPACK_IMPORTED_MODULE_7__util_arrays__ = __webpack_require__(0);\n    /* harmony export (immutable) */exports[\"a\"] = registerStaticParallelFunctions;\n\n    /**\n     * Registers the static parallel functions\n     * @param lookupTable the table into which the function should be registered\n     */\n    function registerStaticParallelFunctions(lookupTable) {\n        lookupTable.registerStaticFunction(__WEBPACK_IMPORTED_MODULE_0__parallel_worker_functions__[\"a\" /* ParallelWorkerFunctionIds */].IDENTITY, __WEBPACK_IMPORTED_MODULE_1__util_identity__[\"a\" /* identity */]);\n        lookupTable.registerStaticFunction(__WEBPACK_IMPORTED_MODULE_0__parallel_worker_functions__[\"a\" /* ParallelWorkerFunctionIds */].FILTER, __WEBPACK_IMPORTED_MODULE_2__filter_iterator__[\"a\" /* filterIterator */]);\n        lookupTable.registerStaticFunction(__WEBPACK_IMPORTED_MODULE_0__parallel_worker_functions__[\"a\" /* ParallelWorkerFunctionIds */].MAP, __WEBPACK_IMPORTED_MODULE_3__map_iterator__[\"a\" /* mapIterator */]);\n        lookupTable.registerStaticFunction(__WEBPACK_IMPORTED_MODULE_0__parallel_worker_functions__[\"a\" /* ParallelWorkerFunctionIds */].PARALLEL_JOB_EXECUTOR, __WEBPACK_IMPORTED_MODULE_4__parallel_job_executor__[\"a\" /* parallelJobExecutor */]);\n        lookupTable.registerStaticFunction(__WEBPACK_IMPORTED_MODULE_0__parallel_worker_functions__[\"a\" /* ParallelWorkerFunctionIds */].RANGE, __WEBPACK_IMPORTED_MODULE_5__range_iterator__[\"a\" /* rangeIterator */]);\n        lookupTable.registerStaticFunction(__WEBPACK_IMPORTED_MODULE_0__parallel_worker_functions__[\"a\" /* ParallelWorkerFunctionIds */].REDUCE, __WEBPACK_IMPORTED_MODULE_6__reduce_iterator__[\"a\" /* reduceIterator */]);\n        lookupTable.registerStaticFunction(__WEBPACK_IMPORTED_MODULE_0__parallel_worker_functions__[\"a\" /* ParallelWorkerFunctionIds */].TO_ITERATOR, __WEBPACK_IMPORTED_MODULE_7__util_arrays__[\"b\" /* toIterator */]);\n    }\n\n    /***/\n},\n/* 6 */\n/***/function (module, exports, __webpack_require__) {\n\n    \"use strict\";\n    /* harmony import */\n    var __WEBPACK_IMPORTED_MODULE_0__common_function_function_call_deserializer__ = __webpack_require__(7);\n    /* harmony import */var __WEBPACK_IMPORTED_MODULE_1__common_worker_worker_messages__ = __webpack_require__(2);\n\n    /**\n     * State of the browser worker slave.\n     */\n\n    var BrowserWorkerSlaveState = function () {\n        function BrowserWorkerSlaveState(name, slave) {\n            _classCallCheck(this, BrowserWorkerSlaveState);\n\n            this.name = name;\n            this.slave = slave;\n        }\n        /**\n         * Executed when the slave changes its state to this state.\n         */\n\n\n        _createClass(BrowserWorkerSlaveState, [{\n            key: 'enter',\n            value: function enter() {}\n            // intentionally empty\n\n            /**\n             * Executed whenever the slave receives a message from the ui-thread while being in this state\n             * @param event the received message\n             * @returns {boolean} true if the state has handled the message, false otherwise\n             */\n\n        }, {\n            key: 'onMessage',\n            value: function onMessage(event) {\n                return false;\n            }\n        }]);\n\n        return BrowserWorkerSlaveState;\n    }();\n    /* unused harmony export BrowserWorkerSlaveState */\n\n    /**\n     * Initial state of a slave. The slave is waiting for the initialization message.\n     */\n\n\n    var DefaultBrowserWorkerSlaveState = function (_BrowserWorkerSlaveSt) {\n        _inherits(DefaultBrowserWorkerSlaveState, _BrowserWorkerSlaveSt);\n\n        function DefaultBrowserWorkerSlaveState(slave) {\n            _classCallCheck(this, DefaultBrowserWorkerSlaveState);\n\n            return _possibleConstructorReturn(this, (DefaultBrowserWorkerSlaveState.__proto__ || Object.getPrototypeOf(DefaultBrowserWorkerSlaveState)).call(this, \"Default\", slave));\n        }\n\n        _createClass(DefaultBrowserWorkerSlaveState, [{\n            key: 'onMessage',\n            value: function onMessage(event) {\n                if (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__common_worker_worker_messages__[\"a\" /* isInitializeMessage */])(event.data)) {\n                    this.slave.id = event.data.workerId;\n                    this.slave.changeState(new IdleBrowserWorkerSlaveState(this.slave));\n                    return true;\n                }\n                return false;\n            }\n        }]);\n\n        return DefaultBrowserWorkerSlaveState;\n    }(BrowserWorkerSlaveState);\n    /* harmony export (immutable) */\n\n    exports[\"a\"] = DefaultBrowserWorkerSlaveState;\n\n    /**\n     * The slave is waiting for work from the ui-thread.\n     */\n\n    var IdleBrowserWorkerSlaveState = function (_BrowserWorkerSlaveSt2) {\n        _inherits(IdleBrowserWorkerSlaveState, _BrowserWorkerSlaveSt2);\n\n        function IdleBrowserWorkerSlaveState(slave) {\n            _classCallCheck(this, IdleBrowserWorkerSlaveState);\n\n            return _possibleConstructorReturn(this, (IdleBrowserWorkerSlaveState.__proto__ || Object.getPrototypeOf(IdleBrowserWorkerSlaveState)).call(this, \"Idle\", slave));\n        }\n\n        _createClass(IdleBrowserWorkerSlaveState, [{\n            key: 'onMessage',\n            value: function onMessage(event) {\n                var _this3 = this;\n\n                if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__common_worker_worker_messages__[\"b\" /* isScheduleTask */])(event.data)) {\n                    return false;\n                }\n                var task = event.data.task;\n                var missingFunctions = task.usedFunctionIds.filter(function (id) {\n                    return !_this3.slave.functionCache.has(id);\n                });\n                if (missingFunctions.length === 0) {\n                    this.slave.changeState(new ExecuteFunctionBrowserWorkerSlaveState(this.slave, task));\n                } else {\n                    var _missingFunctions = _toArray(missingFunctions),\n                        head = _missingFunctions[0],\n                        tail = _missingFunctions.slice(1);\n\n                    this.slave.postMessage(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__common_worker_worker_messages__[\"c\" /* requestFunctionMessage */]).apply(undefined, [head].concat(_toConsumableArray(tail))));\n                    this.slave.changeState(new WaitingForFunctionDefinitionBrowserWorkerSlaveState(this.slave, task));\n                }\n                return true;\n            }\n        }]);\n\n        return IdleBrowserWorkerSlaveState;\n    }(BrowserWorkerSlaveState);\n    /* unused harmony export IdleBrowserWorkerSlaveState */\n\n    /**\n     * The slave is waiting for the definition of the requested function that is needed to execute the assigned task.\n     */\n\n\n    var WaitingForFunctionDefinitionBrowserWorkerSlaveState = function (_BrowserWorkerSlaveSt3) {\n        _inherits(WaitingForFunctionDefinitionBrowserWorkerSlaveState, _BrowserWorkerSlaveSt3);\n\n        function WaitingForFunctionDefinitionBrowserWorkerSlaveState(slave, task) {\n            _classCallCheck(this, WaitingForFunctionDefinitionBrowserWorkerSlaveState);\n\n            var _this4 = _possibleConstructorReturn(this, (WaitingForFunctionDefinitionBrowserWorkerSlaveState.__proto__ || Object.getPrototypeOf(WaitingForFunctionDefinitionBrowserWorkerSlaveState)).call(this, \"WaitingForFunctionDefinition\", slave));\n\n            _this4.task = task;\n            return _this4;\n        }\n\n        _createClass(WaitingForFunctionDefinitionBrowserWorkerSlaveState, [{\n            key: 'onMessage',\n            value: function onMessage(event) {\n                var message = event.data;\n                if (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__common_worker_worker_messages__[\"d\" /* isFunctionResponse */])(message)) {\n                    if (message.missingFunctions.length > 0) {\n                        var identifiers = message.missingFunctions.map(function (functionId) {\n                            return functionId.identifier;\n                        }).join(\", \");\n                        this.slave.postMessage(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__common_worker_worker_messages__[\"e\" /* functionExecutionError */])(new Error('The function ids [' + identifiers + '] could not be resolved by slave ' + this.slave.id + '.')));\n                        this.slave.changeState(new IdleBrowserWorkerSlaveState(this.slave));\n                    } else {\n                        var _iteratorNormalCompletion2 = true;\n                        var _didIteratorError2 = false;\n                        var _iteratorError2 = undefined;\n\n                        try {\n                            for (var _iterator2 = message.functions[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n                                var definition = _step2.value;\n\n                                this.slave.functionCache.registerFunction(definition);\n                            }\n                        } catch (err) {\n                            _didIteratorError2 = true;\n                            _iteratorError2 = err;\n                        } finally {\n                            try {\n                                if (!_iteratorNormalCompletion2 && _iterator2.return) {\n                                    _iterator2.return();\n                                }\n                            } finally {\n                                if (_didIteratorError2) {\n                                    throw _iteratorError2;\n                                }\n                            }\n                        }\n\n                        this.slave.changeState(new ExecuteFunctionBrowserWorkerSlaveState(this.slave, this.task));\n                    }\n                    return true;\n                }\n                return false;\n            }\n        }]);\n\n        return WaitingForFunctionDefinitionBrowserWorkerSlaveState;\n    }(BrowserWorkerSlaveState);\n    /* unused harmony export WaitingForFunctionDefinitionBrowserWorkerSlaveState */\n\n    /**\n     * The slave is executing the function\n     */\n\n\n    var ExecuteFunctionBrowserWorkerSlaveState = function (_BrowserWorkerSlaveSt4) {\n        _inherits(ExecuteFunctionBrowserWorkerSlaveState, _BrowserWorkerSlaveSt4);\n\n        function ExecuteFunctionBrowserWorkerSlaveState(slave, task) {\n            _classCallCheck(this, ExecuteFunctionBrowserWorkerSlaveState);\n\n            var _this5 = _possibleConstructorReturn(this, (ExecuteFunctionBrowserWorkerSlaveState.__proto__ || Object.getPrototypeOf(ExecuteFunctionBrowserWorkerSlaveState)).call(this, \"Executing\", slave));\n\n            _this5.task = task;\n            return _this5;\n        }\n\n        _createClass(ExecuteFunctionBrowserWorkerSlaveState, [{\n            key: 'enter',\n            value: function enter() {\n                var functionDeserializer = new __WEBPACK_IMPORTED_MODULE_0__common_function_function_call_deserializer__[\"a\" /* FunctionCallDeserializer */](this.slave.functionCache);\n                try {\n                    var main = functionDeserializer.deserializeFunctionCall(this.task.main);\n                    var result = main({ functionCallDeserializer: functionDeserializer });\n                    this.slave.postMessage(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__common_worker_worker_messages__[\"f\" /* workerResultMessage */])(result));\n                } catch (error) {\n                    this.slave.postMessage(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__common_worker_worker_messages__[\"e\" /* functionExecutionError */])(error));\n                }\n                this.slave.changeState(new IdleBrowserWorkerSlaveState(this.slave));\n            }\n        }]);\n\n        return ExecuteFunctionBrowserWorkerSlaveState;\n    }(BrowserWorkerSlaveState);\n    /* unused harmony export ExecuteFunctionBrowserWorkerSlaveState */\n\n    /***/\n},\n/* 7 */\n/***/function (module, exports, __webpack_require__) {\n\n    \"use strict\";\n    /* harmony import */\n    var __WEBPACK_IMPORTED_MODULE_0__serialized_function_call__ = __webpack_require__(1);\n\n    /**\n     * Binds the function to undefined and the given params. Uses Function.bind if available or creates its own wrapper\n     * if not.\n     * @param fn the function to bind to the given parameters\n     * @param params the parameters to which the function is partially bound\n     * @returns a partially bound function\n     */\n    function bind(fn, params) {\n        if (typeof fn.bind === \"function\") {\n            return fn.bind.apply(fn, [undefined].concat(_toConsumableArray(params)));\n        }\n        return function bound() {\n            for (var _len3 = arguments.length, additionalParams = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n                additionalParams[_key3] = arguments[_key3];\n            }\n\n            return fn.apply(undefined, params.concat(additionalParams));\n        };\n    }\n    /**\n     * Deserializer for a {@link ISerializedFunctionCall}.\n     */\n\n    var FunctionCallDeserializer = function () {\n        /**\n         * Creates a new deserializer that uses the given function lookup table to retrieve the function for a given id\n         * @param functionLookupTable the lookup table to use\n         */\n        function FunctionCallDeserializer(functionLookupTable) {\n            _classCallCheck(this, FunctionCallDeserializer);\n\n            this.functionLookupTable = functionLookupTable;\n        }\n        /**\n         * Deserializes the function call into a function\n         * @param functionCall the function call to deserialize\n         * @param deserializeParams indicator if the parameters passed to the serialized function should be deserailized too\n         * @returns a function that can be called with additional parameters (the params from the serialized function calls are prepended to the passed parameters)\n         */\n\n\n        _createClass(FunctionCallDeserializer, [{\n            key: 'deserializeFunctionCall',\n            value: function deserializeFunctionCall(functionCall) {\n                var _this6 = this;\n\n                var deserializeParams = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n                var func = this.functionLookupTable.getFunction(functionCall.functionId);\n                if (!func) {\n                    throw new Error('The function with the id ' + functionCall.functionId.identifier + ' could not be retrieved while deserializing the function call. Is the function correctly registered?');\n                }\n                var params = functionCall.parameters || [];\n                if (deserializeParams) {\n                    params = params.map(function (param) {\n                        if (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__serialized_function_call__[\"a\" /* isSerializedFunctionCall */])(param)) {\n                            return _this6.deserializeFunctionCall(param);\n                        }\n                        return param;\n                    });\n                }\n                return bind(func, params);\n            }\n        }]);\n\n        return FunctionCallDeserializer;\n    }();\n    /* harmony export (immutable) */\n\n    exports[\"a\"] = FunctionCallDeserializer;\n\n    /***/\n},\n/* 8 */\n/***/function (module, exports, __webpack_require__) {\n\n    \"use strict\";\n    /* harmony export (immutable) */\n    exports[\"a\"] = functionId;\n    /* unused harmony export isFunctionId */\n    /**\n     * @module parallel\n     */\n    /** */\n    /**\n     * Creates a function id\n     * @param namespace the namespace of the id\n     * @param id the unique id for this namespace\n     * @returns the function id\n     */\n    function functionId(namespace, id) {\n        return {\n            _______isFunctionId: true,\n            identifier: namespace + '-' + id\n        };\n    }\n    /**\n     * Tests if the given object is a function id\n     * @param obj the object to test for\n     * @returns true if the object is  a function id\n     */\n    function isFunctionId(obj) {\n        return !!obj && obj._______isFunctionId === true;\n    }\n\n    /***/\n},\n/* 9 */\n/***/function (module, exports, __webpack_require__) {\n\n    \"use strict\";\n    /* harmony export (immutable) */\n    exports[\"a\"] = filterIterator;\n    /**\n     * Returns a new iterator that only contains all elements for which the given predicate returns true\n     * @param iterator the iterator to filter\n     * @param predicate the predicate to use for filtering the elements\n     * @param env the environment of the job\n     * @param T type of the elements to filter\n     * @returns an iterator only containing the elements where the predicate is true\n     */\n    function filterIterator(iterator, predicate, env) {\n        return {\n            next: function next() {\n                var current = void 0;\n                /* tslint:disable:no-conditional-assignment */\n                while (!(current = iterator.next()).done) {\n                    if (predicate(current.value, env)) {\n                        return current;\n                    }\n                }\n                return current;\n            }\n        };\n    }\n\n    /***/\n},\n/* 10 */\n/***/function (module, exports, __webpack_require__) {\n\n    \"use strict\";\n    /* harmony export (immutable) */\n    exports[\"a\"] = mapIterator;\n    /**\n     * Performs the map operation\n     * @param iterator the iterator of the previous step\n     * @param iteratee the iteratee to apply to each element in the iterator\n     * @param env the environment of the job\n     * @param T the type of the input elements\n     * @param TResult the type of the returned element of the iteratee\n     * @returns a new iterator where each element has been mapped using the iteratee\n     */\n    function mapIterator(iterator, iteratee, env) {\n        return {\n            next: function next() {\n                var result = iterator.next();\n                if (result.done) {\n                    return { done: true };\n                }\n                return {\n                    done: result.done,\n                    value: iteratee(result.value, env)\n                };\n            }\n        };\n    }\n\n    /***/\n},\n/* 11 */\n/***/function (module, exports, __webpack_require__) {\n\n    \"use strict\";\n    /* harmony import */\n    var __WEBPACK_IMPORTED_MODULE_0__util_arrays__ = __webpack_require__(0);\n    /* harmony import */var __WEBPACK_IMPORTED_MODULE_1__function_serialized_function_call__ = __webpack_require__(1);\n    /* harmony import */var __WEBPACK_IMPORTED_MODULE_2__util_assign__ = __webpack_require__(15);\n    /* harmony export (immutable) */exports[\"a\"] = parallelJobExecutor;\n\n    function createTaskEnvironment(definition, functionCallDeserializer) {\n        var taskEnvironment = { taskIndex: definition.taskIndex, valuesPerTask: definition.valuesPerTask };\n        var _iteratorNormalCompletion3 = true;\n        var _didIteratorError3 = false;\n        var _iteratorError3 = undefined;\n\n        try {\n            for (var _iterator3 = definition.environments[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n                var environment = _step3.value;\n\n                var currentEnvironment = void 0;\n                if (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__function_serialized_function_call__[\"a\" /* isSerializedFunctionCall */])(environment)) {\n                    currentEnvironment = functionCallDeserializer.deserializeFunctionCall(environment)(taskEnvironment);\n                } else {\n                    currentEnvironment = environment;\n                }\n                taskEnvironment = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__util_assign__[\"a\" /* assign */])({}, taskEnvironment, currentEnvironment);\n            }\n        } catch (err) {\n            _didIteratorError3 = true;\n            _iteratorError3 = err;\n        } finally {\n            try {\n                if (!_iteratorNormalCompletion3 && _iterator3.return) {\n                    _iterator3.return();\n                }\n            } finally {\n                if (_didIteratorError3) {\n                    throw _iteratorError3;\n                }\n            }\n        }\n\n        return taskEnvironment;\n    }\n    /**\n     * Main coordination function for any operation performed using {@link IParallel}.\n     * @param definition the definition of the operation to performed\n     * @param options options passed from the thread pool\n     * @param T type of the elements created by the generator\n     * @param TResult type of the resulting elements\n     * @returns the result of the operation from this worker\n     */\n    function parallelJobExecutor(definition, _ref) {\n        var functionCallDeserializer = _ref.functionCallDeserializer;\n\n        var environment = createTaskEnvironment(definition, functionCallDeserializer);\n        var generatorFunction = functionCallDeserializer.deserializeFunctionCall(definition.generator, true);\n        var iterator = generatorFunction(environment);\n        var _iteratorNormalCompletion4 = true;\n        var _didIteratorError4 = false;\n        var _iteratorError4 = undefined;\n\n        try {\n            for (var _iterator4 = definition.operations[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n                var operation = _step4.value;\n\n                var iteratorFunction = functionCallDeserializer.deserializeFunctionCall(operation.iterator);\n                var iteratee = functionCallDeserializer.deserializeFunctionCall(operation.iteratee);\n                iterator = iteratorFunction(iterator, iteratee, environment);\n            }\n        } catch (err) {\n            _didIteratorError4 = true;\n            _iteratorError4 = err;\n        } finally {\n            try {\n                if (!_iteratorNormalCompletion4 && _iterator4.return) {\n                    _iterator4.return();\n                }\n            } finally {\n                if (_didIteratorError4) {\n                    throw _iteratorError4;\n                }\n            }\n        }\n\n        return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util_arrays__[\"a\" /* toArray */])(iterator);\n    }\n\n    /***/\n},\n/* 12 */\n/***/function (module, exports, __webpack_require__) {\n\n    \"use strict\";\n    /* harmony import */\n    var __WEBPACK_IMPORTED_MODULE_0__function_function_id__ = __webpack_require__(8);\n\n    var ParallelWorkerFunctionIds = {\n        FILTER: __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__function_function_id__[\"a\" /* functionId */])(\"parallel\", 0),\n        IDENTITY: __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__function_function_id__[\"a\" /* functionId */])(\"parallel\", 1),\n        MAP: __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__function_function_id__[\"a\" /* functionId */])(\"parallel\", 2),\n        PARALLEL_JOB_EXECUTOR: __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__function_function_id__[\"a\" /* functionId */])(\"parallel\", 3),\n        RANGE: __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__function_function_id__[\"a\" /* functionId */])(\"parallel\", 4),\n        REDUCE: __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__function_function_id__[\"a\" /* functionId */])(\"parallel\", 5),\n        TIMES: __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__function_function_id__[\"a\" /* functionId */])(\"parallel\", 6),\n        TO_ITERATOR: __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__function_function_id__[\"a\" /* functionId */])(\"parallel\", 7)\n    };\n    /* harmony export (immutable) */exports[\"a\"] = ParallelWorkerFunctionIds;\n\n    /***/\n},\n/* 13 */\n/***/function (module, exports, __webpack_require__) {\n\n    \"use strict\";\n    /* harmony export (immutable) */\n    exports[\"a\"] = rangeIterator;\n    /**\n     * Generator function that creates an iterator containing all elements in the range [start, end) with a step size of step.\n     * @param start start value of the range (inclusive)\n     * @param end end value of the range (exclusive)\n     * @param step step size between two values\n     * @returns iterator with the values [start, end)\n     */\n    /**\n     * Generator function that creates an iterator containing all elements in the range [start, end) with a step size of step.\n     * @param start start value of the range (inclusive)\n     * @param end end value of the range (exclusive)\n     * @param step step size between two values\n     * @returns iterator with the values [start, end)\n     */function rangeIterator(start, end, step) {\n        var distance = end - start;\n        var length = Math.max(Math.floor(distance / (step || 1)), 0);\n        var _next = start;\n        return {\n            next: function next() {\n                var current = _next;\n                _next = _next + step;\n                if (length-- !== 0) {\n                    return { done: false, value: current };\n                }\n                return { done: true };\n            }\n        };\n    }\n\n    /***/\n},\n/* 14 */\n/***/function (module, exports, __webpack_require__) {\n\n    \"use strict\";\n    /* harmony import */\n    var __WEBPACK_IMPORTED_MODULE_0__util_arrays__ = __webpack_require__(0);\n    /* harmony export (immutable) */exports[\"a\"] = reduceIterator;\n\n    /**\n     * Reduces the elements of the given iterator to a single value by applying the given iteratee to each element\n     * @param defaultValue a default value that is as accumulator or for the case that the iterator is empty\n     * @param iterator the iterator with the values to reduce\n     * @param iteratee iteratee that is applied for each element. The iteratee is passed the accumulated value (sum of all previous values)\n     * and the current element and has to return a new accumulated value.\n     * @param env the environment of the job\n     * @param T type of the elements to process\n     * @param TResult type of the reduced value\n     * @returns an array with a single value, the reduced value\n     */\n    function reduceIterator(defaultValue, iterator, iteratee, env) {\n        var accumulatedValue = defaultValue;\n        var current = void 0;\n        /* tslint:disable:no-conditional-assignment */\n        while (!(current = iterator.next()).done) {\n            accumulatedValue = iteratee(accumulatedValue, current.value, env);\n        }\n        return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util_arrays__[\"b\" /* toIterator */])([accumulatedValue]);\n    }\n\n    /***/\n},\n/* 15 */\n/***/function (module, exports, __webpack_require__) {\n\n    \"use strict\";\n    /* harmony export (immutable) */\n    exports[\"a\"] = assign;\n    /**\n     * Polyfill for Object.assign\n     * @param target target object\n     * @param sources source object to copy into targetk\n     */\n    function assign(target) {\n        for (var _len4 = arguments.length, sources = Array(_len4 > 1 ? _len4 - 1 : 0), _key4 = 1; _key4 < _len4; _key4++) {\n            sources[_key4 - 1] = arguments[_key4];\n        }\n\n        if (target == null) {\n            throw new TypeError(\"Cannot convert undefined or null to object\");\n        }\n        target = Object(target);\n        for (var index = 1; index < arguments.length; index++) {\n            var source = arguments[index];\n            if (source != null) {\n                for (var key in source) {\n                    if (Object.prototype.hasOwnProperty.call(source, key)) {\n                        target[key] = source[key];\n                    }\n                }\n            }\n        }\n        return target;\n    }\n\n    /***/\n},\n/* 16 */\n/***/function (module, exports, __webpack_require__) {\n\n    \"use strict\";\n    /* harmony export (immutable) */\n    exports[\"a\"] = identity;\n    /**\n     * identity function. Returns the passed in value\n     * @param element the value to return\n     * @param T type of the element\n     */\n    /**\n     * identity function. Returns the passed in value\n     * @param element the value to return\n     * @param T type of the element\n     */function identity(element) {\n        return element;\n    }\n\n    /***/\n},\n/* 17 */\n/***/function (module, exports, __webpack_require__) {\n\n    \"use strict\";\n    /**\n     * A very simple implementation of a map. Do not use with complex objects as Key.\n     * @param K type of the key\n     * @param V type of the value\n     */\n    /**\n     * A very simple implementation of a map. Do not use with complex objects as Key.\n     * @param K type of the key\n     * @param V type of the value\n     */\n\n    var SimpleMap = function () {\n        function SimpleMap() {\n            _classCallCheck(this, SimpleMap);\n\n            this.data = {};\n        }\n        /**\n         * Gets the value for the given key if available\n         * @param key the key to look up\n         * @returns the looked up value or undefined if the map does not contain any value associated with the given key\n         */\n\n\n        _createClass(SimpleMap, [{\n            key: 'get',\n            value: function get(key) {\n                var internalKey = this.toInternalKey(key);\n                return this.has(key) ? this.data[internalKey] : undefined;\n            }\n            /**\n             * Tests if the map contains value stored by the given key\n             * @param key the key\n             * @returns true if the map contains a value by the given key, false otherwise\n             */\n\n        }, {\n            key: 'has',\n            value: function has(key) {\n                return this.hasOwnProperty.call(this.data, this.toInternalKey(key));\n            }\n            /**\n             * Sets the value for the given key. If the map already contains a value stored by the given key, then this value is\n             * overridden\n             * @param key the key\n             * @param value the value to associate with the given key\n             */\n\n        }, {\n            key: 'set',\n            value: function set(key, value) {\n                this.data[this.toInternalKey(key)] = value;\n            }\n            /**\n             * Clears all values from the map\n             */\n\n        }, {\n            key: 'clear',\n            value: function clear() {\n                this.data = {};\n            }\n        }, {\n            key: 'toInternalKey',\n            value: function toInternalKey(key) {\n                return '@' + key;\n            }\n        }]);\n\n        return SimpleMap;\n    }();\n    /* harmony export (immutable) */\n\n    exports[\"a\"] = SimpleMap;\n\n    /***/\n},\n/* 18 */\n/***/function (module, exports, __webpack_require__) {\n\n    \"use strict\";\n    /* harmony import */\n    var __WEBPACK_IMPORTED_MODULE_0__browser_worker_slave__ = __webpack_require__(3);\n    /* harmony import */var __WEBPACK_IMPORTED_MODULE_1__common_function_slave_function_lookup_table__ = __webpack_require__(4);\n    /* harmony import */var __WEBPACK_IMPORTED_MODULE_2__common_parallel_slave_register_parallel_worker_functions__ = __webpack_require__(5);\n\n    var slaveFunctionLookupTable = new __WEBPACK_IMPORTED_MODULE_1__common_function_slave_function_lookup_table__[\"a\" /* SlaveFunctionLookupTable */]();\n    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__common_parallel_slave_register_parallel_worker_functions__[\"a\" /* registerStaticParallelFunctions */])(slaveFunctionLookupTable);\n\n    /*/home/travis/build/MichaReiser/parallel-es-example/src/transpiled/mandelbrot.ts*/(function () {\n        var iterations = void 0,\n            imageWidth = void 0,\n            max = void 0,\n            scalingFactor = void 0,\n            min = void 0;\n\n        function _computeMandelbrotLin(y) {\n            // Function inline is up to 30% faster than if the function is not inline\n            // https://jsperf.com/mandelbrot-env3 https://jsperf.com/mandelbrot-env4\n            function calculateZ(c) {\n                var z = { i: c.i, real: c.real };var n = 0;for (; n < iterations; ++n) {\n                    if (Math.pow(z.real, 2) + Math.pow(z.i, 2) > 4) {\n                        break;\n                    } // z ** 2 + c\n                    var zI = z.i;z.i = 2 * z.real * z.i + c.i;z.real = Math.pow(z.real, 2) - Math.pow(zI, 2) + c.real;\n                }return n;\n            }var line = new Uint8ClampedArray(imageWidth * 4);var cI = max.i - y * scalingFactor.i;for (var x = 0; x < imageWidth; ++x) {\n                var c = { i: cI, real: min.real + x * scalingFactor.real };var n = calculateZ(c);var base = x * 4; /* tslint:disable:no-bitwise */line[base] = n & 0xFF;line[base + 1] = n & 0xFF00;line[base + 2] = n & 0xFF0000;line[base + 3] = 255;\n            }return line;\n        }\n\n        function _entry_computeMandelbrotLin() {\n            try {\n                var _environment = arguments[arguments.length - 1];\n                iterations = _environment.iterations;\n                imageWidth = _environment.imageWidth;\n                max = _environment.max;\n                scalingFactor = _environment.scalingFactor;\n                min = _environment.min;\n                return _computeMandelbrotLin.apply(this, arguments);\n            } finally {\n                iterations = undefined;\n                imageWidth = undefined;\n                max = undefined;\n                scalingFactor = undefined;\n                min = undefined;\n            }\n        }\n\n        slaveFunctionLookupTable.registerStaticFunction({\n            identifier: 'static:/home/travis/build/MichaReiser/parallel-es-example/src/transpiled/mandelbrot.ts/_entry_computeMandelbrotLin',\n            _______isFunctionId: true\n        }, _entry_computeMandelbrotLin);\n    })();\n\n    /*/home/travis/build/MichaReiser/parallel-es-example/src/transpiled/knights-tour.ts*/(function () {\n        var moves = void 0;\n\n        function _anonymous(memo, count) {\n            return memo + count;\n        }\n\n        function visitField(field, n, board) {\n            var boardSize = Math.sqrt(board.length);if (n === board.length) {\n                return 1;\n            }var result = 0;var fieldIndex = field.x * boardSize + field.y;board[fieldIndex] = n;for (var i = 0; i < moves.length; ++i) {\n                var move = moves[i];var successor = { x: field.x + move.x, y: field.y + move.y }; // not outside of board and not yet accessed\n                var accessible = successor.x >= 0 && successor.y >= 0 && successor.x < boardSize && successor.y < boardSize && board[successor.x * boardSize + successor.y] === 0;if (accessible) {\n                    result += visitField(successor, n + 1, board);\n                }\n            }board[fieldIndex] = 0;return result;\n        }function knightTours(startPath, _ref) {\n            var boardSize = _ref.boardSize;\n            var board = new Array(boardSize * boardSize);board.fill(0);for (var index = 0; index < startPath.length - 1; ++index) {\n                var fieldIndex = startPath[index].x * boardSize + startPath[index].y;board[fieldIndex] = index + 1;\n            }return visitField(startPath[startPath.length - 1], startPath.length, board);\n        }\n        function _entryknightTours() {\n            try {\n                var _environment = arguments[arguments.length - 1];\n                moves = _environment.moves;\n                return knightTours.apply(this, arguments);\n            } finally {\n                moves = undefined;\n            }\n        }\n\n        slaveFunctionLookupTable.registerStaticFunction({\n            identifier: 'static:/home/travis/build/MichaReiser/parallel-es-example/src/transpiled/knights-tour.ts/_anonymous',\n            _______isFunctionId: true\n        }, _anonymous);\n        slaveFunctionLookupTable.registerStaticFunction({\n            identifier: 'static:/home/travis/build/MichaReiser/parallel-es-example/src/transpiled/knights-tour.ts/_entryknightTours',\n            _______isFunctionId: true\n        }, _entryknightTours);\n    })();\n\n    /*/home/travis/build/MichaReiser/parallel-es-example/src/transpiled/monte-carlo.ts*/(function () {\n        function calculateRequiredAmount(project, environment) {\n            var amount = project.totalAmount;var projectsSameYear = environment.projectsByStartYear[project.startYear];for (var _iterator2 = projectsSameYear, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {\n                var _ref2;\n\n                if (_isArray2) {\n                    if (_i2 >= _iterator2.length) break;\n                    _ref2 = _iterator2[_i2++];\n                } else {\n                    _i2 = _iterator2.next();\n                    if (_i2.done) break;\n                    _ref2 = _i2.value;\n                }\n\n                var otherProject = _ref2;\n                if (otherProject === project) {\n                    break;\n                }amount += otherProject.totalAmount;\n            }return amount;\n        }function compareNumbersInverse(a, b) {\n            return a - b;\n        }function createGroups(requiredAmount, noInterestReference, environment) {\n            return [{ description: \"Ziel erreichbar\", from: requiredAmount, name: \"green\", percentage: 0, separator: true }, { description: \"mit Zusatzliquidität erreichbar\", from: requiredAmount - environment.liquidity, name: \"yellow\", percentage: 0, separator: true, to: requiredAmount }, { description: \"nicht erreichbar\", from: noInterestReference, name: \"gray\", percentage: 0, separator: false, to: requiredAmount - environment.liquidity }, { description: \"nicht erreichbar, mit Verlust\", name: \"red\", percentage: 0, separator: false, to: noInterestReference }];\n        }function groupForValue(value, groups) {\n            return groups.find(function (group) {\n                return (typeof group.from === \"undefined\" || group.from <= value) && (typeof group.to === \"undefined\" || group.to > value);\n            });\n        }function computeBucket(bucketStart, bucketSize, simulatedValuesThisYear, groups, valuesByGroup) {\n            var bucket = { max: Number.MIN_SAFE_INTEGER, min: Number.MAX_SAFE_INTEGER, // Needed to avoid deoptimization because of changed attribute orders in subBuckets. Initialize with const order\n                subBuckets: { green: { group: \"green\", max: Number.MIN_SAFE_INTEGER, min: Number.MAX_SAFE_INTEGER, empty: true }, yellow: { group: \"yellow\", max: Number.MIN_SAFE_INTEGER, min: Number.MAX_SAFE_INTEGER, empty: true }, gray: { group: \"gray\", max: Number.MIN_SAFE_INTEGER, min: Number.MAX_SAFE_INTEGER, empty: true }, red: { group: \"red\", max: Number.MIN_SAFE_INTEGER, min: Number.MAX_SAFE_INTEGER, empty: true } } };var bucketEnd = bucketStart + bucketSize;for (var j = bucketStart; j < bucketEnd; ++j) {\n                var value = simulatedValuesThisYear[j];bucket.min = Math.min(bucket.min, value);bucket.max = Math.max(bucket.max, value);var group = groupForValue(simulatedValuesThisYear[j], groups);++valuesByGroup[group.name];var subBucket = bucket.subBuckets[group.name];subBucket.min = Math.min(subBucket.min, value);subBucket.max = Math.max(subBucket.max, value);subBucket.empty = false;\n            }return bucket;\n        }function computeBuckets(groups, simulatedValuesThisYear) {\n            var NUMBER_OF_BUCKETS = 10;var valuesByGroup = { green: 0, yellow: 0, gray: 0, red: 0 };var bucketSize = Math.round(simulatedValuesThisYear.length / NUMBER_OF_BUCKETS);var buckets = [];for (var i = 0; i < simulatedValuesThisYear.length; i += bucketSize) {\n                var bucket = computeBucket(i, bucketSize, simulatedValuesThisYear, groups, valuesByGroup);buckets.push(bucket);\n            }return { buckets: buckets, valuesByGroup: valuesByGroup };\n        }function median(values) {\n            var half = Math.floor(values.length / 2);if (values.length % 2) {\n                return values[half];\n            }return (values[half - 1] + values[half]) / 2.0;\n        }function calculateProject(project, environment) {\n            var requiredAmount = calculateRequiredAmount(project, environment);var simulatedValuesThisYear = environment.simulatedValues[project.startYear];simulatedValuesThisYear.sort(compareNumbersInverse);var groups = createGroups(requiredAmount, environment.noInterestReferenceLine[project.startYear], environment);\n            var _computeBuckets = computeBuckets(groups, simulatedValuesThisYear),\n                buckets = _computeBuckets.buckets,\n                valuesByGroup = _computeBuckets.valuesByGroup;\n\n            var nonEmptyGroups = groups.filter(function (group) {\n                return !!valuesByGroup[group.name];\n            });nonEmptyGroups.forEach(function (group) {\n                return group.percentage = valuesByGroup[group.name] / simulatedValuesThisYear.length;\n            });var oneSixth = Math.round(simulatedValuesThisYear.length / 6);return { buckets: buckets, groups: nonEmptyGroups, max: simulatedValuesThisYear[simulatedValuesThisYear.length - 1], median: median(simulatedValuesThisYear), min: simulatedValuesThisYear[0], project: project, twoThird: { max: simulatedValuesThisYear[simulatedValuesThisYear.length - oneSixth], min: simulatedValuesThisYear[oneSixth] } };\n        }function toAbsoluteIndices(indices, cashFlows, investmentAmount) {\n            var absolute = new Array(indices.length);var currentPortfolioValue = investmentAmount;var previousYearIndex = 100;for (var relativeYear = 0; relativeYear < indices.length; ++relativeYear) {\n                var currentYearIndex = indices[relativeYear];var cashFlowStartOfYear = relativeYear === 0 ? 0 : cashFlows[relativeYear - 1];var performance = currentYearIndex / previousYearIndex;currentPortfolioValue = (currentPortfolioValue + cashFlowStartOfYear) * performance;absolute[relativeYear] = Math.round(currentPortfolioValue);previousYearIndex = currentYearIndex;\n            }return absolute;\n        }function simulateSingleAbsoluteOutcome(numYears, cashFlows, options, random) {\n            var indices = new Array(numYears + 1);indices[0] = 100;for (var i = 0; i < numYears; ++i) {\n                var randomPerformance = 1 + random.normal(options.performance, options.volatility);indices[i + 1] = indices[i] * randomPerformance;\n            } // convert the relative values from above to absolute values.\n            return toAbsoluteIndices(indices, cashFlows, options.investmentAmount);\n        } /**\n           * Performs the monte carlo simulation for all years and num runs.\n           * @param cashFlows the cash flows\n           * @param numYears the number of years to simulate\n           * @returns {number[][]} the simulated outcomes grouped by year\n           */function simulateOutcomes(cashFlows, numYears, options) {\n            var random = new __WEBPACK_IMPORTED_MODULE_0_simjs_random___default.a(10);var result = new Array(numYears);for (var year = 0; year <= numYears; ++year) {\n                result[year] = new Array(options.numRuns);\n            }for (var run = 0; run < options.numRuns; ++run) {\n                var indices = simulateSingleAbsoluteOutcome(numYears, cashFlows, options, random);for (var _year = 0; _year < indices.length; ++_year) {\n                    result[_year][run] = indices[_year];\n                }\n            }return result;\n        }function createMonteCarloEnvironment(options, taskEnvironment) {\n            function projectsToCashFlows(numYears) {\n                var cashFlows = [];for (var year = 0; year < numYears; ++year) {\n                    var projectsByThisYear = projectsByStartYear[year] || [];var cashFlow = -projectsByThisYear.reduce(function (memo, project) {\n                        return memo + project.totalAmount;\n                    }, 0);cashFlows.push(cashFlow);\n                }return cashFlows;\n            }function calculateNoInterestReferenceLine(cashFlows, numYears) {\n                var noInterestReferenceLine = [];var investmentAmountLeft = options.investmentAmount;for (var year = 0; year < numYears; ++year) {\n                    investmentAmountLeft = investmentAmountLeft + cashFlows[year];noInterestReferenceLine.push(investmentAmountLeft);\n                }return noInterestReferenceLine;\n            }var projectsToSimulate = options.projects;if (taskEnvironment) {\n                projectsToSimulate = options.projects.slice(taskEnvironment.taskIndex * taskEnvironment.valuesPerTask, (taskEnvironment.taskIndex + 1) * taskEnvironment.valuesPerTask);\n            }var projects = options.projects.sort(function (a, b) {\n                return a.startYear - b.startYear;\n            }); // Group projects by startYear, use lodash groupBy instead\n            var projectsByStartYear = {};for (var _iterator = projects, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n                var _ref;\n\n                if (_isArray) {\n                    if (_i >= _iterator.length) break;\n                    _ref = _iterator[_i++];\n                } else {\n                    _i = _iterator.next();\n                    if (_i.done) break;\n                    _ref = _i.value;\n                }\n\n                var project = _ref;\n                var arr = projectsByStartYear[project.startYear] = projectsByStartYear[project.startYear] || [];arr.push(project);\n            }var numYears = projectsToSimulate.reduce(function (memo, project) {\n                return Math.max(memo, project.startYear);\n            }, 0);var cashFlows = projectsToCashFlows(numYears);var noInterestReferenceLine = calculateNoInterestReferenceLine(cashFlows, numYears);return { investmentAmount: options.investmentAmount, liquidity: options.liquidity, noInterestReferenceLine: noInterestReferenceLine, numRuns: options.numRuns, numYears: numYears, projectsByStartYear: projectsByStartYear, simulatedValues: simulateOutcomes(cashFlows, numYears, options) };\n        }slaveFunctionLookupTable.registerStaticFunction({\n            identifier: 'static:/home/travis/build/MichaReiser/parallel-es-example/src/transpiled/monte-carlo.ts/calculateProject',\n            _______isFunctionId: true\n        }, calculateProject);\n        slaveFunctionLookupTable.registerStaticFunction({\n            identifier: 'static:/home/travis/build/MichaReiser/parallel-es-example/src/transpiled/monte-carlo.ts/createMonteCarloEnvironment',\n            _______isFunctionId: true\n        }, createMonteCarloEnvironment);\n    })();\n\n    var slave = new __WEBPACK_IMPORTED_MODULE_0__browser_worker_slave__[\"a\" /* BrowserWorkerSlave */](slaveFunctionLookupTable);\n    onmessage = function onmessage() {\n        slave.onMessage.apply(slave, arguments);\n    };\n\n    /***/\n}\n/******/]);\n\n/***/ }\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// worker-slave.parallel.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmory imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmory exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tObject.defineProperty(exports, name, {\n \t\t\tconfigurable: false,\n \t\t\tenumerable: true,\n \t\t\tget: getter\n \t\t});\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 0640d048e5724c2c8965","/*!\n * Random.js version 0.2.6\n * curl http://simjs.com/_downloads/random-0.26-debug.js\n */\n\n /** Random.js library.\n *\n * The code is licensed as LGPL.\n*/\n\n/*\n   A C-program for MT19937, with initialization improved 2002/1/26.\n   Coded by Takuji Nishimura and Makoto Matsumoto.\n\n   Before using, initialize the state by using init_genrand(seed)\n   or init_by_array(init_key, key_length).\n\n   Copyright (C) 1997 - 2002, Makoto Matsumoto and Takuji Nishimura,\n   All rights reserved.\n\n   Redistribution and use in source and binary forms, with or without\n   modification, are permitted provided that the following conditions\n   are met:\n\n     1. Redistributions of source code must retain the above copyright\n        notice, this list of conditions and the following disclaimer.\n\n     2. Redistributions in binary form must reproduce the above copyright\n        notice, this list of conditions and the following disclaimer in the\n        documentation and/or other materials provided with the distribution.\n\n     3. The names of its contributors may not be used to endorse or promote\n        products derived from this software without specific prior written\n        permission.\n\n   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n   \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n   LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n   A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR\n   CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n   EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n   PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n   PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n   LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n   NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n\n   Any feedback is very welcome.\n   http://www.math.sci.hiroshima-u.ac.jp/~m-mat/MT/emt.html\n   email: m-mat @ math.sci.hiroshima-u.ac.jp (remove space)\n */\n\nvar Random = function(seed) {\n\tseed = (seed === undefined) ? (new Date()).getTime() : seed;\n\tif (typeof(seed) !== 'number'                             // ARG_CHECK\n\t\t|| Math.ceil(seed) != Math.floor(seed)) {             // ARG_CHECK\n\t\tthrow new TypeError(\"seed value must be an integer\"); // ARG_CHECK\n\t}                                                         // ARG_CHECK\n\n\n\t/* Period parameters */\n\tthis.N = 624;\n\tthis.M = 397;\n\tthis.MATRIX_A = 0x9908b0df;   /* constant vector a */\n\tthis.UPPER_MASK = 0x80000000; /* most significant w-r bits */\n\tthis.LOWER_MASK = 0x7fffffff; /* least significant r bits */\n\n\tthis.mt = new Array(this.N); /* the array for the state vector */\n\tthis.mti=this.N+1; /* mti==N+1 means mt[N] is not initialized */\n\n\t//this.init_genrand(seed);\n\tthis.init_by_array([seed], 1);\n};\n\n/* initializes mt[N] with a seed */\nRandom.prototype.init_genrand = function(s) {\n\tthis.mt[0] = s >>> 0;\n\tfor (this.mti=1; this.mti<this.N; this.mti++) {\n\t\tvar s = this.mt[this.mti-1] ^ (this.mt[this.mti-1] >>> 30);\n\t\tthis.mt[this.mti] = (((((s & 0xffff0000) >>> 16) * 1812433253) << 16) + (s & 0x0000ffff) * 1812433253)\n\t\t+ this.mti;\n\t\t/* See Knuth TAOCP Vol2. 3rd Ed. P.106 for multiplier. */\n\t\t/* In the previous versions, MSBs of the seed affect   */\n\t\t/* only MSBs of the array mt[].                        */\n\t\t/* 2002/01/09 modified by Makoto Matsumoto             */\n\t\tthis.mt[this.mti] >>>= 0;\n\t\t/* for >32 bit machines */\n\t}\n};\n\n/* initialize by an array with array-length */\n/* init_key is the array for initializing keys */\n/* key_length is its length */\n/* slight change for C++, 2004/2/26 */\nRandom.prototype.init_by_array = function(init_key, key_length) {\n\tvar i, j, k;\n\tthis.init_genrand(19650218);\n\ti=1; j=0;\n\tk = (this.N>key_length ? this.N : key_length);\n\tfor (; k; k--) {\n\t\tvar s = this.mt[i-1] ^ (this.mt[i-1] >>> 30);\n\t\tthis.mt[i] = (this.mt[i] ^ (((((s & 0xffff0000) >>> 16) * 1664525) << 16) + ((s & 0x0000ffff) * 1664525)))\n\t\t+ init_key[j] + j; /* non linear */\n\t\tthis.mt[i] >>>= 0; /* for WORDSIZE > 32 machines */\n\t\ti++; j++;\n\t\tif (i>=this.N) { this.mt[0] = this.mt[this.N-1]; i=1; }\n\t\tif (j>=key_length) j=0;\n\t}\n\tfor (k=this.N-1; k; k--) {\n\t\tvar s = this.mt[i-1] ^ (this.mt[i-1] >>> 30);\n\t\tthis.mt[i] = (this.mt[i] ^ (((((s & 0xffff0000) >>> 16) * 1566083941) << 16) + (s & 0x0000ffff) * 1566083941))\n\t\t- i; /* non linear */\n\t\tthis.mt[i] >>>= 0; /* for WORDSIZE > 32 machines */\n\t\ti++;\n\t\tif (i>=this.N) { this.mt[0] = this.mt[this.N-1]; i=1; }\n\t}\n\n\tthis.mt[0] = 0x80000000; /* MSB is 1; assuring non-zero initial array */\n};\n\n/* generates a random number on [0,0xffffffff]-interval */\nRandom.prototype.genrand_int32 = function() {\n\tvar y;\n\tvar mag01 = new Array(0x0, this.MATRIX_A);\n\t/* mag01[x] = x * MATRIX_A  for x=0,1 */\n\n\tif (this.mti >= this.N) { /* generate N words at one time */\n\t\tvar kk;\n\n\t\tif (this.mti == this.N+1)   /* if init_genrand() has not been called, */\n\t\t\tthis.init_genrand(5489); /* a default initial seed is used */\n\n\t\tfor (kk=0;kk<this.N-this.M;kk++) {\n\t\t\ty = (this.mt[kk]&this.UPPER_MASK)|(this.mt[kk+1]&this.LOWER_MASK);\n\t\t\tthis.mt[kk] = this.mt[kk+this.M] ^ (y >>> 1) ^ mag01[y & 0x1];\n\t\t}\n\t\tfor (;kk<this.N-1;kk++) {\n\t\t\ty = (this.mt[kk]&this.UPPER_MASK)|(this.mt[kk+1]&this.LOWER_MASK);\n\t\t\tthis.mt[kk] = this.mt[kk+(this.M-this.N)] ^ (y >>> 1) ^ mag01[y & 0x1];\n\t\t}\n\t\ty = (this.mt[this.N-1]&this.UPPER_MASK)|(this.mt[0]&this.LOWER_MASK);\n\t\tthis.mt[this.N-1] = this.mt[this.M-1] ^ (y >>> 1) ^ mag01[y & 0x1];\n\n\t\tthis.mti = 0;\n\t}\n\n\ty = this.mt[this.mti++];\n\n\t/* Tempering */\n\ty ^= (y >>> 11);\n\ty ^= (y << 7) & 0x9d2c5680;\n\ty ^= (y << 15) & 0xefc60000;\n\ty ^= (y >>> 18);\n\n\treturn y >>> 0;\n};\n\n/* generates a random number on [0,0x7fffffff]-interval */\nRandom.prototype.genrand_int31 = function() {\n\treturn (this.genrand_int32()>>>1);\n};\n\n/* generates a random number on [0,1]-real-interval */\nRandom.prototype.genrand_real1 = function() {\n\treturn this.genrand_int32()*(1.0/4294967295.0);\n\t/* divided by 2^32-1 */\n};\n\n/* generates a random number on [0,1)-real-interval */\nRandom.prototype.random = function() {\n\tif (this.pythonCompatibility) {\n\t\tif (this.skip) {\n\t\t\tthis.genrand_int32();\n\t\t}\n\t\tthis.skip = true;\n\t}\n\treturn this.genrand_int32()*(1.0/4294967296.0);\n\t/* divided by 2^32 */\n};\n\n/* generates a random number on (0,1)-real-interval */\nRandom.prototype.genrand_real3 = function() {\n\treturn (this.genrand_int32() + 0.5)*(1.0/4294967296.0);\n\t/* divided by 2^32 */\n};\n\n/* generates a random number on [0,1) with 53-bit resolution*/\nRandom.prototype.genrand_res53 = function() {\n\tvar a=this.genrand_int32()>>>5, b=this.genrand_int32()>>>6;\n\treturn(a*67108864.0+b)*(1.0/9007199254740992.0);\n};\n\n/* These real versions are due to Isaku Wada, 2002/01/09 added */\n\n\n/**************************************************************************/\nRandom.prototype.LOG4 = Math.log(4.0);\nRandom.prototype.SG_MAGICCONST = 1.0 + Math.log(4.5);\n\nRandom.prototype.exponential = function (lambda) {\n\tif (arguments.length != 1) {                         // ARG_CHECK\n\t\tthrow new SyntaxError(\"exponential() must \"     // ARG_CHECK\n\t\t\t\t+ \" be called with 'lambda' parameter\"); // ARG_CHECK\n\t}                                                   // ARG_CHECK\n\n\tvar r = this.random();\n\treturn -Math.log(r) / lambda;\n};\n\nRandom.prototype.gamma = function (alpha, beta) {\n\tif (arguments.length != 2) {                         // ARG_CHECK\n\t\tthrow new SyntaxError(\"gamma() must be called\"  // ARG_CHECK\n\t\t\t\t+ \" with alpha and beta parameters\"); // ARG_CHECK\n\t}                                                   // ARG_CHECK\n\n\t/* Based on Python 2.6 source code of random.py.\n\t */\n\n\tif (alpha > 1.0) {\n\t\tvar ainv = Math.sqrt(2.0 * alpha - 1.0);\n\t\tvar bbb = alpha - this.LOG4;\n\t\tvar ccc = alpha + ainv;\n\n\t\twhile (true) {\n\t\t\tvar u1 = this.random();\n\t\t\tif ((u1 < 1e-7) || (u > 0.9999999)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tvar u2 = 1.0 - this.random();\n\t\t\tvar v = Math.log(u1 / (1.0 - u1)) / ainv;\n\t\t\tvar x = alpha * Math.exp(v);\n\t\t\tvar z = u1 * u1 * u2;\n\t\t\tvar r = bbb + ccc * v - x;\n\t\t\tif ((r + this.SG_MAGICCONST - 4.5 * z >= 0.0) || (r >= Math.log(z))) {\n\t\t\t\treturn x * beta;\n\t\t\t}\n\t\t}\n\t} else if (alpha == 1.0) {\n\t\tvar u = this.random();\n\t\twhile (u <= 1e-7) {\n\t\t\tu = this.random();\n\t\t}\n\t\treturn - Math.log(u) * beta;\n\t} else {\n\t\twhile (true) {\n\t\t\tvar u = this.random();\n\t\t\tvar b = (Math.E + alpha) / Math.E;\n\t\t\tvar p = b * u;\n\t\t\tif (p <= 1.0) {\n\t\t\t\tvar x = Math.pow(p, 1.0 / alpha);\n\t\t\t} else {\n\t\t\t\tvar x = - Math.log((b - p) / alpha);\n\t\t\t}\n\t\t\tvar u1 = this.random();\n\t\t\tif (p > 1.0) {\n\t\t\t\tif (u1 <= Math.pow(x, (alpha - 1.0))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else if (u1 <= Math.exp(-x)) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn x * beta;\n\t}\n\n};\n\nRandom.prototype.normal = function (mu, sigma) {\n\tif (arguments.length != 2) {                          // ARG_CHECK\n\t\tthrow new SyntaxError(\"normal() must be called\"  // ARG_CHECK\n\t\t\t\t+ \" with mu and sigma parameters\");      // ARG_CHECK\n\t}                                                    // ARG_CHECK\n\n\tvar z = this.lastNormal;\n\tthis.lastNormal = NaN;\n\tif (!z) {\n\t\tvar a = this.random() * 2 * Math.PI;\n\t\tvar b = Math.sqrt(-2.0 * Math.log(1.0 - this.random()));\n\t\tz = Math.cos(a) * b;\n\t\tthis.lastNormal = Math.sin(a) * b;\n\t}\n\treturn mu + z * sigma;\n};\n\nRandom.prototype.pareto = function (alpha) {\n\tif (arguments.length != 1) {                         // ARG_CHECK\n\t\tthrow new SyntaxError(\"pareto() must be called\" // ARG_CHECK\n\t\t\t\t+ \" with alpha parameter\");             // ARG_CHECK\n\t}                                                   // ARG_CHECK\n\n\tvar u = this.random();\n\treturn 1.0 / Math.pow((1 - u), 1.0 / alpha);\n};\n\nRandom.prototype.triangular = function (lower, upper, mode) {\n\t// http://en.wikipedia.org/wiki/Triangular_distribution\n\tif (arguments.length != 3) {                         // ARG_CHECK\n\t\tthrow new SyntaxError(\"triangular() must be called\" // ARG_CHECK\n\t\t+ \" with lower, upper and mode parameters\");    // ARG_CHECK\n\t}                                                   // ARG_CHECK\n\n\tvar c = (mode - lower) / (upper - lower);\n\tvar u = this.random();\n\n\tif (u <= c) {\n\t\treturn lower + Math.sqrt(u * (upper - lower) * (mode - lower));\n\t} else {\n\t\treturn upper - Math.sqrt((1 - u) * (upper - lower) * (upper - mode));\n\t}\n};\n\nRandom.prototype.uniform = function (lower, upper) {\n\tif (arguments.length != 2) {                         // ARG_CHECK\n\t\tthrow new SyntaxError(\"uniform() must be called\" // ARG_CHECK\n\t\t+ \" with lower and upper parameters\");    // ARG_CHECK\n\t}                                                   // ARG_CHECK\n\treturn lower + this.random() * (upper - lower);\n};\n\nRandom.prototype.weibull = function (alpha, beta) {\n\tif (arguments.length != 2) {                         // ARG_CHECK\n\t\tthrow new SyntaxError(\"weibull() must be called\" // ARG_CHECK\n\t\t+ \" with alpha and beta parameters\");    // ARG_CHECK\n\t}                                                   // ARG_CHECK\n\tvar u = 1.0 - this.random();\n\treturn alpha * Math.pow(-Math.log(u), 1.0 / beta);\n};\n\nmodule.exports = Random;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/simjs-random/simjs-random.js\n// module id = 0\n// module chunks = 0"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmory imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmory exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tObject.defineProperty(exports, name, {\n \t\t\tconfigurable: false,\n \t\t\tenumerable: true,\n \t\t\tget: getter\n \t\t});\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 18);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 4741d80d2fbbed2965b7\n\n\n// WEBPACK FOOTER //\n// ./webpack:/webpack/bootstrap 4741d80d2fbbed2965b7","/**\n * Creates an iterator that iterates over the given array\n * @param data the array\n * @param T element type\n * @returns the iterator\n */\nexport function toIterator<T>(data: T[]): Iterator<T> {\n    return data[Symbol.iterator]();\n}\n\n/**\n * Converts the given iterator to an array\n * @param iterator the iterator that is to be converted into an array\n * @param T element type\n * @returns {T[]} the array representation of the given iterator\n */\nexport function toArray<T>(iterator: Iterator<T>): T[] {\n    const result: T[] = [];\n    let current: IteratorResult<T>;\n    /* tslint:disable:no-conditional-assignment */\n    while (!(current = iterator.next()).done) {\n        result.push(current.value as T);\n    }\n    return result;\n}\n\n/**\n * Flattens the given array.\n * @param deepArray the array to flatten\n * @param type of the array elements\n * @returns returns an array containing all the values contained in the sub arrays of deep array.\n */\nexport function flattenArray<T>(deepArray: T[][]): T[] {\n    if (deepArray.length === 0) {\n        return [];\n    }\n\n    const [head, ...tail] = deepArray;\n    return Array.prototype.concat.apply(head, tail);\n}\n\nexport function concatInPlace<T>(target: T[], toAppend: T[]): T[] {\n    const insertionIndex = target.length;\n    target.length += toAppend.length;\n\n    for (let i = 0; i < toAppend.length; ++i) {\n        target[insertionIndex + i] = toAppend[i];\n    }\n\n    return target;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader!./src/common/util/arrays.ts\n\n\n// WEBPACK FOOTER //\n// webpack:///src/common/util/arrays.ts","/**\n * @module parallel\n */\n/** */\n\nimport {IFunctionId} from \"./function-id\";\n\n/**\n * Serialized representation of a function call\n */\nexport interface ISerializedFunctionCall {\n    /**\n     * The id of the function to invoke ({@link IFunctionDefinition.id})\n     */\n    functionId: IFunctionId;\n\n    /**\n     * The parameters to pass to the function when called\n     */\n    readonly parameters: any[];\n\n    /**\n     * Marker that indicates that this object is a serialized function call\n     */\n    readonly ______serializedFunctionCall: boolean;\n}\n\n/**\n * Tests if the given object is a serialized function call\n * @param potentialFunc a potentially serialized function call\n * @returns {boolean} true if it is a serialized function call, false otherwise\n */\nexport function isSerializedFunctionCall(potentialFunc: any): potentialFunc is ISerializedFunctionCall {\n    return !!potentialFunc && potentialFunc.______serializedFunctionCall === true;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader!./src/common/function/serialized-function-call.ts\n\n\n// WEBPACK FOOTER //\n// webpack:///src/common/function/serialized-function-call.ts","import {ITaskDefinition} from \"../task/task-definition\";\nimport {IFunctionDefinition} from \"../function/function-defintion\";\nimport {IFunctionId} from \"../function/function-id\";\n\n/**\n * Message types\n */\nexport const enum WorkerMessageType {\n    /**\n     * Sent from the worker facade to the worker slave to initialize the slave.\n     */\n    InitializeWorker,\n\n    /**\n     * Sent from the worker facade to the worker slave to schedule a new task on the slave.\n     */\n    ScheduleTask,\n\n    /**\n     * Send from the worker slave to the worker thread to request the definition of a function needed to execute a scheduled task\n     */\n    FunctionRequest,\n\n    /**\n     * Send from the worker thread to the worker slave as response to a {@link WorkerMessageType.FunctionRequest}. Includes\n     * the definitions of all requested functions\n     */\n    FunctionResponse,\n\n    /**\n     * Sent from the worker slave to the worker thread containing the computed result\n     */\n    WorkerResult,\n\n    /**\n     * Sent from the worker slave to the worker thread for the case an error occurred during the evaluation of the scheduled task.\n     */\n    FunctionExecutionError,\n\n    /**\n     * Sent from the worker thread to the worker slave to request the slave to terminate.\n     */\n    Stop\n}\n\n/**\n * Message that is exchanged between a worker slave and the worker thread.\n */\nexport interface IWorkerMessage {\n    /**\n     * The type of the message.\n     */\n    type: WorkerMessageType;\n}\n\n/**\n * Sent to initialize the worker slave and assigns the given unique id\n */\nexport interface IInitializeWorkerMessage extends IWorkerMessage {\n    /**\n     * Unique id of the worker (facade / slave)\n     */\n    workerId: number;\n}\n\n/**\n * Schedules the given task on the worker slave.\n */\nexport interface IScheduleTaskMessage extends IWorkerMessage {\n    /**\n     * Task to execute on the worker slave\n     */\n    task: ITaskDefinition;\n}\n\n/**\n * Sent by the worker slave to request the function definitions with the given ids.\n */\nexport interface IFunctionRequest extends IWorkerMessage {\n    /**\n     * The ids of the requested functions\n     */\n    functionIds: IFunctionId[];\n}\n\n/**\n * Response to a {@link IFunctionRequest}. Contains the definitions for all requested functions.\n */\nexport interface IFunctionResponse extends IWorkerMessage {\n    /**\n     * The definition of the requested functions\n     */\n    functions: IFunctionDefinition[];\n\n    /**\n     * Array containing the ids of the functions that could not be resolved\n     */\n    missingFunctions: IFunctionId[];\n}\n\n/**\n * Sent from the worker slave to the worker thread to report the computed result.\n * Thereafter, the worker slave is ready to accept further tasks.\n */\nexport interface IWorkerResultMessage extends IWorkerMessage {\n    /**\n     * The computed result for the {@link IScheduleTaskMessage}\n     */\n    result: any;\n}\n\n/**\n * Sent from the worker to report an error during the execution of the function.\n */\nexport interface IFunctionExecutionError extends IWorkerMessage {\n    /**\n     * The occurred error. Not an instance of Error. Error is not cloneable.\n     */\n    error: any;\n}\n\n/**\n * Creates an initialize worker message\n * @param id the unique id of the worker\n * @returns the initialize worker message\n */\nexport function initializeWorkerMessage(id: number): IInitializeWorkerMessage {\n    return { type: WorkerMessageType.InitializeWorker, workerId: id };\n}\n\n/**\n * Creates a message to schedule the given task on a worker slave\n * @param task the task to schedule\n * @returns the schedule message\n */\nexport function scheduleTaskMessage(task: ITaskDefinition): IScheduleTaskMessage {\n    return { task, type: WorkerMessageType.ScheduleTask};\n}\n\n/**\n * Creates an {@link IFunctionRequest} message that requests the given function ids from the worker thread\n * @param functionId the id of a function to request\n * @param otherFunctionIds additional ids to request from the worker slave\n * @returns the function request message\n */\nexport function requestFunctionMessage(functionId: IFunctionId, ...otherFunctionIds: IFunctionId[]): IFunctionRequest {\n    return { functionIds: [functionId, ...otherFunctionIds], type: WorkerMessageType.FunctionRequest };\n}\n\n/**\n * Creates a function response message containing the passed function definitions\n * @param functions the function definitions to respond to the worker slave\n * @returns the function response message\n */\nexport function functionResponseMessage(functions: IFunctionDefinition[], ...missingFunctionIds: IFunctionId[]): IFunctionResponse {\n    return { functions, missingFunctions: missingFunctionIds, type: WorkerMessageType.FunctionResponse };\n}\n\n/**\n * Creates a worker result message for the given result\n * @param result the computed result for the scheduled task\n * @returns the message\n */\nexport function workerResultMessage(result: any): IWorkerResultMessage {\n    return { result, type: WorkerMessageType.WorkerResult };\n}\n\n/**\n * Creates a function execution error message containing the given error\n * @param error the error object thrown by the task computation\n * @returns the message\n */\nexport function functionExecutionError(error: Error): IFunctionExecutionError {\n    let errorObject: {[prop: string]: string} = {};\n\n    for (const prop of Object.getOwnPropertyNames(error)) {\n        errorObject[prop] = JSON.stringify((error as any)[prop]);\n    }\n\n    return { error: errorObject, type: WorkerMessageType.FunctionExecutionError };\n}\n\n/**\n * Creates a stop message\n * @returns the message\n */\nexport function stopMessage(): IWorkerMessage {\n    return { type: WorkerMessageType.Stop };\n}\n\n/**\n * Tests if the given message is an {@link IScheduleTaskMessage} message\n * @param message the message to test\n * @returns {boolean} {@code true} if the message is an {@link IScheduleTaskMessage}\n */\nexport function isScheduleTask(message: IWorkerMessage): message is IScheduleTaskMessage {\n    return message.type === WorkerMessageType.ScheduleTask;\n}\n\n/**\n * Tests if the given message is an {@link IInitializeWorkerMessage} message\n * @param message the message to test\n * @returns {boolean} {@code true} if the message is an {@link IInitializeWorkerMessage}\n */\nexport function isInitializeMessage(message: IWorkerMessage): message is IInitializeWorkerMessage {\n    return message.type === WorkerMessageType.InitializeWorker;\n}\n\n/**\n * Tests if the given message is an {@link IFunctionRequest} message\n * @param message the message to test\n * @returns {boolean} {@code true} if the message is an {@link IFunctionRequest}\n */\nexport function isFunctionRequest(message: IWorkerMessage): message is IFunctionRequest {\n    return message.type === WorkerMessageType.FunctionRequest;\n}\n\n/**\n * Tests if the given message is an {@link IFunctionResponse} message\n * @param message the message to test\n * @returns {boolean} {@code true} if the message is an {@link IFunctionResponse}\n */\nexport function isFunctionResponse(message: IWorkerMessage): message is IFunctionResponse {\n    return message.type === WorkerMessageType.FunctionResponse;\n}\n\n/**\n * Tests if the given message is an {@link IWorkerResultMessage} message\n * @param message the message to test\n * @returns {boolean} {@code true} if the message is an {@link IWorkerResultMessage}\n */\nexport function isWorkerResult(message: IWorkerMessage): message is IWorkerResultMessage {\n    return message.type === WorkerMessageType.WorkerResult;\n}\n\n/**\n * Tests if the given message is an {@link IFunctionExecutionError} message\n * @param message the message to test\n * @returns {boolean} {@code true} if the message is an {@link IFunctionExecutionError}\n */\nexport function isFunctionExecutionError(message: IWorkerMessage): message is IFunctionExecutionError {\n    return message.type === WorkerMessageType.FunctionExecutionError;\n}\n\n/**\n * Tests if the given message is a stop message\n * @param message the message to test\n * @returns {boolean} {@code true} if the message is a stop message\n */\nexport function isStopMesssage(message: IWorkerMessage): boolean {\n    return message.type === WorkerMessageType.Stop;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader!./src/common/worker/worker-messages.ts\n\n\n// WEBPACK FOOTER //\n// webpack:///src/common/worker/worker-messages.ts","import {isStopMesssage} from \"../../common/worker/worker-messages\";\nimport {DefaultBrowserWorkerSlaveState, BrowserWorkerSlaveState} from \"./browser-worker-slave-states\";\nimport {SlaveFunctionLookupTable} from \"../../common/function/slave-function-lookup-table\";\n\ndeclare function postMessage(data: any): void;\n\n/**\n * Worker thread endpoint executed in the web worker thread.\n * Executes the tasks assigned by the thread pool via the {@link BrowserWorkerThread}.\n */\nexport class BrowserWorkerSlave {\n\n    /**\n     * The unique id of the slave instance\n     */\n    public id: number = Number.NaN;\n\n    private state: BrowserWorkerSlaveState = new DefaultBrowserWorkerSlaveState(this);\n\n    constructor(public functionCache: SlaveFunctionLookupTable) {\n\n    }\n\n    /**\n     * Changes the state of the slave to the new state\n     * @param state the new state to assign\n     */\n    public changeState(state: BrowserWorkerSlaveState): void {\n        this.state = state;\n        this.state.enter();\n    }\n\n    /**\n     * Executed when the slave receives a message from the ui-thread\n     * @param event the received message\n     */\n    public onMessage(event: MessageEvent): void {\n        if (isStopMesssage(event.data)) {\n            close();\n        } else if (!this.state.onMessage(event)) {\n            throw new Error(`Message with type ${event.data.type} cannot be handled by slave ${this}`);\n        }\n    }\n\n    public postMessage(message: any): void {\n        postMessage(message);\n    }\n\n    public toString(): string {\n        return `BrowserSlave { id: ${this.id}, state: '${this.state.name}' }`;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader!./src/browser/worker-slave/browser-worker-slave.ts\n\n\n// WEBPACK FOOTER //\n// webpack:///src/browser/worker-slave/browser-worker-slave.ts","import {IFunctionLookupTable} from \"./function-lookup-table\";\nimport {IFunctionDefinition} from \"./function-defintion\";\nimport {IFunctionId} from \"./function-id\";\nimport {SimpleMap} from \"../util/simple-map\";\n\n/**\n * Cache used by each worker slave to cache the received functions.\n * Caching the functions has the advantage that function only is serialized, transmitted and deserialized once. This also\n * has the advantage, that the function instance stays the same and therefore can be optimized by the runtime system.\n */\nexport class SlaveFunctionLookupTable implements IFunctionLookupTable {\n    private cache = new SimpleMap<string, Function>();\n\n    /**\n     * Resolves the function with the given id\n     * @param id the id of the function to resolve\n     * @returns the resolved function or undefined if not known\n     */\n    public getFunction(id: IFunctionId): Function | undefined {\n        return this.cache.get(id.identifier);\n    }\n\n    /**\n     * Registers a new function in the cache\n     * @param definition the definition of the function to register\n     * @returns the registered function\n     */\n    public registerFunction(definition: IFunctionDefinition): Function {\n        const f = this.toFunction(definition);\n        this.cache.set(definition.id.identifier, f);\n        return f;\n    }\n\n    public registerStaticFunction(id: IFunctionId, func: Function): void {\n        if (this.has(id)) {\n            throw new Error(`The given function id '${id.identifier}' is already used by another function registration, the id needs to be unique.`);\n        }\n        this.cache.set(id.identifier, func);\n    }\n\n    /**\n     * Tests if the cache contains a function with the given id\n     * @param id the id of the function to test for existence\n     * @returns true if the cache contains a function with the given id\n     */\n    public has(id: IFunctionId) {\n        return this.cache.has(id.identifier);\n    }\n\n    private toFunction(definition: IFunctionDefinition): Function {\n        if (definition.name) {\n            const args = definition.argumentNames.join(\", \");\n            const wrapper = Function.apply(undefined, [`return function ${definition.name} (${args}) { ${definition.body} }; ` ]);\n            return wrapper();\n        }\n        return Function.apply(undefined, [...definition.argumentNames, definition.body]);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader!./src/common/function/slave-function-lookup-table.ts\n\n\n// WEBPACK FOOTER //\n// webpack:///src/common/function/slave-function-lookup-table.ts","import {IFunctionLookupTable} from \"../../function/function-lookup-table\";\nimport {ParallelWorkerFunctionIds} from \"./parallel-worker-functions\";\nimport {identity} from \"../../util/identity\";\nimport {filterIterator} from \"./filter-iterator\";\nimport {mapIterator} from \"./map-iterator\";\nimport {parallelJobExecutor} from \"./parallel-job-executor\";\nimport {rangeIterator} from \"./range-iterator\";\nimport {reduceIterator} from \"./reduce-iterator\";\nimport {toIterator} from \"../../util/arrays\";\n\n/**\n * Registers the static parallel functions\n * @param lookupTable the table into which the function should be registered\n */\nexport function registerStaticParallelFunctions(lookupTable: IFunctionLookupTable) {\n    lookupTable.registerStaticFunction(ParallelWorkerFunctionIds.IDENTITY, identity);\n    lookupTable.registerStaticFunction(ParallelWorkerFunctionIds.FILTER, filterIterator);\n    lookupTable.registerStaticFunction(ParallelWorkerFunctionIds.MAP, mapIterator);\n    lookupTable.registerStaticFunction(ParallelWorkerFunctionIds.PARALLEL_JOB_EXECUTOR, parallelJobExecutor);\n    lookupTable.registerStaticFunction(ParallelWorkerFunctionIds.RANGE, rangeIterator);\n    lookupTable.registerStaticFunction(ParallelWorkerFunctionIds.REDUCE, reduceIterator);\n    lookupTable.registerStaticFunction(ParallelWorkerFunctionIds.TO_ITERATOR, toIterator);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader!./src/common/parallel/slave/register-parallel-worker-functions.ts\n\n\n// WEBPACK FOOTER //\n// webpack:///src/common/parallel/slave/register-parallel-worker-functions.ts","import {FunctionCallDeserializer} from \"../../common/function/function-call-deserializer\";\nimport {ITaskDefinition} from \"../../common/task/task-definition\";\nimport {IFunctionDefinition} from \"../../common/function/function-defintion\";\nimport {\n    functionExecutionError, isFunctionResponse, isInitializeMessage, isScheduleTask, requestFunctionMessage,\n    workerResultMessage } from \"../../common/worker/worker-messages\";\nimport {BrowserWorkerSlave} from \"./browser-worker-slave\";\n\n/**\n * State of the browser worker slave.\n */\nexport abstract class BrowserWorkerSlaveState {\n    constructor(public name: string, protected slave: BrowserWorkerSlave) {}\n\n    /**\n     * Executed when the slave changes its state to this state.\n     */\n    public enter(): void {\n        // intentionally empty\n    }\n\n    /**\n     * Executed whenever the slave receives a message from the ui-thread while being in this state\n     * @param event the received message\n     * @returns {boolean} true if the state has handled the message, false otherwise\n     */\n    public onMessage(event: MessageEvent): boolean { return false; }\n}\n\n/**\n * Initial state of a slave. The slave is waiting for the initialization message.\n */\nexport class DefaultBrowserWorkerSlaveState extends BrowserWorkerSlaveState {\n       constructor(slave: BrowserWorkerSlave) {\n        super(\"Default\", slave);\n    }\n\n    public onMessage(event: MessageEvent): boolean {\n        if (isInitializeMessage(event.data)) {\n            this.slave.id = event.data.workerId;\n            this.slave.changeState(new IdleBrowserWorkerSlaveState(this.slave));\n            return true;\n        }\n        return false;\n    }\n}\n\n/**\n * The slave is waiting for work from the ui-thread.\n */\nexport class IdleBrowserWorkerSlaveState extends BrowserWorkerSlaveState {\n    constructor(slave: BrowserWorkerSlave) {\n        super(\"Idle\", slave);\n    }\n\n    public onMessage(event: MessageEvent): boolean {\n        if (!isScheduleTask(event.data)) {\n            return false;\n        }\n\n        const task: ITaskDefinition = event.data.task;\n        const missingFunctions = task.usedFunctionIds.filter(id => !this.slave.functionCache.has(id));\n\n        if (missingFunctions.length === 0) {\n            this.slave.changeState(new ExecuteFunctionBrowserWorkerSlaveState(this.slave, task));\n        } else {\n            const [ head, ...tail ] = missingFunctions;\n            this.slave.postMessage(requestFunctionMessage(head, ...tail));\n            this.slave.changeState(new WaitingForFunctionDefinitionBrowserWorkerSlaveState(this.slave, task));\n        }\n\n        return true;\n    }\n}\n\n/**\n * The slave is waiting for the definition of the requested function that is needed to execute the assigned task.\n */\nexport class WaitingForFunctionDefinitionBrowserWorkerSlaveState extends BrowserWorkerSlaveState {\n    constructor(slave: BrowserWorkerSlave, private task: ITaskDefinition) {\n        super(\"WaitingForFunctionDefinition\", slave);\n    }\n\n    public onMessage(event: MessageEvent): boolean {\n        const message = event.data;\n        if (isFunctionResponse(message)) {\n            if (message.missingFunctions.length > 0) {\n                const identifiers = message.missingFunctions.map(functionId => functionId.identifier).join(\", \");\n                this.slave.postMessage(functionExecutionError(new Error(`The function ids [${identifiers}] could not be resolved by slave ${this.slave.id}.`)));\n                this.slave.changeState(new IdleBrowserWorkerSlaveState(this.slave));\n            } else {\n                for (const definition of message.functions as IFunctionDefinition[]) {\n                    this.slave.functionCache.registerFunction(definition);\n                }\n\n                this.slave.changeState(new ExecuteFunctionBrowserWorkerSlaveState(this.slave, this.task));\n            }\n            return true;\n        }\n        return false;\n    }\n}\n\n/**\n * The slave is executing the function\n */\nexport class ExecuteFunctionBrowserWorkerSlaveState extends BrowserWorkerSlaveState {\n    constructor(slave: BrowserWorkerSlave, private task: ITaskDefinition) {\n        super(\"Executing\", slave);\n    }\n\n    public enter(): void {\n        const functionDeserializer = new FunctionCallDeserializer(this.slave.functionCache);\n\n        try {\n            const main = functionDeserializer.deserializeFunctionCall(this.task.main);\n            const result = main({functionCallDeserializer: functionDeserializer});\n            this.slave.postMessage(workerResultMessage(result));\n        } catch (error) {\n            this.slave.postMessage(functionExecutionError(error));\n        }\n\n        this.slave.changeState(new IdleBrowserWorkerSlaveState(this.slave));\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader!./src/browser/worker-slave/browser-worker-slave-states.ts\n\n\n// WEBPACK FOOTER //\n// webpack:///src/browser/worker-slave/browser-worker-slave-states.ts","import {IFunctionLookupTable} from \"./function-lookup-table\";\nimport {ISerializedFunctionCall, isSerializedFunctionCall} from \"./serialized-function-call\";\n\n/**\n * Binds the function to undefined and the given params. Uses Function.bind if available or creates its own wrapper\n * if not.\n * @param fn the function to bind to the given parameters\n * @param params the parameters to which the function is partially bound\n * @returns a partially bound function\n */\nfunction bind<TResult>(fn: Function, params: any[]): (...args: any[]) => TResult {\n    if (typeof(fn.bind) === \"function\") {\n        return fn.bind(undefined, ...params);\n    }\n\n    return function bound(...additionalParams: any[]) {\n        return fn.apply(undefined, params.concat(additionalParams)) as TResult;\n    };\n}\n\n/**\n * Deserializer for a {@link ISerializedFunctionCall}.\n */\nexport class FunctionCallDeserializer {\n    /**\n     * Creates a new deserializer that uses the given function lookup table to retrieve the function for a given id\n     * @param functionLookupTable the lookup table to use\n     */\n    constructor(private functionLookupTable: IFunctionLookupTable) {}\n\n    /**\n     * Deserializes the function call into a function\n     * @param functionCall the function call to deserialize\n     * @param deserializeParams indicator if the parameters passed to the serialized function should be deserailized too\n     * @returns a function that can be called with additional parameters (the params from the serialized function calls are prepended to the passed parameters)\n     */\n    public deserializeFunctionCall<TResult>(functionCall: ISerializedFunctionCall, deserializeParams = false): (...additionalParams: any[]) => TResult {\n        const func = this.functionLookupTable.getFunction(functionCall.functionId);\n        if (!func) {\n            throw new Error(`The function with the id ${functionCall.functionId.identifier} could not be retrieved while deserializing the function call. Is the function correctly registered?`);\n        }\n\n        let params = functionCall.parameters || [];\n\n        if (deserializeParams) {\n            params = params.map(param => {\n                if (isSerializedFunctionCall(param)) {\n                    return this.deserializeFunctionCall(param);\n                }\n                return param;\n            });\n        }\n\n        return bind<TResult>(func, params);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader!./src/common/function/function-call-deserializer.ts\n\n\n// WEBPACK FOOTER //\n// webpack:///src/common/function/function-call-deserializer.ts","/**\n * @module parallel\n */\n/** */\n\n/**\n * Identifier for a serialized function\n */\nexport interface IFunctionId {\n    /**\n     * The globally unique identifier\n     */\n    identifier: string;\n\n    /**\n     * Flag that indicates that this is a function id\n     */\n    _______isFunctionId: boolean;\n}\n\n/**\n * Creates a function id\n * @param namespace the namespace of the id\n * @param id the unique id for this namespace\n * @returns the function id\n */\nexport function functionId(namespace: string, id: number): IFunctionId {\n    return {\n        _______isFunctionId: true,\n        identifier: `${namespace}-${id}`\n    };\n}\n\n/**\n * Tests if the given object is a function id\n * @param obj the object to test for\n * @returns true if the object is  a function id\n */\nexport function isFunctionId(obj: any): obj is IFunctionId {\n    return !!obj && obj._______isFunctionId === true;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader!./src/common/function/function-id.ts\n\n\n// WEBPACK FOOTER //\n// webpack:///src/common/function/function-id.ts","import {IParallelTaskEnvironment} from \"../\";\n/**\n * Returns a new iterator that only contains all elements for which the given predicate returns true\n * @param iterator the iterator to filter\n * @param predicate the predicate to use for filtering the elements\n * @param env the environment of the job\n * @param T type of the elements to filter\n * @returns an iterator only containing the elements where the predicate is true\n */\nexport function filterIterator<T>(iterator: Iterator<T>, predicate: (this: void, value: T, env: IParallelTaskEnvironment) => boolean, env: IParallelTaskEnvironment): Iterator<T> {\n    return {\n        next() {\n            let current: IteratorResult<T>;\n            /* tslint:disable:no-conditional-assignment */\n            while (!(current = iterator.next()).done) {\n                if (predicate(current.value, env)) {\n                    return current;\n                }\n            }\n\n            return current;\n        }\n    };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader!./src/common/parallel/slave/filter-iterator.ts\n\n\n// WEBPACK FOOTER //\n// webpack:///src/common/parallel/slave/filter-iterator.ts","import {IParallelTaskEnvironment} from \"../\";\n/**\n * Performs the map operation\n * @param iterator the iterator of the previous step\n * @param iteratee the iteratee to apply to each element in the iterator\n * @param env the environment of the job\n * @param T the type of the input elements\n * @param TResult the type of the returned element of the iteratee\n * @returns a new iterator where each element has been mapped using the iteratee\n */\nexport function mapIterator<T, TResult>(iterator: Iterator<T>, iteratee: (this: void, value: T, env: IParallelTaskEnvironment) => TResult, env: IParallelTaskEnvironment): Iterator<TResult> {\n    return {\n        next(): IteratorResult<TResult> {\n            const result = iterator.next();\n            if (result.done) {\n                return { done: true } as IteratorResult<TResult>;\n            }\n            return {\n                done: result.done,\n                value: iteratee(result.value, env)\n            };\n        }\n    };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader!./src/common/parallel/slave/map-iterator.ts\n\n\n// WEBPACK FOOTER //\n// webpack:///src/common/parallel/slave/map-iterator.ts","import {toArray} from \"../../util/arrays\";\nimport {FunctionCallDeserializer} from \"../../function/function-call-deserializer\";\nimport {ISerializedFunctionCall, isSerializedFunctionCall} from \"../../function/serialized-function-call\";\nimport {ISerializedParallelOperation, IParallelEnvironment, IParallelTaskEnvironment} from \"../\";\nimport {assign} from \"../../util/assign\";\n\n/**\n * Defines the parallel operation to perform\n */\nexport interface IParallelJobDefinition {\n    /**\n     * The generator that is used to create the array that is \"manipulated\" by applying the given actions.\n     */\n    generator: ISerializedFunctionCall;\n\n    /**\n     * The operations to perform on the array elements\n     */\n    operations: ISerializedParallelOperation[];\n\n    /**\n     * The environments. Object hash that is passed to all iteratee functions and allows to access external data\n     */\n    environments: Array<ISerializedFunctionCall | IParallelEnvironment>;\n\n    /**\n     * The job-relative index of the task\n     */\n    taskIndex: number;\n\n    /**\n     * The number of values processed by each task (at most)\n     */\n    valuesPerTask: number;\n}\n\nfunction createTaskEnvironment(definition: IParallelJobDefinition, functionCallDeserializer: FunctionCallDeserializer): IParallelTaskEnvironment {\n    let taskEnvironment: IParallelTaskEnvironment = { taskIndex: definition.taskIndex, valuesPerTask: definition.valuesPerTask };\n\n    for (const environment of definition.environments) {\n        let currentEnvironment: IParallelEnvironment;\n        if (isSerializedFunctionCall(environment)) {\n            currentEnvironment = functionCallDeserializer.deserializeFunctionCall(environment)(taskEnvironment);\n        } else {\n            currentEnvironment = environment;\n        }\n        taskEnvironment = assign({}, taskEnvironment, currentEnvironment);\n    }\n\n    return taskEnvironment;\n}\n\n/**\n * Main coordination function for any operation performed using {@link IParallel}.\n * @param definition the definition of the operation to performed\n * @param options options passed from the thread pool\n * @param T type of the elements created by the generator\n * @param TResult type of the resulting elements\n * @returns the result of the operation from this worker\n */\nexport function parallelJobExecutor<T, TResult>(definition: IParallelJobDefinition, { functionCallDeserializer }: { functionCallDeserializer: FunctionCallDeserializer }): TResult[] {\n    const environment = createTaskEnvironment(definition, functionCallDeserializer);\n    const generatorFunction = functionCallDeserializer.deserializeFunctionCall(definition.generator, true);\n    let iterator = generatorFunction(environment) as Iterator<T>;\n\n    for (const operation of definition.operations) {\n        const iteratorFunction = functionCallDeserializer.deserializeFunctionCall<Iterator<T>>(operation.iterator);\n        const iteratee = functionCallDeserializer.deserializeFunctionCall(operation.iteratee);\n        iterator = iteratorFunction(iterator, iteratee, environment);\n    }\n\n    return toArray<TResult>(iterator as any);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader!./src/common/parallel/slave/parallel-job-executor.ts\n\n\n// WEBPACK FOOTER //\n// webpack:///src/common/parallel/slave/parallel-job-executor.ts","import {functionId, IFunctionId} from \"../../function/function-id\";\n\nexport const ParallelWorkerFunctionIds = {\n    FILTER: functionId(\"parallel\", 0) as IFunctionId,\n    IDENTITY: functionId(\"parallel\", 1),\n    MAP: functionId(\"parallel\", 2),\n    PARALLEL_JOB_EXECUTOR: functionId(\"parallel\", 3),\n    RANGE: functionId(\"parallel\", 4),\n    REDUCE: functionId(\"parallel\", 5),\n    TIMES: functionId(\"parallel\", 6),\n    TO_ITERATOR: functionId(\"parallel\", 7)\n};\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader!./src/common/parallel/slave/parallel-worker-functions.ts\n\n\n// WEBPACK FOOTER //\n// webpack:///src/common/parallel/slave/parallel-worker-functions.ts","/**\n * Generator function that creates an iterator containing all elements in the range [start, end) with a step size of step.\n * @param start start value of the range (inclusive)\n * @param end end value of the range (exclusive)\n * @param step step size between two values\n * @returns iterator with the values [start, end)\n */\nexport function rangeIterator(start: number, end: number, step: number): Iterator<number> {\n    const distance = end - start;\n    let length = Math.max(Math.floor(distance / (step || 1)), 0);\n    let next = start;\n\n    return {\n        next(): IteratorResult<number> {\n            let current = next;\n            next = next + step;\n            if (length-- !== 0) {\n                return { done: false, value: current };\n            }\n            return { done: true } as IteratorResult<number>;\n        }\n    };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader!./src/common/parallel/slave/range-iterator.ts\n\n\n// WEBPACK FOOTER //\n// webpack:///src/common/parallel/slave/range-iterator.ts","import {IParallelTaskEnvironment} from \"../\";\nimport {toIterator} from \"../../util/arrays\";\n/**\n * Reduces the elements of the given iterator to a single value by applying the given iteratee to each element\n * @param defaultValue a default value that is as accumulator or for the case that the iterator is empty\n * @param iterator the iterator with the values to reduce\n * @param iteratee iteratee that is applied for each element. The iteratee is passed the accumulated value (sum of all previous values)\n * and the current element and has to return a new accumulated value.\n * @param env the environment of the job\n * @param T type of the elements to process\n * @param TResult type of the reduced value\n * @returns an array with a single value, the reduced value\n */\nexport function reduceIterator<T, TResult>(defaultValue: TResult, iterator: Iterator<T>, iteratee: (this: void, accumulatedValue: TResult, value: T | undefined, env: IParallelTaskEnvironment) => TResult, env: IParallelTaskEnvironment): Iterator<TResult> {\n    let accumulatedValue = defaultValue;\n    let current: IteratorResult<T>;\n\n    /* tslint:disable:no-conditional-assignment */\n    while (!(current = iterator.next()).done) {\n        accumulatedValue = iteratee(accumulatedValue, current.value, env);\n    }\n\n    return toIterator([accumulatedValue]);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader!./src/common/parallel/slave/reduce-iterator.ts\n\n\n// WEBPACK FOOTER //\n// webpack:///src/common/parallel/slave/reduce-iterator.ts","\nexport function assign<T, S1>(target: T, source1: S1): T & S1;\nexport function assign<T, S1, S2>(target: T, source1: S1, source2: S2): T & S1 & S2;\n\n/**\n * Polyfill for Object.assign\n * @param target target object\n * @param sources source object to copy into targetk\n */\nexport function assign<T>(target: T, ...sources: any[]): T {\n    if (target == null) {\n        throw new TypeError(\"Cannot convert undefined or null to object\");\n    }\n\n    target = Object(target);\n    for (let index = 1; index < arguments.length; index++) {\n        const source = arguments[index];\n        if (source != null) {\n            for (const key in source) {\n                if (Object.prototype.hasOwnProperty.call(source, key)) {\n                    (target as any)[key] = source[key];\n                }\n            }\n        }\n    }\n    return target;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader!./src/common/util/assign.ts\n\n\n// WEBPACK FOOTER //\n// webpack:///src/common/util/assign.ts","/**\n * identity function. Returns the passed in value\n * @param element the value to return\n * @param T type of the element\n */\nexport function identity<T>(element: T): T {\n    return element;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader!./src/common/util/identity.ts\n\n\n// WEBPACK FOOTER //\n// webpack:///src/common/util/identity.ts","/**\n * A very simple implementation of a map. Do not use with complex objects as Key.\n * @param K type of the key\n * @param V type of the value\n */\nexport class SimpleMap<K, V> {\n    private data: { [key: string]: V } = {};\n\n    /**\n     * Gets the value for the given key if available\n     * @param key the key to look up\n     * @returns the looked up value or undefined if the map does not contain any value associated with the given key\n     */\n    public get(key: K): V | undefined {\n        const internalKey = this.toInternalKey(key);\n        return this.has(key) ? this.data[internalKey] : undefined;\n    }\n\n    /**\n     * Tests if the map contains value stored by the given key\n     * @param key the key\n     * @returns true if the map contains a value by the given key, false otherwise\n     */\n    public has(key: K): boolean {\n        return this.hasOwnProperty.call(this.data, this.toInternalKey(key));\n    }\n\n    /**\n     * Sets the value for the given key. If the map already contains a value stored by the given key, then this value is\n     * overridden\n     * @param key the key\n     * @param value the value to associate with the given key\n     */\n    public set(key: K, value: V): void {\n        this.data[this.toInternalKey(key)] = value;\n    }\n\n    /**\n     * Clears all values from the map\n     */\n    public clear(): void {\n        this.data = {};\n    }\n\n    private toInternalKey(key: K): string {\n        return `@${key}`;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader!./src/common/util/simple-map.ts\n\n\n// WEBPACK FOOTER //\n// webpack:///src/common/util/simple-map.ts","import {BrowserWorkerSlave} from \"./browser-worker-slave\";\nimport {SlaveFunctionLookupTable} from \"../../common/function/slave-function-lookup-table\";\nimport {registerStaticParallelFunctions} from \"../../common/parallel/slave/register-parallel-worker-functions\";\n\nconst slaveFunctionLookupTable = new SlaveFunctionLookupTable();\nregisterStaticParallelFunctions(slaveFunctionLookupTable);\n\n/** @preserve WORKER_SLAVE_STATIC_FUNCTIONS_PLACEHOLDER */\n\nconst slave = new BrowserWorkerSlave(slaveFunctionLookupTable);\nonmessage = function () {\n    slave.onMessage.apply(slave, arguments);\n};\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader!./src/browser/worker-slave/index.ts\n\n\n// WEBPACK FOOTER //\n// webpack:///src/browser/worker-slave/index.ts","import parallel, {IParallelOptions} from \"parallel-es\";\nimport {IMandelbrotOptions} from \"../dynamic/mandelbrot\";\n\ninterface IComplexNumber {\n    i: number;\n    real: number;\n}\n\nexport function mandelbrot({ imageWidth, imageHeight, iterations }: IMandelbrotOptions, options?: IParallelOptions) {\n    // X axis shows real numbers, y axis imaginary\n    const min = { i: -1.2, real: -2.0 };\n    const max = { i: 0, real: 1.0 };\n    max.i = min.i + (max.real - min.real) * imageHeight / imageWidth;\n\n    const scalingFactor = {\n        i: (max.i - min.i) / (imageHeight - 1),\n        real: (max.real - min.real) / (imageWidth - 1)\n    };\n\n    return parallel\n        .range(0, imageHeight, 1, options)\n        .map(function computeMandelbrotLine (y) {\n            // Function inline is up to 30% faster than if the function is not inline\n            // https://jsperf.com/mandelbrot-env3 https://jsperf.com/mandelbrot-env4\n            function calculateZ(c: IComplexNumber): number {\n                const z = { i: c.i, real: c.real };\n                let n = 0;\n\n                for (; n < iterations; ++n) {\n                    if (z.real ** 2 + z.i ** 2 > 4) {\n                        break;\n                    }\n\n                    // z ** 2 + c\n                    const zI = z.i;\n                    z.i = 2 * z.real * z.i + c.i;\n                    z.real = z.real ** 2 - zI ** 2 + c.real;\n                }\n\n                return n;\n            }\n\n            const line = new Uint8ClampedArray(imageWidth * 4);\n            const cI = max.i - y * scalingFactor.i;\n\n            for (let x = 0; x < imageWidth; ++x) {\n                const c = {\n                    i: cI,\n                    real: min.real + x * scalingFactor.real\n                };\n\n                const n = calculateZ(c);\n                const base = x * 4;\n                /* tslint:disable:no-bitwise */\n                line[base] = n & 0xFF;\n                line[base + 1] = n & 0xFF00;\n                line[base + 2] = n & 0xFF0000;\n                line[base + 3] = 255;\n            }\n            return line;\n        });\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/transpiled/mandelbrot.ts","import parallel from \"parallel-es\";\n\nexport interface ICoordinate {\n    readonly x: number;\n    readonly y: number;\n}\n\nconst moves = [\n    { x: -2, y: -1 }, { x: -2, y: 1}, { x: -1, y: -2 }, { x: -1, y: 2 },\n    { x: 1, y: -2 }, { x: 1, y: 2}, { x: 2, y: -1 }, { x: 2, y: 1 }\n];\n\nfunction visitField(field: ICoordinate, n: number, board: number[]): number {\n    const boardSize = Math.sqrt(board.length);\n\n    if (n === board.length) {\n        return 1;\n    }\n\n    let result = 0;\n    const fieldIndex = field.x * boardSize + field.y;\n\n    board[fieldIndex] = n;\n\n    for (let i = 0; i < moves.length; ++i) {\n        const move = moves[i];\n        const successor = { x: field.x + move.x, y: field.y + move.y };\n\n        // not outside of board and not yet accessed\n        const accessible = successor.x >= 0 && successor.y >= 0 && successor.x < boardSize &&  successor.y < boardSize && board[successor.x * boardSize + successor.y] === 0;\n\n        if (accessible) {\n            result += visitField(successor, n + 1, board);\n        }\n    }\n\n    board[fieldIndex] = 0;\n\n    return result;\n}\n\nexport function knightTours(startPath: ICoordinate[], { boardSize }: { boardSize: number }): number {\n    const board: number[] = new Array(boardSize * boardSize);\n    board.fill(0);\n\n    for (let index = 0; index < startPath.length - 1; ++index) {\n        const fieldIndex = startPath[index].x * boardSize + startPath[index].y;\n        board[fieldIndex] = index + 1;\n    }\n\n    return visitField(startPath[startPath.length - 1], startPath.length, board);\n}\n\nexport function syncKnightTours(start: ICoordinate, boardSize: number): number {\n    return knightTours([start], { boardSize });\n}\n\nexport function parallelKnightTours(start: ICoordinate, boardSize: number): PromiseLike<number> {\n\n    function successors(coordinate: ICoordinate) {\n        const result: ICoordinate[] = [];\n\n        const moves = [\n            { x: -2, y: -1 }, { x: -2, y: 1}, { x: -1, y: -2 }, { x: -1, y: 2 },\n            { x: 1, y: -2 }, { x: 1, y: 2}, { x: 2, y: -1 }, { x: 2, y: 1 }\n        ];\n\n        for (let i = 0; i < moves.length; ++i) {\n            const move = moves[i];\n            const successor = {x: coordinate.x + move.x, y: coordinate.y + move.y};\n            const accessible = successor.x >= 0 && successor.y >= 0 && successor.x < boardSize && successor.y < boardSize &&\n                (successor.x !== start.x || successor.y !== start.y) && (successor.x !== coordinate.x && successor.y !== coordinate.y);\n            if (accessible) {\n                result.push(successor);\n            }\n        }\n\n        return result;\n    }\n\n    function computeStartFields() {\n        const result: ICoordinate[][] = [];\n        for (const directSuccessor of successors(start)) {\n            for (const indirectSuccessor of successors(directSuccessor)) {\n                result.push([start, directSuccessor, indirectSuccessor]);\n            }\n        }\n        return result;\n    }\n\n    return parallel\n        .from(computeStartFields())\n        .inEnvironment({ boardSize })\n        .map(knightTours)\n        .reduce(0, (memo, count) => memo + count);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/transpiled/knights-tour.ts","import parallel, {IParallelTaskEnvironment} from \"parallel-es\";\nimport {Dictionary} from \"lodash\";\nimport Random from \"simjs-random\";\n\nexport interface IProject {\n    startYear: number;\n    totalAmount: number;\n}\n\ntype SubBuckets = { [name: string]: { group: string; min: number, max: number, empty: boolean } };\n\ninterface IBucket {\n    min: number;\n    max: number;\n\n    subBuckets: SubBuckets;\n}\n\ninterface IGroup {\n    /**\n     * The unique name of this group\n     */\n    name: string;\n\n    /**\n     * The description of the group\n     */\n    description: string;\n\n    /**\n     * Should a separator line been drawn for this group?\n     */\n    separator: boolean;\n\n    /**\n     * Whats the percentage of values in this group to the total number of simulated values\n     */\n    percentage: number;\n\n    /**\n     * Whats the minimum value that is still part of this group\n     */\n    from?: number;\n    /**\n     * Whats the maximum value (exclusive) that defines the upper end of this group\n     */\n    to?: number;\n}\n\nexport interface IProjectResult {\n    /**\n     * The minimal simulated value for this project\n     */\n    min: number;\n    /**\n     * The maximal simulated value\n     */\n    max: number;\n\n    /** The median of the values found for this project\n     */\n    median: number;\n\n    /**\n     * Defines where the 2/3 of the simulated values start / end.\n     */\n    twoThird: {\n        min: number;\n        max: number;\n    };\n\n    buckets: IBucket[];\n\n    groups: IGroup[];\n\n    /**\n     * The project\n     */\n    project: IProject;\n}\n\ninterface IMonteCarloEnvironment {\n    investmentAmount: number;\n    liquidity: number;\n    noInterestReferenceLine: number[];\n    numRuns: number;\n    numYears: number;\n    projectsByStartYear: Dictionary<IProject[]>;\n    simulatedValues: number[][];\n}\n\nexport interface IMonteCarloSimulationOptions {\n    numYears?: number;\n    numRuns?: number;\n    projects?: IProject[];\n    investmentAmount?: number;\n    performance?: number;\n    seed?: number;\n    volatility: number;\n    liquidity?: number;\n}\n\ninterface IInitializedMonteCarloSimulationOptions {\n    numYears: number;\n    numRuns: number;\n    projects: IProject[];\n    investmentAmount: number;\n    performance: number;\n    seed?: number;\n    liquidity: number;\n    volatility: number;\n}\n\nfunction initializeOptions(options?: IMonteCarloSimulationOptions): IInitializedMonteCarloSimulationOptions {\n    return Object.assign({}, {\n        investmentAmount: 1000000,\n        liquidity: 10000,\n        numRuns: 10000,\n        numYears: 10,\n        performance: 0,\n        projects: [],\n        seed: undefined,\n        volatility: 0.01\n    }, options);\n}\n\nfunction toAbsoluteIndices(indices: number[], cashFlows: number[], investmentAmount: number) {\n    const absolute = new Array<number>(indices.length);\n    let currentPortfolioValue = investmentAmount;\n    let previousYearIndex = 100;\n\n    for (let relativeYear = 0; relativeYear < indices.length; ++relativeYear) {\n        const currentYearIndex = indices[relativeYear];\n        const cashFlowStartOfYear = relativeYear === 0 ? 0 : cashFlows[relativeYear - 1];\n\n        // scale current value with performance gain according to index\n        const performance = currentYearIndex / previousYearIndex;\n        currentPortfolioValue = (currentPortfolioValue + cashFlowStartOfYear) * performance;\n\n        absolute[relativeYear] = Math.round(currentPortfolioValue);\n        previousYearIndex = currentYearIndex;\n    }\n\n    return absolute;\n}\n\nfunction simulateSingleAbsoluteOutcome (numYears: number, cashFlows: number[], options: IInitializedMonteCarloSimulationOptions, random: Random) {\n    const indices = new Array<number>(numYears + 1);\n    indices[0] = 100;\n\n    for (let i = 0; i < numYears; ++i) {\n        const randomPerformance = 1 + random.normal(options.performance, options.volatility);\n        indices[i + 1] = indices[i] * randomPerformance;\n    }\n\n    // convert the relative values from above to absolute values.\n    return toAbsoluteIndices(indices, cashFlows, options.investmentAmount);\n}\n\n/**\n * Performs the monte carlo simulation for all years and num runs.\n * @param cashFlows the cash flows\n * @param numYears the number of years to simulate\n * @returns {number[][]} the simulated outcomes grouped by year\n */\nfunction simulateOutcomes(cashFlows: number[], numYears: number, options: IInitializedMonteCarloSimulationOptions): number[][]  {\n    const random = new Random(10);\n\n    const result: number[][] = new Array(numYears);\n    for (let year = 0; year <= numYears; ++year) {\n        result[year] = new Array(options.numRuns);\n    }\n\n    for (let run = 0; run < options.numRuns; ++run) {\n        const indices = simulateSingleAbsoluteOutcome(numYears, cashFlows, options, random);\n\n        for (let year = 0; year < indices.length; ++year) {\n            result[year][run] = indices[year];\n        }\n    }\n\n    return result;\n}\n\nfunction createMonteCarloEnvironment(options: IInitializedMonteCarloSimulationOptions, taskEnvironment?: IParallelTaskEnvironment): IMonteCarloEnvironment {\n    function projectsToCashFlows(numYears: number) {\n        const cashFlows: number[] = [];\n        for (let year = 0; year < numYears; ++year) {\n            const projectsByThisYear = projectsByStartYear[year] || [];\n            const cashFlow = -projectsByThisYear.reduce((memo, project) => memo + project.totalAmount, 0);\n            cashFlows.push(cashFlow);\n        }\n        return cashFlows;\n    }\n\n    function calculateNoInterestReferenceLine(cashFlows: number[], numYears: number) {\n        const noInterestReferenceLine: number[] = [];\n\n        let investmentAmountLeft = options.investmentAmount;\n        for (let year = 0; year < numYears; ++year) {\n            investmentAmountLeft = investmentAmountLeft + cashFlows[year];\n            noInterestReferenceLine.push(investmentAmountLeft);\n        }\n        return noInterestReferenceLine;\n    }\n\n    let projectsToSimulate: IProject[] = options.projects;\n    if (taskEnvironment) {\n        projectsToSimulate = options.projects.slice(taskEnvironment.taskIndex * taskEnvironment.valuesPerTask, (taskEnvironment.taskIndex + 1) * taskEnvironment.valuesPerTask);\n    }\n\n    const projects = options.projects.sort((a, b) => a.startYear - b.startYear);\n\n    // Group projects by startYear, use lodash groupBy instead\n    const projectsByStartYear: Dictionary<IProject[]> = {};\n    for (const project of projects) {\n        const arr = projectsByStartYear[project.startYear] = projectsByStartYear[project.startYear] || [];\n        arr.push(project);\n    }\n\n    const numYears = projectsToSimulate.reduce((memo, project) => Math.max(memo, project.startYear), 0);\n    const cashFlows = projectsToCashFlows(numYears);\n    const noInterestReferenceLine = calculateNoInterestReferenceLine(cashFlows, numYears);\n\n    return {\n        investmentAmount: options.investmentAmount,\n        liquidity: options.liquidity,\n        noInterestReferenceLine,\n        numRuns: options.numRuns,\n        numYears,\n        projectsByStartYear,\n        simulatedValues: simulateOutcomes(cashFlows, numYears, options)\n    };\n}\n\nfunction groupForValue(value: number, groups: IGroup[]): IGroup {\n    return groups.find(group => (typeof (group.from) === \"undefined\" || group.from <= value) && (typeof (group.to) === \"undefined\" || group.to > value))!;\n}\n\nfunction createGroups(requiredAmount: number, noInterestReference: number, environment: IMonteCarloEnvironment): IGroup[] {\n    return [\n        { description: \"Ziel erreichbar\", from: requiredAmount, name: \"green\", percentage: 0, separator: true},\n        { description: \"mit Zusatzliquidität erreichbar\", from: requiredAmount - environment.liquidity, name: \"yellow\", percentage: 0, separator: true, to: requiredAmount },\n        { description: \"nicht erreichbar\", from: noInterestReference, name: \"gray\", percentage: 0, separator: false, to: requiredAmount - environment.liquidity },\n        { description: \"nicht erreichbar, mit Verlust\", name: \"red\", percentage: 0, separator: false, to: noInterestReference }\n    ];\n}\n\nfunction calculateRequiredAmount(project: IProject, environment: IMonteCarloEnvironment) {\n    let amount = project.totalAmount;\n    const projectsSameYear = environment.projectsByStartYear[project.startYear];\n\n    for (const otherProject of projectsSameYear) {\n        if (otherProject === project) {\n            break;\n        }\n        amount += otherProject.totalAmount;\n    }\n    return amount;\n}\n\nfunction median(values: number[]) {\n    const half = Math.floor(values.length / 2);\n\n    if (values.length % 2) {\n        return values[half];\n    }\n\n    return (values[half - 1] + values[half]) / 2.0;\n}\n\nfunction computeBucket(bucketStart: number, bucketSize: number, simulatedValuesThisYear: number[], groups: IGroup[], valuesByGroup: {[p: string]: number}) {\n    const bucket: IBucket = {\n        max: Number.MIN_SAFE_INTEGER,\n        min: Number.MAX_SAFE_INTEGER,\n        // Needed to avoid deoptimization because of changed attribute orders in subBuckets. Initialize with const order\n        subBuckets: {\n            green: {\n                group: \"green\",\n                max: Number.MIN_SAFE_INTEGER,\n                min: Number.MAX_SAFE_INTEGER,\n                empty: true\n            },\n            yellow: {\n                group: \"yellow\",\n                max: Number.MIN_SAFE_INTEGER,\n                min: Number.MAX_SAFE_INTEGER,\n                empty: true\n            },\n            gray: {\n                group: \"gray\",\n                max: Number.MIN_SAFE_INTEGER,\n                min: Number.MAX_SAFE_INTEGER,\n                empty: true\n            },\n            red: {\n                group: \"red\",\n                max: Number.MIN_SAFE_INTEGER,\n                min: Number.MAX_SAFE_INTEGER,\n                empty: true\n            }\n        }\n    };\n\n    const bucketEnd = bucketStart + bucketSize;\n\n    for (let j = bucketStart; j < bucketEnd; ++j) {\n        const value = simulatedValuesThisYear[j];\n\n        bucket.min = Math.min(bucket.min, value);\n        bucket.max = Math.max(bucket.max, value);\n\n        const group = groupForValue(simulatedValuesThisYear[j], groups);\n        ++valuesByGroup[group.name];\n\n        const subBucket = bucket.subBuckets[group.name];\n        subBucket.min = Math.min(subBucket.min, value);\n        subBucket.max = Math.max(subBucket.max, value);\n        subBucket.empty = false;\n    }\n\n    return bucket;\n}\n\nfunction computeBuckets(groups: IGroup[], simulatedValuesThisYear: number[]) {\n    const NUMBER_OF_BUCKETS = 10;\n    const valuesByGroup: {[groupName: string]: number} = {\n        green: 0,\n        yellow: 0,\n        gray: 0,\n        red: 0\n    };\n\n    const bucketSize = Math.round(simulatedValuesThisYear.length / NUMBER_OF_BUCKETS);\n    const buckets: IBucket[] = [];\n\n    for (let i = 0; i < simulatedValuesThisYear.length; i += bucketSize) {\n        const bucket = computeBucket(i, bucketSize, simulatedValuesThisYear, groups, valuesByGroup);\n\n        buckets.push(bucket);\n    }\n\n    return { buckets, valuesByGroup };\n}\n\nfunction compareNumbersInverse(a: number, b: number): number {\n    return a - b;\n}\n\nfunction calculateProject(project: IProject, environment: IMonteCarloEnvironment): IProjectResult {\n    const requiredAmount = calculateRequiredAmount(project, environment);\n    const simulatedValuesThisYear = environment.simulatedValues[project.startYear];\n    simulatedValuesThisYear.sort(compareNumbersInverse);\n\n    const groups = createGroups(requiredAmount, environment.noInterestReferenceLine[project.startYear], environment);\n    const {buckets, valuesByGroup} = computeBuckets(groups, simulatedValuesThisYear);\n\n    const nonEmptyGroups = groups.filter(group => !!valuesByGroup[group.name]);\n    nonEmptyGroups.forEach(group => group.percentage = valuesByGroup[group.name] / simulatedValuesThisYear.length);\n\n    const oneSixth = Math.round(simulatedValuesThisYear.length / 6);\n    return {\n        buckets,\n        groups: nonEmptyGroups,\n        max: simulatedValuesThisYear[simulatedValuesThisYear.length - 1],\n        median: median(simulatedValuesThisYear),\n        min: simulatedValuesThisYear[0],\n        project,\n        twoThird: {\n            max: simulatedValuesThisYear[simulatedValuesThisYear.length - oneSixth],\n            min: simulatedValuesThisYear[oneSixth]\n        }\n    };\n}\n\nexport function syncMonteCarlo(options?: IMonteCarloSimulationOptions) {\n    const environment = createMonteCarloEnvironment(initializeOptions(options),);\n\n    let projects: IProjectResult[] = [];\n    for (const project of options!.projects!) {\n        projects.push(calculateProject(project, environment));\n    }\n\n    return projects;\n}\n\nexport function parallelMonteCarlo(userOptions?: IMonteCarloSimulationOptions) {\n    const options = initializeOptions(userOptions);\n    return parallel\n        .from(options.projects, { minValuesPerTask: 2, maxDegreeOfParallelism: parallel.defaultOptions().threadPool.maxThreads })\n        .inEnvironment(createMonteCarloEnvironment, options)\n        .map(calculateProject);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/transpiled/monte-carlo.ts"],"sourceRoot":""}