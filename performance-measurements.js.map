{"version":3,"sources":["webpack:///performance-measurements.js","webpack:///./~/eventemitter3/index.js","webpack:///./~/paralleljs/lib/parallel.js","webpack:///./~/process/browser.js","webpack:///./~/threads/lib/config.js","webpack:///./~/timers-browserify/main.js","webpack:///./~/threads/lib/index.js","webpack:///./~/threads/lib/defaults.js","webpack:///./src/paralleljs/knights-tour.ts","webpack:///./src/paralleljs/mandelbrot.ts","webpack:///./src/paralleljs/monte-carlo.ts","webpack:///./src/threads/knights-tour.ts","webpack:///./src/threads/mandelbrot.ts","webpack:///./src/threads/monte-carlo.ts","webpack:///./~/benchmark/benchmark.js","webpack:///./~/platform/platform.js","webpack:///./~/paralleljs/lib/eval.js","webpack:///./~/native-promise-only/lib/npo.src.js","webpack:///./~/threads/lib/defaults.browser.js","webpack:///./~/threads/lib/defaults.node.js","webpack:///./~/threads/lib/job.js","webpack:///./~/threads/lib/pool.js","webpack:///./~/threads/lib/worker.browser/slave-code-uri.js","webpack:///./~/threads/lib/worker.browser/slave-code.js","webpack:///./~/threads/lib/worker.browser/worker.js","webpack:///./~/threads/lib/worker.js","webpack:///./~/threads/lib/worker.node/worker.js","webpack:///./src/performance-measurement.ts"],"names":["webpackJsonp","module","exports","__webpack_require__","Events","EE","fn","context","once","this","EventEmitter","_events","_eventsCount","has","Object","prototype","hasOwnProperty","prefix","create","__proto__","eventNames","events","name","names","call","push","slice","getOwnPropertySymbols","concat","listeners","event","exists","evt","available","i","l","length","ee","Array","emit","a1","a2","a3","a4","a5","args","len","arguments","removeListener","undefined","apply","j","on","listener","removeAllListeners","off","addListener","setMaxListeners","prefixed","extend","from","to","Operation","_callbacks","_errCallbacks","_resolved","_result","Parallel","data","options","defaults","operation","resolve","requiredScripts","requiredFunctions","isCommonJS","isNode","window","setImmediate","cb","setTimeout","Worker","require","__dirname","self","URL","webkitURL","_supports","err","res","iE","then","errCb","evalPath","maxWorkers","cpus","navigator","hardwareConcurrency","synchronous","env","envNamespace","isSupported","getWorkerSource","preStr","join","toString","JSON","stringify","ns","func","_spawnWorker","wrk","src","postMessage","Error","blob","Blob","type","url","createObjectURL","e","spawn","that","newOp","onmessage","msg","terminate","onerror","_spawnMapWorker","done","map","doneOps","startedOps","_spawnReduceWorker","reduce","runningWorkers","splice","Math","floor","retData","defaultSetTimout","defaultClearTimeout","runTimeout","fun","cachedSetTimeout","runClearTimeout","marker","cachedClearTimeout","clearTimeout","cleanUpNextTick","draining","currentQueue","queue","queueIndex","drainQueue","timeout","run","Item","array","noop","process","nextTick","title","browser","argv","version","versions","binding","cwd","chdir","dir","umask","configDeepMerge","destObj","srcObj","ancestorProps","keys","forEach","propKey","srcValue","ancestorPropsAndThis","_typeof","getConfig","config","get","setConfig","set","__esModule","Symbol","iterator","obj","constructor","configuration","basepath","node","web","fallback","slaveScriptUrl","newConfig","default","clearImmediate","Timeout","id","clearFn","_id","_clearFn","Function","immediateIds","nextImmediateId","setInterval","clearInterval","close","unref","ref","enroll","item","msecs","_idleTimeoutId","_idleTimeout","unenroll","_unrefActive","active","_onTimeout","_interopRequireDefault","runnable","importScripts","_worker2","Pool","_config","_config2","_defaults","_defaults2","_pool","_pool2","_worker","global","knightTours","startPath","boardSize","moves","x","y","board","fill","numberOfFields","results","stack","pos","index","coordinate","n","fieldIndex","_stack","_fieldIndex","move","successor","accessible","pop","parallelJSKnightTours","start","successors","result","computeStartFields","_iterator","_isArray","isArray","_i","_ref","next","value","directSuccessor","_iterator2","_isArray2","_i2","_ref2","indirectSuccessor","startField","toursPerRun","memo","current","computeMandelbrotLine","calculateZ","c","z","real","iterations","pow","zI","line","Uint8ClampedArray","imageWidth","cI","max","scalingFactor","min","base","parallelJSMandelbrot","mandelbrotOptions","lines","__WEBPACK_IMPORTED_MODULE_0_lodash__","imageHeight","initializeOptions","assign","investmentAmount","liquidity","numRuns","numYears","performance","projects","seed","volatility","createMonteCarloEnvironment","simulateOutcomes","cashFlows","toAbsoluteIndices","indices","currentPortfolioValue","previousYearIndex","relativeYear","currentYearIndex","cashFlowStartOfYear","random","normal","year","randomPerformance","_year","projectsToCashFlows","projectsByThisYear","projectsByStartYear","cashFlow","project","totalAmount","calculateNoInterestReferenceLine","noInterestReferenceLine","investmentAmountLeft","Random","projectsToSimulate","taskIndex","valuesPerWorker","sort","a","b","startYear","arr","simulatedValues","calculateProject","environment","groupForValue","groups","find","group","createGroups","requiredAmount","noInterestReference","description","percentage","separator","calculateRequiredAmount","amount","projectsSameYear","otherProject","median","values","half","NUMBER_OF_BUCKETS","simulatedValuesThisYear","valuesByGroup","bucketSize","round","buckets","bucket","Number","MIN_VALUE","MAX_VALUE","subBuckets","subBucket","nonEmptyGroups","filter","oneSixth","twoThird","parallelJSMonteCarlo","userOptions","simulation","threadsKnightTours","pool","_ref3","reject","promise","Promise","_resolve","_reject","totalTours","job","tours","_iterator3","_isArray3","_i3","_ref4","send","transfer","buffer","threadsMandelbrot","promises","all","_project","threadsMonteCarlo","jobs","runInContext","Benchmark","bench","_","isPlainObject","isFunction","setOptions","counter","stats","cloneDeep","times","Deferred","clone","deferred","benchmark","clock","Event","timeStamp","now","Suite","suite","createFunction","body","anchor","freeDefine","amd","prop","uid","runScript","support","delay","_timerId","destroyElement","element","trash","appendChild","innerHTML","getFirstArgument","exec","getMean","sample","sum","getSource","isStringable","String","decompilation","replace","test","isHostType","object","property","rePrimitive","isString","freeExports","freeRequire","code","define","script","doc","createElement","sibling","getElementsByTagName","parent","parentNode","createTextNode","cloneNode","text","insertBefore","forOwn","key","each","split","toLowerCase","_original","aborted","teardown","running","cycle","cycles","count","compiled","timer","stop","callback","isFinite","hz","error","mean","moe","compare","formatNumber","number","invoke","benches","execute","async","isAsync","getNext","complete","cycleEvent","last","eventProps","target","onCycle","raiseIndex","onComplete","queued","defer","shift","currentTarget","onStart","toArray","separator1","separator2","arrayLike","abortSuite","resetting","calledBy","resetSuite","cancelled","reset","add","cloneSuite","filterSuite","aborting","abort","runSuite","indexOf","other","getScore","xA","sampleB","total","xB","getU","sampleA","getZ","u","size1","size2","sqrt","critical","zStat","sample1","sample2","maxSize","minSize","u1","u2","abs","uTable","changes","destination","source","changed","currValue","charAt","toStringBench","size","pm","isNaN","errorStr","isObject","isError","message","toFixed","rme","createCompiled","decompilable","fnArg","templateData","uidCounter","setup","interpolate","unit","begin","end","getRes","measured","divisor","microseconds","getTime","Infinity","string","template","timers","stringable","minTime","funcBody","isEmpty","elapsed","chrome","chromium","Interval","processObject","hrtime","microtimeObject","minBy","compute","enqueue","update","initCount","evaluate","df","sd","sem","variance","period","maxedOut","minSamples","maxTime","varOf","tTable","infinity","deviation","clocked","divisors","ceil","root","pick","contextProps","Date","RegExp","arrayRef","objectProto","log","unshift","req","document","partial","cloneDeepWith","onAbort","onError","onReset","platform","userAgent","layout","product","manufacturer","os","prerelease","methodName","reverse","objectTypes","function","nodeType","freeModule","freeGlobal","moduleExports","1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","__WEBPACK_AMD_DEFINE_RESULT__","capitalize","toUpperCase","cleanupOS","pattern","label","10.0","6.4","6.3","6.2","6.1","6.0","5.2","5.1","5.01","5.0","4.0","4.90","format","maxSafeInteger","trim","getClassOf","qualify","accumulator","parse","ua","getLayout","guesses","guess","getManufacturer","getName","getOS","getProduct","getVersion","patterns","toStringPlatform","isCustomContext","nav","isSpecialCasedOS","isModuleScope","thisBinding","oldRoot","likeChrome","objectClass","airRuntimeClass","enviroClass","javaClass","java","phantomClass","rhino","alpha","beta","opera","operamini","operaClass","reOpera","arch","useFeatures","Apple","iPad","iPhone","iPod","Archos","Amazon","Kindle","Kindle Fire","Asus","Transformer","Barnes & Noble","Nook","BlackBerry","PlayBook","Google","Google TV","Nexus","HP","TouchPad","HTC","LG","Microsoft","Xbox","Xbox One","Motorola","Xoom","Nintendo","Wii U","Wii","Nokia","Lumia","Samsung","Galaxy S","Galaxy S2","Galaxy S3","Galaxy S4","Sony","PlayStation 4","PlayStation 3","PlayStation Vita","parseFloat","lang","System","getProperty","system","runtime","flash","Capabilities","phantom","major","minor","patch","documentMode","appMinorVersion","external","parseInt","architecture","family","cpuClass","p","definition","schedule","scheduling_queue","drain","isThenable","o","_then","o_type","notify","chain","notifyIsolated","state","success","failure","ret","TypeError","triggered","def","def_wrapper","MakeDefWrapper","iteratePromises","Constructor","resolver","rejecter","idx","MakeDef","executor","__NPO__","builtInProp","ToString","defineProperty","val","writable","configurable","first","f","PromisePrototype","msgs","_os","_classCallCheck","instance","_possibleConstructorReturn","ReferenceError","_inherits","subClass","superClass","enumerable","setPrototypeOf","_eventemitter","_eventemitter2","Job","_EventEmitter","_this","thread","runArgs","sendArgs","_len","_key","_len2","_key2","executeOn","_thread$once$once$run","_thread$once$once","bind","_this2","_job","_job2","threads","idleThreads","jobQueue","handleNewJob","dequeue","killAll","kill","queueJob","handleJobSuccess","_len3","_key3","handleJobError","_this3","lastCreatedJob","_len4","responseArgs","_key4","handleJobDone","_this4","threadCount","threadIndex","_slaveCode","_slaveCode2","slaveCodeDataUri","encodeURI","createBlobURL","BlobBuilder","blobBuilder","append","getBlob","joinPaths","path1","path2","prependScriptUrl","scriptUrl","convertToArray","input","outputArray","logError","console","filename","lineno","fileName","match","substr","_slaveCodeUri","_slaveCodeUri2","initialScript","currentRunnable","currentImportScripts","initWorker","worker","addEventListener","handleMessage","handleError","toRun","alreadyInitializedToRun","runMethod","runScripts","method","methodStr","substring","lastIndexOf","initByMethod","scripts","initByScripts","param","transferables","doRun","resolved","rejected","runnablesMatch","importScriptsMatch","progress","handleProgress","response","preventDefault","_child_process","_child_process2","_path","_path2","initialRunnable","slave","fork","prefixedScriptPath","initByScript","addAsyncTest","optionsOrTitle","asyncFn","addThreadJsTest","_fn","argsWithPool","__WEBPACK_IMPORTED_MODULE_14_threads__","addKnightBoardTests","boardSizes","knightRunner6x6","checked","_loop","__WEBPACK_IMPORTED_MODULE_3__transpiled_knights_tour__","__WEBPACK_IMPORTED_MODULE_5__dynamic_knights_tour__","__WEBPACK_IMPORTED_MODULE_10__paralleljs_knights_tour__","__WEBPACK_IMPORTED_MODULE_13__threads_knights_tour__","_ret","addMonteCarloTest","runOptions","createProjects","numberOfProjects","configName","toLocaleString","__WEBPACK_IMPORTED_MODULE_7__dynamic_monte_carlo__","__WEBPACK_IMPORTED_MODULE_4__transpiled_monte_carlo__","__WEBPACK_IMPORTED_MODULE_9__paralleljs_monte_carlo__","__WEBPACK_IMPORTED_MODULE_11__threads_monte_carlo__","addMonteCarloTests","oneMillionRuns","querySelector","monteCarloOptions","runs","_arr","addMandelbrotTests","mandelbrotHeight","mandelbrotWidth","mandelbrotIterations","onlyDefaultScheduling","__WEBPACK_IMPORTED_MODULE_6__dynamic_mandelbrot__","taskSizes","_loop2","_i4","valuesPerTask","parallelOptions","maxValuesPerTask","minValuesPerTask","__WEBPACK_IMPORTED_MODULE_2__transpiled_mandelbrot__","_ret2","__WEBPACK_IMPORTED_MODULE_8__paralleljs_mandelbrot__","__WEBPACK_IMPORTED_MODULE_12__threads_mandelbrot__","measure","runMonteCarlo","runMandelbrot","runKnightTour","allTestsSuite","setCheckboxes","checkbox","parts","startsWith","appendTestResults","benchmarks","info","jsonOutputField","textContent","runButton","disabled","initResultTable","clearOutputTable","outputTable","tBodies","removeChild","createTBody","row","insertRow","_suite$name$split","nameParts","insertCell","columns","tHead","rows","cells","__WEBPACK_IMPORTED_MODULE_1_benchmark__","querySelectorAll"],"mappings":"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","file":"performance-measurements.js","sourcesContent":["webpackJsonp([0],[\n/* 0 */,\n/* 1 */,\n/* 2 */,\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @api private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {Mixed} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @api private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @api public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @api public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {String|Symbol} event The event name.\n * @param {Boolean} exists Only check if there are listeners.\n * @returns {Array|Boolean}\n * @api public\n */\nEventEmitter.prototype.listeners = function listeners(event, exists) {\n  var evt = prefix ? prefix + event : event\n    , available = this._events[evt];\n\n  if (exists) return !!available;\n  if (!available) return [];\n  if (available.fn) return [available.fn];\n\n  for (var i = 0, l = available.length, ee = new Array(l); i < l; i++) {\n    ee[i] = available[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {String|Symbol} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @api public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {String|Symbol} event The event name.\n * @param {Function} fn The listener function.\n * @param {Mixed} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @api public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  var listener = new EE(fn, context || this)\n    , evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) this._events[evt] = listener, this._eventsCount++;\n  else if (!this._events[evt].fn) this._events[evt].push(listener);\n  else this._events[evt] = [this._events[evt], listener];\n\n  return this;\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {String|Symbol} event The event name.\n * @param {Function} fn The listener function.\n * @param {Mixed} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @api public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  var listener = new EE(fn, context || this, true)\n    , evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) this._events[evt] = listener, this._eventsCount++;\n  else if (!this._events[evt].fn) this._events[evt].push(listener);\n  else this._events[evt] = [this._events[evt], listener];\n\n  return this;\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {String|Symbol} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {Mixed} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @api public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    if (--this._eventsCount === 0) this._events = new Events();\n    else delete this._events[evt];\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n         listeners.fn === fn\n      && (!once || listeners.once)\n      && (!context || listeners.context === context)\n    ) {\n      if (--this._eventsCount === 0) this._events = new Events();\n      else delete this._events[evt];\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n           listeners[i].fn !== fn\n        || (once && !listeners[i].once)\n        || (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else if (--this._eventsCount === 0) this._events = new Events();\n    else delete this._events[evt];\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {String|Symbol} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @api public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) {\n      if (--this._eventsCount === 0) this._events = new Events();\n      else delete this._events[evt];\n    }\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// This function doesn't apply anymore.\n//\nEventEmitter.prototype.setMaxListeners = function setMaxListeners() {\n  return this;\n};\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif (true) {\n  module.exports = EventEmitter;\n}\n\n\n/***/ },\n/* 4 */,\n/* 5 */,\n/* 6 */,\n/* 7 */,\n/* 8 */,\n/* 9 */,\n/* 10 */\n/***/ function(module, exports) {\n\n﻿(function () {\n\tvar isCommonJS = typeof module !== 'undefined' && module.exports;\n\tvar isNode = !(typeof window !== 'undefined' && this === window);\n\tvar setImmediate = setImmediate || function (cb) {\n\t\tsetTimeout(cb, 0);\n\t};\n\tvar Worker = isNode ? require(__dirname + '/Worker.js') : self.Worker;\n\tvar URL = typeof self !== 'undefined' ? (self.URL ? self.URL : self.webkitURL) : null;\n\tvar _supports = (isNode || self.Worker) ? true : false; // node always supports parallel\n\n\tfunction extend(from, to) {\n\t\tif (!to) to = {};\n\t\tfor (var i in from) {\n\t\t\tif (to[i] === undefined) to[i] = from[i];\n\t\t}\n\t\treturn to;\n\t}\n\n\tfunction Operation() {\n\t\tthis._callbacks = [];\n\t\tthis._errCallbacks = [];\n\n\t\tthis._resolved = 0;\n\t\tthis._result = null;\n\t}\n\n\tOperation.prototype.resolve = function (err, res) {\n\t\tif (!err) {\n\t\t\tthis._resolved = 1;\n\t\t\tthis._result = res;\n\n\t\t\tfor (var i = 0; i < this._callbacks.length; ++i) {\n\t\t\t\tthis._callbacks[i](res);\n\t\t\t}\n\t\t} else {\n\t\t\tthis._resolved = 2;\n\t\t\tthis._result = err;\n\n\t\t\tfor (var iE = 0; iE < this._errCallbacks.length; ++iE) {\n\t\t\t\tthis._errCallbacks[iE](err);\n\t\t\t}\n\t\t}\n\n\t\tthis._callbacks = [];\n\t\tthis._errCallbacks = [];\n\t};\n\n\tOperation.prototype.then = function (cb, errCb) {\n\t\tif (this._resolved === 1) { // result\n\t\t\tif (cb) {\n\t\t\t\tcb(this._result);\n\t\t\t}\n\n\t\t\treturn;\n\t\t} else if (this._resolved === 2) { // error\n\t\t\tif (errCb) {\n\t\t\t\terrCb(this._result);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tif (cb) {\n\t\t\tthis._callbacks[this._callbacks.length] = cb;\n\t\t}\n\n\t\tif (errCb) {\n\t\t\tthis._errCallbacks[this._errCallbacks.length] = errCb;\n\t\t}\n\t\treturn this;\n\t};\n\n\tvar defaults = {\n\t\tevalPath: isNode ? __dirname + '/eval.js' : null,\n\t\tmaxWorkers: isNode ? require('os').cpus().length : (navigator.hardwareConcurrency || 4),\n\t\tsynchronous: true,\n\t\tenv: {},\n\t\tenvNamespace: 'env'\n\t};\n\n\tfunction Parallel(data, options) {\n\t\tthis.data = data;\n\t\tthis.options = extend(defaults, options);\n\t\tthis.operation = new Operation();\n\t\tthis.operation.resolve(null, this.data);\n\t\tthis.requiredScripts = [];\n\t\tthis.requiredFunctions = [];\n\t}\n\n\t// static method\n\tParallel.isSupported = function () { return _supports; }\n\n\tParallel.prototype.getWorkerSource = function (cb, env) {\n\t\tvar that = this;\n\t\tvar preStr = '';\n\t\tvar i = 0;\n\t\tif (!isNode && this.requiredScripts.length !== 0) {\n\t\t\tpreStr += 'importScripts(\"' + this.requiredScripts.join('\",\"') + '\");\\r\\n';\n\t\t}\n\n\t\tfor (i = 0; i < this.requiredFunctions.length; ++i) {\n\t\t\tif (this.requiredFunctions[i].name) {\n\t\t\t\tpreStr += 'var ' + this.requiredFunctions[i].name + ' = ' + this.requiredFunctions[i].fn.toString() + ';';\n\t\t\t} else {\n\t\t\t\tpreStr += this.requiredFunctions[i].fn.toString();\n\t\t\t}\n\t\t}\n\n\t\tenv = JSON.stringify(env || {});\n\n\t\tvar ns = this.options.envNamespace;\n\n\t\tif (isNode) {\n\t\t\treturn preStr + 'process.on(\"message\", function(e) {global.' + ns + ' = ' + env + ';process.send(JSON.stringify((' + cb.toString() + ')(JSON.parse(e).data)))})';\n\t\t} else {\n\t\t\treturn preStr + 'self.onmessage = function(e) {var global = {}; global.' + ns + ' = ' + env + ';self.postMessage((' + cb.toString() + ')(e.data))}';\n\t\t}\n\t};\n\n\tParallel.prototype.require = function () {\n\t\tvar args = Array.prototype.slice.call(arguments, 0),\n\t\t\tfunc;\n\n\t\tfor (var i = 0; i < args.length; i++) {\n\t\t\tfunc = args[i];\n\n\t\t\tif (typeof func === 'string') {\n\t\t\t\tthis.requiredScripts.push(func);\n\t\t\t} else if (typeof func === 'function') {\n\t\t\t\tthis.requiredFunctions.push({ fn: func });\n\t\t\t} else if (typeof func === 'object') {\n\t\t\t\tthis.requiredFunctions.push(func);\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t};\n\n\tParallel.prototype._spawnWorker = function (cb, env) {\n\t\tvar wrk;\n\t\tvar src = this.getWorkerSource(cb, env);\n\t\tif (isNode) {\n\t\t\twrk = new Worker(this.options.evalPath);\n\t\t\twrk.postMessage(src);\n\t\t} else {\n\t\t\tif (Worker === undefined) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (this.requiredScripts.length !== 0) {\n\t\t\t\t\tif (this.options.evalPath !== null) {\n\t\t\t\t\t\twrk = new Worker(this.options.evalPath);\n\t\t\t\t\t\twrk.postMessage(src);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthrow new Error('Can\\'t use required scripts without eval.js!');\n\t\t\t\t\t}\n\t\t\t\t} else if (!URL) {\n\t\t\t\t\tthrow new Error('Can\\'t create a blob URL in this browser!');\n\t\t\t\t} else {\n\t\t\t\t\tvar blob = new Blob([src], { type: 'text/javascript' });\n\t\t\t\t\tvar url = URL.createObjectURL(blob);\n\n\t\t\t\t\twrk = new Worker(url);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\tif (this.options.evalPath !== null) { // blob/url unsupported, cross-origin error\n\t\t\t\t\twrk = new Worker(this.options.evalPath);\n\t\t\t\t\twrk.postMessage(src);\n\t\t\t\t} else {\n\t\t\t\t\tthrow e;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn wrk;\n\t};\n\n\tParallel.prototype.spawn = function (cb, env) {\n\t\tvar that = this;\n\t\tvar newOp = new Operation();\n\n\t\tenv = extend(this.options.env, env || {});\n\n\t\tthis.operation.then(function () {\n\t\t\tvar wrk = that._spawnWorker(cb, env);\n\t\t\tif (wrk !== undefined) {\n\t\t\t\twrk.onmessage = function (msg) {\n\t\t\t\t\twrk.terminate();\n\t\t\t\t\tthat.data = msg.data;\n\t\t\t\t\tnewOp.resolve(null, that.data);\n\t\t\t\t};\n\t\t\t\twrk.onerror = function (e) {\n\t\t\t\t\twrk.terminate();\n\t\t\t\t\tnewOp.resolve(e, null);\n\t\t\t\t};\n\t\t\t\twrk.postMessage(that.data);\n\t\t\t} else if (that.options.synchronous) {\n\t\t\t\tsetImmediate(function () {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tthat.data = cb(that.data);\n\t\t\t\t\t\tnewOp.resolve(null, that.data);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\tnewOp.resolve(e, null);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthrow new Error('Workers do not exist and synchronous operation not allowed!');\n\t\t\t}\n\t\t});\n\t\tthis.operation = newOp;\n\t\treturn this;\n\t};\n\n\tParallel.prototype._spawnMapWorker = function (i, cb, done, env, wrk) {\n\t\tvar that = this;\n\n\t\tif (!wrk) wrk = that._spawnWorker(cb, env);\n\n\t\tif (wrk !== undefined) {\n\t\t\twrk.onmessage = function (msg) {\n\t\t\t\tthat.data[i] = msg.data;\n\t\t\t\tdone(null, wrk);\n\t\t\t};\n\t\t\twrk.onerror = function (e) {\n\t\t\t\twrk.terminate();\n\t\t\t\tdone(e);\n\t\t\t};\n\t\t\twrk.postMessage(that.data[i]);\n\t\t} else if (that.options.synchronous) {\n\t\t\tsetImmediate(function () {\n\t\t\t\tthat.data[i] = cb(that.data[i]);\n\t\t\t\tdone();\n\t\t\t});\n\t\t} else {\n\t\t\tthrow new Error('Workers do not exist and synchronous operation not allowed!');\n\t\t}\n\t};\n\n\tParallel.prototype.map = function (cb, env) {\n\t\tenv = extend(this.options.env, env || {});\n\n\t\tif (!this.data.length) {\n\t\t\treturn this.spawn(cb, env);\n\t\t}\n\n\t\tvar that = this;\n\t\tvar startedOps = 0;\n\t\tvar doneOps = 0;\n\t\tfunction done(err, wrk) {\n\t\t\tif (err) {\n\t\t\t\tnewOp.resolve(err, null);\n\t\t\t} else if (++doneOps === that.data.length) {\n\t\t\t\tnewOp.resolve(null, that.data);\n\t\t\t\tif (wrk) wrk.terminate();\n\t\t\t} else if (startedOps < that.data.length) {\n\t\t\t\tthat._spawnMapWorker(startedOps++, cb, done, env, wrk);\n\t\t\t} else {\n\t\t\t\tif (wrk) wrk.terminate();\n\t\t\t}\n\t\t}\n\n\t\tvar newOp = new Operation();\n\t\tthis.operation.then(function () {\n\t\t\tfor (; startedOps - doneOps < that.options.maxWorkers && startedOps < that.data.length; ++startedOps) {\n\t\t\t\tthat._spawnMapWorker(startedOps, cb, done, env);\n\t\t\t}\n\t\t}, function (err) {\n\t\t\tnewOp.resolve(err, null);\n\t\t});\n\t\tthis.operation = newOp;\n\t\treturn this;\n\t};\n\n\tParallel.prototype._spawnReduceWorker = function (data, cb, done, env, wrk) {\n\t\tvar that = this;\n\t\tif (!wrk) wrk = that._spawnWorker(cb, env);\n\n\t\tif (wrk !== undefined) {\n\t\t\twrk.onmessage = function (msg) {\n\t\t\t\tthat.data[that.data.length] = msg.data;\n\t\t\t\tdone(null, wrk);\n\t\t\t};\n\t\t\twrk.onerror = function (e) {\n\t\t\t\twrk.terminate();\n\t\t\t\tdone(e, null);\n\t\t\t}\n\t\t\twrk.postMessage(data);\n\t\t} else if (that.options.synchronous) {\n\t\t\tsetImmediate(function () {\n\t\t\t\tthat.data[that.data.length] = cb(data);\n\t\t\t\tdone();\n\t\t\t});\n\t\t} else {\n\t\t\tthrow new Error('Workers do not exist and synchronous operation not allowed!');\n\t\t}\n\t};\n\n\tParallel.prototype.reduce = function (cb, env) {\n\t\tenv = extend(this.options.env, env || {});\n\n\t\tif (!this.data.length) {\n\t\t\tthrow new Error('Can\\'t reduce non-array data');\n\t\t}\n\n\t\tvar runningWorkers = 0;\n\t\tvar that = this;\n\t\tfunction done(err, wrk) {\n\t\t\t--runningWorkers;\n\t\t\tif (err) {\n\t\t\t\tnewOp.resolve(err, null);\n\t\t\t} else if (that.data.length === 1 && runningWorkers === 0) {\n\t\t\t\tthat.data = that.data[0];\n\t\t\t\tnewOp.resolve(null, that.data);\n\t\t\t\tif (wrk) wrk.terminate();\n\t\t\t} else if (that.data.length > 1) {\n\t\t\t\t++runningWorkers;\n\t\t\t\tthat._spawnReduceWorker([that.data[0], that.data[1]], cb, done, env, wrk);\n\t\t\t\tthat.data.splice(0, 2);\n\t\t\t} else {\n\t\t\t\tif (wrk) wrk.terminate();\n\t\t\t}\n\t\t}\n\n\t\tvar newOp = new Operation();\n\t\tthis.operation.then(function () {\n\t\t\tif (that.data.length === 1) {\n\t\t\t\tnewOp.resolve(null, that.data[0]);\n\t\t\t} else {\n\t\t\t\tfor (var i = 0; i < that.options.maxWorkers && i < Math.floor(that.data.length / 2) ; ++i) {\n\t\t\t\t\t++runningWorkers;\n\t\t\t\t\tthat._spawnReduceWorker([that.data[i * 2], that.data[i * 2 + 1]], cb, done, env);\n\t\t\t\t}\n\n\t\t\t\tthat.data.splice(0, i * 2);\n\t\t\t}\n\t\t});\n\t\tthis.operation = newOp;\n\t\treturn this;\n\t};\n\n\tParallel.prototype.then = function (cb, errCb) {\n\t\tvar that = this;\n\t\tvar newOp = new Operation();\n\t\terrCb = typeof errCb === 'function' ? errCb : function(){};\n\n\t\tthis.operation.then(function () {\n\t\t\tvar retData;\n\n\t\t\ttry {\n\t\t\t\tif (cb) {\n\t\t\t\t\tretData = cb(that.data);\n\t\t\t\t\tif (retData !== undefined) {\n\t\t\t\t\t\tthat.data = retData;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tnewOp.resolve(null, that.data);\n\t\t\t} catch (e) {\n\t\t\t\tif (errCb) {\n\t\t\t\t\tretData = errCb(e);\n\t\t\t\t\tif (retData !== undefined) {\n\t\t\t\t\t\tthat.data = retData;\n\t\t\t\t\t}\n\n\t\t\t\t\tnewOp.resolve(null, that.data);\n\t\t\t\t} else {\n\t\t\t\t\tnewOp.resolve(null, e);\n\t\t\t\t}\n\t\t\t}\n\t\t}, function (err) {\n\t\t\tif (errCb) {\n\t\t\t\tvar retData = errCb(err);\n\t\t\t\tif (retData !== undefined) {\n\t\t\t\t\tthat.data = retData;\n\t\t\t\t}\n\n\t\t\t\tnewOp.resolve(null, that.data);\n\t\t\t} else {\n\t\t\t\tnewOp.resolve(null, err);\n\t\t\t}\n\t\t});\n\t\tthis.operation = newOp;\n\t\treturn this;\n\t};\n\n\tif (isCommonJS) {\n\t\tmodule.exports = Parallel;\n\t} else {\n\t\tself.Parallel = Parallel;\n\t}\n})();\n\n\n/***/ },\n/* 11 */\n/***/ function(module, exports) {\n\n// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n/***/ },\n/* 12 */\n/***/ function(module, exports) {\n\n\"use strict\";\n'use strict';\n\nexports.__esModule = true;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nexports.getConfig = getConfig;\nexports.setConfig = setConfig;\nvar configuration = {\n  basepath: {\n    node: '',\n    web: ''\n  },\n  fallback: {\n    slaveScriptUrl: ''\n  }\n};\n\nfunction configDeepMerge(destObj, srcObj) {\n  var ancestorProps = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n\n  Object.keys(srcObj).forEach(function (propKey) {\n    var srcValue = srcObj[propKey];\n    var ancestorPropsAndThis = ancestorProps.concat([propKey]);\n\n    if ((typeof srcValue === 'undefined' ? 'undefined' : _typeof(srcValue)) === 'object') {\n      if (typeof destObj[propKey] !== 'undefined' && _typeof(destObj[propKey]) !== 'object') {\n        throw new Error('Expected config property not to be an object: ' + ancestorPropsAndThis.join('.'));\n      }\n      configDeepMerge(destObj[propKey], srcValue, ancestorPropsAndThis);\n    } else {\n      if (_typeof(destObj[propKey]) === 'object') {\n        throw new Error('Expected config property to be an object: ' + ancestorPropsAndThis.join('.'));\n      }\n      destObj[propKey] = srcValue;\n    }\n  });\n}\n\nvar config = {\n  get: function get() {\n    return configuration;\n  },\n\n  set: function set(newConfig) {\n    if ((typeof newConfig === 'undefined' ? 'undefined' : _typeof(newConfig)) !== 'object') {\n      throw new Error('Expected config object.');\n    }\n\n    configDeepMerge(configuration, newConfig);\n  }\n};\n\nexports.default = config;\nfunction getConfig() {\n  return config.get();\n}\n\nfunction setConfig() {\n  return config.set.apply(config, arguments);\n}\n//# sourceMappingURL=config.js.map\n\n\n/***/ },\n/* 13 */\n/***/ function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(setImmediate, clearImmediate) {var nextTick = __webpack_require__(11).nextTick;\nvar apply = Function.prototype.apply;\nvar slice = Array.prototype.slice;\nvar immediateIds = {};\nvar nextImmediateId = 0;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function() {\n  return new Timeout(apply.call(setTimeout, window, arguments), clearTimeout);\n};\nexports.setInterval = function() {\n  return new Timeout(apply.call(setInterval, window, arguments), clearInterval);\n};\nexports.clearTimeout =\nexports.clearInterval = function(timeout) { timeout.close(); };\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\nTimeout.prototype.close = function() {\n  this._clearFn.call(window, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function(item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function(item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function(item) {\n  clearTimeout(item._idleTimeoutId);\n\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout)\n        item._onTimeout();\n    }, msecs);\n  }\n};\n\n// That's not how node.js implements it but the exposed api is the same.\nexports.setImmediate = typeof setImmediate === \"function\" ? setImmediate : function(fn) {\n  var id = nextImmediateId++;\n  var args = arguments.length < 2 ? false : slice.call(arguments, 1);\n\n  immediateIds[id] = true;\n\n  nextTick(function onNextTick() {\n    if (immediateIds[id]) {\n      // fn.call() is faster so we optimize for the common use-case\n      // @see http://jsperf.com/call-apply-segu\n      if (args) {\n        fn.apply(null, args);\n      } else {\n        fn.call(null);\n      }\n      // Prevent ids from leaking\n      exports.clearImmediate(id);\n    }\n  });\n\n  return id;\n};\n\nexports.clearImmediate = typeof clearImmediate === \"function\" ? clearImmediate : function(id) {\n  delete immediateIds[id];\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13).setImmediate, __webpack_require__(13).clearImmediate))\n\n/***/ },\n/* 14 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n\nexports.__esModule = true;\nexports.Pool = exports.defaults = exports.config = undefined;\nexports.spawn = spawn;\n\n__webpack_require__(26);\n\nvar _config = __webpack_require__(12);\n\nvar _config2 = _interopRequireDefault(_config);\n\nvar _defaults = __webpack_require__(15);\n\nvar _defaults2 = _interopRequireDefault(_defaults);\n\nvar _pool = __webpack_require__(31);\n\nvar _pool2 = _interopRequireDefault(_pool);\n\nvar _worker = __webpack_require__(35);\n\nvar _worker2 = _interopRequireDefault(_worker);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.config = _config2.default;\nexports.defaults = _defaults2.default;\nexports.Pool = _pool2.default;\nfunction spawn() {\n  var runnable = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n  var importScripts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n\n  return new _worker2.default(runnable, importScripts);\n}\n\nexports.default = {\n  config: _config2.default,\n  defaults: _defaults2.default,\n  Pool: _pool2.default,\n  spawn: spawn,\n  Worker: _worker2.default\n};\n//# sourceMappingURL=index.js.map\n\n\n/***/ },\n/* 15 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(process) {'use strict';\n\n/*eslint-env node*/\n/*\n * This file is only a stub to make './defaults' resolve the './defaults.node' module.\n * Loading the browser defaults into the browser bundle is done in the gulpfile by\n * configuring a browserify override.\n */\n\nif (typeof process !== 'undefined' && 'pid' in process) {\n  module.exports = __webpack_require__(29);\n} else {\n  module.exports = __webpack_require__(28);\n}\n//# sourceMappingURL=defaults.js.map\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(11)))\n\n/***/ },\n/* 16 */,\n/* 17 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(global) {/* unused harmony export knightTours */\n/* harmony export (immutable) */ exports[\"a\"] = parallelJSKnightTours;\nvar Parallel = __webpack_require__(10);\nfunction knightTours(startPath, boardSize) {\n    var moves = [{ x: -2, y: -1 }, { x: -2, y: 1 }, { x: -1, y: -2 }, { x: -1, y: 2 }, { x: 1, y: -2 }, { x: 1, y: 2 }, { x: 2, y: -1 }, { x: 2, y: 1 }];\n    var board = new Array(boardSize * boardSize);\n    board.fill(0);\n    var numberOfFields = boardSize * boardSize;\n    var results = 0;\n    var stack = startPath.map(function (pos, index) {\n        return { coordinate: pos, n: index + 1 };\n    });\n    for (var index = 0; index < startPath.length - 1; ++index) {\n        var fieldIndex = startPath[index].x * boardSize + startPath[index].y;\n        board[fieldIndex] = index + 1;\n    }\n    while (stack.length > 0) {\n        var _stack = stack[stack.length - 1],\n            coordinate = _stack.coordinate,\n            n = _stack.n;\n\n        var _fieldIndex = coordinate.x * boardSize + coordinate.y;\n        if (board[_fieldIndex] !== 0) {\n            // back tracking\n            board[_fieldIndex] = 0;\n            stack.pop(); // remove current value\n            continue;\n        }\n        // entry\n        if (n === numberOfFields) {\n            ++results;\n            stack.pop();\n            continue;\n        }\n        board[_fieldIndex] = n;\n        for (var i = 0; i < moves.length; ++i) {\n            var move = moves[i];\n            var successor = { x: coordinate.x + move.x, y: coordinate.y + move.y };\n            // not outside of board and not yet accessed\n            var accessible = successor.x >= 0 && successor.y >= 0 && successor.x < boardSize && successor.y < boardSize && board[successor.x * boardSize + successor.y] === 0;\n            if (accessible) {\n                stack.push({ coordinate: successor, n: n + 1 });\n            }\n        }\n    }\n    return results;\n}\nfunction parallelJSKnightTours(start, boardSize) {\n    function successors(coordinate) {\n        var moves = [{ x: -2, y: -1 }, { x: -2, y: 1 }, { x: -1, y: -2 }, { x: -1, y: 2 }, { x: 1, y: -2 }, { x: 1, y: 2 }, { x: 2, y: -1 }, { x: 2, y: 1 }];\n        var result = [];\n        for (var i = 0; i < moves.length; ++i) {\n            var move = moves[i];\n            var successor = { x: coordinate.x + move.x, y: coordinate.y + move.y };\n            var accessible = successor.x >= 0 && successor.y >= 0 && successor.x < boardSize && successor.y < boardSize && (successor.x !== start.x || successor.y !== start.y) && successor.x !== coordinate.x && successor.y !== coordinate.y;\n            if (accessible) {\n                result.push(successor);\n            }\n        }\n        return result;\n    }\n    function computeStartFields() {\n        var result = [];\n        for (var _iterator = successors(start), _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n            var _ref;\n\n            if (_isArray) {\n                if (_i >= _iterator.length) break;\n                _ref = _iterator[_i++];\n            } else {\n                _i = _iterator.next();\n                if (_i.done) break;\n                _ref = _i.value;\n            }\n\n            var directSuccessor = _ref;\n\n            for (var _iterator2 = successors(directSuccessor), _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {\n                var _ref2;\n\n                if (_isArray2) {\n                    if (_i2 >= _iterator2.length) break;\n                    _ref2 = _iterator2[_i2++];\n                } else {\n                    _i2 = _iterator2.next();\n                    if (_i2.done) break;\n                    _ref2 = _i2.value;\n                }\n\n                var indirectSuccessor = _ref2;\n\n                result.push([start, directSuccessor, indirectSuccessor]);\n            }\n        }\n        return result;\n    }\n    return new Parallel(computeStartFields(), { env: { boardSize: boardSize } }).require(knightTours).map(function (startField) {\n        return knightTours(startField, global.env.boardSize);\n    }).reduce(function (toursPerRun) {\n        return toursPerRun.reduce(function (memo, current) {\n            return memo + current;\n        }, 0);\n    });\n    // The reduce operation needs to wait until the map operation is complete, switches back to the main thread and then\n    // a new worker is spawned for each reduce step, e.g. for [1, 2, 3, 4, 5, 6] the three workers with [1, 2], [3, 4], [5, 6]\n    // then the sub sequent workers [3, 7] and finally, [10, 11] are spawned...\n}\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))\n\n/***/ },\n/* 18 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(global) {/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_lodash__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_lodash___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_lodash__);\n/* unused harmony export computeMandelbrotLine */\n/* harmony export (immutable) */ exports[\"a\"] = parallelJSMandelbrot;\nvar Parallel = __webpack_require__(10);\n\nfunction computeMandelbrotLine(y, options) {\n    function calculateZ(c) {\n        var z = { i: c.i, real: c.real };\n        var n = 0;\n        for (; n < options.iterations; ++n) {\n            if (Math.pow(z.real, 2) + Math.pow(z.i, 2) > 4) {\n                break;\n            }\n            // z ** 2 + c\n            var zI = z.i;\n            z.i = 2 * z.real * z.i + c.i;\n            z.real = Math.pow(z.real, 2) - Math.pow(zI, 2) + c.real;\n        }\n        return n;\n    }\n    var line = new Uint8ClampedArray(options.imageWidth * 4);\n    var cI = options.max.i - y * options.scalingFactor.i;\n    for (var x = 0; x < options.imageWidth; ++x) {\n        var c = {\n            i: cI,\n            real: options.min.real + x * options.scalingFactor.real\n        };\n        var n = calculateZ(c);\n        var base = x * 4;\n        /* tslint:disable:no-bitwise */\n        line[base] = n & 0xFF;\n        line[base + 1] = n & 0xFF00;\n        line[base + 2] = n & 0xFF0000;\n        line[base + 3] = 255;\n    }\n    return line;\n}\nfunction parallelJSMandelbrot(mandelbrotOptions) {\n    var lines = __WEBPACK_IMPORTED_MODULE_0_lodash__[\"range\"](mandelbrotOptions.imageHeight);\n    return new Parallel(lines, { env: mandelbrotOptions }).require(computeMandelbrotLine).map(function (line) {\n        return computeMandelbrotLine(line, global.env);\n    });\n}\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))\n\n/***/ },\n/* 19 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(global) {/* harmony export (immutable) */ exports[\"a\"] = parallelJSMonteCarlo;\nvar Parallel = __webpack_require__(10);\nfunction initializeOptions(options) {\n    return Object.assign({}, {\n        investmentAmount: 1000000,\n        liquidity: 10000,\n        numRuns: 10000,\n        numYears: 10,\n        performance: 0,\n        projects: [],\n        seed: undefined,\n        volatility: 0.01\n    }, options);\n}\nfunction createMonteCarloEnvironment(options) {\n    var random = new self.Random(10);\n    /**\n     * Performs the monte carlo simulation for all years and num runs.\n     * @param cashFlows the cash flows\n     * @returns {number[][]} the simulated outcomes grouped by year\n     */\n    function simulateOutcomes(cashFlows, numYears) {\n        function toAbsoluteIndices(indices) {\n            var currentPortfolioValue = options.investmentAmount;\n            var previousYearIndex = 100;\n            for (var relativeYear = 0; relativeYear < indices.length; ++relativeYear) {\n                var currentYearIndex = indices[relativeYear];\n                var cashFlowStartOfYear = relativeYear === 0 ? 0 : cashFlows[relativeYear - 1];\n                // scale current value with performance gain according to index\n                var performance = currentYearIndex / previousYearIndex;\n                currentPortfolioValue = (currentPortfolioValue + cashFlowStartOfYear) * performance;\n                indices[relativeYear] = 1 + random.normal(performance, options.volatility);\n                previousYearIndex = currentYearIndex;\n            }\n            return indices;\n        }\n        var result = new Array(options.numYears);\n        for (var year = 0; year <= numYears; ++year) {\n            result[year] = new Array(options.numRuns);\n        }\n        for (var run = 0; run < options.numRuns; run++) {\n            var indices = [100];\n            for (var i = 1; i <= numYears; i++) {\n                // const randomPerformance = 1 + random.normal(options.performance, options.volatility);\n                var randomPerformance = 1 + Math.random();\n                indices.push(indices[i - 1] * randomPerformance);\n            }\n            // convert the relative values from above to absolute values.\n            toAbsoluteIndices(indices);\n            for (var _year = 0; _year < indices.length; ++_year) {\n                result[_year][run] = indices[_year];\n            }\n        }\n        return result;\n    }\n    function projectsToCashFlows() {\n        var cashFlows = [];\n        for (var year = 0; year < options.numYears; ++year) {\n            var projectsByThisYear = projectsByStartYear[year] || [];\n            var cashFlow = -projectsByThisYear.reduce(function (memo, project) {\n                return memo + project.totalAmount;\n            }, 0);\n            cashFlows.push(cashFlow);\n        }\n        return cashFlows;\n    }\n    function calculateNoInterestReferenceLine(cashFlows) {\n        var noInterestReferenceLine = [];\n        var investmentAmountLeft = options.investmentAmount;\n        for (var year = 0; year < options.numYears; ++year) {\n            investmentAmountLeft = investmentAmountLeft + cashFlows[year];\n            noInterestReferenceLine.push(investmentAmountLeft);\n        }\n        return noInterestReferenceLine;\n    }\n    var projectsToSimulate = options.projects;\n    if (options.taskIndex && options.valuesPerWorker) {\n        projectsToSimulate = options.projects.slice(options.taskIndex * options.valuesPerWorker, (options.taskIndex + 1) * options.valuesPerWorker);\n    }\n    var projects = options.projects.sort(function (a, b) {\n        return a.startYear - b.startYear;\n    });\n    // Group projects by startYear, use lodash groupBy instead\n    var projectsByStartYear = {};\n    for (var _iterator = projects, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n        var _ref;\n\n        if (_isArray) {\n            if (_i >= _iterator.length) break;\n            _ref = _iterator[_i++];\n        } else {\n            _i = _iterator.next();\n            if (_i.done) break;\n            _ref = _i.value;\n        }\n\n        var project = _ref;\n\n        var arr = projectsByStartYear[project.startYear] = projectsByStartYear[project.startYear] || [];\n        arr.push(project);\n    }\n    var cashFlows = projectsToCashFlows();\n    var noInterestReferenceLine = calculateNoInterestReferenceLine(cashFlows);\n    var numYears = projectsToSimulate.reduce(function (memo, project) {\n        return Math.max(memo, project.startYear);\n    }, 0);\n    return {\n        investmentAmount: options.investmentAmount,\n        liquidity: options.liquidity,\n        noInterestReferenceLine: noInterestReferenceLine,\n        numRuns: options.numRuns,\n        numYears: numYears,\n        projectsByStartYear: projectsByStartYear,\n        simulatedValues: simulateOutcomes(cashFlows, numYears)\n    };\n}\nfunction calculateProject(project, environment) {\n    var NUMBER_OF_BUCKETS = 10;\n    function groupForValue(value, groups) {\n        return groups.find(function (group) {\n            return (typeof group.from === \"undefined\" || group.from <= value) && (typeof group.to === \"undefined\" || group.to > value);\n        });\n    }\n    function createGroups(requiredAmount, noInterestReference) {\n        return [{ description: \"Ziel erreichbar\", from: requiredAmount, name: \"green\", percentage: 0, separator: true }, { description: \"mit Zusatzliquidität erreichbar\", from: requiredAmount - environment.liquidity, name: \"yellow\", percentage: 0, separator: true, to: requiredAmount }, { description: \"nicht erreichbar\", from: noInterestReference, name: \"gray\", percentage: 0, separator: false, to: requiredAmount - environment.liquidity }, { description: \"nicht erreichbar, mit Verlust\", name: \"red\", percentage: 0, separator: false, to: noInterestReference }];\n    }\n    function calculateRequiredAmount() {\n        var amount = project.totalAmount;\n        var projectsSameYear = environment.projectsByStartYear[project.startYear];\n        for (var _iterator2 = projectsSameYear, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {\n            var _ref2;\n\n            if (_isArray2) {\n                if (_i2 >= _iterator2.length) break;\n                _ref2 = _iterator2[_i2++];\n            } else {\n                _i2 = _iterator2.next();\n                if (_i2.done) break;\n                _ref2 = _i2.value;\n            }\n\n            var otherProject = _ref2;\n\n            if (otherProject === project) {\n                break;\n            }\n            amount += otherProject.totalAmount;\n        }\n        return amount;\n    }\n    function median(values) {\n        var half = Math.floor(values.length / 2);\n        if (values.length % 2) {\n            return values[half];\n        }\n        return (values[half - 1] + values[half]) / 2.0;\n    }\n    var requiredAmount = calculateRequiredAmount();\n    var simulatedValuesThisYear = environment.simulatedValues[project.startYear];\n    simulatedValuesThisYear.sort(function (a, b) {\n        return a - b;\n    });\n    var groups = createGroups(requiredAmount, environment.noInterestReferenceLine[project.startYear]);\n    var valuesByGroup = {};\n    var bucketSize = Math.round(simulatedValuesThisYear.length / NUMBER_OF_BUCKETS);\n    var buckets = [];\n    for (var i = 0; i < simulatedValuesThisYear.length; i += bucketSize) {\n        var bucket = {\n            max: Number.MIN_VALUE,\n            min: Number.MAX_VALUE,\n            subBuckets: {}\n        };\n        for (var j = i; j < i + bucketSize; ++j) {\n            var value = simulatedValuesThisYear[j];\n            bucket.min = Math.min(bucket.min, value);\n            bucket.max = Math.max(bucket.max, value);\n            var group = groupForValue(simulatedValuesThisYear[j], groups);\n            valuesByGroup[group.name] = (valuesByGroup[group.name] || 0) + 1;\n            var subBucket = bucket.subBuckets[group.name] = bucket.subBuckets[group.name] || { group: group.name, max: Number.MIN_VALUE, min: Number.MAX_VALUE };\n            subBucket.min = Math.min(subBucket.min, value);\n            subBucket.max = Math.max(subBucket.max, value);\n        }\n        buckets.push(bucket);\n    }\n    var nonEmptyGroups = groups.filter(function (group) {\n        return !!valuesByGroup[group.name];\n    });\n    nonEmptyGroups.forEach(function (group) {\n        return group.percentage = valuesByGroup[group.name] / simulatedValuesThisYear.length;\n    });\n    var oneSixth = Math.round(simulatedValuesThisYear.length / 6);\n    return {\n        buckets: buckets,\n        groups: nonEmptyGroups,\n        max: simulatedValuesThisYear[simulatedValuesThisYear.length - 1],\n        median: median(simulatedValuesThisYear),\n        min: simulatedValuesThisYear[0],\n        project: project,\n        twoThird: {\n            max: simulatedValuesThisYear[simulatedValuesThisYear.length - oneSixth],\n            min: simulatedValuesThisYear[oneSixth]\n        }\n    };\n}\nfunction parallelJSMonteCarlo(userOptions) {\n    var options = initializeOptions(userOptions);\n    // Array needs to be cloned, otherwise the original array is manipulated!\n    return new Parallel(options.projects.slice(), {\n        evalPath: \"./\" + __webpack_require__(25),\n        env: { options: options },\n        envNamespace: \"simulation\"\n    }).require(\"https://raw.githubusercontent.com/mvarshney/simjs-source/master/src/random.js\") // the one from node uses module syntax\n    .require(createMonteCarloEnvironment).require(calculateProject).map(function (project) {\n        global.simulation.env = global.simulation.env || createMonteCarloEnvironment(global.simulation.options);\n        return calculateProject(project, global.simulation.env);\n    });\n}\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))\n\n/***/ },\n/* 20 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export knightTours */\n/* harmony export (immutable) */ exports[\"a\"] = threadsKnightTours;\nfunction knightTours(_ref, done) {\n    var startPath = _ref.startPath,\n        boardSize = _ref.boardSize;\n\n    var moves = [{ x: -2, y: -1 }, { x: -2, y: 1 }, { x: -1, y: -2 }, { x: -1, y: 2 }, { x: 1, y: -2 }, { x: 1, y: 2 }, { x: 2, y: -1 }, { x: 2, y: 1 }];\n    var board = new Array(boardSize * boardSize);\n    board.fill(0);\n    var numberOfFields = boardSize * boardSize;\n    var results = 0;\n    var stack = startPath.map(function (pos, index) {\n        return { coordinate: pos, n: index + 1 };\n    });\n    for (var index = 0; index < startPath.length - 1; ++index) {\n        var fieldIndex = startPath[index].x * boardSize + startPath[index].y;\n        board[fieldIndex] = index + 1;\n    }\n    while (stack.length > 0) {\n        var _stack = stack[stack.length - 1],\n            coordinate = _stack.coordinate,\n            n = _stack.n;\n\n        var _fieldIndex = coordinate.x * boardSize + coordinate.y;\n        if (board[_fieldIndex] !== 0) {\n            // back tracking\n            board[_fieldIndex] = 0;\n            stack.pop(); // remove current value\n            continue;\n        }\n        // entry\n        if (n === numberOfFields) {\n            ++results;\n            stack.pop();\n            continue;\n        }\n        board[_fieldIndex] = n;\n        for (var i = 0; i < moves.length; ++i) {\n            var move = moves[i];\n            var successor = { x: coordinate.x + move.x, y: coordinate.y + move.y };\n            // not outside of board and not yet accessed\n            var accessible = successor.x >= 0 && successor.y >= 0 && successor.x < boardSize && successor.y < boardSize && board[successor.x * boardSize + successor.y] === 0;\n            if (accessible) {\n                stack.push({ coordinate: successor, n: n + 1 });\n            }\n        }\n    }\n    done(results);\n}\nfunction threadsKnightTours(start, boardSize, pool) {\n    function successors(coordinate) {\n        var moves = [{ x: -2, y: -1 }, { x: -2, y: 1 }, { x: -1, y: -2 }, { x: -1, y: 2 }, { x: 1, y: -2 }, { x: 1, y: 2 }, { x: 2, y: -1 }, { x: 2, y: 1 }];\n        var result = [];\n        for (var i = 0; i < moves.length; ++i) {\n            var move = moves[i];\n            var successor = { x: coordinate.x + move.x, y: coordinate.y + move.y };\n            var accessible = successor.x >= 0 && successor.y >= 0 && successor.x < boardSize && successor.y < boardSize && (successor.x !== start.x || successor.y !== start.y) && successor.x !== coordinate.x && successor.y !== coordinate.y;\n            if (accessible) {\n                result.push(successor);\n            }\n        }\n        return result;\n    }\n    function computeStartFields() {\n        var result = [];\n        for (var _iterator = successors(start), _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n            var _ref2;\n\n            if (_isArray) {\n                if (_i >= _iterator.length) break;\n                _ref2 = _iterator[_i++];\n            } else {\n                _i = _iterator.next();\n                if (_i.done) break;\n                _ref2 = _i.value;\n            }\n\n            var directSuccessor = _ref2;\n\n            for (var _iterator2 = successors(directSuccessor), _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {\n                var _ref3;\n\n                if (_isArray2) {\n                    if (_i2 >= _iterator2.length) break;\n                    _ref3 = _iterator2[_i2++];\n                } else {\n                    _i2 = _iterator2.next();\n                    if (_i2.done) break;\n                    _ref3 = _i2.value;\n                }\n\n                var indirectSuccessor = _ref3;\n\n                result.push([start, directSuccessor, indirectSuccessor]);\n            }\n        }\n        return result;\n    }\n    var resolve = void 0;\n    var reject = void 0;\n    var promise = new Promise(function (_resolve, _reject) {\n        resolve = _resolve;\n        reject = _reject;\n    });\n    var totalTours = 0;\n    pool.run(knightTours).on(\"done\", function (job, tours) {\n        return totalTours += tours;\n    }).on(\"finished\", function () {\n        resolve(totalTours);\n    });\n    for (var _iterator3 = computeStartFields(), _isArray3 = Array.isArray(_iterator3), _i3 = 0, _iterator3 = _isArray3 ? _iterator3 : _iterator3[Symbol.iterator]();;) {\n        var _ref4;\n\n        if (_isArray3) {\n            if (_i3 >= _iterator3.length) break;\n            _ref4 = _iterator3[_i3++];\n        } else {\n            _i3 = _iterator3.next();\n            if (_i3.done) break;\n            _ref4 = _i3.value;\n        }\n\n        var startPath = _ref4;\n\n        pool.send({ startPath: startPath, boardSize: boardSize });\n    }\n    return promise;\n}\n\n/***/ },\n/* 21 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_lodash__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_lodash___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_lodash__);\n/* unused harmony export computeMandelbrotLine */\n/* harmony export (immutable) */ exports[\"a\"] = threadsMandelbrot;\n\nfunction computeMandelbrotLine(_ref, done) {\n    var y = _ref.y,\n        options = _ref.options;\n\n    function calculateZ(c) {\n        var z = { i: c.i, real: c.real };\n        var n = 0;\n        for (; n < options.iterations; ++n) {\n            if (Math.pow(z.real, 2) + Math.pow(z.i, 2) > 4) {\n                break;\n            }\n            // z ** 2 + c\n            var zI = z.i;\n            z.i = 2 * z.real * z.i + c.i;\n            z.real = Math.pow(z.real, 2) - Math.pow(zI, 2) + c.real;\n        }\n        return n;\n    }\n    var line = new Uint8ClampedArray(options.imageWidth * 4);\n    var cI = options.max.i - y * options.scalingFactor.i;\n    for (var x = 0; x < options.imageWidth; ++x) {\n        var c = {\n            i: cI,\n            real: options.min.real + x * options.scalingFactor.real\n        };\n        var n = calculateZ(c);\n        var base = x * 4;\n        /* tslint:disable:no-bitwise */\n        line[base] = n & 0xFF;\n        line[base + 1] = n & 0xFF00;\n        line[base + 2] = n & 0xFF0000;\n        line[base + 3] = 255;\n    }\n    done.transfer(line, [line.buffer]);\n}\nfunction threadsMandelbrot(mandelbrotOptions, pool) {\n    var promises = [];\n    pool.run(computeMandelbrotLine);\n    var lines = __WEBPACK_IMPORTED_MODULE_0_lodash__[\"range\"](mandelbrotOptions.imageHeight);\n    for (var _iterator = lines, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n        var _ref2;\n\n        if (_isArray) {\n            if (_i >= _iterator.length) break;\n            _ref2 = _iterator[_i++];\n        } else {\n            _i = _iterator.next();\n            if (_i.done) break;\n            _ref2 = _i.value;\n        }\n\n        var line = _ref2;\n\n        promises.push(pool.send({ y: line, options: mandelbrotOptions }).promise());\n    }\n    return Promise.all(promises);\n}\n\n/***/ },\n/* 22 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ exports[\"a\"] = threadsMonteCarlo;\nfunction initializeOptions(options) {\n    return Object.assign({}, {\n        investmentAmount: 1000000,\n        liquidity: 10000,\n        numRuns: 10000,\n        numYears: 10,\n        performance: 0,\n        projects: [],\n        seed: undefined,\n        volatility: 0.01\n    }, options);\n}\nfunction calculateProject(_ref, done) {\n    var project = _ref.project,\n        options = _ref.options;\n\n    var NUMBER_OF_BUCKETS = 10;\n    var environment = this.environment = this.environment || createMonteCarloEnvironment(options);\n    function createMonteCarloEnvironment(options) {\n        var random = new self.Random(10);\n        /**\n         * Performs the monte carlo simulation for all years and num runs.\n         * @param cashFlows the cash flows\n         * @returns {number[][]} the simulated outcomes grouped by year\n         */\n        function simulateOutcomes(cashFlows, numYears) {\n            function toAbsoluteIndices(indices) {\n                var currentPortfolioValue = options.investmentAmount;\n                var previousYearIndex = 100;\n                for (var relativeYear = 0; relativeYear < indices.length; ++relativeYear) {\n                    var currentYearIndex = indices[relativeYear];\n                    var cashFlowStartOfYear = relativeYear === 0 ? 0 : cashFlows[relativeYear - 1];\n                    // scale current value with performance gain according to index\n                    var performance = currentYearIndex / previousYearIndex;\n                    currentPortfolioValue = (currentPortfolioValue + cashFlowStartOfYear) * performance;\n                    indices[relativeYear] = 1 + random.normal(performance, options.volatility);\n                    previousYearIndex = currentYearIndex;\n                }\n                return indices;\n            }\n            var result = new Array(options.numYears);\n            for (var year = 0; year <= numYears; ++year) {\n                result[year] = new Array(options.numRuns);\n            }\n            for (var run = 0; run < options.numRuns; run++) {\n                var indices = [100];\n                for (var i = 1; i <= numYears; i++) {\n                    // const randomPerformance = 1 + random.normal(options.performance, options.volatility);\n                    var randomPerformance = 1 + Math.random();\n                    indices.push(indices[i - 1] * randomPerformance);\n                }\n                // convert the relative values from above to absolute values.\n                toAbsoluteIndices(indices);\n                for (var _year = 0; _year < indices.length; ++_year) {\n                    result[_year][run] = indices[_year];\n                }\n            }\n            return result;\n        }\n        function projectsToCashFlows() {\n            var cashFlows = [];\n            for (var year = 0; year < options.numYears; ++year) {\n                var projectsByThisYear = projectsByStartYear[year] || [];\n                var cashFlow = -projectsByThisYear.reduce(function (memo, project) {\n                    return memo + project.totalAmount;\n                }, 0);\n                cashFlows.push(cashFlow);\n            }\n            return cashFlows;\n        }\n        function calculateNoInterestReferenceLine(cashFlows) {\n            var noInterestReferenceLine = [];\n            var investmentAmountLeft = options.investmentAmount;\n            for (var year = 0; year < options.numYears; ++year) {\n                investmentAmountLeft = investmentAmountLeft + cashFlows[year];\n                noInterestReferenceLine.push(investmentAmountLeft);\n            }\n            return noInterestReferenceLine;\n        }\n        var projectsToSimulate = options.projects;\n        if (options.taskIndex && options.valuesPerWorker) {\n            projectsToSimulate = options.projects.slice(options.taskIndex * options.valuesPerWorker, (options.taskIndex + 1) * options.valuesPerWorker);\n        }\n        var projects = options.projects.sort(function (a, b) {\n            return a.startYear - b.startYear;\n        });\n        // Group projects by startYear, use lodash groupBy instead\n        var projectsByStartYear = {};\n        for (var _iterator = projects, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n            var _ref2;\n\n            if (_isArray) {\n                if (_i >= _iterator.length) break;\n                _ref2 = _iterator[_i++];\n            } else {\n                _i = _iterator.next();\n                if (_i.done) break;\n                _ref2 = _i.value;\n            }\n\n            var _project = _ref2;\n\n            var arr = projectsByStartYear[_project.startYear] = projectsByStartYear[_project.startYear] || [];\n            arr.push(_project);\n        }\n        var cashFlows = projectsToCashFlows();\n        var noInterestReferenceLine = calculateNoInterestReferenceLine(cashFlows);\n        var numYears = projectsToSimulate.reduce(function (memo, project) {\n            return Math.max(memo, project.startYear);\n        }, 0);\n        return {\n            investmentAmount: options.investmentAmount,\n            liquidity: options.liquidity,\n            noInterestReferenceLine: noInterestReferenceLine,\n            numRuns: options.numRuns,\n            numYears: numYears,\n            projectsByStartYear: projectsByStartYear,\n            simulatedValues: simulateOutcomes(cashFlows, numYears)\n        };\n    }\n    function groupForValue(value, groups) {\n        return groups.find(function (group) {\n            return (typeof group.from === \"undefined\" || group.from <= value) && (typeof group.to === \"undefined\" || group.to > value);\n        });\n    }\n    function createGroups(requiredAmount, noInterestReference) {\n        return [{ description: \"Ziel erreichbar\", from: requiredAmount, name: \"green\", percentage: 0, separator: true }, { description: \"mit Zusatzliquidität erreichbar\", from: requiredAmount - environment.liquidity, name: \"yellow\", percentage: 0, separator: true, to: requiredAmount }, { description: \"nicht erreichbar\", from: noInterestReference, name: \"gray\", percentage: 0, separator: false, to: requiredAmount - environment.liquidity }, { description: \"nicht erreichbar, mit Verlust\", name: \"red\", percentage: 0, separator: false, to: noInterestReference }];\n    }\n    function calculateRequiredAmount() {\n        var amount = project.totalAmount;\n        var projectsSameYear = environment.projectsByStartYear[project.startYear];\n        for (var _iterator2 = projectsSameYear, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {\n            var _ref3;\n\n            if (_isArray2) {\n                if (_i2 >= _iterator2.length) break;\n                _ref3 = _iterator2[_i2++];\n            } else {\n                _i2 = _iterator2.next();\n                if (_i2.done) break;\n                _ref3 = _i2.value;\n            }\n\n            var otherProject = _ref3;\n\n            if (otherProject === project) {\n                break;\n            }\n            amount += otherProject.totalAmount;\n        }\n        return amount;\n    }\n    function median(values) {\n        var half = Math.floor(values.length / 2);\n        if (values.length % 2) {\n            return values[half];\n        }\n        return (values[half - 1] + values[half]) / 2.0;\n    }\n    var requiredAmount = calculateRequiredAmount();\n    var simulatedValuesThisYear = environment.simulatedValues[project.startYear];\n    simulatedValuesThisYear.sort(function (a, b) {\n        return a - b;\n    });\n    var groups = createGroups(requiredAmount, environment.noInterestReferenceLine[project.startYear]);\n    var valuesByGroup = {};\n    var bucketSize = Math.round(simulatedValuesThisYear.length / NUMBER_OF_BUCKETS);\n    var buckets = [];\n    for (var i = 0; i < simulatedValuesThisYear.length; i += bucketSize) {\n        var bucket = {\n            max: Number.MIN_VALUE,\n            min: Number.MAX_VALUE,\n            subBuckets: {}\n        };\n        for (var j = i; j < i + bucketSize; ++j) {\n            var value = simulatedValuesThisYear[j];\n            bucket.min = Math.min(bucket.min, value);\n            bucket.max = Math.max(bucket.max, value);\n            var group = groupForValue(simulatedValuesThisYear[j], groups);\n            valuesByGroup[group.name] = (valuesByGroup[group.name] || 0) + 1;\n            var subBucket = bucket.subBuckets[group.name] = bucket.subBuckets[group.name] || { group: group.name, max: Number.MIN_VALUE, min: Number.MAX_VALUE };\n            subBucket.min = Math.min(subBucket.min, value);\n            subBucket.max = Math.max(subBucket.max, value);\n        }\n        buckets.push(bucket);\n    }\n    var nonEmptyGroups = groups.filter(function (group) {\n        return !!valuesByGroup[group.name];\n    });\n    nonEmptyGroups.forEach(function (group) {\n        return group.percentage = valuesByGroup[group.name] / simulatedValuesThisYear.length;\n    });\n    var oneSixth = Math.round(simulatedValuesThisYear.length / 6);\n    done({\n        buckets: buckets,\n        groups: nonEmptyGroups,\n        max: simulatedValuesThisYear[simulatedValuesThisYear.length - 1],\n        median: median(simulatedValuesThisYear),\n        min: simulatedValuesThisYear[0],\n        project: project,\n        twoThird: {\n            max: simulatedValuesThisYear[simulatedValuesThisYear.length - oneSixth],\n            min: simulatedValuesThisYear[oneSixth]\n        }\n    });\n}\nfunction threadsMonteCarlo(userOptions, pool) {\n    var options = initializeOptions(userOptions);\n    var jobs = [];\n    pool.run(calculateProject, [\"https://raw.githubusercontent.com/mvarshney/simjs-source/master/src/random.js\"]);\n    for (var _iterator3 = options.projects, _isArray3 = Array.isArray(_iterator3), _i3 = 0, _iterator3 = _isArray3 ? _iterator3 : _iterator3[Symbol.iterator]();;) {\n        var _ref4;\n\n        if (_isArray3) {\n            if (_i3 >= _iterator3.length) break;\n            _ref4 = _iterator3[_i3++];\n        } else {\n            _i3 = _iterator3.next();\n            if (_i3.done) break;\n            _ref4 = _i3.value;\n        }\n\n        var project = _ref4;\n\n        jobs.push(pool.send({ options: options, project: project }).promise());\n    }\n    return Promise.all(jobs);\n}\n\n/***/ },\n/* 23 */\n/***/ function(module, exports) {\n\n/*!\n * Benchmark.js <https://benchmarkjs.com/>\n * Copyright 2010-2016 Mathias Bynens <https://mths.be/>\n * Based on JSLitmus.js, copyright Robert Kieffer <http://broofa.com/>\n * Modified by John-David Dalton <http://allyoucanleet.com/>\n * Available under MIT license <https://mths.be/mit>\n */\n;(function() {\n  'use strict';\n\n  /** Used as a safe reference for `undefined` in pre ES5 environments. */\n  var undefined;\n\n  /** Used to determine if values are of the language type Object. */\n  var objectTypes = {\n    'function': true,\n    'object': true\n  };\n\n  /** Used as a reference to the global object. */\n  var root = (objectTypes[typeof window] && window) || this;\n\n  /** Detect free variable `define`. */\n  var freeDefine = typeof define == 'function' && typeof define.amd == 'object' && define.amd && define;\n\n  /** Detect free variable `exports`. */\n  var freeExports = objectTypes[typeof exports] && exports && !exports.nodeType && exports;\n\n  /** Detect free variable `module`. */\n  var freeModule = objectTypes[typeof module] && module && !module.nodeType && module;\n\n  /** Detect free variable `global` from Node.js or Browserified code and use it as `root`. */\n  var freeGlobal = freeExports && freeModule && typeof global == 'object' && global;\n  if (freeGlobal && (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal || freeGlobal.self === freeGlobal)) {\n    root = freeGlobal;\n  }\n\n  /** Detect free variable `require`. */\n  var freeRequire = typeof require == 'function' && require;\n\n  /** Used to assign each benchmark an incremented id. */\n  var counter = 0;\n\n  /** Detect the popular CommonJS extension `module.exports`. */\n  var moduleExports = freeModule && freeModule.exports === freeExports && freeExports;\n\n  /** Used to detect primitive types. */\n  var rePrimitive = /^(?:boolean|number|string|undefined)$/;\n\n  /** Used to make every compiled test unique. */\n  var uidCounter = 0;\n\n  /** Used to assign default `context` object properties. */\n  var contextProps = [\n    'Array', 'Date', 'Function', 'Math', 'Object', 'RegExp', 'String', '_',\n    'clearTimeout', 'chrome', 'chromium', 'document', 'navigator', 'phantom',\n    'platform', 'process', 'runtime', 'setTimeout'\n  ];\n\n  /** Used to avoid hz of Infinity. */\n  var divisors = {\n    '1': 4096,\n    '2': 512,\n    '3': 64,\n    '4': 8,\n    '5': 0\n  };\n\n  /**\n   * T-Distribution two-tailed critical values for 95% confidence.\n   * For more info see http://www.itl.nist.gov/div898/handbook/eda/section3/eda3672.htm.\n   */\n  var tTable = {\n    '1':  12.706, '2':  4.303, '3':  3.182, '4':  2.776, '5':  2.571, '6':  2.447,\n    '7':  2.365,  '8':  2.306, '9':  2.262, '10': 2.228, '11': 2.201, '12': 2.179,\n    '13': 2.16,   '14': 2.145, '15': 2.131, '16': 2.12,  '17': 2.11,  '18': 2.101,\n    '19': 2.093,  '20': 2.086, '21': 2.08,  '22': 2.074, '23': 2.069, '24': 2.064,\n    '25': 2.06,   '26': 2.056, '27': 2.052, '28': 2.048, '29': 2.045, '30': 2.042,\n    'infinity': 1.96\n  };\n\n  /**\n   * Critical Mann-Whitney U-values for 95% confidence.\n   * For more info see http://www.saburchill.com/IBbiology/stats/003.html.\n   */\n  var uTable = {\n    '5':  [0, 1, 2],\n    '6':  [1, 2, 3, 5],\n    '7':  [1, 3, 5, 6, 8],\n    '8':  [2, 4, 6, 8, 10, 13],\n    '9':  [2, 4, 7, 10, 12, 15, 17],\n    '10': [3, 5, 8, 11, 14, 17, 20, 23],\n    '11': [3, 6, 9, 13, 16, 19, 23, 26, 30],\n    '12': [4, 7, 11, 14, 18, 22, 26, 29, 33, 37],\n    '13': [4, 8, 12, 16, 20, 24, 28, 33, 37, 41, 45],\n    '14': [5, 9, 13, 17, 22, 26, 31, 36, 40, 45, 50, 55],\n    '15': [5, 10, 14, 19, 24, 29, 34, 39, 44, 49, 54, 59, 64],\n    '16': [6, 11, 15, 21, 26, 31, 37, 42, 47, 53, 59, 64, 70, 75],\n    '17': [6, 11, 17, 22, 28, 34, 39, 45, 51, 57, 63, 67, 75, 81, 87],\n    '18': [7, 12, 18, 24, 30, 36, 42, 48, 55, 61, 67, 74, 80, 86, 93, 99],\n    '19': [7, 13, 19, 25, 32, 38, 45, 52, 58, 65, 72, 78, 85, 92, 99, 106, 113],\n    '20': [8, 14, 20, 27, 34, 41, 48, 55, 62, 69, 76, 83, 90, 98, 105, 112, 119, 127],\n    '21': [8, 15, 22, 29, 36, 43, 50, 58, 65, 73, 80, 88, 96, 103, 111, 119, 126, 134, 142],\n    '22': [9, 16, 23, 30, 38, 45, 53, 61, 69, 77, 85, 93, 101, 109, 117, 125, 133, 141, 150, 158],\n    '23': [9, 17, 24, 32, 40, 48, 56, 64, 73, 81, 89, 98, 106, 115, 123, 132, 140, 149, 157, 166, 175],\n    '24': [10, 17, 25, 33, 42, 50, 59, 67, 76, 85, 94, 102, 111, 120, 129, 138, 147, 156, 165, 174, 183, 192],\n    '25': [10, 18, 27, 35, 44, 53, 62, 71, 80, 89, 98, 107, 117, 126, 135, 145, 154, 163, 173, 182, 192, 201, 211],\n    '26': [11, 19, 28, 37, 46, 55, 64, 74, 83, 93, 102, 112, 122, 132, 141, 151, 161, 171, 181, 191, 200, 210, 220, 230],\n    '27': [11, 20, 29, 38, 48, 57, 67, 77, 87, 97, 107, 118, 125, 138, 147, 158, 168, 178, 188, 199, 209, 219, 230, 240, 250],\n    '28': [12, 21, 30, 40, 50, 60, 70, 80, 90, 101, 111, 122, 132, 143, 154, 164, 175, 186, 196, 207, 218, 228, 239, 250, 261, 272],\n    '29': [13, 22, 32, 42, 52, 62, 73, 83, 94, 105, 116, 127, 138, 149, 160, 171, 182, 193, 204, 215, 226, 238, 249, 260, 271, 282, 294],\n    '30': [13, 23, 33, 43, 54, 65, 76, 87, 98, 109, 120, 131, 143, 154, 166, 177, 189, 200, 212, 223, 235, 247, 258, 270, 282, 293, 305, 317]\n  };\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Create a new `Benchmark` function using the given `context` object.\n   *\n   * @static\n   * @memberOf Benchmark\n   * @param {Object} [context=root] The context object.\n   * @returns {Function} Returns a new `Benchmark` function.\n   */\n  function runInContext(context) {\n    // Exit early if unable to acquire lodash.\n    var _ = context && context._ || require('lodash') || root._;\n    if (!_) {\n      Benchmark.runInContext = runInContext;\n      return Benchmark;\n    }\n    // Avoid issues with some ES3 environments that attempt to use values, named\n    // after built-in constructors like `Object`, for the creation of literals.\n    // ES5 clears this up by stating that literals must use built-in constructors.\n    // See http://es5.github.io/#x11.1.5.\n    context = context ? _.defaults(root.Object(), context, _.pick(root, contextProps)) : root;\n\n    /** Native constructor references. */\n    var Array = context.Array,\n        Date = context.Date,\n        Function = context.Function,\n        Math = context.Math,\n        Object = context.Object,\n        RegExp = context.RegExp,\n        String = context.String;\n\n    /** Used for `Array` and `Object` method references. */\n    var arrayRef = [],\n        objectProto = Object.prototype;\n\n    /** Native method shortcuts. */\n    var abs = Math.abs,\n        clearTimeout = context.clearTimeout,\n        floor = Math.floor,\n        log = Math.log,\n        max = Math.max,\n        min = Math.min,\n        pow = Math.pow,\n        push = arrayRef.push,\n        setTimeout = context.setTimeout,\n        shift = arrayRef.shift,\n        slice = arrayRef.slice,\n        sqrt = Math.sqrt,\n        toString = objectProto.toString,\n        unshift = arrayRef.unshift;\n\n    /** Used to avoid inclusion in Browserified bundles. */\n    var req = require;\n\n    /** Detect DOM document object. */\n    var doc = isHostType(context, 'document') && context.document;\n\n    /** Used to access Wade Simmons' Node.js `microtime` module. */\n    var microtimeObject = req('microtime');\n\n    /** Used to access Node.js's high resolution timer. */\n    var processObject = isHostType(context, 'process') && context.process;\n\n    /** Used to prevent a `removeChild` memory leak in IE < 9. */\n    var trash = doc && doc.createElement('div');\n\n    /** Used to integrity check compiled tests. */\n    var uid = 'uid' + _.now();\n\n    /** Used to avoid infinite recursion when methods call each other. */\n    var calledBy = {};\n\n    /**\n     * An object used to flag environments/features.\n     *\n     * @static\n     * @memberOf Benchmark\n     * @type Object\n     */\n    var support = {};\n\n    (function() {\n\n      /**\n       * Detect if running in a browser environment.\n       *\n       * @memberOf Benchmark.support\n       * @type boolean\n       */\n      support.browser = doc && isHostType(context, 'navigator') && !isHostType(context, 'phantom');\n\n      /**\n       * Detect if the Timers API exists.\n       *\n       * @memberOf Benchmark.support\n       * @type boolean\n       */\n      support.timeout = isHostType(context, 'setTimeout') && isHostType(context, 'clearTimeout');\n\n      /**\n       * Detect if function decompilation is support.\n       *\n       * @name decompilation\n       * @memberOf Benchmark.support\n       * @type boolean\n       */\n      try {\n        // Safari 2.x removes commas in object literals from `Function#toString` results.\n        // See http://webk.it/11609 for more details.\n        // Firefox 3.6 and Opera 9.25 strip grouping parentheses from `Function#toString` results.\n        // See http://bugzil.la/559438 for more details.\n        support.decompilation = Function(\n          ('return (' + (function(x) { return { 'x': '' + (1 + x) + '', 'y': 0 }; }) + ')')\n          // Avoid issues with code added by Istanbul.\n          .replace(/__cov__[^;]+;/g, '')\n        )()(0).x === '1';\n      } catch(e) {\n        support.decompilation = false;\n      }\n    }());\n\n    /**\n     * Timer object used by `clock()` and `Deferred#resolve`.\n     *\n     * @private\n     * @type Object\n     */\n    var timer = {\n\n      /**\n       * The timer namespace object or constructor.\n       *\n       * @private\n       * @memberOf timer\n       * @type {Function|Object}\n       */\n      'ns': Date,\n\n      /**\n       * Starts the deferred timer.\n       *\n       * @private\n       * @memberOf timer\n       * @param {Object} deferred The deferred instance.\n       */\n      'start': null, // Lazy defined in `clock()`.\n\n      /**\n       * Stops the deferred timer.\n       *\n       * @private\n       * @memberOf timer\n       * @param {Object} deferred The deferred instance.\n       */\n      'stop': null // Lazy defined in `clock()`.\n    };\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The Benchmark constructor.\n     *\n     * Note: The Benchmark constructor exposes a handful of lodash methods to\n     * make working with arrays, collections, and objects easier. The lodash\n     * methods are:\n     * [`each/forEach`](https://lodash.com/docs#forEach), [`forOwn`](https://lodash.com/docs#forOwn),\n     * [`has`](https://lodash.com/docs#has), [`indexOf`](https://lodash.com/docs#indexOf),\n     * [`map`](https://lodash.com/docs#map), and [`reduce`](https://lodash.com/docs#reduce)\n     *\n     * @constructor\n     * @param {string} name A name to identify the benchmark.\n     * @param {Function|string} fn The test to benchmark.\n     * @param {Object} [options={}] Options object.\n     * @example\n     *\n     * // basic usage (the `new` operator is optional)\n     * var bench = new Benchmark(fn);\n     *\n     * // or using a name first\n     * var bench = new Benchmark('foo', fn);\n     *\n     * // or with options\n     * var bench = new Benchmark('foo', fn, {\n     *\n     *   // displayed by `Benchmark#toString` if `name` is not available\n     *   'id': 'xyz',\n     *\n     *   // called when the benchmark starts running\n     *   'onStart': onStart,\n     *\n     *   // called after each run cycle\n     *   'onCycle': onCycle,\n     *\n     *   // called when aborted\n     *   'onAbort': onAbort,\n     *\n     *   // called when a test errors\n     *   'onError': onError,\n     *\n     *   // called when reset\n     *   'onReset': onReset,\n     *\n     *   // called when the benchmark completes running\n     *   'onComplete': onComplete,\n     *\n     *   // compiled/called before the test loop\n     *   'setup': setup,\n     *\n     *   // compiled/called after the test loop\n     *   'teardown': teardown\n     * });\n     *\n     * // or name and options\n     * var bench = new Benchmark('foo', {\n     *\n     *   // a flag to indicate the benchmark is deferred\n     *   'defer': true,\n     *\n     *   // benchmark test function\n     *   'fn': function(deferred) {\n     *     // call `Deferred#resolve` when the deferred test is finished\n     *     deferred.resolve();\n     *   }\n     * });\n     *\n     * // or options only\n     * var bench = new Benchmark({\n     *\n     *   // benchmark name\n     *   'name': 'foo',\n     *\n     *   // benchmark test as a string\n     *   'fn': '[1,2,3,4].sort()'\n     * });\n     *\n     * // a test's `this` binding is set to the benchmark instance\n     * var bench = new Benchmark('foo', function() {\n     *   'My name is '.concat(this.name); // \"My name is foo\"\n     * });\n     */\n    function Benchmark(name, fn, options) {\n      var bench = this;\n\n      // Allow instance creation without the `new` operator.\n      if (!(bench instanceof Benchmark)) {\n        return new Benchmark(name, fn, options);\n      }\n      // Juggle arguments.\n      if (_.isPlainObject(name)) {\n        // 1 argument (options).\n        options = name;\n      }\n      else if (_.isFunction(name)) {\n        // 2 arguments (fn, options).\n        options = fn;\n        fn = name;\n      }\n      else if (_.isPlainObject(fn)) {\n        // 2 arguments (name, options).\n        options = fn;\n        fn = null;\n        bench.name = name;\n      }\n      else {\n        // 3 arguments (name, fn [, options]).\n        bench.name = name;\n      }\n      setOptions(bench, options);\n\n      bench.id || (bench.id = ++counter);\n      bench.fn == null && (bench.fn = fn);\n\n      bench.stats = cloneDeep(bench.stats);\n      bench.times = cloneDeep(bench.times);\n    }\n\n    /**\n     * The Deferred constructor.\n     *\n     * @constructor\n     * @memberOf Benchmark\n     * @param {Object} clone The cloned benchmark instance.\n     */\n    function Deferred(clone) {\n      var deferred = this;\n      if (!(deferred instanceof Deferred)) {\n        return new Deferred(clone);\n      }\n      deferred.benchmark = clone;\n      clock(deferred);\n    }\n\n    /**\n     * The Event constructor.\n     *\n     * @constructor\n     * @memberOf Benchmark\n     * @param {Object|string} type The event type.\n     */\n    function Event(type) {\n      var event = this;\n      if (type instanceof Event) {\n        return type;\n      }\n      return (event instanceof Event)\n        ? _.assign(event, { 'timeStamp': _.now() }, typeof type == 'string' ? { 'type': type } : type)\n        : new Event(type);\n    }\n\n    /**\n     * The Suite constructor.\n     *\n     * Note: Each Suite instance has a handful of wrapped lodash methods to\n     * make working with Suites easier. The wrapped lodash methods are:\n     * [`each/forEach`](https://lodash.com/docs#forEach), [`indexOf`](https://lodash.com/docs#indexOf),\n     * [`map`](https://lodash.com/docs#map), and [`reduce`](https://lodash.com/docs#reduce)\n     *\n     * @constructor\n     * @memberOf Benchmark\n     * @param {string} name A name to identify the suite.\n     * @param {Object} [options={}] Options object.\n     * @example\n     *\n     * // basic usage (the `new` operator is optional)\n     * var suite = new Benchmark.Suite;\n     *\n     * // or using a name first\n     * var suite = new Benchmark.Suite('foo');\n     *\n     * // or with options\n     * var suite = new Benchmark.Suite('foo', {\n     *\n     *   // called when the suite starts running\n     *   'onStart': onStart,\n     *\n     *   // called between running benchmarks\n     *   'onCycle': onCycle,\n     *\n     *   // called when aborted\n     *   'onAbort': onAbort,\n     *\n     *   // called when a test errors\n     *   'onError': onError,\n     *\n     *   // called when reset\n     *   'onReset': onReset,\n     *\n     *   // called when the suite completes running\n     *   'onComplete': onComplete\n     * });\n     */\n    function Suite(name, options) {\n      var suite = this;\n\n      // Allow instance creation without the `new` operator.\n      if (!(suite instanceof Suite)) {\n        return new Suite(name, options);\n      }\n      // Juggle arguments.\n      if (_.isPlainObject(name)) {\n        // 1 argument (options).\n        options = name;\n      } else {\n        // 2 arguments (name [, options]).\n        suite.name = name;\n      }\n      setOptions(suite, options);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * A specialized version of `_.cloneDeep` which only clones arrays and plain\n     * objects assigning all other values by reference.\n     *\n     * @private\n     * @param {*} value The value to clone.\n     * @returns {*} The cloned value.\n     */\n    var cloneDeep = _.partial(_.cloneDeepWith, _, function(value) {\n      // Only clone primitives, arrays, and plain objects.\n      return (_.isObject(value) && !_.isArray(value) && !_.isPlainObject(value))\n        ? value\n        : undefined;\n    });\n\n    /**\n     * Creates a function from the given arguments string and body.\n     *\n     * @private\n     * @param {string} args The comma separated function arguments.\n     * @param {string} body The function body.\n     * @returns {Function} The new function.\n     */\n    function createFunction() {\n      // Lazy define.\n      createFunction = function(args, body) {\n        var result,\n            anchor = freeDefine ? freeDefine.amd : Benchmark,\n            prop = uid + 'createFunction';\n\n        runScript((freeDefine ? 'define.amd.' : 'Benchmark.') + prop + '=function(' + args + '){' + body + '}');\n        result = anchor[prop];\n        delete anchor[prop];\n        return result;\n      };\n      // Fix JaegerMonkey bug.\n      // For more information see http://bugzil.la/639720.\n      createFunction = support.browser && (createFunction('', 'return\"' + uid + '\"') || _.noop)() == uid ? createFunction : Function;\n      return createFunction.apply(null, arguments);\n    }\n\n    /**\n     * Delay the execution of a function based on the benchmark's `delay` property.\n     *\n     * @private\n     * @param {Object} bench The benchmark instance.\n     * @param {Object} fn The function to execute.\n     */\n    function delay(bench, fn) {\n      bench._timerId = _.delay(fn, bench.delay * 1e3);\n    }\n\n    /**\n     * Destroys the given element.\n     *\n     * @private\n     * @param {Element} element The element to destroy.\n     */\n    function destroyElement(element) {\n      trash.appendChild(element);\n      trash.innerHTML = '';\n    }\n\n    /**\n     * Gets the name of the first argument from a function's source.\n     *\n     * @private\n     * @param {Function} fn The function.\n     * @returns {string} The argument name.\n     */\n    function getFirstArgument(fn) {\n      return (!_.has(fn, 'toString') &&\n        (/^[\\s(]*function[^(]*\\(([^\\s,)]+)/.exec(fn) || 0)[1]) || '';\n    }\n\n    /**\n     * Computes the arithmetic mean of a sample.\n     *\n     * @private\n     * @param {Array} sample The sample.\n     * @returns {number} The mean.\n     */\n    function getMean(sample) {\n      return (_.reduce(sample, function(sum, x) {\n        return sum + x;\n      }) / sample.length) || 0;\n    }\n\n    /**\n     * Gets the source code of a function.\n     *\n     * @private\n     * @param {Function} fn The function.\n     * @returns {string} The function's source code.\n     */\n    function getSource(fn) {\n      var result = '';\n      if (isStringable(fn)) {\n        result = String(fn);\n      } else if (support.decompilation) {\n        // Escape the `{` for Firefox 1.\n        result = _.result(/^[^{]+\\{([\\s\\S]*)\\}\\s*$/.exec(fn), 1);\n      }\n      // Trim string.\n      result = (result || '').replace(/^\\s+|\\s+$/g, '');\n\n      // Detect strings containing only the \"use strict\" directive.\n      return /^(?:\\/\\*+[\\w\\W]*?\\*\\/|\\/\\/.*?[\\n\\r\\u2028\\u2029]|\\s)*([\"'])use strict\\1;?$/.test(result)\n        ? ''\n        : result;\n    }\n\n    /**\n     * Checks if an object is of the specified class.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {string} name The name of the class.\n     * @returns {boolean} Returns `true` if the value is of the specified class, else `false`.\n     */\n    function isClassOf(value, name) {\n      return value != null && toString.call(value) == '[object ' + name + ']';\n    }\n\n    /**\n     * Host objects can return type values that are different from their actual\n     * data type. The objects we are concerned with usually return non-primitive\n     * types of \"object\", \"function\", or \"unknown\".\n     *\n     * @private\n     * @param {*} object The owner of the property.\n     * @param {string} property The property to check.\n     * @returns {boolean} Returns `true` if the property value is a non-primitive, else `false`.\n     */\n    function isHostType(object, property) {\n      if (object == null) {\n        return false;\n      }\n      var type = typeof object[property];\n      return !rePrimitive.test(type) && (type != 'object' || !!object[property]);\n    }\n\n    /**\n     * Checks if a value can be safely coerced to a string.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if the value can be coerced, else `false`.\n     */\n    function isStringable(value) {\n      return _.isString(value) || (_.has(value, 'toString') && _.isFunction(value.toString));\n    }\n\n    /**\n     * A wrapper around `require` to suppress `module missing` errors.\n     *\n     * @private\n     * @param {string} id The module id.\n     * @returns {*} The exported module or `null`.\n     */\n    function require(id) {\n      try {\n        var result = freeExports && freeRequire(id);\n      } catch(e) {}\n      return result || null;\n    }\n\n    /**\n     * Runs a snippet of JavaScript via script injection.\n     *\n     * @private\n     * @param {string} code The code to run.\n     */\n    function runScript(code) {\n      var anchor = freeDefine ? define.amd : Benchmark,\n          script = doc.createElement('script'),\n          sibling = doc.getElementsByTagName('script')[0],\n          parent = sibling.parentNode,\n          prop = uid + 'runScript',\n          prefix = '(' + (freeDefine ? 'define.amd.' : 'Benchmark.') + prop + '||function(){})();';\n\n      // Firefox 2.0.0.2 cannot use script injection as intended because it executes\n      // asynchronously, but that's OK because script injection is only used to avoid\n      // the previously commented JaegerMonkey bug.\n      try {\n        // Remove the inserted script *before* running the code to avoid differences\n        // in the expected script element count/order of the document.\n        script.appendChild(doc.createTextNode(prefix + code));\n        anchor[prop] = function() { destroyElement(script); };\n      } catch(e) {\n        parent = parent.cloneNode(false);\n        sibling = null;\n        script.text = code;\n      }\n      parent.insertBefore(script, sibling);\n      delete anchor[prop];\n    }\n\n    /**\n     * A helper function for setting options/event handlers.\n     *\n     * @private\n     * @param {Object} object The benchmark or suite instance.\n     * @param {Object} [options={}] Options object.\n     */\n    function setOptions(object, options) {\n      options = object.options = _.assign({}, cloneDeep(object.constructor.options), cloneDeep(options));\n\n      _.forOwn(options, function(value, key) {\n        if (value != null) {\n          // Add event listeners.\n          if (/^on[A-Z]/.test(key)) {\n            _.each(key.split(' '), function(key) {\n              object.on(key.slice(2).toLowerCase(), value);\n            });\n          } else if (!_.has(object, key)) {\n            object[key] = cloneDeep(value);\n          }\n        }\n      });\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Handles cycling/completing the deferred benchmark.\n     *\n     * @memberOf Benchmark.Deferred\n     */\n    function resolve() {\n      var deferred = this,\n          clone = deferred.benchmark,\n          bench = clone._original;\n\n      if (bench.aborted) {\n        // cycle() -> clone cycle/complete event -> compute()'s invoked bench.run() cycle/complete.\n        deferred.teardown();\n        clone.running = false;\n        cycle(deferred);\n      }\n      else if (++deferred.cycles < clone.count) {\n        clone.compiled.call(deferred, context, timer);\n      }\n      else {\n        timer.stop(deferred);\n        deferred.teardown();\n        delay(clone, function() { cycle(deferred); });\n      }\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * A generic `Array#filter` like method.\n     *\n     * @static\n     * @memberOf Benchmark\n     * @param {Array} array The array to iterate over.\n     * @param {Function|string} callback The function/alias called per iteration.\n     * @returns {Array} A new array of values that passed callback filter.\n     * @example\n     *\n     * // get odd numbers\n     * Benchmark.filter([1, 2, 3, 4, 5], function(n) {\n     *   return n % 2;\n     * }); // -> [1, 3, 5];\n     *\n     * // get fastest benchmarks\n     * Benchmark.filter(benches, 'fastest');\n     *\n     * // get slowest benchmarks\n     * Benchmark.filter(benches, 'slowest');\n     *\n     * // get benchmarks that completed without erroring\n     * Benchmark.filter(benches, 'successful');\n     */\n    function filter(array, callback) {\n      if (callback === 'successful') {\n        // Callback to exclude those that are errored, unrun, or have hz of Infinity.\n        callback = function(bench) {\n          return bench.cycles && _.isFinite(bench.hz) && !bench.error;\n        };\n      }\n      else if (callback === 'fastest' || callback === 'slowest') {\n        // Get successful, sort by period + margin of error, and filter fastest/slowest.\n        var result = filter(array, 'successful').sort(function(a, b) {\n          a = a.stats; b = b.stats;\n          return (a.mean + a.moe > b.mean + b.moe ? 1 : -1) * (callback === 'fastest' ? 1 : -1);\n        });\n\n        return _.filter(result, function(bench) {\n          return result[0].compare(bench) == 0;\n        });\n      }\n      return _.filter(array, callback);\n    }\n\n    /**\n     * Converts a number to a more readable comma-separated string representation.\n     *\n     * @static\n     * @memberOf Benchmark\n     * @param {number} number The number to convert.\n     * @returns {string} The more readable string representation.\n     */\n    function formatNumber(number) {\n      number = String(number).split('.');\n      return number[0].replace(/(?=(?:\\d{3})+$)(?!\\b)/g, ',') +\n        (number[1] ? '.' + number[1] : '');\n    }\n\n    /**\n     * Invokes a method on all items in an array.\n     *\n     * @static\n     * @memberOf Benchmark\n     * @param {Array} benches Array of benchmarks to iterate over.\n     * @param {Object|string} name The name of the method to invoke OR options object.\n     * @param {...*} [args] Arguments to invoke the method with.\n     * @returns {Array} A new array of values returned from each method invoked.\n     * @example\n     *\n     * // invoke `reset` on all benchmarks\n     * Benchmark.invoke(benches, 'reset');\n     *\n     * // invoke `emit` with arguments\n     * Benchmark.invoke(benches, 'emit', 'complete', listener);\n     *\n     * // invoke `run(true)`, treat benchmarks as a queue, and register invoke callbacks\n     * Benchmark.invoke(benches, {\n     *\n     *   // invoke the `run` method\n     *   'name': 'run',\n     *\n     *   // pass a single argument\n     *   'args': true,\n     *\n     *   // treat as queue, removing benchmarks from front of `benches` until empty\n     *   'queued': true,\n     *\n     *   // called before any benchmarks have been invoked.\n     *   'onStart': onStart,\n     *\n     *   // called between invoking benchmarks\n     *   'onCycle': onCycle,\n     *\n     *   // called after all benchmarks have been invoked.\n     *   'onComplete': onComplete\n     * });\n     */\n    function invoke(benches, name) {\n      var args,\n          bench,\n          queued,\n          index = -1,\n          eventProps = { 'currentTarget': benches },\n          options = { 'onStart': _.noop, 'onCycle': _.noop, 'onComplete': _.noop },\n          result = _.toArray(benches);\n\n      /**\n       * Invokes the method of the current object and if synchronous, fetches the next.\n       */\n      function execute() {\n        var listeners,\n            async = isAsync(bench);\n\n        if (async) {\n          // Use `getNext` as the first listener.\n          bench.on('complete', getNext);\n          listeners = bench.events.complete;\n          listeners.splice(0, 0, listeners.pop());\n        }\n        // Execute method.\n        result[index] = _.isFunction(bench && bench[name]) ? bench[name].apply(bench, args) : undefined;\n        // If synchronous return `true` until finished.\n        return !async && getNext();\n      }\n\n      /**\n       * Fetches the next bench or executes `onComplete` callback.\n       */\n      function getNext(event) {\n        var cycleEvent,\n            last = bench,\n            async = isAsync(last);\n\n        if (async) {\n          last.off('complete', getNext);\n          last.emit('complete');\n        }\n        // Emit \"cycle\" event.\n        eventProps.type = 'cycle';\n        eventProps.target = last;\n        cycleEvent = Event(eventProps);\n        options.onCycle.call(benches, cycleEvent);\n\n        // Choose next benchmark if not exiting early.\n        if (!cycleEvent.aborted && raiseIndex() !== false) {\n          bench = queued ? benches[0] : result[index];\n          if (isAsync(bench)) {\n            delay(bench, execute);\n          }\n          else if (async) {\n            // Resume execution if previously asynchronous but now synchronous.\n            while (execute()) {}\n          }\n          else {\n            // Continue synchronous execution.\n            return true;\n          }\n        } else {\n          // Emit \"complete\" event.\n          eventProps.type = 'complete';\n          options.onComplete.call(benches, Event(eventProps));\n        }\n        // When used as a listener `event.aborted = true` will cancel the rest of\n        // the \"complete\" listeners because they were already called above and when\n        // used as part of `getNext` the `return false` will exit the execution while-loop.\n        if (event) {\n          event.aborted = true;\n        } else {\n          return false;\n        }\n      }\n\n      /**\n       * Checks if invoking `Benchmark#run` with asynchronous cycles.\n       */\n      function isAsync(object) {\n        // Avoid using `instanceof` here because of IE memory leak issues with host objects.\n        var async = args[0] && args[0].async;\n        return name == 'run' && (object instanceof Benchmark) &&\n          ((async == null ? object.options.async : async) && support.timeout || object.defer);\n      }\n\n      /**\n       * Raises `index` to the next defined index or returns `false`.\n       */\n      function raiseIndex() {\n        index++;\n\n        // If queued remove the previous bench.\n        if (queued && index > 0) {\n          shift.call(benches);\n        }\n        // If we reached the last index then return `false`.\n        return (queued ? benches.length : index < result.length)\n          ? index\n          : (index = false);\n      }\n      // Juggle arguments.\n      if (_.isString(name)) {\n        // 2 arguments (array, name).\n        args = slice.call(arguments, 2);\n      } else {\n        // 2 arguments (array, options).\n        options = _.assign(options, name);\n        name = options.name;\n        args = _.isArray(args = 'args' in options ? options.args : []) ? args : [args];\n        queued = options.queued;\n      }\n      // Start iterating over the array.\n      if (raiseIndex() !== false) {\n        // Emit \"start\" event.\n        bench = result[index];\n        eventProps.type = 'start';\n        eventProps.target = bench;\n        options.onStart.call(benches, Event(eventProps));\n\n        // End early if the suite was aborted in an \"onStart\" listener.\n        if (name == 'run' && (benches instanceof Suite) && benches.aborted) {\n          // Emit \"cycle\" event.\n          eventProps.type = 'cycle';\n          options.onCycle.call(benches, Event(eventProps));\n          // Emit \"complete\" event.\n          eventProps.type = 'complete';\n          options.onComplete.call(benches, Event(eventProps));\n        }\n        // Start method execution.\n        else {\n          if (isAsync(bench)) {\n            delay(bench, execute);\n          } else {\n            while (execute()) {}\n          }\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates a string of joined array values or object key-value pairs.\n     *\n     * @static\n     * @memberOf Benchmark\n     * @param {Array|Object} object The object to operate on.\n     * @param {string} [separator1=','] The separator used between key-value pairs.\n     * @param {string} [separator2=': '] The separator used between keys and values.\n     * @returns {string} The joined result.\n     */\n    function join(object, separator1, separator2) {\n      var result = [],\n          length = (object = Object(object)).length,\n          arrayLike = length === length >>> 0;\n\n      separator2 || (separator2 = ': ');\n      _.each(object, function(value, key) {\n        result.push(arrayLike ? value : key + separator2 + value);\n      });\n      return result.join(separator1 || ',');\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Aborts all benchmarks in the suite.\n     *\n     * @name abort\n     * @memberOf Benchmark.Suite\n     * @returns {Object} The suite instance.\n     */\n    function abortSuite() {\n      var event,\n          suite = this,\n          resetting = calledBy.resetSuite;\n\n      if (suite.running) {\n        event = Event('abort');\n        suite.emit(event);\n        if (!event.cancelled || resetting) {\n          // Avoid infinite recursion.\n          calledBy.abortSuite = true;\n          suite.reset();\n          delete calledBy.abortSuite;\n\n          if (!resetting) {\n            suite.aborted = true;\n            invoke(suite, 'abort');\n          }\n        }\n      }\n      return suite;\n    }\n\n    /**\n     * Adds a test to the benchmark suite.\n     *\n     * @memberOf Benchmark.Suite\n     * @param {string} name A name to identify the benchmark.\n     * @param {Function|string} fn The test to benchmark.\n     * @param {Object} [options={}] Options object.\n     * @returns {Object} The suite instance.\n     * @example\n     *\n     * // basic usage\n     * suite.add(fn);\n     *\n     * // or using a name first\n     * suite.add('foo', fn);\n     *\n     * // or with options\n     * suite.add('foo', fn, {\n     *   'onCycle': onCycle,\n     *   'onComplete': onComplete\n     * });\n     *\n     * // or name and options\n     * suite.add('foo', {\n     *   'fn': fn,\n     *   'onCycle': onCycle,\n     *   'onComplete': onComplete\n     * });\n     *\n     * // or options only\n     * suite.add({\n     *   'name': 'foo',\n     *   'fn': fn,\n     *   'onCycle': onCycle,\n     *   'onComplete': onComplete\n     * });\n     */\n    function add(name, fn, options) {\n      var suite = this,\n          bench = new Benchmark(name, fn, options),\n          event = Event({ 'type': 'add', 'target': bench });\n\n      if (suite.emit(event), !event.cancelled) {\n        suite.push(bench);\n      }\n      return suite;\n    }\n\n    /**\n     * Creates a new suite with cloned benchmarks.\n     *\n     * @name clone\n     * @memberOf Benchmark.Suite\n     * @param {Object} options Options object to overwrite cloned options.\n     * @returns {Object} The new suite instance.\n     */\n    function cloneSuite(options) {\n      var suite = this,\n          result = new suite.constructor(_.assign({}, suite.options, options));\n\n      // Copy own properties.\n      _.forOwn(suite, function(value, key) {\n        if (!_.has(result, key)) {\n          result[key] = value && _.isFunction(value.clone)\n            ? value.clone()\n            : cloneDeep(value);\n        }\n      });\n      return result;\n    }\n\n    /**\n     * An `Array#filter` like method.\n     *\n     * @name filter\n     * @memberOf Benchmark.Suite\n     * @param {Function|string} callback The function/alias called per iteration.\n     * @returns {Object} A new suite of benchmarks that passed callback filter.\n     */\n    function filterSuite(callback) {\n      var suite = this,\n          result = new suite.constructor(suite.options);\n\n      result.push.apply(result, filter(suite, callback));\n      return result;\n    }\n\n    /**\n     * Resets all benchmarks in the suite.\n     *\n     * @name reset\n     * @memberOf Benchmark.Suite\n     * @returns {Object} The suite instance.\n     */\n    function resetSuite() {\n      var event,\n          suite = this,\n          aborting = calledBy.abortSuite;\n\n      if (suite.running && !aborting) {\n        // No worries, `resetSuite()` is called within `abortSuite()`.\n        calledBy.resetSuite = true;\n        suite.abort();\n        delete calledBy.resetSuite;\n      }\n      // Reset if the state has changed.\n      else if ((suite.aborted || suite.running) &&\n          (suite.emit(event = Event('reset')), !event.cancelled)) {\n        suite.aborted = suite.running = false;\n        if (!aborting) {\n          invoke(suite, 'reset');\n        }\n      }\n      return suite;\n    }\n\n    /**\n     * Runs the suite.\n     *\n     * @name run\n     * @memberOf Benchmark.Suite\n     * @param {Object} [options={}] Options object.\n     * @returns {Object} The suite instance.\n     * @example\n     *\n     * // basic usage\n     * suite.run();\n     *\n     * // or with options\n     * suite.run({ 'async': true, 'queued': true });\n     */\n    function runSuite(options) {\n      var suite = this;\n\n      suite.reset();\n      suite.running = true;\n      options || (options = {});\n\n      invoke(suite, {\n        'name': 'run',\n        'args': options,\n        'queued': options.queued,\n        'onStart': function(event) {\n          suite.emit(event);\n        },\n        'onCycle': function(event) {\n          var bench = event.target;\n          if (bench.error) {\n            suite.emit({ 'type': 'error', 'target': bench });\n          }\n          suite.emit(event);\n          event.aborted = suite.aborted;\n        },\n        'onComplete': function(event) {\n          suite.running = false;\n          suite.emit(event);\n        }\n      });\n      return suite;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Executes all registered listeners of the specified event type.\n     *\n     * @memberOf Benchmark, Benchmark.Suite\n     * @param {Object|string} type The event type or object.\n     * @param {...*} [args] Arguments to invoke the listener with.\n     * @returns {*} Returns the return value of the last listener executed.\n     */\n    function emit(type) {\n      var listeners,\n          object = this,\n          event = Event(type),\n          events = object.events,\n          args = (arguments[0] = event, arguments);\n\n      event.currentTarget || (event.currentTarget = object);\n      event.target || (event.target = object);\n      delete event.result;\n\n      if (events && (listeners = _.has(events, event.type) && events[event.type])) {\n        _.each(listeners.slice(), function(listener) {\n          if ((event.result = listener.apply(object, args)) === false) {\n            event.cancelled = true;\n          }\n          return !event.aborted;\n        });\n      }\n      return event.result;\n    }\n\n    /**\n     * Returns an array of event listeners for a given type that can be manipulated\n     * to add or remove listeners.\n     *\n     * @memberOf Benchmark, Benchmark.Suite\n     * @param {string} type The event type.\n     * @returns {Array} The listeners array.\n     */\n    function listeners(type) {\n      var object = this,\n          events = object.events || (object.events = {});\n\n      return _.has(events, type) ? events[type] : (events[type] = []);\n    }\n\n    /**\n     * Unregisters a listener for the specified event type(s),\n     * or unregisters all listeners for the specified event type(s),\n     * or unregisters all listeners for all event types.\n     *\n     * @memberOf Benchmark, Benchmark.Suite\n     * @param {string} [type] The event type.\n     * @param {Function} [listener] The function to unregister.\n     * @returns {Object} The current instance.\n     * @example\n     *\n     * // unregister a listener for an event type\n     * bench.off('cycle', listener);\n     *\n     * // unregister a listener for multiple event types\n     * bench.off('start cycle', listener);\n     *\n     * // unregister all listeners for an event type\n     * bench.off('cycle');\n     *\n     * // unregister all listeners for multiple event types\n     * bench.off('start cycle complete');\n     *\n     * // unregister all listeners for all event types\n     * bench.off();\n     */\n    function off(type, listener) {\n      var object = this,\n          events = object.events;\n\n      if (!events) {\n        return object;\n      }\n      _.each(type ? type.split(' ') : events, function(listeners, type) {\n        var index;\n        if (typeof listeners == 'string') {\n          type = listeners;\n          listeners = _.has(events, type) && events[type];\n        }\n        if (listeners) {\n          if (listener) {\n            index = _.indexOf(listeners, listener);\n            if (index > -1) {\n              listeners.splice(index, 1);\n            }\n          } else {\n            listeners.length = 0;\n          }\n        }\n      });\n      return object;\n    }\n\n    /**\n     * Registers a listener for the specified event type(s).\n     *\n     * @memberOf Benchmark, Benchmark.Suite\n     * @param {string} type The event type.\n     * @param {Function} listener The function to register.\n     * @returns {Object} The current instance.\n     * @example\n     *\n     * // register a listener for an event type\n     * bench.on('cycle', listener);\n     *\n     * // register a listener for multiple event types\n     * bench.on('start cycle', listener);\n     */\n    function on(type, listener) {\n      var object = this,\n          events = object.events || (object.events = {});\n\n      _.each(type.split(' '), function(type) {\n        (_.has(events, type)\n          ? events[type]\n          : (events[type] = [])\n        ).push(listener);\n      });\n      return object;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Aborts the benchmark without recording times.\n     *\n     * @memberOf Benchmark\n     * @returns {Object} The benchmark instance.\n     */\n    function abort() {\n      var event,\n          bench = this,\n          resetting = calledBy.reset;\n\n      if (bench.running) {\n        event = Event('abort');\n        bench.emit(event);\n        if (!event.cancelled || resetting) {\n          // Avoid infinite recursion.\n          calledBy.abort = true;\n          bench.reset();\n          delete calledBy.abort;\n\n          if (support.timeout) {\n            clearTimeout(bench._timerId);\n            delete bench._timerId;\n          }\n          if (!resetting) {\n            bench.aborted = true;\n            bench.running = false;\n          }\n        }\n      }\n      return bench;\n    }\n\n    /**\n     * Creates a new benchmark using the same test and options.\n     *\n     * @memberOf Benchmark\n     * @param {Object} options Options object to overwrite cloned options.\n     * @returns {Object} The new benchmark instance.\n     * @example\n     *\n     * var bizarro = bench.clone({\n     *   'name': 'doppelganger'\n     * });\n     */\n    function clone(options) {\n      var bench = this,\n          result = new bench.constructor(_.assign({}, bench, options));\n\n      // Correct the `options` object.\n      result.options = _.assign({}, cloneDeep(bench.options), cloneDeep(options));\n\n      // Copy own custom properties.\n      _.forOwn(bench, function(value, key) {\n        if (!_.has(result, key)) {\n          result[key] = cloneDeep(value);\n        }\n      });\n\n      return result;\n    }\n\n    /**\n     * Determines if a benchmark is faster than another.\n     *\n     * @memberOf Benchmark\n     * @param {Object} other The benchmark to compare.\n     * @returns {number} Returns `-1` if slower, `1` if faster, and `0` if indeterminate.\n     */\n    function compare(other) {\n      var bench = this;\n\n      // Exit early if comparing the same benchmark.\n      if (bench == other) {\n        return 0;\n      }\n      var critical,\n          zStat,\n          sample1 = bench.stats.sample,\n          sample2 = other.stats.sample,\n          size1 = sample1.length,\n          size2 = sample2.length,\n          maxSize = max(size1, size2),\n          minSize = min(size1, size2),\n          u1 = getU(sample1, sample2),\n          u2 = getU(sample2, sample1),\n          u = min(u1, u2);\n\n      function getScore(xA, sampleB) {\n        return _.reduce(sampleB, function(total, xB) {\n          return total + (xB > xA ? 0 : xB < xA ? 1 : 0.5);\n        }, 0);\n      }\n\n      function getU(sampleA, sampleB) {\n        return _.reduce(sampleA, function(total, xA) {\n          return total + getScore(xA, sampleB);\n        }, 0);\n      }\n\n      function getZ(u) {\n        return (u - ((size1 * size2) / 2)) / sqrt((size1 * size2 * (size1 + size2 + 1)) / 12);\n      }\n      // Reject the null hypothesis the two samples come from the\n      // same population (i.e. have the same median) if...\n      if (size1 + size2 > 30) {\n        // ...the z-stat is greater than 1.96 or less than -1.96\n        // http://www.statisticslectures.com/topics/mannwhitneyu/\n        zStat = getZ(u);\n        return abs(zStat) > 1.96 ? (u == u1 ? 1 : -1) : 0;\n      }\n      // ...the U value is less than or equal the critical U value.\n      critical = maxSize < 5 || minSize < 3 ? 0 : uTable[maxSize][minSize - 3];\n      return u <= critical ? (u == u1 ? 1 : -1) : 0;\n    }\n\n    /**\n     * Reset properties and abort if running.\n     *\n     * @memberOf Benchmark\n     * @returns {Object} The benchmark instance.\n     */\n    function reset() {\n      var bench = this;\n      if (bench.running && !calledBy.abort) {\n        // No worries, `reset()` is called within `abort()`.\n        calledBy.reset = true;\n        bench.abort();\n        delete calledBy.reset;\n        return bench;\n      }\n      var event,\n          index = 0,\n          changes = [],\n          queue = [];\n\n      // A non-recursive solution to check if properties have changed.\n      // For more information see http://www.jslab.dk/articles/non.recursive.preorder.traversal.part4.\n      var data = {\n        'destination': bench,\n        'source': _.assign({}, cloneDeep(bench.constructor.prototype), cloneDeep(bench.options))\n      };\n\n      do {\n        _.forOwn(data.source, function(value, key) {\n          var changed,\n              destination = data.destination,\n              currValue = destination[key];\n\n          // Skip pseudo private properties like `_timerId` which could be a\n          // Java object in environments like RingoJS.\n          if (key.charAt(0) == '_') {\n            return;\n          }\n          if (value && typeof value == 'object') {\n            if (_.isArray(value)) {\n              // Check if an array value has changed to a non-array value.\n              if (!_.isArray(currValue)) {\n                changed = currValue = [];\n              }\n              // Check if an array has changed its length.\n              if (currValue.length != value.length) {\n                changed = currValue = currValue.slice(0, value.length);\n                currValue.length = value.length;\n              }\n            }\n            // Check if an object has changed to a non-object value.\n            else if (!currValue || typeof currValue != 'object') {\n              changed = currValue = {};\n            }\n            // Register a changed object.\n            if (changed) {\n              changes.push({ 'destination': destination, 'key': key, 'value': currValue });\n            }\n            queue.push({ 'destination': currValue, 'source': value });\n          }\n          // Register a changed primitive.\n          else if (value !== currValue && !(value == null || _.isFunction(value))) {\n            changes.push({ 'destination': destination, 'key': key, 'value': value });\n          }\n        });\n      }\n      while ((data = queue[index++]));\n\n      // If changed emit the `reset` event and if it isn't cancelled reset the benchmark.\n      if (changes.length && (bench.emit(event = Event('reset')), !event.cancelled)) {\n        _.each(changes, function(data) {\n          data.destination[data.key] = data.value;\n        });\n      }\n      return bench;\n    }\n\n    /**\n     * Displays relevant benchmark information when coerced to a string.\n     *\n     * @name toString\n     * @memberOf Benchmark\n     * @returns {string} A string representation of the benchmark instance.\n     */\n    function toStringBench() {\n      var bench = this,\n          error = bench.error,\n          hz = bench.hz,\n          id = bench.id,\n          stats = bench.stats,\n          size = stats.sample.length,\n          pm = '\\xb1',\n          result = bench.name || (_.isNaN(id) ? id : '<Test #' + id + '>');\n\n      if (error) {\n        var errorStr;\n        if (!_.isObject(error)) {\n          errorStr = String(error);\n        } else if (!_.isError(Error)) {\n          errorStr = join(error);\n        } else {\n          // Error#name and Error#message properties are non-enumerable.\n          errorStr = join(_.assign({ 'name': error.name, 'message': error.message }, error));\n        }\n        result += ': ' + errorStr;\n      }\n      else {\n        result += ' x ' + formatNumber(hz.toFixed(hz < 100 ? 2 : 0)) + ' ops/sec ' + pm +\n          stats.rme.toFixed(2) + '% (' + size + ' run' + (size == 1 ? '' : 's') + ' sampled)';\n      }\n      return result;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Clocks the time taken to execute a test per cycle (secs).\n     *\n     * @private\n     * @param {Object} bench The benchmark instance.\n     * @returns {number} The time taken.\n     */\n    function clock() {\n      var options = Benchmark.options,\n          templateData = {},\n          timers = [{ 'ns': timer.ns, 'res': max(0.0015, getRes('ms')), 'unit': 'ms' }];\n\n      // Lazy define for hi-res timers.\n      clock = function(clone) {\n        var deferred;\n\n        if (clone instanceof Deferred) {\n          deferred = clone;\n          clone = deferred.benchmark;\n        }\n        var bench = clone._original,\n            stringable = isStringable(bench.fn),\n            count = bench.count = clone.count,\n            decompilable = stringable || (support.decompilation && (clone.setup !== _.noop || clone.teardown !== _.noop)),\n            id = bench.id,\n            name = bench.name || (typeof id == 'number' ? '<Test #' + id + '>' : id),\n            result = 0;\n\n        // Init `minTime` if needed.\n        clone.minTime = bench.minTime || (bench.minTime = bench.options.minTime = options.minTime);\n\n        // Compile in setup/teardown functions and the test loop.\n        // Create a new compiled test, instead of using the cached `bench.compiled`,\n        // to avoid potential engine optimizations enabled over the life of the test.\n        var funcBody = deferred\n          ? 'var d#=this,${fnArg}=d#,m#=d#.benchmark._original,f#=m#.fn,su#=m#.setup,td#=m#.teardown;' +\n            // When `deferred.cycles` is `0` then...\n            'if(!d#.cycles){' +\n            // set `deferred.fn`,\n            'd#.fn=function(){var ${fnArg}=d#;if(typeof f#==\"function\"){try{${fn}\\n}catch(e#){f#(d#)}}else{${fn}\\n}};' +\n            // set `deferred.teardown`,\n            'd#.teardown=function(){d#.cycles=0;if(typeof td#==\"function\"){try{${teardown}\\n}catch(e#){td#()}}else{${teardown}\\n}};' +\n            // execute the benchmark's `setup`,\n            'if(typeof su#==\"function\"){try{${setup}\\n}catch(e#){su#()}}else{${setup}\\n};' +\n            // start timer,\n            't#.start(d#);' +\n            // and then execute `deferred.fn` and return a dummy object.\n            '}d#.fn();return{uid:\"${uid}\"}'\n\n          : 'var r#,s#,m#=this,f#=m#.fn,i#=m#.count,n#=t#.ns;${setup}\\n${begin};' +\n            'while(i#--){${fn}\\n}${end};${teardown}\\nreturn{elapsed:r#,uid:\"${uid}\"}';\n\n        var compiled = bench.compiled = clone.compiled = createCompiled(bench, decompilable, deferred, funcBody),\n            isEmpty = !(templateData.fn || stringable);\n\n        try {\n          if (isEmpty) {\n            // Firefox may remove dead code from `Function#toString` results.\n            // For more information see http://bugzil.la/536085.\n            throw new Error('The test \"' + name + '\" is empty. This may be the result of dead code removal.');\n          }\n          else if (!deferred) {\n            // Pretest to determine if compiled code exits early, usually by a\n            // rogue `return` statement, by checking for a return object with the uid.\n            bench.count = 1;\n            compiled = decompilable && (compiled.call(bench, context, timer) || {}).uid == templateData.uid && compiled;\n            bench.count = count;\n          }\n        } catch(e) {\n          compiled = null;\n          clone.error = e || new Error(String(e));\n          bench.count = count;\n        }\n        // Fallback when a test exits early or errors during pretest.\n        if (!compiled && !deferred && !isEmpty) {\n          funcBody = (\n            stringable || (decompilable && !clone.error)\n              ? 'function f#(){${fn}\\n}var r#,s#,m#=this,i#=m#.count'\n              : 'var r#,s#,m#=this,f#=m#.fn,i#=m#.count'\n            ) +\n            ',n#=t#.ns;${setup}\\n${begin};m#.f#=f#;while(i#--){m#.f#()}${end};' +\n            'delete m#.f#;${teardown}\\nreturn{elapsed:r#}';\n\n          compiled = createCompiled(bench, decompilable, deferred, funcBody);\n\n          try {\n            // Pretest one more time to check for errors.\n            bench.count = 1;\n            compiled.call(bench, context, timer);\n            bench.count = count;\n            delete clone.error;\n          }\n          catch(e) {\n            bench.count = count;\n            if (!clone.error) {\n              clone.error = e || new Error(String(e));\n            }\n          }\n        }\n        // If no errors run the full test loop.\n        if (!clone.error) {\n          compiled = bench.compiled = clone.compiled = createCompiled(bench, decompilable, deferred, funcBody);\n          result = compiled.call(deferred || bench, context, timer).elapsed;\n        }\n        return result;\n      };\n\n      /*----------------------------------------------------------------------*/\n\n      /**\n       * Creates a compiled function from the given function `body`.\n       */\n      function createCompiled(bench, decompilable, deferred, body) {\n        var fn = bench.fn,\n            fnArg = deferred ? getFirstArgument(fn) || 'deferred' : '';\n\n        templateData.uid = uid + uidCounter++;\n\n        _.assign(templateData, {\n          'setup': decompilable ? getSource(bench.setup) : interpolate('m#.setup()'),\n          'fn': decompilable ? getSource(fn) : interpolate('m#.fn(' + fnArg + ')'),\n          'fnArg': fnArg,\n          'teardown': decompilable ? getSource(bench.teardown) : interpolate('m#.teardown()')\n        });\n\n        // Use API of chosen timer.\n        if (timer.unit == 'ns') {\n          _.assign(templateData, {\n            'begin': interpolate('s#=n#()'),\n            'end': interpolate('r#=n#(s#);r#=r#[0]+(r#[1]/1e9)')\n          });\n        }\n        else if (timer.unit == 'us') {\n          if (timer.ns.stop) {\n            _.assign(templateData, {\n              'begin': interpolate('s#=n#.start()'),\n              'end': interpolate('r#=n#.microseconds()/1e6')\n            });\n          } else {\n            _.assign(templateData, {\n              'begin': interpolate('s#=n#()'),\n              'end': interpolate('r#=(n#()-s#)/1e6')\n            });\n          }\n        }\n        else if (timer.ns.now) {\n          _.assign(templateData, {\n            'begin': interpolate('s#=n#.now()'),\n            'end': interpolate('r#=(n#.now()-s#)/1e3')\n          });\n        }\n        else {\n          _.assign(templateData, {\n            'begin': interpolate('s#=new n#().getTime()'),\n            'end': interpolate('r#=(new n#().getTime()-s#)/1e3')\n          });\n        }\n        // Define `timer` methods.\n        timer.start = createFunction(\n          interpolate('o#'),\n          interpolate('var n#=this.ns,${begin};o#.elapsed=0;o#.timeStamp=s#')\n        );\n\n        timer.stop = createFunction(\n          interpolate('o#'),\n          interpolate('var n#=this.ns,s#=o#.timeStamp,${end};o#.elapsed=r#')\n        );\n\n        // Create compiled test.\n        return createFunction(\n          interpolate('window,t#'),\n          'var global = window, clearTimeout = global.clearTimeout, setTimeout = global.setTimeout;\\n' +\n          interpolate(body)\n        );\n      }\n\n      /**\n       * Gets the current timer's minimum resolution (secs).\n       */\n      function getRes(unit) {\n        var measured,\n            begin,\n            count = 30,\n            divisor = 1e3,\n            ns = timer.ns,\n            sample = [];\n\n        // Get average smallest measurable time.\n        while (count--) {\n          if (unit == 'us') {\n            divisor = 1e6;\n            if (ns.stop) {\n              ns.start();\n              while (!(measured = ns.microseconds())) {}\n            } else {\n              begin = ns();\n              while (!(measured = ns() - begin)) {}\n            }\n          }\n          else if (unit == 'ns') {\n            divisor = 1e9;\n            begin = (begin = ns())[0] + (begin[1] / divisor);\n            while (!(measured = ((measured = ns())[0] + (measured[1] / divisor)) - begin)) {}\n            divisor = 1;\n          }\n          else if (ns.now) {\n            begin = ns.now();\n            while (!(measured = ns.now() - begin)) {}\n          }\n          else {\n            begin = new ns().getTime();\n            while (!(measured = new ns().getTime() - begin)) {}\n          }\n          // Check for broken timers.\n          if (measured > 0) {\n            sample.push(measured);\n          } else {\n            sample.push(Infinity);\n            break;\n          }\n        }\n        // Convert to seconds.\n        return getMean(sample) / divisor;\n      }\n\n      /**\n       * Interpolates a given template string.\n       */\n      function interpolate(string) {\n        // Replaces all occurrences of `#` with a unique number and template tokens with content.\n        return _.template(string.replace(/\\#/g, /\\d+/.exec(templateData.uid)))(templateData);\n      }\n\n      /*----------------------------------------------------------------------*/\n\n      // Detect Chrome's microsecond timer:\n      // enable benchmarking via the --enable-benchmarking command\n      // line switch in at least Chrome 7 to use chrome.Interval\n      try {\n        if ((timer.ns = new (context.chrome || context.chromium).Interval)) {\n          timers.push({ 'ns': timer.ns, 'res': getRes('us'), 'unit': 'us' });\n        }\n      } catch(e) {}\n\n      // Detect Node.js's nanosecond resolution timer available in Node.js >= 0.8.\n      if (processObject && typeof (timer.ns = processObject.hrtime) == 'function') {\n        timers.push({ 'ns': timer.ns, 'res': getRes('ns'), 'unit': 'ns' });\n      }\n      // Detect Wade Simmons' Node.js `microtime` module.\n      if (microtimeObject && typeof (timer.ns = microtimeObject.now) == 'function') {\n        timers.push({ 'ns': timer.ns,  'res': getRes('us'), 'unit': 'us' });\n      }\n      // Pick timer with highest resolution.\n      timer = _.minBy(timers, 'res');\n\n      // Error if there are no working timers.\n      if (timer.res == Infinity) {\n        throw new Error('Benchmark.js was unable to find a working timer.');\n      }\n      // Resolve time span required to achieve a percent uncertainty of at most 1%.\n      // For more information see http://spiff.rit.edu/classes/phys273/uncert/uncert.html.\n      options.minTime || (options.minTime = max(timer.res / 2 / 0.01, 0.05));\n      return clock.apply(null, arguments);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Computes stats on benchmark results.\n     *\n     * @private\n     * @param {Object} bench The benchmark instance.\n     * @param {Object} options The options object.\n     */\n    function compute(bench, options) {\n      options || (options = {});\n\n      var async = options.async,\n          elapsed = 0,\n          initCount = bench.initCount,\n          minSamples = bench.minSamples,\n          queue = [],\n          sample = bench.stats.sample;\n\n      /**\n       * Adds a clone to the queue.\n       */\n      function enqueue() {\n        queue.push(bench.clone({\n          '_original': bench,\n          'events': {\n            'abort': [update],\n            'cycle': [update],\n            'error': [update],\n            'start': [update]\n          }\n        }));\n      }\n\n      /**\n       * Updates the clone/original benchmarks to keep their data in sync.\n       */\n      function update(event) {\n        var clone = this,\n            type = event.type;\n\n        if (bench.running) {\n          if (type == 'start') {\n            // Note: `clone.minTime` prop is inited in `clock()`.\n            clone.count = bench.initCount;\n          }\n          else {\n            if (type == 'error') {\n              bench.error = clone.error;\n            }\n            if (type == 'abort') {\n              bench.abort();\n              bench.emit('cycle');\n            } else {\n              event.currentTarget = event.target = bench;\n              bench.emit(event);\n            }\n          }\n        } else if (bench.aborted) {\n          // Clear abort listeners to avoid triggering bench's abort/cycle again.\n          clone.events.abort.length = 0;\n          clone.abort();\n        }\n      }\n\n      /**\n       * Determines if more clones should be queued or if cycling should stop.\n       */\n      function evaluate(event) {\n        var critical,\n            df,\n            mean,\n            moe,\n            rme,\n            sd,\n            sem,\n            variance,\n            clone = event.target,\n            done = bench.aborted,\n            now = _.now(),\n            size = sample.push(clone.times.period),\n            maxedOut = size >= minSamples && (elapsed += now - clone.times.timeStamp) / 1e3 > bench.maxTime,\n            times = bench.times,\n            varOf = function(sum, x) { return sum + pow(x - mean, 2); };\n\n        // Exit early for aborted or unclockable tests.\n        if (done || clone.hz == Infinity) {\n          maxedOut = !(size = sample.length = queue.length = 0);\n        }\n\n        if (!done) {\n          // Compute the sample mean (estimate of the population mean).\n          mean = getMean(sample);\n          // Compute the sample variance (estimate of the population variance).\n          variance = _.reduce(sample, varOf, 0) / (size - 1) || 0;\n          // Compute the sample standard deviation (estimate of the population standard deviation).\n          sd = sqrt(variance);\n          // Compute the standard error of the mean (a.k.a. the standard deviation of the sampling distribution of the sample mean).\n          sem = sd / sqrt(size);\n          // Compute the degrees of freedom.\n          df = size - 1;\n          // Compute the critical value.\n          critical = tTable[Math.round(df) || 1] || tTable.infinity;\n          // Compute the margin of error.\n          moe = sem * critical;\n          // Compute the relative margin of error.\n          rme = (moe / mean) * 100 || 0;\n\n          _.assign(bench.stats, {\n            'deviation': sd,\n            'mean': mean,\n            'moe': moe,\n            'rme': rme,\n            'sem': sem,\n            'variance': variance\n          });\n\n          // Abort the cycle loop when the minimum sample size has been collected\n          // and the elapsed time exceeds the maximum time allowed per benchmark.\n          // We don't count cycle delays toward the max time because delays may be\n          // increased by browsers that clamp timeouts for inactive tabs. For more\n          // information see https://developer.mozilla.org/en/window.setTimeout#Inactive_tabs.\n          if (maxedOut) {\n            // Reset the `initCount` in case the benchmark is rerun.\n            bench.initCount = initCount;\n            bench.running = false;\n            done = true;\n            times.elapsed = (now - times.timeStamp) / 1e3;\n          }\n          if (bench.hz != Infinity) {\n            bench.hz = 1 / mean;\n            times.cycle = mean * bench.count;\n            times.period = mean;\n          }\n        }\n        // If time permits, increase sample size to reduce the margin of error.\n        if (queue.length < 2 && !maxedOut) {\n          enqueue();\n        }\n        // Abort the `invoke` cycle when done.\n        event.aborted = done;\n      }\n\n      // Init queue and begin.\n      enqueue();\n      invoke(queue, {\n        'name': 'run',\n        'args': { 'async': async },\n        'queued': true,\n        'onCycle': evaluate,\n        'onComplete': function() { bench.emit('complete'); }\n      });\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Cycles a benchmark until a run `count` can be established.\n     *\n     * @private\n     * @param {Object} clone The cloned benchmark instance.\n     * @param {Object} options The options object.\n     */\n    function cycle(clone, options) {\n      options || (options = {});\n\n      var deferred;\n      if (clone instanceof Deferred) {\n        deferred = clone;\n        clone = clone.benchmark;\n      }\n      var clocked,\n          cycles,\n          divisor,\n          event,\n          minTime,\n          period,\n          async = options.async,\n          bench = clone._original,\n          count = clone.count,\n          times = clone.times;\n\n      // Continue, if not aborted between cycles.\n      if (clone.running) {\n        // `minTime` is set to `Benchmark.options.minTime` in `clock()`.\n        cycles = ++clone.cycles;\n        clocked = deferred ? deferred.elapsed : clock(clone);\n        minTime = clone.minTime;\n\n        if (cycles > bench.cycles) {\n          bench.cycles = cycles;\n        }\n        if (clone.error) {\n          event = Event('error');\n          event.message = clone.error;\n          clone.emit(event);\n          if (!event.cancelled) {\n            clone.abort();\n          }\n        }\n      }\n      // Continue, if not errored.\n      if (clone.running) {\n        // Compute the time taken to complete last test cycle.\n        bench.times.cycle = times.cycle = clocked;\n        // Compute the seconds per operation.\n        period = bench.times.period = times.period = clocked / count;\n        // Compute the ops per second.\n        bench.hz = clone.hz = 1 / period;\n        // Avoid working our way up to this next time.\n        bench.initCount = clone.initCount = count;\n        // Do we need to do another cycle?\n        clone.running = clocked < minTime;\n\n        if (clone.running) {\n          // Tests may clock at `0` when `initCount` is a small number,\n          // to avoid that we set its count to something a bit higher.\n          if (!clocked && (divisor = divisors[clone.cycles]) != null) {\n            count = floor(4e6 / divisor);\n          }\n          // Calculate how many more iterations it will take to achieve the `minTime`.\n          if (count <= clone.count) {\n            count += Math.ceil((minTime - clocked) / period);\n          }\n          clone.running = count != Infinity;\n        }\n      }\n      // Should we exit early?\n      event = Event('cycle');\n      clone.emit(event);\n      if (event.aborted) {\n        clone.abort();\n      }\n      // Figure out what to do next.\n      if (clone.running) {\n        // Start a new cycle.\n        clone.count = count;\n        if (deferred) {\n          clone.compiled.call(deferred, context, timer);\n        } else if (async) {\n          delay(clone, function() { cycle(clone, options); });\n        } else {\n          cycle(clone);\n        }\n      }\n      else {\n        // Fix TraceMonkey bug associated with clock fallbacks.\n        // For more information see http://bugzil.la/509069.\n        if (support.browser) {\n          runScript(uid + '=1;delete ' + uid);\n        }\n        // We're done.\n        clone.emit('complete');\n      }\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Runs the benchmark.\n     *\n     * @memberOf Benchmark\n     * @param {Object} [options={}] Options object.\n     * @returns {Object} The benchmark instance.\n     * @example\n     *\n     * // basic usage\n     * bench.run();\n     *\n     * // or with options\n     * bench.run({ 'async': true });\n     */\n    function run(options) {\n      var bench = this,\n          event = Event('start');\n\n      // Set `running` to `false` so `reset()` won't call `abort()`.\n      bench.running = false;\n      bench.reset();\n      bench.running = true;\n\n      bench.count = bench.initCount;\n      bench.times.timeStamp = _.now();\n      bench.emit(event);\n\n      if (!event.cancelled) {\n        options = { 'async': ((options = options && options.async) == null ? bench.async : options) && support.timeout };\n\n        // For clones created within `compute()`.\n        if (bench._original) {\n          if (bench.defer) {\n            Deferred(bench);\n          } else {\n            cycle(bench, options);\n          }\n        }\n        // For original benchmarks.\n        else {\n          compute(bench, options);\n        }\n      }\n      return bench;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    // Firefox 1 erroneously defines variable and argument names of functions on\n    // the function itself as non-configurable properties with `undefined` values.\n    // The bugginess continues as the `Benchmark` constructor has an argument\n    // named `options` and Firefox 1 will not assign a value to `Benchmark.options`,\n    // making it non-writable in the process, unless it is the first property\n    // assigned by for-in loop of `_.assign()`.\n    _.assign(Benchmark, {\n\n      /**\n       * The default options copied by benchmark instances.\n       *\n       * @static\n       * @memberOf Benchmark\n       * @type Object\n       */\n      'options': {\n\n        /**\n         * A flag to indicate that benchmark cycles will execute asynchronously\n         * by default.\n         *\n         * @memberOf Benchmark.options\n         * @type boolean\n         */\n        'async': false,\n\n        /**\n         * A flag to indicate that the benchmark clock is deferred.\n         *\n         * @memberOf Benchmark.options\n         * @type boolean\n         */\n        'defer': false,\n\n        /**\n         * The delay between test cycles (secs).\n         * @memberOf Benchmark.options\n         * @type number\n         */\n        'delay': 0.005,\n\n        /**\n         * Displayed by `Benchmark#toString` when a `name` is not available\n         * (auto-generated if absent).\n         *\n         * @memberOf Benchmark.options\n         * @type string\n         */\n        'id': undefined,\n\n        /**\n         * The default number of times to execute a test on a benchmark's first cycle.\n         *\n         * @memberOf Benchmark.options\n         * @type number\n         */\n        'initCount': 1,\n\n        /**\n         * The maximum time a benchmark is allowed to run before finishing (secs).\n         *\n         * Note: Cycle delays aren't counted toward the maximum time.\n         *\n         * @memberOf Benchmark.options\n         * @type number\n         */\n        'maxTime': 5,\n\n        /**\n         * The minimum sample size required to perform statistical analysis.\n         *\n         * @memberOf Benchmark.options\n         * @type number\n         */\n        'minSamples': 5,\n\n        /**\n         * The time needed to reduce the percent uncertainty of measurement to 1% (secs).\n         *\n         * @memberOf Benchmark.options\n         * @type number\n         */\n        'minTime': 0,\n\n        /**\n         * The name of the benchmark.\n         *\n         * @memberOf Benchmark.options\n         * @type string\n         */\n        'name': undefined,\n\n        /**\n         * An event listener called when the benchmark is aborted.\n         *\n         * @memberOf Benchmark.options\n         * @type Function\n         */\n        'onAbort': undefined,\n\n        /**\n         * An event listener called when the benchmark completes running.\n         *\n         * @memberOf Benchmark.options\n         * @type Function\n         */\n        'onComplete': undefined,\n\n        /**\n         * An event listener called after each run cycle.\n         *\n         * @memberOf Benchmark.options\n         * @type Function\n         */\n        'onCycle': undefined,\n\n        /**\n         * An event listener called when a test errors.\n         *\n         * @memberOf Benchmark.options\n         * @type Function\n         */\n        'onError': undefined,\n\n        /**\n         * An event listener called when the benchmark is reset.\n         *\n         * @memberOf Benchmark.options\n         * @type Function\n         */\n        'onReset': undefined,\n\n        /**\n         * An event listener called when the benchmark starts running.\n         *\n         * @memberOf Benchmark.options\n         * @type Function\n         */\n        'onStart': undefined\n      },\n\n      /**\n       * Platform object with properties describing things like browser name,\n       * version, and operating system. See [`platform.js`](https://mths.be/platform).\n       *\n       * @static\n       * @memberOf Benchmark\n       * @type Object\n       */\n      'platform': context.platform || require('platform') || ({\n        'description': context.navigator && context.navigator.userAgent || null,\n        'layout': null,\n        'product': null,\n        'name': null,\n        'manufacturer': null,\n        'os': null,\n        'prerelease': null,\n        'version': null,\n        'toString': function() {\n          return this.description || '';\n        }\n      }),\n\n      /**\n       * The semantic version number.\n       *\n       * @static\n       * @memberOf Benchmark\n       * @type string\n       */\n      'version': '2.1.2'\n    });\n\n    _.assign(Benchmark, {\n      'filter': filter,\n      'formatNumber': formatNumber,\n      'invoke': invoke,\n      'join': join,\n      'runInContext': runInContext,\n      'support': support\n    });\n\n    // Add lodash methods to Benchmark.\n    _.each(['each', 'forEach', 'forOwn', 'has', 'indexOf', 'map', 'reduce'], function(methodName) {\n      Benchmark[methodName] = _[methodName];\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    _.assign(Benchmark.prototype, {\n\n      /**\n       * The number of times a test was executed.\n       *\n       * @memberOf Benchmark\n       * @type number\n       */\n      'count': 0,\n\n      /**\n       * The number of cycles performed while benchmarking.\n       *\n       * @memberOf Benchmark\n       * @type number\n       */\n      'cycles': 0,\n\n      /**\n       * The number of executions per second.\n       *\n       * @memberOf Benchmark\n       * @type number\n       */\n      'hz': 0,\n\n      /**\n       * The compiled test function.\n       *\n       * @memberOf Benchmark\n       * @type {Function|string}\n       */\n      'compiled': undefined,\n\n      /**\n       * The error object if the test failed.\n       *\n       * @memberOf Benchmark\n       * @type Object\n       */\n      'error': undefined,\n\n      /**\n       * The test to benchmark.\n       *\n       * @memberOf Benchmark\n       * @type {Function|string}\n       */\n      'fn': undefined,\n\n      /**\n       * A flag to indicate if the benchmark is aborted.\n       *\n       * @memberOf Benchmark\n       * @type boolean\n       */\n      'aborted': false,\n\n      /**\n       * A flag to indicate if the benchmark is running.\n       *\n       * @memberOf Benchmark\n       * @type boolean\n       */\n      'running': false,\n\n      /**\n       * Compiled into the test and executed immediately **before** the test loop.\n       *\n       * @memberOf Benchmark\n       * @type {Function|string}\n       * @example\n       *\n       * // basic usage\n       * var bench = Benchmark({\n       *   'setup': function() {\n       *     var c = this.count,\n       *         element = document.getElementById('container');\n       *     while (c--) {\n       *       element.appendChild(document.createElement('div'));\n       *     }\n       *   },\n       *   'fn': function() {\n       *     element.removeChild(element.lastChild);\n       *   }\n       * });\n       *\n       * // compiles to something like:\n       * var c = this.count,\n       *     element = document.getElementById('container');\n       * while (c--) {\n       *   element.appendChild(document.createElement('div'));\n       * }\n       * var start = new Date;\n       * while (count--) {\n       *   element.removeChild(element.lastChild);\n       * }\n       * var end = new Date - start;\n       *\n       * // or using strings\n       * var bench = Benchmark({\n       *   'setup': '\\\n       *     var a = 0;\\n\\\n       *     (function() {\\n\\\n       *       (function() {\\n\\\n       *         (function() {',\n       *   'fn': 'a += 1;',\n       *   'teardown': '\\\n       *          }())\\n\\\n       *        }())\\n\\\n       *      }())'\n       * });\n       *\n       * // compiles to something like:\n       * var a = 0;\n       * (function() {\n       *   (function() {\n       *     (function() {\n       *       var start = new Date;\n       *       while (count--) {\n       *         a += 1;\n       *       }\n       *       var end = new Date - start;\n       *     }())\n       *   }())\n       * }())\n       */\n      'setup': _.noop,\n\n      /**\n       * Compiled into the test and executed immediately **after** the test loop.\n       *\n       * @memberOf Benchmark\n       * @type {Function|string}\n       */\n      'teardown': _.noop,\n\n      /**\n       * An object of stats including mean, margin or error, and standard deviation.\n       *\n       * @memberOf Benchmark\n       * @type Object\n       */\n      'stats': {\n\n        /**\n         * The margin of error.\n         *\n         * @memberOf Benchmark#stats\n         * @type number\n         */\n        'moe': 0,\n\n        /**\n         * The relative margin of error (expressed as a percentage of the mean).\n         *\n         * @memberOf Benchmark#stats\n         * @type number\n         */\n        'rme': 0,\n\n        /**\n         * The standard error of the mean.\n         *\n         * @memberOf Benchmark#stats\n         * @type number\n         */\n        'sem': 0,\n\n        /**\n         * The sample standard deviation.\n         *\n         * @memberOf Benchmark#stats\n         * @type number\n         */\n        'deviation': 0,\n\n        /**\n         * The sample arithmetic mean (secs).\n         *\n         * @memberOf Benchmark#stats\n         * @type number\n         */\n        'mean': 0,\n\n        /**\n         * The array of sampled periods.\n         *\n         * @memberOf Benchmark#stats\n         * @type Array\n         */\n        'sample': [],\n\n        /**\n         * The sample variance.\n         *\n         * @memberOf Benchmark#stats\n         * @type number\n         */\n        'variance': 0\n      },\n\n      /**\n       * An object of timing data including cycle, elapsed, period, start, and stop.\n       *\n       * @memberOf Benchmark\n       * @type Object\n       */\n      'times': {\n\n        /**\n         * The time taken to complete the last cycle (secs).\n         *\n         * @memberOf Benchmark#times\n         * @type number\n         */\n        'cycle': 0,\n\n        /**\n         * The time taken to complete the benchmark (secs).\n         *\n         * @memberOf Benchmark#times\n         * @type number\n         */\n        'elapsed': 0,\n\n        /**\n         * The time taken to execute the test once (secs).\n         *\n         * @memberOf Benchmark#times\n         * @type number\n         */\n        'period': 0,\n\n        /**\n         * A timestamp of when the benchmark started (ms).\n         *\n         * @memberOf Benchmark#times\n         * @type number\n         */\n        'timeStamp': 0\n      }\n    });\n\n    _.assign(Benchmark.prototype, {\n      'abort': abort,\n      'clone': clone,\n      'compare': compare,\n      'emit': emit,\n      'listeners': listeners,\n      'off': off,\n      'on': on,\n      'reset': reset,\n      'run': run,\n      'toString': toStringBench\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    _.assign(Deferred.prototype, {\n\n      /**\n       * The deferred benchmark instance.\n       *\n       * @memberOf Benchmark.Deferred\n       * @type Object\n       */\n      'benchmark': null,\n\n      /**\n       * The number of deferred cycles performed while benchmarking.\n       *\n       * @memberOf Benchmark.Deferred\n       * @type number\n       */\n      'cycles': 0,\n\n      /**\n       * The time taken to complete the deferred benchmark (secs).\n       *\n       * @memberOf Benchmark.Deferred\n       * @type number\n       */\n      'elapsed': 0,\n\n      /**\n       * A timestamp of when the deferred benchmark started (ms).\n       *\n       * @memberOf Benchmark.Deferred\n       * @type number\n       */\n      'timeStamp': 0\n    });\n\n    _.assign(Deferred.prototype, {\n      'resolve': resolve\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    _.assign(Event.prototype, {\n\n      /**\n       * A flag to indicate if the emitters listener iteration is aborted.\n       *\n       * @memberOf Benchmark.Event\n       * @type boolean\n       */\n      'aborted': false,\n\n      /**\n       * A flag to indicate if the default action is cancelled.\n       *\n       * @memberOf Benchmark.Event\n       * @type boolean\n       */\n      'cancelled': false,\n\n      /**\n       * The object whose listeners are currently being processed.\n       *\n       * @memberOf Benchmark.Event\n       * @type Object\n       */\n      'currentTarget': undefined,\n\n      /**\n       * The return value of the last executed listener.\n       *\n       * @memberOf Benchmark.Event\n       * @type Mixed\n       */\n      'result': undefined,\n\n      /**\n       * The object to which the event was originally emitted.\n       *\n       * @memberOf Benchmark.Event\n       * @type Object\n       */\n      'target': undefined,\n\n      /**\n       * A timestamp of when the event was created (ms).\n       *\n       * @memberOf Benchmark.Event\n       * @type number\n       */\n      'timeStamp': 0,\n\n      /**\n       * The event type.\n       *\n       * @memberOf Benchmark.Event\n       * @type string\n       */\n      'type': ''\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The default options copied by suite instances.\n     *\n     * @static\n     * @memberOf Benchmark.Suite\n     * @type Object\n     */\n    Suite.options = {\n\n      /**\n       * The name of the suite.\n       *\n       * @memberOf Benchmark.Suite.options\n       * @type string\n       */\n      'name': undefined\n    };\n\n    /*------------------------------------------------------------------------*/\n\n    _.assign(Suite.prototype, {\n\n      /**\n       * The number of benchmarks in the suite.\n       *\n       * @memberOf Benchmark.Suite\n       * @type number\n       */\n      'length': 0,\n\n      /**\n       * A flag to indicate if the suite is aborted.\n       *\n       * @memberOf Benchmark.Suite\n       * @type boolean\n       */\n      'aborted': false,\n\n      /**\n       * A flag to indicate if the suite is running.\n       *\n       * @memberOf Benchmark.Suite\n       * @type boolean\n       */\n      'running': false\n    });\n\n    _.assign(Suite.prototype, {\n      'abort': abortSuite,\n      'add': add,\n      'clone': cloneSuite,\n      'emit': emit,\n      'filter': filterSuite,\n      'join': arrayRef.join,\n      'listeners': listeners,\n      'off': off,\n      'on': on,\n      'pop': arrayRef.pop,\n      'push': push,\n      'reset': resetSuite,\n      'run': runSuite,\n      'reverse': arrayRef.reverse,\n      'shift': shift,\n      'slice': slice,\n      'sort': arrayRef.sort,\n      'splice': arrayRef.splice,\n      'unshift': unshift\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    // Expose Deferred, Event, and Suite.\n    _.assign(Benchmark, {\n      'Deferred': Deferred,\n      'Event': Event,\n      'Suite': Suite\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    // Add lodash methods as Suite methods.\n    _.each(['each', 'forEach', 'indexOf', 'map', 'reduce'], function(methodName) {\n      var func = _[methodName];\n      Suite.prototype[methodName] = function() {\n        var args = [this];\n        push.apply(args, arguments);\n        return func.apply(_, args);\n      };\n    });\n\n    // Avoid array-like object bugs with `Array#shift` and `Array#splice`\n    // in Firefox < 10 and IE < 9.\n    _.each(['pop', 'shift', 'splice'], function(methodName) {\n      var func = arrayRef[methodName];\n\n      Suite.prototype[methodName] = function() {\n        var value = this,\n            result = func.apply(value, arguments);\n\n        if (value.length === 0) {\n          delete value[0];\n        }\n        return result;\n      };\n    });\n\n    // Avoid buggy `Array#unshift` in IE < 8 which doesn't return the new\n    // length of the array.\n    Suite.prototype.unshift = function() {\n      var value = this;\n      unshift.apply(value, arguments);\n      return value.length;\n    };\n\n    return Benchmark;\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  // Export Benchmark.\n  // Some AMD build optimizers, like r.js, check for condition patterns like the following:\n  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {\n    // Define as an anonymous module so, through path mapping, it can be aliased.\n    define(['lodash', 'platform'], function(_, platform) {\n      return runInContext({\n        '_': _,\n        'platform': platform\n      });\n    });\n  }\n  else {\n    var Benchmark = runInContext();\n\n    // Check for `exports` after `define` in case a build optimizer adds an `exports` object.\n    if (freeExports && freeModule) {\n      // Export for Node.js.\n      if (moduleExports) {\n        (freeModule.exports = Benchmark).Benchmark = Benchmark;\n      }\n      // Export for CommonJS support.\n      freeExports.Benchmark = Benchmark;\n    }\n    else {\n      // Export to the global object.\n      root.Benchmark = Benchmark;\n    }\n  }\n}.call(this));\n\n\n/***/ },\n/* 24 */\n/***/ function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(module, global) {var __WEBPACK_AMD_DEFINE_RESULT__;/*!\r\n * Platform.js <https://mths.be/platform>\r\n * Copyright 2014-2016 Benjamin Tan <https://demoneaux.github.io/>\r\n * Copyright 2011-2013 John-David Dalton <http://allyoucanleet.com/>\r\n * Available under MIT license <https://mths.be/mit>\r\n */\r\n;(function() {\r\n  'use strict';\r\n\r\n  /** Used to determine if values are of the language type `Object`. */\r\n  var objectTypes = {\r\n    'function': true,\r\n    'object': true\r\n  };\r\n\r\n  /** Used as a reference to the global object. */\r\n  var root = (objectTypes[typeof window] && window) || this;\r\n\r\n  /** Backup possible global object. */\r\n  var oldRoot = root;\r\n\r\n  /** Detect free variable `exports`. */\r\n  var freeExports = objectTypes[typeof exports] && exports;\r\n\r\n  /** Detect free variable `module`. */\r\n  var freeModule = objectTypes[typeof module] && module && !module.nodeType && module;\r\n\r\n  /** Detect free variable `global` from Node.js or Browserified code and use it as `root`. */\r\n  var freeGlobal = freeExports && freeModule && typeof global == 'object' && global;\r\n  if (freeGlobal && (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal || freeGlobal.self === freeGlobal)) {\r\n    root = freeGlobal;\r\n  }\r\n\r\n  /**\r\n   * Used as the maximum length of an array-like object.\r\n   * See the [ES6 spec](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength)\r\n   * for more details.\r\n   */\r\n  var maxSafeInteger = Math.pow(2, 53) - 1;\r\n\r\n  /** Regular expression to detect Opera. */\r\n  var reOpera = /\\bOpera/;\r\n\r\n  /** Possible global object. */\r\n  var thisBinding = this;\r\n\r\n  /** Used for native method references. */\r\n  var objectProto = Object.prototype;\r\n\r\n  /** Used to check for own properties of an object. */\r\n  var hasOwnProperty = objectProto.hasOwnProperty;\r\n\r\n  /** Used to resolve the internal `[[Class]]` of values. */\r\n  var toString = objectProto.toString;\r\n\r\n  /*--------------------------------------------------------------------------*/\r\n\r\n  /**\r\n   * Capitalizes a string value.\r\n   *\r\n   * @private\r\n   * @param {string} string The string to capitalize.\r\n   * @returns {string} The capitalized string.\r\n   */\r\n  function capitalize(string) {\r\n    string = String(string);\r\n    return string.charAt(0).toUpperCase() + string.slice(1);\r\n  }\r\n\r\n  /**\r\n   * A utility function to clean up the OS name.\r\n   *\r\n   * @private\r\n   * @param {string} os The OS name to clean up.\r\n   * @param {string} [pattern] A `RegExp` pattern matching the OS name.\r\n   * @param {string} [label] A label for the OS.\r\n   */\r\n  function cleanupOS(os, pattern, label) {\r\n    // Platform tokens are defined at:\r\n    // http://msdn.microsoft.com/en-us/library/ms537503(VS.85).aspx\r\n    // http://web.archive.org/web/20081122053950/http://msdn.microsoft.com/en-us/library/ms537503(VS.85).aspx\r\n    var data = {\r\n      '10.0': '10',\r\n      '6.4':  '10 Technical Preview',\r\n      '6.3':  '8.1',\r\n      '6.2':  '8',\r\n      '6.1':  'Server 2008 R2 / 7',\r\n      '6.0':  'Server 2008 / Vista',\r\n      '5.2':  'Server 2003 / XP 64-bit',\r\n      '5.1':  'XP',\r\n      '5.01': '2000 SP1',\r\n      '5.0':  '2000',\r\n      '4.0':  'NT',\r\n      '4.90': 'ME'\r\n    };\r\n    // Detect Windows version from platform tokens.\r\n    if (pattern && label && /^Win/i.test(os) && !/^Windows Phone /i.test(os) &&\r\n        (data = data[/[\\d.]+$/.exec(os)])) {\r\n      os = 'Windows ' + data;\r\n    }\r\n    // Correct character case and cleanup string.\r\n    os = String(os);\r\n\r\n    if (pattern && label) {\r\n      os = os.replace(RegExp(pattern, 'i'), label);\r\n    }\r\n\r\n    os = format(\r\n      os.replace(/ ce$/i, ' CE')\r\n        .replace(/\\bhpw/i, 'web')\r\n        .replace(/\\bMacintosh\\b/, 'Mac OS')\r\n        .replace(/_PowerPC\\b/i, ' OS')\r\n        .replace(/\\b(OS X) [^ \\d]+/i, '$1')\r\n        .replace(/\\bMac (OS X)\\b/, '$1')\r\n        .replace(/\\/(\\d)/, ' $1')\r\n        .replace(/_/g, '.')\r\n        .replace(/(?: BePC|[ .]*fc[ \\d.]+)$/i, '')\r\n        .replace(/\\bx86\\.64\\b/gi, 'x86_64')\r\n        .replace(/\\b(Windows Phone) OS\\b/, '$1')\r\n        .replace(/\\b(Chrome OS \\w+) [\\d.]+\\b/, '$1')\r\n        .split(' on ')[0]\r\n    );\r\n\r\n    return os;\r\n  }\r\n\r\n  /**\r\n   * An iteration utility for arrays and objects.\r\n   *\r\n   * @private\r\n   * @param {Array|Object} object The object to iterate over.\r\n   * @param {Function} callback The function called per iteration.\r\n   */\r\n  function each(object, callback) {\r\n    var index = -1,\r\n        length = object ? object.length : 0;\r\n\r\n    if (typeof length == 'number' && length > -1 && length <= maxSafeInteger) {\r\n      while (++index < length) {\r\n        callback(object[index], index, object);\r\n      }\r\n    } else {\r\n      forOwn(object, callback);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Trim and conditionally capitalize string values.\r\n   *\r\n   * @private\r\n   * @param {string} string The string to format.\r\n   * @returns {string} The formatted string.\r\n   */\r\n  function format(string) {\r\n    string = trim(string);\r\n    return /^(?:webOS|i(?:OS|P))/.test(string)\r\n      ? string\r\n      : capitalize(string);\r\n  }\r\n\r\n  /**\r\n   * Iterates over an object's own properties, executing the `callback` for each.\r\n   *\r\n   * @private\r\n   * @param {Object} object The object to iterate over.\r\n   * @param {Function} callback The function executed per own property.\r\n   */\r\n  function forOwn(object, callback) {\r\n    for (var key in object) {\r\n      if (hasOwnProperty.call(object, key)) {\r\n        callback(object[key], key, object);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Gets the internal `[[Class]]` of a value.\r\n   *\r\n   * @private\r\n   * @param {*} value The value.\r\n   * @returns {string} The `[[Class]]`.\r\n   */\r\n  function getClassOf(value) {\r\n    return value == null\r\n      ? capitalize(value)\r\n      : toString.call(value).slice(8, -1);\r\n  }\r\n\r\n  /**\r\n   * Host objects can return type values that are different from their actual\r\n   * data type. The objects we are concerned with usually return non-primitive\r\n   * types of \"object\", \"function\", or \"unknown\".\r\n   *\r\n   * @private\r\n   * @param {*} object The owner of the property.\r\n   * @param {string} property The property to check.\r\n   * @returns {boolean} Returns `true` if the property value is a non-primitive, else `false`.\r\n   */\r\n  function isHostType(object, property) {\r\n    var type = object != null ? typeof object[property] : 'number';\r\n    return !/^(?:boolean|number|string|undefined)$/.test(type) &&\r\n      (type == 'object' ? !!object[property] : true);\r\n  }\r\n\r\n  /**\r\n   * Prepares a string for use in a `RegExp` by making hyphens and spaces optional.\r\n   *\r\n   * @private\r\n   * @param {string} string The string to qualify.\r\n   * @returns {string} The qualified string.\r\n   */\r\n  function qualify(string) {\r\n    return String(string).replace(/([ -])(?!$)/g, '$1?');\r\n  }\r\n\r\n  /**\r\n   * A bare-bones `Array#reduce` like utility function.\r\n   *\r\n   * @private\r\n   * @param {Array} array The array to iterate over.\r\n   * @param {Function} callback The function called per iteration.\r\n   * @returns {*} The accumulated result.\r\n   */\r\n  function reduce(array, callback) {\r\n    var accumulator = null;\r\n    each(array, function(value, index) {\r\n      accumulator = callback(accumulator, value, index, array);\r\n    });\r\n    return accumulator;\r\n  }\r\n\r\n  /**\r\n   * Removes leading and trailing whitespace from a string.\r\n   *\r\n   * @private\r\n   * @param {string} string The string to trim.\r\n   * @returns {string} The trimmed string.\r\n   */\r\n  function trim(string) {\r\n    return String(string).replace(/^ +| +$/g, '');\r\n  }\r\n\r\n  /*--------------------------------------------------------------------------*/\r\n\r\n  /**\r\n   * Creates a new platform object.\r\n   *\r\n   * @memberOf platform\r\n   * @param {Object|string} [ua=navigator.userAgent] The user agent string or\r\n   *  context object.\r\n   * @returns {Object} A platform object.\r\n   */\r\n  function parse(ua) {\r\n\r\n    /** The environment context object. */\r\n    var context = root;\r\n\r\n    /** Used to flag when a custom context is provided. */\r\n    var isCustomContext = ua && typeof ua == 'object' && getClassOf(ua) != 'String';\r\n\r\n    // Juggle arguments.\r\n    if (isCustomContext) {\r\n      context = ua;\r\n      ua = null;\r\n    }\r\n\r\n    /** Browser navigator object. */\r\n    var nav = context.navigator || {};\r\n\r\n    /** Browser user agent string. */\r\n    var userAgent = nav.userAgent || '';\r\n\r\n    ua || (ua = userAgent);\r\n\r\n    /** Used to flag when `thisBinding` is the [ModuleScope]. */\r\n    var isModuleScope = isCustomContext || thisBinding == oldRoot;\r\n\r\n    /** Used to detect if browser is like Chrome. */\r\n    var likeChrome = isCustomContext\r\n      ? !!nav.likeChrome\r\n      : /\\bChrome\\b/.test(ua) && !/internal|\\n/i.test(toString.toString());\r\n\r\n    /** Internal `[[Class]]` value shortcuts. */\r\n    var objectClass = 'Object',\r\n        airRuntimeClass = isCustomContext ? objectClass : 'ScriptBridgingProxyObject',\r\n        enviroClass = isCustomContext ? objectClass : 'Environment',\r\n        javaClass = (isCustomContext && context.java) ? 'JavaPackage' : getClassOf(context.java),\r\n        phantomClass = isCustomContext ? objectClass : 'RuntimeObject';\r\n\r\n    /** Detect Java environments. */\r\n    var java = /\\bJava/.test(javaClass) && context.java;\r\n\r\n    /** Detect Rhino. */\r\n    var rhino = java && getClassOf(context.environment) == enviroClass;\r\n\r\n    /** A character to represent alpha. */\r\n    var alpha = java ? 'a' : '\\u03b1';\r\n\r\n    /** A character to represent beta. */\r\n    var beta = java ? 'b' : '\\u03b2';\r\n\r\n    /** Browser document object. */\r\n    var doc = context.document || {};\r\n\r\n    /**\r\n     * Detect Opera browser (Presto-based).\r\n     * http://www.howtocreate.co.uk/operaStuff/operaObject.html\r\n     * http://dev.opera.com/articles/view/opera-mini-web-content-authoring-guidelines/#operamini\r\n     */\r\n    var opera = context.operamini || context.opera;\r\n\r\n    /** Opera `[[Class]]`. */\r\n    var operaClass = reOpera.test(operaClass = (isCustomContext && opera) ? opera['[[Class]]'] : getClassOf(opera))\r\n      ? operaClass\r\n      : (opera = null);\r\n\r\n    /*------------------------------------------------------------------------*/\r\n\r\n    /** Temporary variable used over the script's lifetime. */\r\n    var data;\r\n\r\n    /** The CPU architecture. */\r\n    var arch = ua;\r\n\r\n    /** Platform description array. */\r\n    var description = [];\r\n\r\n    /** Platform alpha/beta indicator. */\r\n    var prerelease = null;\r\n\r\n    /** A flag to indicate that environment features should be used to resolve the platform. */\r\n    var useFeatures = ua == userAgent;\r\n\r\n    /** The browser/environment version. */\r\n    var version = useFeatures && opera && typeof opera.version == 'function' && opera.version();\r\n\r\n    /** A flag to indicate if the OS ends with \"/ Version\" */\r\n    var isSpecialCasedOS;\r\n\r\n    /* Detectable layout engines (order is important). */\r\n    var layout = getLayout([\r\n      { 'label': 'EdgeHTML', 'pattern': 'Edge' },\r\n      'Trident',\r\n      { 'label': 'WebKit', 'pattern': 'AppleWebKit' },\r\n      'iCab',\r\n      'Presto',\r\n      'NetFront',\r\n      'Tasman',\r\n      'KHTML',\r\n      'Gecko'\r\n    ]);\r\n\r\n    /* Detectable browser names (order is important). */\r\n    var name = getName([\r\n      'Adobe AIR',\r\n      'Arora',\r\n      'Avant Browser',\r\n      'Breach',\r\n      'Camino',\r\n      'Epiphany',\r\n      'Fennec',\r\n      'Flock',\r\n      'Galeon',\r\n      'GreenBrowser',\r\n      'iCab',\r\n      'Iceweasel',\r\n      'K-Meleon',\r\n      'Konqueror',\r\n      'Lunascape',\r\n      'Maxthon',\r\n      { 'label': 'Microsoft Edge', 'pattern': 'Edge' },\r\n      'Midori',\r\n      'Nook Browser',\r\n      'PaleMoon',\r\n      'PhantomJS',\r\n      'Raven',\r\n      'Rekonq',\r\n      'RockMelt',\r\n      'SeaMonkey',\r\n      { 'label': 'Silk', 'pattern': '(?:Cloud9|Silk-Accelerated)' },\r\n      'Sleipnir',\r\n      'SlimBrowser',\r\n      { 'label': 'SRWare Iron', 'pattern': 'Iron' },\r\n      'Sunrise',\r\n      'Swiftfox',\r\n      'WebPositive',\r\n      'Opera Mini',\r\n      { 'label': 'Opera Mini', 'pattern': 'OPiOS' },\r\n      'Opera',\r\n      { 'label': 'Opera', 'pattern': 'OPR' },\r\n      'Chrome',\r\n      { 'label': 'Chrome Mobile', 'pattern': '(?:CriOS|CrMo)' },\r\n      { 'label': 'Firefox', 'pattern': '(?:Firefox|Minefield)' },\r\n      { 'label': 'Firefox for iOS', 'pattern': 'FxiOS' },\r\n      { 'label': 'IE', 'pattern': 'IEMobile' },\r\n      { 'label': 'IE', 'pattern': 'MSIE' },\r\n      'Safari'\r\n    ]);\r\n\r\n    /* Detectable products (order is important). */\r\n    var product = getProduct([\r\n      { 'label': 'BlackBerry', 'pattern': 'BB10' },\r\n      'BlackBerry',\r\n      { 'label': 'Galaxy S', 'pattern': 'GT-I9000' },\r\n      { 'label': 'Galaxy S2', 'pattern': 'GT-I9100' },\r\n      { 'label': 'Galaxy S3', 'pattern': 'GT-I9300' },\r\n      { 'label': 'Galaxy S4', 'pattern': 'GT-I9500' },\r\n      'Google TV',\r\n      'Lumia',\r\n      'iPad',\r\n      'iPod',\r\n      'iPhone',\r\n      'Kindle',\r\n      { 'label': 'Kindle Fire', 'pattern': '(?:Cloud9|Silk-Accelerated)' },\r\n      'Nexus',\r\n      'Nook',\r\n      'PlayBook',\r\n      'PlayStation 3',\r\n      'PlayStation 4',\r\n      'PlayStation Vita',\r\n      'TouchPad',\r\n      'Transformer',\r\n      { 'label': 'Wii U', 'pattern': 'WiiU' },\r\n      'Wii',\r\n      'Xbox One',\r\n      { 'label': 'Xbox 360', 'pattern': 'Xbox' },\r\n      'Xoom'\r\n    ]);\r\n\r\n    /* Detectable manufacturers. */\r\n    var manufacturer = getManufacturer({\r\n      'Apple': { 'iPad': 1, 'iPhone': 1, 'iPod': 1 },\r\n      'Archos': {},\r\n      'Amazon': { 'Kindle': 1, 'Kindle Fire': 1 },\r\n      'Asus': { 'Transformer': 1 },\r\n      'Barnes & Noble': { 'Nook': 1 },\r\n      'BlackBerry': { 'PlayBook': 1 },\r\n      'Google': { 'Google TV': 1, 'Nexus': 1 },\r\n      'HP': { 'TouchPad': 1 },\r\n      'HTC': {},\r\n      'LG': {},\r\n      'Microsoft': { 'Xbox': 1, 'Xbox One': 1 },\r\n      'Motorola': { 'Xoom': 1 },\r\n      'Nintendo': { 'Wii U': 1,  'Wii': 1 },\r\n      'Nokia': { 'Lumia': 1 },\r\n      'Samsung': { 'Galaxy S': 1, 'Galaxy S2': 1, 'Galaxy S3': 1, 'Galaxy S4': 1 },\r\n      'Sony': { 'PlayStation 4': 1, 'PlayStation 3': 1, 'PlayStation Vita': 1 }\r\n    });\r\n\r\n    /* Detectable operating systems (order is important). */\r\n    var os = getOS([\r\n      'Windows Phone',\r\n      'Android',\r\n      'CentOS',\r\n      { 'label': 'Chrome OS', 'pattern': 'CrOS' },\r\n      'Debian',\r\n      'Fedora',\r\n      'FreeBSD',\r\n      'Gentoo',\r\n      'Haiku',\r\n      'Kubuntu',\r\n      'Linux Mint',\r\n      'OpenBSD',\r\n      'Red Hat',\r\n      'SuSE',\r\n      'Ubuntu',\r\n      'Xubuntu',\r\n      'Cygwin',\r\n      'Symbian OS',\r\n      'hpwOS',\r\n      'webOS ',\r\n      'webOS',\r\n      'Tablet OS',\r\n      'Linux',\r\n      'Mac OS X',\r\n      'Macintosh',\r\n      'Mac',\r\n      'Windows 98;',\r\n      'Windows '\r\n    ]);\r\n\r\n    /*------------------------------------------------------------------------*/\r\n\r\n    /**\r\n     * Picks the layout engine from an array of guesses.\r\n     *\r\n     * @private\r\n     * @param {Array} guesses An array of guesses.\r\n     * @returns {null|string} The detected layout engine.\r\n     */\r\n    function getLayout(guesses) {\r\n      return reduce(guesses, function(result, guess) {\r\n        return result || RegExp('\\\\b' + (\r\n          guess.pattern || qualify(guess)\r\n        ) + '\\\\b', 'i').exec(ua) && (guess.label || guess);\r\n      });\r\n    }\r\n\r\n    /**\r\n     * Picks the manufacturer from an array of guesses.\r\n     *\r\n     * @private\r\n     * @param {Array} guesses An object of guesses.\r\n     * @returns {null|string} The detected manufacturer.\r\n     */\r\n    function getManufacturer(guesses) {\r\n      return reduce(guesses, function(result, value, key) {\r\n        // Lookup the manufacturer by product or scan the UA for the manufacturer.\r\n        return result || (\r\n          value[product] ||\r\n          value[/^[a-z]+(?: +[a-z]+\\b)*/i.exec(product)] ||\r\n          RegExp('\\\\b' + qualify(key) + '(?:\\\\b|\\\\w*\\\\d)', 'i').exec(ua)\r\n        ) && key;\r\n      });\r\n    }\r\n\r\n    /**\r\n     * Picks the browser name from an array of guesses.\r\n     *\r\n     * @private\r\n     * @param {Array} guesses An array of guesses.\r\n     * @returns {null|string} The detected browser name.\r\n     */\r\n    function getName(guesses) {\r\n      return reduce(guesses, function(result, guess) {\r\n        return result || RegExp('\\\\b' + (\r\n          guess.pattern || qualify(guess)\r\n        ) + '\\\\b', 'i').exec(ua) && (guess.label || guess);\r\n      });\r\n    }\r\n\r\n    /**\r\n     * Picks the OS name from an array of guesses.\r\n     *\r\n     * @private\r\n     * @param {Array} guesses An array of guesses.\r\n     * @returns {null|string} The detected OS name.\r\n     */\r\n    function getOS(guesses) {\r\n      return reduce(guesses, function(result, guess) {\r\n        var pattern = guess.pattern || qualify(guess);\r\n        if (!result && (result =\r\n              RegExp('\\\\b' + pattern + '(?:/[\\\\d.]+|[ \\\\w.]*)', 'i').exec(ua)\r\n            )) {\r\n          result = cleanupOS(result, pattern, guess.label || guess);\r\n        }\r\n        return result;\r\n      });\r\n    }\r\n\r\n    /**\r\n     * Picks the product name from an array of guesses.\r\n     *\r\n     * @private\r\n     * @param {Array} guesses An array of guesses.\r\n     * @returns {null|string} The detected product name.\r\n     */\r\n    function getProduct(guesses) {\r\n      return reduce(guesses, function(result, guess) {\r\n        var pattern = guess.pattern || qualify(guess);\r\n        if (!result && (result =\r\n              RegExp('\\\\b' + pattern + ' *\\\\d+[.\\\\w_]*', 'i').exec(ua) ||\r\n              RegExp('\\\\b' + pattern + '(?:; *(?:[a-z]+[_-])?[a-z]+\\\\d+|[^ ();-]*)', 'i').exec(ua)\r\n            )) {\r\n          // Split by forward slash and append product version if needed.\r\n          if ((result = String((guess.label && !RegExp(pattern, 'i').test(guess.label)) ? guess.label : result).split('/'))[1] && !/[\\d.]+/.test(result[0])) {\r\n            result[0] += ' ' + result[1];\r\n          }\r\n          // Correct character case and cleanup string.\r\n          guess = guess.label || guess;\r\n          result = format(result[0]\r\n            .replace(RegExp(pattern, 'i'), guess)\r\n            .replace(RegExp('; *(?:' + guess + '[_-])?', 'i'), ' ')\r\n            .replace(RegExp('(' + guess + ')[-_.]?(\\\\w)', 'i'), '$1 $2'));\r\n        }\r\n        return result;\r\n      });\r\n    }\r\n\r\n    /**\r\n     * Resolves the version using an array of UA patterns.\r\n     *\r\n     * @private\r\n     * @param {Array} patterns An array of UA patterns.\r\n     * @returns {null|string} The detected version.\r\n     */\r\n    function getVersion(patterns) {\r\n      return reduce(patterns, function(result, pattern) {\r\n        return result || (RegExp(pattern +\r\n          '(?:-[\\\\d.]+/|(?: for [\\\\w-]+)?[ /-])([\\\\d.]+[^ ();/_-]*)', 'i').exec(ua) || 0)[1] || null;\r\n      });\r\n    }\r\n\r\n    /**\r\n     * Returns `platform.description` when the platform object is coerced to a string.\r\n     *\r\n     * @name toString\r\n     * @memberOf platform\r\n     * @returns {string} Returns `platform.description` if available, else an empty string.\r\n     */\r\n    function toStringPlatform() {\r\n      return this.description || '';\r\n    }\r\n\r\n    /*------------------------------------------------------------------------*/\r\n\r\n    // Convert layout to an array so we can add extra details.\r\n    layout && (layout = [layout]);\r\n\r\n    // Detect product names that contain their manufacturer's name.\r\n    if (manufacturer && !product) {\r\n      product = getProduct([manufacturer]);\r\n    }\r\n    // Clean up Google TV.\r\n    if ((data = /\\bGoogle TV\\b/.exec(product))) {\r\n      product = data[0];\r\n    }\r\n    // Detect simulators.\r\n    if (/\\bSimulator\\b/i.test(ua)) {\r\n      product = (product ? product + ' ' : '') + 'Simulator';\r\n    }\r\n    // Detect Opera Mini 8+ running in Turbo/Uncompressed mode on iOS.\r\n    if (name == 'Opera Mini' && /\\bOPiOS\\b/.test(ua)) {\r\n      description.push('running in Turbo/Uncompressed mode');\r\n    }\r\n    // Detect IE Mobile 11.\r\n    if (name == 'IE' && /\\blike iPhone OS\\b/.test(ua)) {\r\n      data = parse(ua.replace(/like iPhone OS/, ''));\r\n      manufacturer = data.manufacturer;\r\n      product = data.product;\r\n    }\r\n    // Detect iOS.\r\n    else if (/^iP/.test(product)) {\r\n      name || (name = 'Safari');\r\n      os = 'iOS' + ((data = / OS ([\\d_]+)/i.exec(ua))\r\n        ? ' ' + data[1].replace(/_/g, '.')\r\n        : '');\r\n    }\r\n    // Detect Kubuntu.\r\n    else if (name == 'Konqueror' && !/buntu/i.test(os)) {\r\n      os = 'Kubuntu';\r\n    }\r\n    // Detect Android browsers.\r\n    else if ((manufacturer && manufacturer != 'Google' &&\r\n        ((/Chrome/.test(name) && !/\\bMobile Safari\\b/i.test(ua)) || /\\bVita\\b/.test(product))) ||\r\n        (/\\bAndroid\\b/.test(os) && /^Chrome/.test(name) && /\\bVersion\\//i.test(ua))) {\r\n      name = 'Android Browser';\r\n      os = /\\bAndroid\\b/.test(os) ? os : 'Android';\r\n    }\r\n    // Detect Silk desktop/accelerated modes.\r\n    else if (name == 'Silk') {\r\n      if (!/\\bMobi/i.test(ua)) {\r\n        os = 'Android';\r\n        description.unshift('desktop mode');\r\n      }\r\n      if (/Accelerated *= *true/i.test(ua)) {\r\n        description.unshift('accelerated');\r\n      }\r\n    }\r\n    // Detect PaleMoon identifying as Firefox.\r\n    else if (name == 'PaleMoon' && (data = /\\bFirefox\\/([\\d.]+)\\b/.exec(ua))) {\r\n      description.push('identifying as Firefox ' + data[1]);\r\n    }\r\n    // Detect Firefox OS and products running Firefox.\r\n    else if (name == 'Firefox' && (data = /\\b(Mobile|Tablet|TV)\\b/i.exec(ua))) {\r\n      os || (os = 'Firefox OS');\r\n      product || (product = data[1]);\r\n    }\r\n    // Detect false positives for Firefox/Safari.\r\n    else if (!name || (data = !/\\bMinefield\\b/i.test(ua) && /\\b(?:Firefox|Safari)\\b/.exec(name))) {\r\n      // Escape the `/` for Firefox 1.\r\n      if (name && !product && /[\\/,]|^[^(]+?\\)/.test(ua.slice(ua.indexOf(data + '/') + 8))) {\r\n        // Clear name of false positives.\r\n        name = null;\r\n      }\r\n      // Reassign a generic name.\r\n      if ((data = product || manufacturer || os) &&\r\n          (product || manufacturer || /\\b(?:Android|Symbian OS|Tablet OS|webOS)\\b/.test(os))) {\r\n        name = /[a-z]+(?: Hat)?/i.exec(/\\bAndroid\\b/.test(os) ? os : data) + ' Browser';\r\n      }\r\n    }\r\n    // Detect non-Opera (Presto-based) versions (order is important).\r\n    if (!version) {\r\n      version = getVersion([\r\n        '(?:Cloud9|CriOS|CrMo|Edge|FxiOS|IEMobile|Iron|Opera ?Mini|OPiOS|OPR|Raven|Silk(?!/[\\\\d.]+$))',\r\n        'Version',\r\n        qualify(name),\r\n        '(?:Firefox|Minefield|NetFront)'\r\n      ]);\r\n    }\r\n    // Detect stubborn layout engines.\r\n    if ((data =\r\n          layout == 'iCab' && parseFloat(version) > 3 && 'WebKit' ||\r\n          /\\bOpera\\b/.test(name) && (/\\bOPR\\b/.test(ua) ? 'Blink' : 'Presto') ||\r\n          /\\b(?:Midori|Nook|Safari)\\b/i.test(ua) && !/^(?:Trident|EdgeHTML)$/.test(layout) && 'WebKit' ||\r\n          !layout && /\\bMSIE\\b/i.test(ua) && (os == 'Mac OS' ? 'Tasman' : 'Trident') ||\r\n          layout == 'WebKit' && /\\bPlayStation\\b(?! Vita\\b)/i.test(name) && 'NetFront'\r\n        )) {\r\n      layout = [data];\r\n    }\r\n    // Detect Windows Phone 7 desktop mode.\r\n    if (name == 'IE' && (data = (/; *(?:XBLWP|ZuneWP)(\\d+)/i.exec(ua) || 0)[1])) {\r\n      name += ' Mobile';\r\n      os = 'Windows Phone ' + (/\\+$/.test(data) ? data : data + '.x');\r\n      description.unshift('desktop mode');\r\n    }\r\n    // Detect Windows Phone 8.x desktop mode.\r\n    else if (/\\bWPDesktop\\b/i.test(ua)) {\r\n      name = 'IE Mobile';\r\n      os = 'Windows Phone 8.x';\r\n      description.unshift('desktop mode');\r\n      version || (version = (/\\brv:([\\d.]+)/.exec(ua) || 0)[1]);\r\n    }\r\n    // Detect IE 11.\r\n    else if (name != 'IE' && layout == 'Trident' && (data = /\\brv:([\\d.]+)/.exec(ua))) {\r\n      if (name) {\r\n        description.push('identifying as ' + name + (version ? ' ' + version : ''));\r\n      }\r\n      name = 'IE';\r\n      version = data[1];\r\n    }\r\n    // Leverage environment features.\r\n    if (useFeatures) {\r\n      // Detect server-side environments.\r\n      // Rhino has a global function while others have a global object.\r\n      if (isHostType(context, 'global')) {\r\n        if (java) {\r\n          data = java.lang.System;\r\n          arch = data.getProperty('os.arch');\r\n          os = os || data.getProperty('os.name') + ' ' + data.getProperty('os.version');\r\n        }\r\n        if (isModuleScope && isHostType(context, 'system') && (data = [context.system])[0]) {\r\n          os || (os = data[0].os || null);\r\n          try {\r\n            data[1] = context.require('ringo/engine').version;\r\n            version = data[1].join('.');\r\n            name = 'RingoJS';\r\n          } catch(e) {\r\n            if (data[0].global.system == context.system) {\r\n              name = 'Narwhal';\r\n            }\r\n          }\r\n        }\r\n        else if (\r\n          typeof context.process == 'object' && !context.process.browser &&\r\n          (data = context.process)\r\n        ) {\r\n          name = 'Node.js';\r\n          arch = data.arch;\r\n          os = data.platform;\r\n          version = /[\\d.]+/.exec(data.version)[0];\r\n        }\r\n        else if (rhino) {\r\n          name = 'Rhino';\r\n        }\r\n      }\r\n      // Detect Adobe AIR.\r\n      else if (getClassOf((data = context.runtime)) == airRuntimeClass) {\r\n        name = 'Adobe AIR';\r\n        os = data.flash.system.Capabilities.os;\r\n      }\r\n      // Detect PhantomJS.\r\n      else if (getClassOf((data = context.phantom)) == phantomClass) {\r\n        name = 'PhantomJS';\r\n        version = (data = data.version || null) && (data.major + '.' + data.minor + '.' + data.patch);\r\n      }\r\n      // Detect IE compatibility modes.\r\n      else if (typeof doc.documentMode == 'number' && (data = /\\bTrident\\/(\\d+)/i.exec(ua))) {\r\n        // We're in compatibility mode when the Trident version + 4 doesn't\r\n        // equal the document mode.\r\n        version = [version, doc.documentMode];\r\n        if ((data = +data[1] + 4) != version[1]) {\r\n          description.push('IE ' + version[1] + ' mode');\r\n          layout && (layout[1] = '');\r\n          version[1] = data;\r\n        }\r\n        version = name == 'IE' ? String(version[1].toFixed(1)) : version[0];\r\n      }\r\n      os = os && format(os);\r\n    }\r\n    // Detect prerelease phases.\r\n    if (version && (data =\r\n          /(?:[ab]|dp|pre|[ab]\\d+pre)(?:\\d+\\+?)?$/i.exec(version) ||\r\n          /(?:alpha|beta)(?: ?\\d)?/i.exec(ua + ';' + (useFeatures && nav.appMinorVersion)) ||\r\n          /\\bMinefield\\b/i.test(ua) && 'a'\r\n        )) {\r\n      prerelease = /b/i.test(data) ? 'beta' : 'alpha';\r\n      version = version.replace(RegExp(data + '\\\\+?$'), '') +\r\n        (prerelease == 'beta' ? beta : alpha) + (/\\d+\\+?/.exec(data) || '');\r\n    }\r\n    // Detect Firefox Mobile.\r\n    if (name == 'Fennec' || name == 'Firefox' && /\\b(?:Android|Firefox OS)\\b/.test(os)) {\r\n      name = 'Firefox Mobile';\r\n    }\r\n    // Obscure Maxthon's unreliable version.\r\n    else if (name == 'Maxthon' && version) {\r\n      version = version.replace(/\\.[\\d.]+/, '.x');\r\n    }\r\n    // Detect Xbox 360 and Xbox One.\r\n    else if (/\\bXbox\\b/i.test(product)) {\r\n      os = null;\r\n      if (product == 'Xbox 360' && /\\bIEMobile\\b/.test(ua)) {\r\n        description.unshift('mobile mode');\r\n      }\r\n    }\r\n    // Add mobile postfix.\r\n    else if ((/^(?:Chrome|IE|Opera)$/.test(name) || name && !product && !/Browser|Mobi/.test(name)) &&\r\n        (os == 'Windows CE' || /Mobi/i.test(ua))) {\r\n      name += ' Mobile';\r\n    }\r\n    // Detect IE platform preview.\r\n    else if (name == 'IE' && useFeatures && context.external === null) {\r\n      description.unshift('platform preview');\r\n    }\r\n    // Detect BlackBerry OS version.\r\n    // http://docs.blackberry.com/en/developers/deliverables/18169/HTTP_headers_sent_by_BB_Browser_1234911_11.jsp\r\n    else if ((/\\bBlackBerry\\b/.test(product) || /\\bBB10\\b/.test(ua)) && (data =\r\n          (RegExp(product.replace(/ +/g, ' *') + '/([.\\\\d]+)', 'i').exec(ua) || 0)[1] ||\r\n          version\r\n        )) {\r\n      data = [data, /BB10/.test(ua)];\r\n      os = (data[1] ? (product = null, manufacturer = 'BlackBerry') : 'Device Software') + ' ' + data[0];\r\n      version = null;\r\n    }\r\n    // Detect Opera identifying/masking itself as another browser.\r\n    // http://www.opera.com/support/kb/view/843/\r\n    else if (this != forOwn && product != 'Wii' && (\r\n          (useFeatures && opera) ||\r\n          (/Opera/.test(name) && /\\b(?:MSIE|Firefox)\\b/i.test(ua)) ||\r\n          (name == 'Firefox' && /\\bOS X (?:\\d+\\.){2,}/.test(os)) ||\r\n          (name == 'IE' && (\r\n            (os && !/^Win/.test(os) && version > 5.5) ||\r\n            /\\bWindows XP\\b/.test(os) && version > 8 ||\r\n            version == 8 && !/\\bTrident\\b/.test(ua)\r\n          ))\r\n        ) && !reOpera.test((data = parse.call(forOwn, ua.replace(reOpera, '') + ';'))) && data.name) {\r\n      // When \"identifying\", the UA contains both Opera and the other browser's name.\r\n      data = 'ing as ' + data.name + ((data = data.version) ? ' ' + data : '');\r\n      if (reOpera.test(name)) {\r\n        if (/\\bIE\\b/.test(data) && os == 'Mac OS') {\r\n          os = null;\r\n        }\r\n        data = 'identify' + data;\r\n      }\r\n      // When \"masking\", the UA contains only the other browser's name.\r\n      else {\r\n        data = 'mask' + data;\r\n        if (operaClass) {\r\n          name = format(operaClass.replace(/([a-z])([A-Z])/g, '$1 $2'));\r\n        } else {\r\n          name = 'Opera';\r\n        }\r\n        if (/\\bIE\\b/.test(data)) {\r\n          os = null;\r\n        }\r\n        if (!useFeatures) {\r\n          version = null;\r\n        }\r\n      }\r\n      layout = ['Presto'];\r\n      description.push(data);\r\n    }\r\n    // Detect WebKit Nightly and approximate Chrome/Safari versions.\r\n    if ((data = (/\\bAppleWebKit\\/([\\d.]+\\+?)/i.exec(ua) || 0)[1])) {\r\n      // Correct build number for numeric comparison.\r\n      // (e.g. \"532.5\" becomes \"532.05\")\r\n      data = [parseFloat(data.replace(/\\.(\\d)$/, '.0$1')), data];\r\n      // Nightly builds are postfixed with a \"+\".\r\n      if (name == 'Safari' && data[1].slice(-1) == '+') {\r\n        name = 'WebKit Nightly';\r\n        prerelease = 'alpha';\r\n        version = data[1].slice(0, -1);\r\n      }\r\n      // Clear incorrect browser versions.\r\n      else if (version == data[1] ||\r\n          version == (data[2] = (/\\bSafari\\/([\\d.]+\\+?)/i.exec(ua) || 0)[1])) {\r\n        version = null;\r\n      }\r\n      // Use the full Chrome version when available.\r\n      data[1] = (/\\bChrome\\/([\\d.]+)/i.exec(ua) || 0)[1];\r\n      // Detect Blink layout engine.\r\n      if (data[0] == 537.36 && data[2] == 537.36 && parseFloat(data[1]) >= 28 && layout == 'WebKit') {\r\n        layout = ['Blink'];\r\n      }\r\n      // Detect JavaScriptCore.\r\n      // http://stackoverflow.com/questions/6768474/how-can-i-detect-which-javascript-engine-v8-or-jsc-is-used-at-runtime-in-androi\r\n      if (!useFeatures || (!likeChrome && !data[1])) {\r\n        layout && (layout[1] = 'like Safari');\r\n        data = (data = data[0], data < 400 ? 1 : data < 500 ? 2 : data < 526 ? 3 : data < 533 ? 4 : data < 534 ? '4+' : data < 535 ? 5 : data < 537 ? 6 : data < 538 ? 7 : data < 601 ? 8 : '8');\r\n      } else {\r\n        layout && (layout[1] = 'like Chrome');\r\n        data = data[1] || (data = data[0], data < 530 ? 1 : data < 532 ? 2 : data < 532.05 ? 3 : data < 533 ? 4 : data < 534.03 ? 5 : data < 534.07 ? 6 : data < 534.10 ? 7 : data < 534.13 ? 8 : data < 534.16 ? 9 : data < 534.24 ? 10 : data < 534.30 ? 11 : data < 535.01 ? 12 : data < 535.02 ? '13+' : data < 535.07 ? 15 : data < 535.11 ? 16 : data < 535.19 ? 17 : data < 536.05 ? 18 : data < 536.10 ? 19 : data < 537.01 ? 20 : data < 537.11 ? '21+' : data < 537.13 ? 23 : data < 537.18 ? 24 : data < 537.24 ? 25 : data < 537.36 ? 26 : layout != 'Blink' ? '27' : '28');\r\n      }\r\n      // Add the postfix of \".x\" or \"+\" for approximate versions.\r\n      layout && (layout[1] += ' ' + (data += typeof data == 'number' ? '.x' : /[.+]/.test(data) ? '' : '+'));\r\n      // Obscure version for some Safari 1-2 releases.\r\n      if (name == 'Safari' && (!version || parseInt(version) > 45)) {\r\n        version = data;\r\n      }\r\n    }\r\n    // Detect Opera desktop modes.\r\n    if (name == 'Opera' &&  (data = /\\bzbov|zvav$/.exec(os))) {\r\n      name += ' ';\r\n      description.unshift('desktop mode');\r\n      if (data == 'zvav') {\r\n        name += 'Mini';\r\n        version = null;\r\n      } else {\r\n        name += 'Mobile';\r\n      }\r\n      os = os.replace(RegExp(' *' + data + '$'), '');\r\n    }\r\n    // Detect Chrome desktop mode.\r\n    else if (name == 'Safari' && /\\bChrome\\b/.exec(layout && layout[1])) {\r\n      description.unshift('desktop mode');\r\n      name = 'Chrome Mobile';\r\n      version = null;\r\n\r\n      if (/\\bOS X\\b/.test(os)) {\r\n        manufacturer = 'Apple';\r\n        os = 'iOS 4.3+';\r\n      } else {\r\n        os = null;\r\n      }\r\n    }\r\n    // Strip incorrect OS versions.\r\n    if (version && version.indexOf((data = /[\\d.]+$/.exec(os))) == 0 &&\r\n        ua.indexOf('/' + data + '-') > -1) {\r\n      os = trim(os.replace(data, ''));\r\n    }\r\n    // Add layout engine.\r\n    if (layout && !/\\b(?:Avant|Nook)\\b/.test(name) && (\r\n        /Browser|Lunascape|Maxthon/.test(name) ||\r\n        name != 'Safari' && /^iOS/.test(os) && /\\bSafari\\b/.test(layout[1]) ||\r\n        /^(?:Adobe|Arora|Breach|Midori|Opera|Phantom|Rekonq|Rock|Sleipnir|Web)/.test(name) && layout[1])) {\r\n      // Don't add layout details to description if they are falsey.\r\n      (data = layout[layout.length - 1]) && description.push(data);\r\n    }\r\n    // Combine contextual information.\r\n    if (description.length) {\r\n      description = ['(' + description.join('; ') + ')'];\r\n    }\r\n    // Append manufacturer to description.\r\n    if (manufacturer && product && product.indexOf(manufacturer) < 0) {\r\n      description.push('on ' + manufacturer);\r\n    }\r\n    // Append product to description.\r\n    if (product) {\r\n      description.push((/^on /.test(description[description.length - 1]) ? '' : 'on ') + product);\r\n    }\r\n    // Parse the OS into an object.\r\n    if (os) {\r\n      data = / ([\\d.+]+)$/.exec(os);\r\n      isSpecialCasedOS = data && os.charAt(os.length - data[0].length - 1) == '/';\r\n      os = {\r\n        'architecture': 32,\r\n        'family': (data && !isSpecialCasedOS) ? os.replace(data[0], '') : os,\r\n        'version': data ? data[1] : null,\r\n        'toString': function() {\r\n          var version = this.version;\r\n          return this.family + ((version && !isSpecialCasedOS) ? ' ' + version : '') + (this.architecture == 64 ? ' 64-bit' : '');\r\n        }\r\n      };\r\n    }\r\n    // Add browser/OS architecture.\r\n    if ((data = /\\b(?:AMD|IA|Win|WOW|x86_|x)64\\b/i.exec(arch)) && !/\\bi686\\b/i.test(arch)) {\r\n      if (os) {\r\n        os.architecture = 64;\r\n        os.family = os.family.replace(RegExp(' *' + data), '');\r\n      }\r\n      if (\r\n          name && (/\\bWOW64\\b/i.test(ua) ||\r\n          (useFeatures && /\\w(?:86|32)$/.test(nav.cpuClass || nav.platform) && !/\\bWin64; x64\\b/i.test(ua)))\r\n      ) {\r\n        description.unshift('32-bit');\r\n      }\r\n    }\r\n    // Chrome 39 and above on OS X is always 64-bit.\r\n    else if (\r\n        os && /^OS X/.test(os.family) &&\r\n        name == 'Chrome' && parseFloat(version) >= 39\r\n    ) {\r\n      os.architecture = 64;\r\n    }\r\n\r\n    ua || (ua = null);\r\n\r\n    /*------------------------------------------------------------------------*/\r\n\r\n    /**\r\n     * The platform object.\r\n     *\r\n     * @name platform\r\n     * @type Object\r\n     */\r\n    var platform = {};\r\n\r\n    /**\r\n     * The platform description.\r\n     *\r\n     * @memberOf platform\r\n     * @type string|null\r\n     */\r\n    platform.description = ua;\r\n\r\n    /**\r\n     * The name of the browser's layout engine.\r\n     *\r\n     * @memberOf platform\r\n     * @type string|null\r\n     */\r\n    platform.layout = layout && layout[0];\r\n\r\n    /**\r\n     * The name of the product's manufacturer.\r\n     *\r\n     * @memberOf platform\r\n     * @type string|null\r\n     */\r\n    platform.manufacturer = manufacturer;\r\n\r\n    /**\r\n     * The name of the browser/environment.\r\n     *\r\n     * @memberOf platform\r\n     * @type string|null\r\n     */\r\n    platform.name = name;\r\n\r\n    /**\r\n     * The alpha/beta release indicator.\r\n     *\r\n     * @memberOf platform\r\n     * @type string|null\r\n     */\r\n    platform.prerelease = prerelease;\r\n\r\n    /**\r\n     * The name of the product hosting the browser.\r\n     *\r\n     * @memberOf platform\r\n     * @type string|null\r\n     */\r\n    platform.product = product;\r\n\r\n    /**\r\n     * The browser's user agent string.\r\n     *\r\n     * @memberOf platform\r\n     * @type string|null\r\n     */\r\n    platform.ua = ua;\r\n\r\n    /**\r\n     * The browser/environment version.\r\n     *\r\n     * @memberOf platform\r\n     * @type string|null\r\n     */\r\n    platform.version = name && version;\r\n\r\n    /**\r\n     * The name of the operating system.\r\n     *\r\n     * @memberOf platform\r\n     * @type Object\r\n     */\r\n    platform.os = os || {\r\n\r\n      /**\r\n       * The CPU architecture the OS is built for.\r\n       *\r\n       * @memberOf platform.os\r\n       * @type number|null\r\n       */\r\n      'architecture': null,\r\n\r\n      /**\r\n       * The family of the OS.\r\n       *\r\n       * Common values include:\r\n       * \"Windows\", \"Windows Server 2008 R2 / 7\", \"Windows Server 2008 / Vista\",\r\n       * \"Windows XP\", \"OS X\", \"Ubuntu\", \"Debian\", \"Fedora\", \"Red Hat\", \"SuSE\",\r\n       * \"Android\", \"iOS\" and \"Windows Phone\"\r\n       *\r\n       * @memberOf platform.os\r\n       * @type string|null\r\n       */\r\n      'family': null,\r\n\r\n      /**\r\n       * The version of the OS.\r\n       *\r\n       * @memberOf platform.os\r\n       * @type string|null\r\n       */\r\n      'version': null,\r\n\r\n      /**\r\n       * Returns the OS string.\r\n       *\r\n       * @memberOf platform.os\r\n       * @returns {string} The OS string.\r\n       */\r\n      'toString': function() { return 'null'; }\r\n    };\r\n\r\n    platform.parse = parse;\r\n    platform.toString = toStringPlatform;\r\n\r\n    if (platform.version) {\r\n      description.unshift(version);\r\n    }\r\n    if (platform.name) {\r\n      description.unshift(name);\r\n    }\r\n    if (os && name && !(os == String(os).split(' ')[0] && (os == name.split(' ')[0] || product))) {\r\n      description.push(product ? '(' + os + ')' : 'on ' + os);\r\n    }\r\n    if (description.length) {\r\n      platform.description = description.join(' ');\r\n    }\r\n    return platform;\r\n  }\r\n\r\n  /*--------------------------------------------------------------------------*/\r\n\r\n  // Export platform.\r\n  var platform = parse();\r\n\r\n  // Some AMD build optimizers, like r.js, check for condition patterns like the following:\r\n  if (true) {\r\n    // Expose platform on the global object to prevent errors when platform is\r\n    // loaded by a script tag in the presence of an AMD loader.\r\n    // See http://requirejs.org/docs/errors.html#mismatch for more details.\r\n    root.platform = platform;\r\n\r\n    // Define as an anonymous module so platform can be aliased through path mapping.\r\n    !(__WEBPACK_AMD_DEFINE_RESULT__ = function() {\r\n      return platform;\r\n    }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n  }\r\n  // Check for `exports` after `define` in case a build optimizer adds an `exports` object.\r\n  else if (freeExports && freeModule) {\r\n    // Export for CommonJS support.\r\n    forOwn(platform, function(value, key) {\r\n      freeExports[key] = value;\r\n    });\r\n  }\r\n  else {\r\n    // Export to the global object.\r\n    root.platform = platform;\r\n  }\r\n}.call(this));\r\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(16)(module), __webpack_require__(1)))\n\n/***/ },\n/* 25 */\n/***/ function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__.p + \"aa8cb5fbc710c7dded973a341ced2e66.js\";\n\n/***/ },\n/* 26 */\n/***/ function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global, setImmediate) {var __WEBPACK_AMD_DEFINE_RESULT__;/*! Native Promise Only\n    v0.8.1 (c) Kyle Simpson\n    MIT License: http://getify.mit-license.org\n*/\n\n(function UMD(name,context,definition){\n\t// special form of UMD for polyfilling across evironments\n\tcontext[name] = context[name] || definition();\n\tif (typeof module != \"undefined\" && module.exports) { module.exports = context[name]; }\n\telse if (true) { !(__WEBPACK_AMD_DEFINE_RESULT__ = function $AMD$(){ return context[name]; }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); }\n})(\"Promise\",typeof global != \"undefined\" ? global : this,function DEF(){\n\t/*jshint validthis:true */\n\t\"use strict\";\n\n\tvar builtInProp, cycle, scheduling_queue,\n\t\tToString = Object.prototype.toString,\n\t\ttimer = (typeof setImmediate != \"undefined\") ?\n\t\t\tfunction timer(fn) { return setImmediate(fn); } :\n\t\t\tsetTimeout\n\t;\n\n\t// dammit, IE8.\n\ttry {\n\t\tObject.defineProperty({},\"x\",{});\n\t\tbuiltInProp = function builtInProp(obj,name,val,config) {\n\t\t\treturn Object.defineProperty(obj,name,{\n\t\t\t\tvalue: val,\n\t\t\t\twritable: true,\n\t\t\t\tconfigurable: config !== false\n\t\t\t});\n\t\t};\n\t}\n\tcatch (err) {\n\t\tbuiltInProp = function builtInProp(obj,name,val) {\n\t\t\tobj[name] = val;\n\t\t\treturn obj;\n\t\t};\n\t}\n\n\t// Note: using a queue instead of array for efficiency\n\tscheduling_queue = (function Queue() {\n\t\tvar first, last, item;\n\n\t\tfunction Item(fn,self) {\n\t\t\tthis.fn = fn;\n\t\t\tthis.self = self;\n\t\t\tthis.next = void 0;\n\t\t}\n\n\t\treturn {\n\t\t\tadd: function add(fn,self) {\n\t\t\t\titem = new Item(fn,self);\n\t\t\t\tif (last) {\n\t\t\t\t\tlast.next = item;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tfirst = item;\n\t\t\t\t}\n\t\t\t\tlast = item;\n\t\t\t\titem = void 0;\n\t\t\t},\n\t\t\tdrain: function drain() {\n\t\t\t\tvar f = first;\n\t\t\t\tfirst = last = cycle = void 0;\n\n\t\t\t\twhile (f) {\n\t\t\t\t\tf.fn.call(f.self);\n\t\t\t\t\tf = f.next;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t})();\n\n\tfunction schedule(fn,self) {\n\t\tscheduling_queue.add(fn,self);\n\t\tif (!cycle) {\n\t\t\tcycle = timer(scheduling_queue.drain);\n\t\t}\n\t}\n\n\t// promise duck typing\n\tfunction isThenable(o) {\n\t\tvar _then, o_type = typeof o;\n\n\t\tif (o != null &&\n\t\t\t(\n\t\t\t\to_type == \"object\" || o_type == \"function\"\n\t\t\t)\n\t\t) {\n\t\t\t_then = o.then;\n\t\t}\n\t\treturn typeof _then == \"function\" ? _then : false;\n\t}\n\n\tfunction notify() {\n\t\tfor (var i=0; i<this.chain.length; i++) {\n\t\t\tnotifyIsolated(\n\t\t\t\tthis,\n\t\t\t\t(this.state === 1) ? this.chain[i].success : this.chain[i].failure,\n\t\t\t\tthis.chain[i]\n\t\t\t);\n\t\t}\n\t\tthis.chain.length = 0;\n\t}\n\n\t// NOTE: This is a separate function to isolate\n\t// the `try..catch` so that other code can be\n\t// optimized better\n\tfunction notifyIsolated(self,cb,chain) {\n\t\tvar ret, _then;\n\t\ttry {\n\t\t\tif (cb === false) {\n\t\t\t\tchain.reject(self.msg);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (cb === true) {\n\t\t\t\t\tret = self.msg;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tret = cb.call(void 0,self.msg);\n\t\t\t\t}\n\n\t\t\t\tif (ret === chain.promise) {\n\t\t\t\t\tchain.reject(TypeError(\"Promise-chain cycle\"));\n\t\t\t\t}\n\t\t\t\telse if (_then = isThenable(ret)) {\n\t\t\t\t\t_then.call(ret,chain.resolve,chain.reject);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tchain.resolve(ret);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcatch (err) {\n\t\t\tchain.reject(err);\n\t\t}\n\t}\n\n\tfunction resolve(msg) {\n\t\tvar _then, self = this;\n\n\t\t// already triggered?\n\t\tif (self.triggered) { return; }\n\n\t\tself.triggered = true;\n\n\t\t// unwrap\n\t\tif (self.def) {\n\t\t\tself = self.def;\n\t\t}\n\n\t\ttry {\n\t\t\tif (_then = isThenable(msg)) {\n\t\t\t\tschedule(function(){\n\t\t\t\t\tvar def_wrapper = new MakeDefWrapper(self);\n\t\t\t\t\ttry {\n\t\t\t\t\t\t_then.call(msg,\n\t\t\t\t\t\t\tfunction $resolve$(){ resolve.apply(def_wrapper,arguments); },\n\t\t\t\t\t\t\tfunction $reject$(){ reject.apply(def_wrapper,arguments); }\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\tcatch (err) {\n\t\t\t\t\t\treject.call(def_wrapper,err);\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\t\t\telse {\n\t\t\t\tself.msg = msg;\n\t\t\t\tself.state = 1;\n\t\t\t\tif (self.chain.length > 0) {\n\t\t\t\t\tschedule(notify,self);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcatch (err) {\n\t\t\treject.call(new MakeDefWrapper(self),err);\n\t\t}\n\t}\n\n\tfunction reject(msg) {\n\t\tvar self = this;\n\n\t\t// already triggered?\n\t\tif (self.triggered) { return; }\n\n\t\tself.triggered = true;\n\n\t\t// unwrap\n\t\tif (self.def) {\n\t\t\tself = self.def;\n\t\t}\n\n\t\tself.msg = msg;\n\t\tself.state = 2;\n\t\tif (self.chain.length > 0) {\n\t\t\tschedule(notify,self);\n\t\t}\n\t}\n\n\tfunction iteratePromises(Constructor,arr,resolver,rejecter) {\n\t\tfor (var idx=0; idx<arr.length; idx++) {\n\t\t\t(function IIFE(idx){\n\t\t\t\tConstructor.resolve(arr[idx])\n\t\t\t\t.then(\n\t\t\t\t\tfunction $resolver$(msg){\n\t\t\t\t\t\tresolver(idx,msg);\n\t\t\t\t\t},\n\t\t\t\t\trejecter\n\t\t\t\t);\n\t\t\t})(idx);\n\t\t}\n\t}\n\n\tfunction MakeDefWrapper(self) {\n\t\tthis.def = self;\n\t\tthis.triggered = false;\n\t}\n\n\tfunction MakeDef(self) {\n\t\tthis.promise = self;\n\t\tthis.state = 0;\n\t\tthis.triggered = false;\n\t\tthis.chain = [];\n\t\tthis.msg = void 0;\n\t}\n\n\tfunction Promise(executor) {\n\t\tif (typeof executor != \"function\") {\n\t\t\tthrow TypeError(\"Not a function\");\n\t\t}\n\n\t\tif (this.__NPO__ !== 0) {\n\t\t\tthrow TypeError(\"Not a promise\");\n\t\t}\n\n\t\t// instance shadowing the inherited \"brand\"\n\t\t// to signal an already \"initialized\" promise\n\t\tthis.__NPO__ = 1;\n\n\t\tvar def = new MakeDef(this);\n\n\t\tthis[\"then\"] = function then(success,failure) {\n\t\t\tvar o = {\n\t\t\t\tsuccess: typeof success == \"function\" ? success : true,\n\t\t\t\tfailure: typeof failure == \"function\" ? failure : false\n\t\t\t};\n\t\t\t// Note: `then(..)` itself can be borrowed to be used against\n\t\t\t// a different promise constructor for making the chained promise,\n\t\t\t// by substituting a different `this` binding.\n\t\t\to.promise = new this.constructor(function extractChain(resolve,reject) {\n\t\t\t\tif (typeof resolve != \"function\" || typeof reject != \"function\") {\n\t\t\t\t\tthrow TypeError(\"Not a function\");\n\t\t\t\t}\n\n\t\t\t\to.resolve = resolve;\n\t\t\t\to.reject = reject;\n\t\t\t});\n\t\t\tdef.chain.push(o);\n\n\t\t\tif (def.state !== 0) {\n\t\t\t\tschedule(notify,def);\n\t\t\t}\n\n\t\t\treturn o.promise;\n\t\t};\n\t\tthis[\"catch\"] = function $catch$(failure) {\n\t\t\treturn this.then(void 0,failure);\n\t\t};\n\n\t\ttry {\n\t\t\texecutor.call(\n\t\t\t\tvoid 0,\n\t\t\t\tfunction publicResolve(msg){\n\t\t\t\t\tresolve.call(def,msg);\n\t\t\t\t},\n\t\t\t\tfunction publicReject(msg) {\n\t\t\t\t\treject.call(def,msg);\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\t\tcatch (err) {\n\t\t\treject.call(def,err);\n\t\t}\n\t}\n\n\tvar PromisePrototype = builtInProp({},\"constructor\",Promise,\n\t\t/*configurable=*/false\n\t);\n\n\t// Note: Android 4 cannot use `Object.defineProperty(..)` here\n\tPromise.prototype = PromisePrototype;\n\n\t// built-in \"brand\" to signal an \"uninitialized\" promise\n\tbuiltInProp(PromisePrototype,\"__NPO__\",0,\n\t\t/*configurable=*/false\n\t);\n\n\tbuiltInProp(Promise,\"resolve\",function Promise$resolve(msg) {\n\t\tvar Constructor = this;\n\n\t\t// spec mandated checks\n\t\t// note: best \"isPromise\" check that's practical for now\n\t\tif (msg && typeof msg == \"object\" && msg.__NPO__ === 1) {\n\t\t\treturn msg;\n\t\t}\n\n\t\treturn new Constructor(function executor(resolve,reject){\n\t\t\tif (typeof resolve != \"function\" || typeof reject != \"function\") {\n\t\t\t\tthrow TypeError(\"Not a function\");\n\t\t\t}\n\n\t\t\tresolve(msg);\n\t\t});\n\t});\n\n\tbuiltInProp(Promise,\"reject\",function Promise$reject(msg) {\n\t\treturn new this(function executor(resolve,reject){\n\t\t\tif (typeof resolve != \"function\" || typeof reject != \"function\") {\n\t\t\t\tthrow TypeError(\"Not a function\");\n\t\t\t}\n\n\t\t\treject(msg);\n\t\t});\n\t});\n\n\tbuiltInProp(Promise,\"all\",function Promise$all(arr) {\n\t\tvar Constructor = this;\n\n\t\t// spec mandated checks\n\t\tif (ToString.call(arr) != \"[object Array]\") {\n\t\t\treturn Constructor.reject(TypeError(\"Not an array\"));\n\t\t}\n\t\tif (arr.length === 0) {\n\t\t\treturn Constructor.resolve([]);\n\t\t}\n\n\t\treturn new Constructor(function executor(resolve,reject){\n\t\t\tif (typeof resolve != \"function\" || typeof reject != \"function\") {\n\t\t\t\tthrow TypeError(\"Not a function\");\n\t\t\t}\n\n\t\t\tvar len = arr.length, msgs = Array(len), count = 0;\n\n\t\t\titeratePromises(Constructor,arr,function resolver(idx,msg) {\n\t\t\t\tmsgs[idx] = msg;\n\t\t\t\tif (++count === len) {\n\t\t\t\t\tresolve(msgs);\n\t\t\t\t}\n\t\t\t},reject);\n\t\t});\n\t});\n\n\tbuiltInProp(Promise,\"race\",function Promise$race(arr) {\n\t\tvar Constructor = this;\n\n\t\t// spec mandated checks\n\t\tif (ToString.call(arr) != \"[object Array]\") {\n\t\t\treturn Constructor.reject(TypeError(\"Not an array\"));\n\t\t}\n\n\t\treturn new Constructor(function executor(resolve,reject){\n\t\t\tif (typeof resolve != \"function\" || typeof reject != \"function\") {\n\t\t\t\tthrow TypeError(\"Not a function\");\n\t\t\t}\n\n\t\t\titeratePromises(Constructor,arr,function resolver(idx,msg){\n\t\t\t\tresolve(msg);\n\t\t\t},reject);\n\t\t});\n\t});\n\n\treturn Promise;\n});\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1), __webpack_require__(13).setImmediate))\n\n/***/ },\n/* 27 */,\n/* 28 */\n/***/ function(module, exports) {\n\n\"use strict\";\n\"use strict\";\n\nexports.__esModule = true;\n/*eslint-env browser*/\n\nexports.default = {\n  pool: {\n    size: navigator.hardwareConcurrency || 8\n  }\n};\n//# sourceMappingURL=defaults.browser.js.map\n\n\n/***/ },\n/* 29 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n\nexports.__esModule = true;\n\nvar _os = __webpack_require__(37);\n\nexports.default = {\n  pool: {\n    size: (0, _os.cpus)().length\n  }\n};\n//# sourceMappingURL=defaults.node.js.map\n\n\n/***/ },\n/* 30 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n\nexports.__esModule = true;\n\nvar _eventemitter = __webpack_require__(3);\n\nvar _eventemitter2 = _interopRequireDefault(_eventemitter);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Job = function (_EventEmitter) {\n  _inherits(Job, _EventEmitter);\n\n  function Job(pool) {\n    _classCallCheck(this, Job);\n\n    var _this = _possibleConstructorReturn(this, _EventEmitter.call(this));\n\n    _this.pool = pool;\n    _this.thread = null;\n\n    _this.runArgs = [];\n    _this.sendArgs = [];\n\n    pool.emit('newJob', _this);\n    return _this;\n  }\n\n  Job.prototype.run = function run() {\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    if (args.length === 0) {\n      throw new Error('Cannot call .run() without arguments.');\n    }\n\n    this.runArgs = args;\n    return this;\n  };\n\n  Job.prototype.send = function send() {\n    if (this.runArgs.length === 0) {\n      throw new Error('Cannot .send() before .run().');\n    }\n\n    for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    this.sendArgs = args;\n\n    this.emit('readyToRun');\n    return this;\n  };\n\n  Job.prototype.executeOn = function executeOn(thread) {\n    var _thread$once$once$run, _thread$once$once;\n\n    (_thread$once$once$run = (_thread$once$once = thread.once('message', this.emit.bind(this, 'done')).once('error', this.emit.bind(this, 'error'))).run.apply(_thread$once$once, this.runArgs)).send.apply(_thread$once$once$run, this.sendArgs);\n\n    this.thread = thread;\n\n    this.emit('threadChanged');\n    return this;\n  };\n\n  Job.prototype.promise = function promise() {\n    var _this2 = this;\n\n    // Always return a promise\n    return new Promise(function (resolve) {\n      // If the thread isn't set, listen for the threadChanged event\n      if (!_this2.thread) {\n        _this2.once('threadChanged', function () {\n          resolve(_this2.thread.promise());\n        });\n      } else {\n        resolve(_this2.thread.promise());\n      }\n    });\n  };\n\n  return Job;\n}(_eventemitter2.default);\n\nexports.default = Job;\n//# sourceMappingURL=job.js.map\n\n\n/***/ },\n/* 31 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n\nexports.__esModule = true;\n\nvar _eventemitter = __webpack_require__(3);\n\nvar _eventemitter2 = _interopRequireDefault(_eventemitter);\n\nvar _job = __webpack_require__(30);\n\nvar _job2 = _interopRequireDefault(_job);\n\nvar _defaults = __webpack_require__(15);\n\nvar _defaults2 = _interopRequireDefault(_defaults);\n\nvar _ = __webpack_require__(14);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Pool = function (_EventEmitter) {\n  _inherits(Pool, _EventEmitter);\n\n  function Pool(threads) {\n    _classCallCheck(this, Pool);\n\n    var _this = _possibleConstructorReturn(this, _EventEmitter.call(this));\n\n    _this.threads = Pool.spawn(threads || _defaults2.default.pool.size);\n    _this.idleThreads = _this.threads.slice();\n    _this.jobQueue = [];\n    _this.runArgs = [];\n\n    _this.on('newJob', function (job) {\n      return _this.handleNewJob(job);\n    });\n    _this.on('threadAvailable', function () {\n      return _this.dequeue();\n    });\n    return _this;\n  }\n\n  Pool.prototype.run = function run() {\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    this.runArgs = args;\n    return this;\n  };\n\n  Pool.prototype.send = function send() {\n    if (!this.runArgs) {\n      throw new Error('Pool.send() called without prior Pool.run(). You need to define what to run first.');\n    }\n\n    var job = new _job2.default(this);\n    job.run.apply(job, this.runArgs);\n    return job.send.apply(job, arguments);\n  };\n\n  Pool.prototype.killAll = function killAll() {\n    this.threads.forEach(function (thread) {\n      thread.kill();\n    });\n  };\n\n  Pool.prototype.queueJob = function queueJob(job) {\n    this.jobQueue.push(job);\n    this.dequeue();\n  };\n\n  Pool.prototype.dequeue = function dequeue() {\n    var _this2 = this;\n\n    if (this.jobQueue.length === 0 || this.idleThreads.length === 0) {\n      return;\n    }\n\n    var job = this.jobQueue.shift();\n    var thread = this.idleThreads.shift();\n\n    job.once('done', function () {\n      for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      return _this2.handleJobSuccess.apply(_this2, [thread, job].concat(args));\n    }).once('error', function () {\n      for (var _len3 = arguments.length, args = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        args[_key3] = arguments[_key3];\n      }\n\n      return _this2.handleJobError.apply(_this2, [thread, job].concat(args));\n    });\n\n    job.executeOn(thread);\n  };\n\n  Pool.prototype.handleNewJob = function handleNewJob(job) {\n    var _this3 = this;\n\n    this.lastCreatedJob = job;\n    job.once('readyToRun', function () {\n      return _this3.queueJob(job);\n    }); // triggered by job.send()\n  };\n\n  Pool.prototype.handleJobSuccess = function handleJobSuccess(thread, job) {\n    for (var _len4 = arguments.length, responseArgs = Array(_len4 > 2 ? _len4 - 2 : 0), _key4 = 2; _key4 < _len4; _key4++) {\n      responseArgs[_key4 - 2] = arguments[_key4];\n    }\n\n    this.emit.apply(this, ['done', job].concat(responseArgs));\n    this.handleJobDone(thread);\n  };\n\n  Pool.prototype.handleJobError = function handleJobError(thread, job, error) {\n    this.emit('error', job, error);\n    this.handleJobDone(thread);\n  };\n\n  Pool.prototype.handleJobDone = function handleJobDone(thread) {\n    var _this4 = this;\n\n    this.idleThreads.push(thread);\n    this.emit('threadAvailable');\n\n    if (this.idleThreads.length === this.threads.length) {\n      // run deferred to give other job.on('done') handlers time to run first\n      setTimeout(function () {\n        _this4.emit('finished');\n      }, 0);\n    }\n  };\n\n  return Pool;\n}(_eventemitter2.default);\n\nexports.default = Pool;\n\n\nPool.spawn = function (threadCount) {\n  var threads = [];\n\n  for (var threadIndex = 0; threadIndex < threadCount; threadIndex++) {\n    threads.push((0, _.spawn)());\n  }\n\n  return threads;\n};\n//# sourceMappingURL=pool.js.map\n\n\n/***/ },\n/* 32 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n\nexports.__esModule = true;\n\nvar _slaveCode = __webpack_require__(33);\n\nvar _slaveCode2 = _interopRequireDefault(_slaveCode);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar slaveCodeDataUri = 'data:text/javascript;charset=utf-8,' + encodeURI(_slaveCode2.default);\nvar createBlobURL = window.createBlobURL || window.createObjectURL;\n\nif (!createBlobURL) {\n  var URL = window.URL || window.webkitURL;\n\n  if (URL) {\n    createBlobURL = URL.createObjectURL;\n  } else {\n    throw new Error('No Blob creation implementation found.');\n  }\n}\n\nif (typeof window.BlobBuilder === 'function' && typeof createBlobURL === 'function') {\n  var blobBuilder = new window.BlobBuilder();\n  blobBuilder.append(_slaveCode2.default);\n  slaveCodeDataUri = createBlobURL(blobBuilder.getBlob());\n} else if (typeof window.Blob === 'function' && typeof createBlobURL === 'function') {\n  var blob = new window.Blob([_slaveCode2.default], { type: 'text/javascript' });\n  slaveCodeDataUri = createBlobURL(blob);\n}\n\nexports.default = slaveCodeDataUri;\n//# sourceMappingURL=slave-code-uri.js.map\n\n\n/***/ },\n/* 33 */\n/***/ function(module, exports) {\n\nmodule.exports = \"/*eslint-env worker*/\\n/*global importScripts*/\\n/*eslint-disable no-console*/\\nself.module = {\\n  exports : function() {\\n    if (console) { console.error('No thread logic initialized.'); }\\n  }\\n};\\n\\nfunction handlerDone() {\\n  var args = Array.prototype.slice.call(arguments, 0);\\n  this.postMessage({ response : args });\\n}\\n\\nfunction handlerProgress(progress) {\\n  this.postMessage({ progress : progress });\\n}\\n\\nfunction handlerDoneTransfer() {\\n  var args = Array.prototype.slice.call(arguments);\\n  var lastArg = args.pop();\\n\\n  if (!(lastArg instanceof Array) && this.console) {\\n    console.error('Expected 2nd parameter of <doneCallback>.transfer() to be an array. Got:', lastArg);\\n  }\\n\\n  this.postMessage({ response : args }, lastArg);\\n}\\n\\nself.onmessage = function (event) {\\n  var scripts = event.data.scripts;\\n  if (scripts && scripts.length > 0 && typeof importScripts !== 'function') {\\n    throw new Error('importScripts() not supported.');\\n  }\\n\\n  if (event.data.initByScripts) {\\n    importScripts.apply(null, scripts);\\n  }\\n\\n  if (event.data.initByMethod) {\\n    var method = event.data.method;\\n    this.module.exports = Function.apply(null, method.args.concat(method.body));\\n\\n    if (scripts && scripts.length > 0) {\\n      importScripts.apply(null, scripts);\\n    }\\n  }\\n\\n  if (event.data.doRun) {\\n    var handler = this.module.exports;\\n    if (typeof handler !== 'function') {\\n      throw new Error('Cannot run thread logic. No handler has been exported.');\\n    }\\n\\n    var preparedHandlerDone = handlerDone.bind(this);\\n    preparedHandlerDone.transfer = handlerDoneTransfer.bind(this);\\n\\n    handler.call(this, event.data.param, preparedHandlerDone, handlerProgress.bind(this));\\n  }\\n}.bind(self);\\n\";\n\n/***/ },\n/* 34 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n\nexports.__esModule = true;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _eventemitter = __webpack_require__(3);\n\nvar _eventemitter2 = _interopRequireDefault(_eventemitter);\n\nvar _slaveCodeUri = __webpack_require__(32);\n\nvar _slaveCodeUri2 = _interopRequireDefault(_slaveCodeUri);\n\nvar _config = __webpack_require__(12);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nif (_typeof(window.Worker) !== 'object' && typeof window.Worker !== 'function') {\n  throw new Error('Browser does not support web workers!');\n}\n\nfunction joinPaths(path1, path2) {\n  if (!path1 || !path2) {\n    return path1 + path2;\n  } else if (path1.charAt(path1.length - 1) === '/' || path2.charAt(0) === '/') {\n    return path1 + path2;\n  } else {\n    return path1 + '/' + path2;\n  }\n}\n\nfunction prependScriptUrl(scriptUrl) {\n  var prefix = (0, _config.getConfig)().basepath.web;\n  return prefix ? joinPaths(prefix, scriptUrl) : scriptUrl;\n}\n\nfunction convertToArray(input) {\n  var outputArray = [];\n  var index = 0;\n\n  while (typeof input[index] !== 'undefined') {\n    outputArray.push(input[index]);\n    index++;\n  }\n\n  return outputArray;\n}\n\nfunction logError(error) {\n  if (error.stack) {\n    console.error(error.stack); // eslint-disable-line no-console\n  } else if (error.message && error.filename && error.lineno) {\n    var fileName = error.filename.match(/^data:text\\/javascript/) && error.filename.length > 50 ? error.filename.substr(0, 50) + '...' : error.filename;\n    console.error(error.message + ' @' + fileName + ':' + error.lineno); // eslint-disable-line no-console\n  } else {\n    console.error(error); // eslint-disable-line no-console\n  }\n}\n\nvar Worker = function (_EventEmitter) {\n  _inherits(Worker, _EventEmitter);\n\n  function Worker() {\n    var initialScript = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n    var importScripts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n\n    _classCallCheck(this, Worker);\n\n    // used by `run()` to decide if the worker must be re-initialized\n    var _this = _possibleConstructorReturn(this, _EventEmitter.call(this));\n\n    _this.currentRunnable = null;\n    _this.currentImportScripts = [];\n\n    _this.initWorker();\n    _this.worker.addEventListener('message', _this.handleMessage.bind(_this));\n    _this.worker.addEventListener('error', _this.handleError.bind(_this));\n\n    if (initialScript) {\n      _this.run(initialScript, importScripts);\n    }\n    return _this;\n  }\n\n  Worker.prototype.initWorker = function initWorker() {\n    try {\n      this.worker = new window.Worker(_slaveCodeUri2.default);\n    } catch (error) {\n      var slaveScriptUrl = (0, _config.getConfig)().fallback.slaveScriptUrl;\n      if (slaveScriptUrl) {\n        // try using the slave script file instead of the data URI\n        this.worker = new window.Worker(_slaveCodeUri2.default);\n      } else {\n        // re-throw\n        throw error;\n      }\n    }\n  };\n\n  Worker.prototype.run = function run(toRun) {\n    var importScripts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n\n    if (this.alreadyInitializedToRun(toRun, importScripts)) {\n      // don't re-initialize with the new logic if it already has been\n      return this;\n    }\n\n    if (typeof toRun === 'function') {\n      this.runMethod(toRun, importScripts);\n    } else {\n      this.runScripts(toRun, importScripts);\n    }\n\n    this.currentRunnable = toRun;\n    this.currentImportScripts = importScripts;\n\n    return this;\n  };\n\n  Worker.prototype.runMethod = function runMethod(method, importScripts) {\n    var methodStr = method.toString();\n    var args = methodStr.substring(methodStr.indexOf('(') + 1, methodStr.indexOf(')')).split(',');\n    var body = methodStr.substring(methodStr.indexOf('{') + 1, methodStr.lastIndexOf('}'));\n\n    this.worker.postMessage({\n      initByMethod: true,\n      method: { args: args, body: body },\n      scripts: importScripts.map(prependScriptUrl)\n    });\n  };\n\n  Worker.prototype.runScripts = function runScripts(script, importScripts) {\n    if (!script) {\n      throw new Error('Must pass a function or a script URL to run().');\n    }\n\n    // attention: array for browser, single script for node\n    this.worker.postMessage({\n      initByScripts: true,\n      scripts: importScripts.concat([script]).map(prependScriptUrl)\n    });\n  };\n\n  Worker.prototype.send = function send(param) {\n    var transferables = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n\n    this.worker.postMessage({\n      doRun: true,\n      param: param\n    }, transferables);\n    return this;\n  };\n\n  Worker.prototype.kill = function kill() {\n    this.worker.terminate();\n    this.emit('exit');\n    return this;\n  };\n\n  Worker.prototype.promise = function promise() {\n    var _this2 = this;\n\n    return new Promise(function (resolve, reject) {\n      var resolved = void 0,\n          rejected = void 0;\n      resolved = function resolved(result) {\n        _this2.removeListener('error', rejected);\n        resolve(result);\n      };\n      rejected = function rejected(err) {\n        _this2.removeListener('message', resolved);\n        reject(err);\n      };\n\n      _this2.once('message', resolved).once('error', rejected);\n    });\n  };\n\n  Worker.prototype.alreadyInitializedToRun = function alreadyInitializedToRun(toRun, importScripts) {\n    var runnablesMatch = this.currentRunnable === toRun;\n    var importScriptsMatch = this.currentImportScripts === importScripts || importScripts.length === 0 && this.currentImportScripts.length === 0;\n\n    return runnablesMatch && importScriptsMatch;\n  };\n\n  Worker.prototype.handleMessage = function handleMessage(event) {\n    if (event.data.error) {\n      this.handleError(event.data.error);\n    } else if (event.data.progress) {\n      this.handleProgress(event.data.progress);\n    } else {\n      var responseArgs = convertToArray(event.data.response);\n      this.emit.apply(this, ['message'].concat(responseArgs));\n      this.emit.apply(this, ['done'].concat(responseArgs)); // this one is just for convenience\n    }\n  };\n\n  Worker.prototype.handleProgress = function handleProgress(progress) {\n    this.emit('progress', progress);\n  };\n\n  Worker.prototype.handleError = function handleError(error) {\n    if (!this.listeners('error', true)) {\n      logError(error);\n    }\n\n    if (error.preventDefault) {\n      error.preventDefault();\n    }\n\n    this.emit('error', error);\n  };\n\n  return Worker;\n}(_eventemitter2.default);\n\nexports.default = Worker;\n//# sourceMappingURL=worker.js.map\n\n\n/***/ },\n/* 35 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(process) {'use strict';\n\n/*eslint-env node*/\n/*\n * This file is only a stub to make './worker' resolve the './worker.node/worker' module.\n * Loading the browser worker into the browser bundle is done in the gulpfile by\n * configuring a browserify override.\n */\n\nif (typeof process !== 'undefined' && 'pid' in process) {\n  module.exports = __webpack_require__(36);\n} else {\n  module.exports = __webpack_require__(34);\n}\n//# sourceMappingURL=worker.js.map\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(11)))\n\n/***/ },\n/* 36 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(__dirname) {'use strict';\n\nexports.__esModule = true;\n\nvar _child_process = __webpack_require__(38);\n\nvar _child_process2 = _interopRequireDefault(_child_process);\n\nvar _path = __webpack_require__(39);\n\nvar _path2 = _interopRequireDefault(_path);\n\nvar _eventemitter = __webpack_require__(3);\n\nvar _eventemitter2 = _interopRequireDefault(_eventemitter);\n\nvar _config = __webpack_require__(12);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Worker = function (_EventEmitter) {\n  _inherits(Worker, _EventEmitter);\n\n  function Worker(initialRunnable) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    _classCallCheck(this, Worker);\n\n    var _this = _possibleConstructorReturn(this, _EventEmitter.call(this));\n\n    _this.slave = _child_process2.default.fork(_path2.default.join(__dirname, 'slave.js'), [], options);\n    _this.slave.on('message', _this.handleMessage.bind(_this));\n    _this.slave.on('error', _this.handleError.bind(_this));\n    _this.slave.on('exit', _this.emit.bind(_this, 'exit'));\n\n    if (initialRunnable) {\n      _this.run(initialRunnable);\n    }\n    return _this;\n  }\n\n  Worker.prototype.run = function run(toRun) {\n    if (typeof toRun === 'function') {\n      this.runMethod(toRun);\n    } else {\n      this.runScript(toRun);\n    }\n    return this;\n  };\n\n  Worker.prototype.runMethod = function runMethod(method) {\n    this.slave.send({\n      initByMethod: true,\n      method: method.toString()\n    });\n  };\n\n  Worker.prototype.runScript = function runScript(script) {\n    if (!script) {\n      throw new Error('Must pass a function or a script path to run().');\n    }\n\n    var prefixedScriptPath = _path2.default.join((0, _config.getConfig)().basepath.node, script);\n\n    // attention: single script for node, array for browser\n    this.slave.send({\n      initByScript: true,\n      script: _path2.default.resolve(prefixedScriptPath)\n    });\n  };\n\n  Worker.prototype.send = function send(param) {\n    this.slave.send({\n      doRun: true,\n      param: param\n    });\n    return this;\n  };\n\n  Worker.prototype.kill = function kill() {\n    this.slave.kill();\n    return this;\n  };\n\n  Worker.prototype.promise = function promise() {\n    var _this2 = this;\n\n    return new Promise(function (resolve, reject) {\n      var resolved = void 0,\n          rejected = void 0;\n      resolved = function resolved(result) {\n        _this2.removeListener('error', rejected);\n        resolve(result);\n      };\n      rejected = function rejected(err) {\n        _this2.removeListener('message', resolved);\n        reject(err);\n      };\n\n      _this2.once('message', resolved).once('error', rejected);\n    });\n  };\n\n  Worker.prototype.handleMessage = function handleMessage(message) {\n    if (message.error) {\n      var error = new Error(message.error.message);\n      error.stack = message.error.stack;\n\n      this.handleError(error);\n    } else if (message.progress) {\n      this.handleProgress(message.progress);\n    } else {\n      this.emit.apply(this, ['message'].concat(message.response));\n      this.emit.apply(this, ['done'].concat(message.response)); // this one is just for convenience\n    }\n  };\n\n  Worker.prototype.handleProgress = function handleProgress(progress) {\n    this.emit('progress', progress);\n  };\n\n  Worker.prototype.handleError = function handleError(error) {\n    if (!this.listeners('error', true)) {\n      console.error(error.stack || error); // eslint-disable-line no-console\n    }\n    this.emit('error', error);\n  };\n\n  return Worker;\n}(_eventemitter2.default);\n\nexports.default = Worker;\n//# sourceMappingURL=worker.js.map\n\n/* WEBPACK VAR INJECTION */}.call(exports, \"/\"))\n\n/***/ },\n/* 37 */\n/***/ function(module, exports) {\n\n/* (ignored) */\n\n/***/ },\n/* 38 */\n37,\n/* 39 */\n37,\n/* 40 */,\n/* 41 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_lodash__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_lodash___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_lodash__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_benchmark__ = __webpack_require__(23);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_benchmark___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_benchmark__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__transpiled_mandelbrot__ = __webpack_require__(8);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__transpiled_knights_tour__ = __webpack_require__(7);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__transpiled_monte_carlo__ = __webpack_require__(9);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__dynamic_knights_tour__ = __webpack_require__(4);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__dynamic_mandelbrot__ = __webpack_require__(5);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__dynamic_monte_carlo__ = __webpack_require__(6);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__paralleljs_mandelbrot__ = __webpack_require__(18);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__paralleljs_monte_carlo__ = __webpack_require__(19);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__paralleljs_knights_tour__ = __webpack_require__(17);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__threads_monte_carlo__ = __webpack_require__(22);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__threads_mandelbrot__ = __webpack_require__(21);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13__threads_knights_tour__ = __webpack_require__(20);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_14_threads__ = __webpack_require__(14);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_14_threads___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_14_threads__);\n\n/* tslint:disable:no-var-requires */\n\nvar platform = __webpack_require__(24);\n/* tslint:enable:no-var-requires */\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar Benchmark = __WEBPACK_IMPORTED_MODULE_1_benchmark__[\"runInContext\"]({ _: __WEBPACK_IMPORTED_MODULE_0_lodash__ });\nwindow.Benchmark = Benchmark;\nvar runButton = document.querySelector(\"#run\");\nvar outputTable = document.querySelector(\"#output-table\");\nvar jsonOutputField = document.querySelector(\"#json-output\");\nvar setCheckboxes = document.querySelectorAll('[id*=\"-set\"]');\nvar knightRunner6x6 = document.querySelector(\"#knight-runner-6-6\");\nfunction addAsyncTest(suite, optionsOrTitle, fn) {\n    var options = typeof optionsOrTitle === \"string\" ? { name: optionsOrTitle, fn: fn } : optionsOrTitle;\n    var asyncFn = options.fn;\n    options.defer = true;\n    options.fn = function (deferred) {\n        var benchmark = this;\n        asyncFn.apply(undefined, []).then(function () {\n            deferred.resolve();\n        }, function (error) {\n            console.error(error);\n            benchmark.error = error;\n            deferred.resolve();\n        });\n    };\n    return suite.add(options);\n}\n/**\n * Helper for threadjs tests. Creates the thread pool before the tests are run. A new thread pool for each test run is needed\n * to avoid caching of the environment across runs.\n */\nfunction addThreadJsTest(suite, name, _fn) {\n    for (var _len = arguments.length, args = Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {\n        args[_key - 3] = arguments[_key];\n    }\n\n    var _this = this;\n\n    var argsWithPool = void 0;\n    var pool = void 0;\n    addAsyncTest(suite, {\n        name: name,\n        setup: function setup() {\n            pool = new __WEBPACK_IMPORTED_MODULE_14_threads__[\"Pool\"]();\n            argsWithPool = args.slice();\n            argsWithPool.push(pool);\n        },\n        fn: function fn() {\n            return _fn.apply(_this, argsWithPool);\n        },\n        teardown: function teardown() {\n            if (pool) {\n                pool.killAll();\n            }\n        }\n    });\n}\nfunction addKnightBoardTests(suite) {\n    var boardSizes = knightRunner6x6.checked ? [5, 6] : [5];\n\n    var _loop = function _loop() {\n        if (_isArray) {\n            if (_i >= _iterator.length) return \"break\";\n            _ref = _iterator[_i++];\n        } else {\n            _i = _iterator.next();\n            if (_i.done) return \"break\";\n            _ref = _i.value;\n        }\n\n        var boardSize = _ref;\n\n        var title = \"Knights Tour (\" + boardSize + \"x\" + boardSize + \")\";\n        suite.add(\"sync: \" + title, function () {\n            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__transpiled_knights_tour__[\"b\" /* syncKnightTours */])({ x: 0, y: 0 }, boardSize);\n        });\n        addAsyncTest(suite, \"parallel-dynamic: \" + title, function () {\n            return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_5__dynamic_knights_tour__[\"a\" /* parallelKnightTours */])({ x: 0, y: 0 }, boardSize);\n        });\n        addAsyncTest(suite, \"parallel-transpiled: \" + title, function () {\n            return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__transpiled_knights_tour__[\"a\" /* parallelKnightTours */])({ x: 0, y: 0 }, boardSize);\n        });\n        addAsyncTest(suite, \"paralleljs: \" + title, function () {\n            return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_10__paralleljs_knights_tour__[\"a\" /* parallelJSKnightTours */])({ x: 0, y: 0 }, boardSize);\n        });\n        addThreadJsTest(suite, \"threadsjs: \" + title, __WEBPACK_IMPORTED_MODULE_13__threads_knights_tour__[\"a\" /* threadsKnightTours */], { x: 0, y: 0 }, boardSize);\n    };\n\n    for (var _iterator = boardSizes, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n        var _ref;\n\n        var _ret = _loop();\n\n        if (_ret === \"break\") break;\n    }\n}\nfunction addMonteCarloTest(suite, options) {\n    var runOptions = __WEBPACK_IMPORTED_MODULE_0_lodash__[\"extend\"](options, {\n        projects: createProjects(options.numberOfProjects)\n    });\n    var configName = \"(projects: \" + options.numberOfProjects + \", runs: \" + options.numRuns.toLocaleString() + \")\";\n    suite.add(\"sync: Monte Carlo Math.random \" + configName, function () {\n        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_7__dynamic_monte_carlo__[\"a\" /* syncMonteCarlo */])(options);\n    });\n    addAsyncTest(suite, \"parallel-dynamic: Monte Carlo Math.random \" + configName, function () {\n        return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_7__dynamic_monte_carlo__[\"b\" /* parallelMonteCarlo */])(runOptions);\n    });\n    suite.add(\"sync: Monte Carlo simjs \" + configName, function () {\n        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_4__transpiled_monte_carlo__[\"b\" /* syncMonteCarlo */])(options);\n    });\n    addAsyncTest(suite, \"parallel-transpiled: Monte Carlo simjs \" + configName, function () {\n        return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_4__transpiled_monte_carlo__[\"a\" /* parallelMonteCarlo */])(runOptions);\n    });\n    addAsyncTest(suite, \"paralleljs: Monte Carlo simjs \" + configName, function () {\n        return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__paralleljs_monte_carlo__[\"a\" /* parallelJSMonteCarlo */])(runOptions);\n    });\n    addThreadJsTest(suite, \"threadsjs: Monte Carlo simjs \" + configName, __WEBPACK_IMPORTED_MODULE_11__threads_monte_carlo__[\"a\" /* threadsMonteCarlo */], runOptions);\n}\nfunction addMonteCarloTests(suite) {\n    var oneMillionRuns = document.querySelector(\"#monte-carlo-1m\").checked;\n    var monteCarloOptions = {\n        investmentAmount: 620000,\n        numYears: 15,\n        performance: 0.0340000,\n        seed: 10,\n        volatility: 0.0896000\n    };\n    var runs = [Math.pow(10, 4), Math.pow(10, 5)];\n    if (oneMillionRuns) {\n        runs.push(Math.pow(10, 6));\n    }\n    for (var _iterator2 = runs, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {\n        var _ref2;\n\n        if (_isArray2) {\n            if (_i2 >= _iterator2.length) break;\n            _ref2 = _iterator2[_i2++];\n        } else {\n            _i2 = _iterator2.next();\n            if (_i2.done) break;\n            _ref2 = _i2.value;\n        }\n\n        var numRuns = _ref2;\n        var _arr = [1, 4, 8, 16];\n\n        for (var _i3 = 0; _i3 < _arr.length; _i3++) {\n            var numberOfProjects = _arr[_i3];\n            var options = __WEBPACK_IMPORTED_MODULE_0_lodash__[\"extend\"]({}, monteCarloOptions, { numberOfProjects: numberOfProjects, numRuns: numRuns });\n            addMonteCarloTest(suite, options);\n        }\n    }\n}\nfunction addMandelbrotTests(suite) {\n    var mandelbrotHeight = parseInt(document.querySelector(\"#mandelbrot-height\").value, 10);\n    var mandelbrotWidth = parseInt(document.querySelector(\"#mandelbrot-width\").value, 10);\n    var mandelbrotIterations = parseInt(document.querySelector(\"#mandelbrot-iterations\").value, 10);\n    var onlyDefaultScheduling = document.querySelector(\"#mandelbrot-only-default-scheduling\").checked;\n    var mandelbrotOptions = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_6__dynamic_mandelbrot__[\"a\" /* createMandelOptions */])(mandelbrotWidth, mandelbrotHeight, mandelbrotIterations);\n    suite.add(\"sync: Mandelbrot \" + mandelbrotWidth + \"x\" + mandelbrotHeight + \", \" + mandelbrotIterations, function () {\n        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_6__dynamic_mandelbrot__[\"b\" /* syncMandelbrot */])(mandelbrotOptions, function () {\n            return undefined;\n        });\n    });\n    var taskSizes = onlyDefaultScheduling ? [undefined] : [undefined, 1, 150, 312, 625, 1250, 2500];\n\n    var _loop2 = function _loop2() {\n        if (_isArray3) {\n            if (_i4 >= _iterator3.length) return \"break\";\n            _ref3 = _iterator3[_i4++];\n        } else {\n            _i4 = _iterator3.next();\n            if (_i4.done) return \"break\";\n            _ref3 = _i4.value;\n        }\n\n        var valuesPerTask = _ref3;\n\n        var parallelOptions = { maxValuesPerTask: valuesPerTask, minValuesPerTask: valuesPerTask };\n        var title = \"Mandelbrot \" + mandelbrotOptions.imageWidth + \"x\" + mandelbrotOptions.imageHeight + \", \" + mandelbrotOptions.iterations;\n        if (valuesPerTask) {\n            title += \" (\" + valuesPerTask + \")\";\n        }\n        addAsyncTest(suite, \"parallel-dynamic: \" + title, function () {\n            return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_6__dynamic_mandelbrot__[\"c\" /* parallelMandelbrot */])(mandelbrotOptions, parallelOptions);\n        });\n        addAsyncTest(suite, \"parallel-transpiled: \" + title, function () {\n            return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__transpiled_mandelbrot__[\"a\" /* mandelbrot */])(mandelbrotOptions, parallelOptions);\n        });\n    };\n\n    for (var _iterator3 = taskSizes, _isArray3 = Array.isArray(_iterator3), _i4 = 0, _iterator3 = _isArray3 ? _iterator3 : _iterator3[Symbol.iterator]();;) {\n        var _ref3;\n\n        var _ret2 = _loop2();\n\n        if (_ret2 === \"break\") break;\n    }\n    addAsyncTest(suite, \"paralleljs: Mandelbrot \" + mandelbrotWidth + \"x\" + mandelbrotHeight + \", \" + mandelbrotIterations, function () {\n        return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_8__paralleljs_mandelbrot__[\"a\" /* parallelJSMandelbrot */])(mandelbrotOptions);\n    });\n    addThreadJsTest(suite, \"threadsjs: Mandelbrot \" + mandelbrotWidth + \"x\" + mandelbrotHeight + \", \" + mandelbrotIterations, __WEBPACK_IMPORTED_MODULE_12__threads_mandelbrot__[\"a\" /* threadsMandelbrot */], mandelbrotOptions);\n}\nfunction measure() {\n    var runMonteCarlo = document.querySelector(\"#monte-carlo\").checked;\n    var runMandelbrot = document.querySelector(\"#mandelbrot-field\").checked;\n    var runKnightTour = document.querySelector(\"#knight-runner\").checked;\n    var allTestsSuite = new Benchmark.Suite();\n    if (runMandelbrot) {\n        addMandelbrotTests(allTestsSuite);\n    }\n    if (runKnightTour) {\n        addKnightBoardTests(allTestsSuite);\n    }\n    if (runMonteCarlo) {\n        addMonteCarloTests(allTestsSuite);\n    }\n    var suite = allTestsSuite.filter(function (benchmark) {\n        for (var i = 0; i < setCheckboxes.length; ++i) {\n            var checkbox = setCheckboxes[i];\n            var parts = checkbox.id.split(\"-\");\n            var name = parts.slice(0, parts.length - 1).join(\"-\");\n            if (checkbox.checked && benchmark.name.startsWith(name)) {\n                return true;\n            }\n        }\n        return false;\n    });\n    suite.forEach(function (benchmark) {\n        var index = suite.indexOf(benchmark);\n        benchmark.on(\"cycle\", function () {\n            return appendTestResults(benchmark, index);\n        });\n    });\n    suite.on(\"cycle\", function (event) {\n        var benchmark = event.target;\n        var index = event.currentTarget.indexOf(benchmark);\n        appendTestResults(benchmark, index);\n    });\n    suite.on(\"complete\", function (event) {\n        var benchmarks = event.currentTarget.map(function (benchmark) {\n            return {\n                info: benchmark.toString,\n                name: benchmark.name,\n                stats: benchmark.stats,\n                times: benchmark.times\n            };\n        });\n        jsonOutputField.textContent = JSON.stringify({ benchmarks: benchmarks, platform: platform }, undefined, \"    \");\n        runButton.disabled = false;\n    });\n    suite.on(\"start\", initResultTable);\n    suite.run({ async: true });\n}\nrunButton.addEventListener(\"click\", function (event) {\n    event.preventDefault();\n    runButton.disabled = true;\n    measure();\n});\nfunction initResultTable(event) {\n    clearOutputTable();\n    function clearOutputTable() {\n        while (outputTable.tBodies.length > 0) {\n            outputTable.removeChild(outputTable.tBodies[0]);\n        }\n    }\n    var body = outputTable.createTBody();\n    event.currentTarget.forEach(function (suite) {\n        var row = body.insertRow();\n\n        var _suite$name$split = suite.name.split(\":\"),\n            set = _suite$name$split[0],\n            nameParts = _suite$name$split.slice(1);\n\n        row.insertCell().textContent = set;\n        row.insertCell().textContent = nameParts.join(\":\");\n        var columns = outputTable.tHead.rows[0].cells.length;\n        for (var i = 0; i < columns; ++i) {\n            row.insertCell();\n        }\n    });\n}\nfunction appendTestResults(benchmark, index) {\n    var body = outputTable.tBodies[0];\n    var row = body.rows[index];\n    row.cells[2].textContent = benchmark.stats.deviation.toFixed(4);\n    row.cells[3].textContent = benchmark.stats.mean.toFixed(4);\n    row.cells[4].textContent = benchmark.stats.moe.toFixed(4);\n    row.cells[5].textContent = benchmark.stats.rme.toFixed(4);\n    row.cells[6].textContent = benchmark.stats.sem.toFixed(4);\n    row.cells[7].textContent = benchmark.stats.variance.toFixed(4);\n    row.cells[8].textContent = benchmark.stats.sample.length.toFixed(0);\n    row.cells[9].textContent = benchmark.hz.toFixed(4);\n}\nfunction createProjects(count) {\n    var projects = [];\n    for (var i = 0; i < count; ++i) {\n        projects.push({\n            startYear: Math.round(Math.random() * 15),\n            totalAmount: Math.round(Math.random() * 100000)\n        });\n    }\n    return projects;\n}\n\n/***/ }\n],[41]);\n\n\n// WEBPACK FOOTER //\n// performance-measurements.js","'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @api private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {Mixed} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @api private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @api public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @api public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {String|Symbol} event The event name.\n * @param {Boolean} exists Only check if there are listeners.\n * @returns {Array|Boolean}\n * @api public\n */\nEventEmitter.prototype.listeners = function listeners(event, exists) {\n  var evt = prefix ? prefix + event : event\n    , available = this._events[evt];\n\n  if (exists) return !!available;\n  if (!available) return [];\n  if (available.fn) return [available.fn];\n\n  for (var i = 0, l = available.length, ee = new Array(l); i < l; i++) {\n    ee[i] = available[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {String|Symbol} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @api public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {String|Symbol} event The event name.\n * @param {Function} fn The listener function.\n * @param {Mixed} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @api public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  var listener = new EE(fn, context || this)\n    , evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) this._events[evt] = listener, this._eventsCount++;\n  else if (!this._events[evt].fn) this._events[evt].push(listener);\n  else this._events[evt] = [this._events[evt], listener];\n\n  return this;\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {String|Symbol} event The event name.\n * @param {Function} fn The listener function.\n * @param {Mixed} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @api public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  var listener = new EE(fn, context || this, true)\n    , evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) this._events[evt] = listener, this._eventsCount++;\n  else if (!this._events[evt].fn) this._events[evt].push(listener);\n  else this._events[evt] = [this._events[evt], listener];\n\n  return this;\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {String|Symbol} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {Mixed} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @api public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    if (--this._eventsCount === 0) this._events = new Events();\n    else delete this._events[evt];\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n         listeners.fn === fn\n      && (!once || listeners.once)\n      && (!context || listeners.context === context)\n    ) {\n      if (--this._eventsCount === 0) this._events = new Events();\n      else delete this._events[evt];\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n           listeners[i].fn !== fn\n        || (once && !listeners[i].once)\n        || (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else if (--this._eventsCount === 0) this._events = new Events();\n    else delete this._events[evt];\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {String|Symbol} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @api public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) {\n      if (--this._eventsCount === 0) this._events = new Events();\n      else delete this._events[evt];\n    }\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// This function doesn't apply anymore.\n//\nEventEmitter.prototype.setMaxListeners = function setMaxListeners() {\n  return this;\n};\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/eventemitter3/index.js\n// module id = 3\n// module chunks = 0","﻿(function () {\n\tvar isCommonJS = typeof module !== 'undefined' && module.exports;\n\tvar isNode = !(typeof window !== 'undefined' && this === window);\n\tvar setImmediate = setImmediate || function (cb) {\n\t\tsetTimeout(cb, 0);\n\t};\n\tvar Worker = isNode ? require(__dirname + '/Worker.js') : self.Worker;\n\tvar URL = typeof self !== 'undefined' ? (self.URL ? self.URL : self.webkitURL) : null;\n\tvar _supports = (isNode || self.Worker) ? true : false; // node always supports parallel\n\n\tfunction extend(from, to) {\n\t\tif (!to) to = {};\n\t\tfor (var i in from) {\n\t\t\tif (to[i] === undefined) to[i] = from[i];\n\t\t}\n\t\treturn to;\n\t}\n\n\tfunction Operation() {\n\t\tthis._callbacks = [];\n\t\tthis._errCallbacks = [];\n\n\t\tthis._resolved = 0;\n\t\tthis._result = null;\n\t}\n\n\tOperation.prototype.resolve = function (err, res) {\n\t\tif (!err) {\n\t\t\tthis._resolved = 1;\n\t\t\tthis._result = res;\n\n\t\t\tfor (var i = 0; i < this._callbacks.length; ++i) {\n\t\t\t\tthis._callbacks[i](res);\n\t\t\t}\n\t\t} else {\n\t\t\tthis._resolved = 2;\n\t\t\tthis._result = err;\n\n\t\t\tfor (var iE = 0; iE < this._errCallbacks.length; ++iE) {\n\t\t\t\tthis._errCallbacks[iE](err);\n\t\t\t}\n\t\t}\n\n\t\tthis._callbacks = [];\n\t\tthis._errCallbacks = [];\n\t};\n\n\tOperation.prototype.then = function (cb, errCb) {\n\t\tif (this._resolved === 1) { // result\n\t\t\tif (cb) {\n\t\t\t\tcb(this._result);\n\t\t\t}\n\n\t\t\treturn;\n\t\t} else if (this._resolved === 2) { // error\n\t\t\tif (errCb) {\n\t\t\t\terrCb(this._result);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tif (cb) {\n\t\t\tthis._callbacks[this._callbacks.length] = cb;\n\t\t}\n\n\t\tif (errCb) {\n\t\t\tthis._errCallbacks[this._errCallbacks.length] = errCb;\n\t\t}\n\t\treturn this;\n\t};\n\n\tvar defaults = {\n\t\tevalPath: isNode ? __dirname + '/eval.js' : null,\n\t\tmaxWorkers: isNode ? require('os').cpus().length : (navigator.hardwareConcurrency || 4),\n\t\tsynchronous: true,\n\t\tenv: {},\n\t\tenvNamespace: 'env'\n\t};\n\n\tfunction Parallel(data, options) {\n\t\tthis.data = data;\n\t\tthis.options = extend(defaults, options);\n\t\tthis.operation = new Operation();\n\t\tthis.operation.resolve(null, this.data);\n\t\tthis.requiredScripts = [];\n\t\tthis.requiredFunctions = [];\n\t}\n\n\t// static method\n\tParallel.isSupported = function () { return _supports; }\n\n\tParallel.prototype.getWorkerSource = function (cb, env) {\n\t\tvar that = this;\n\t\tvar preStr = '';\n\t\tvar i = 0;\n\t\tif (!isNode && this.requiredScripts.length !== 0) {\n\t\t\tpreStr += 'importScripts(\"' + this.requiredScripts.join('\",\"') + '\");\\r\\n';\n\t\t}\n\n\t\tfor (i = 0; i < this.requiredFunctions.length; ++i) {\n\t\t\tif (this.requiredFunctions[i].name) {\n\t\t\t\tpreStr += 'var ' + this.requiredFunctions[i].name + ' = ' + this.requiredFunctions[i].fn.toString() + ';';\n\t\t\t} else {\n\t\t\t\tpreStr += this.requiredFunctions[i].fn.toString();\n\t\t\t}\n\t\t}\n\n\t\tenv = JSON.stringify(env || {});\n\n\t\tvar ns = this.options.envNamespace;\n\n\t\tif (isNode) {\n\t\t\treturn preStr + 'process.on(\"message\", function(e) {global.' + ns + ' = ' + env + ';process.send(JSON.stringify((' + cb.toString() + ')(JSON.parse(e).data)))})';\n\t\t} else {\n\t\t\treturn preStr + 'self.onmessage = function(e) {var global = {}; global.' + ns + ' = ' + env + ';self.postMessage((' + cb.toString() + ')(e.data))}';\n\t\t}\n\t};\n\n\tParallel.prototype.require = function () {\n\t\tvar args = Array.prototype.slice.call(arguments, 0),\n\t\t\tfunc;\n\n\t\tfor (var i = 0; i < args.length; i++) {\n\t\t\tfunc = args[i];\n\n\t\t\tif (typeof func === 'string') {\n\t\t\t\tthis.requiredScripts.push(func);\n\t\t\t} else if (typeof func === 'function') {\n\t\t\t\tthis.requiredFunctions.push({ fn: func });\n\t\t\t} else if (typeof func === 'object') {\n\t\t\t\tthis.requiredFunctions.push(func);\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t};\n\n\tParallel.prototype._spawnWorker = function (cb, env) {\n\t\tvar wrk;\n\t\tvar src = this.getWorkerSource(cb, env);\n\t\tif (isNode) {\n\t\t\twrk = new Worker(this.options.evalPath);\n\t\t\twrk.postMessage(src);\n\t\t} else {\n\t\t\tif (Worker === undefined) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (this.requiredScripts.length !== 0) {\n\t\t\t\t\tif (this.options.evalPath !== null) {\n\t\t\t\t\t\twrk = new Worker(this.options.evalPath);\n\t\t\t\t\t\twrk.postMessage(src);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthrow new Error('Can\\'t use required scripts without eval.js!');\n\t\t\t\t\t}\n\t\t\t\t} else if (!URL) {\n\t\t\t\t\tthrow new Error('Can\\'t create a blob URL in this browser!');\n\t\t\t\t} else {\n\t\t\t\t\tvar blob = new Blob([src], { type: 'text/javascript' });\n\t\t\t\t\tvar url = URL.createObjectURL(blob);\n\n\t\t\t\t\twrk = new Worker(url);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\tif (this.options.evalPath !== null) { // blob/url unsupported, cross-origin error\n\t\t\t\t\twrk = new Worker(this.options.evalPath);\n\t\t\t\t\twrk.postMessage(src);\n\t\t\t\t} else {\n\t\t\t\t\tthrow e;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn wrk;\n\t};\n\n\tParallel.prototype.spawn = function (cb, env) {\n\t\tvar that = this;\n\t\tvar newOp = new Operation();\n\n\t\tenv = extend(this.options.env, env || {});\n\n\t\tthis.operation.then(function () {\n\t\t\tvar wrk = that._spawnWorker(cb, env);\n\t\t\tif (wrk !== undefined) {\n\t\t\t\twrk.onmessage = function (msg) {\n\t\t\t\t\twrk.terminate();\n\t\t\t\t\tthat.data = msg.data;\n\t\t\t\t\tnewOp.resolve(null, that.data);\n\t\t\t\t};\n\t\t\t\twrk.onerror = function (e) {\n\t\t\t\t\twrk.terminate();\n\t\t\t\t\tnewOp.resolve(e, null);\n\t\t\t\t};\n\t\t\t\twrk.postMessage(that.data);\n\t\t\t} else if (that.options.synchronous) {\n\t\t\t\tsetImmediate(function () {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tthat.data = cb(that.data);\n\t\t\t\t\t\tnewOp.resolve(null, that.data);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\tnewOp.resolve(e, null);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthrow new Error('Workers do not exist and synchronous operation not allowed!');\n\t\t\t}\n\t\t});\n\t\tthis.operation = newOp;\n\t\treturn this;\n\t};\n\n\tParallel.prototype._spawnMapWorker = function (i, cb, done, env, wrk) {\n\t\tvar that = this;\n\n\t\tif (!wrk) wrk = that._spawnWorker(cb, env);\n\n\t\tif (wrk !== undefined) {\n\t\t\twrk.onmessage = function (msg) {\n\t\t\t\tthat.data[i] = msg.data;\n\t\t\t\tdone(null, wrk);\n\t\t\t};\n\t\t\twrk.onerror = function (e) {\n\t\t\t\twrk.terminate();\n\t\t\t\tdone(e);\n\t\t\t};\n\t\t\twrk.postMessage(that.data[i]);\n\t\t} else if (that.options.synchronous) {\n\t\t\tsetImmediate(function () {\n\t\t\t\tthat.data[i] = cb(that.data[i]);\n\t\t\t\tdone();\n\t\t\t});\n\t\t} else {\n\t\t\tthrow new Error('Workers do not exist and synchronous operation not allowed!');\n\t\t}\n\t};\n\n\tParallel.prototype.map = function (cb, env) {\n\t\tenv = extend(this.options.env, env || {});\n\n\t\tif (!this.data.length) {\n\t\t\treturn this.spawn(cb, env);\n\t\t}\n\n\t\tvar that = this;\n\t\tvar startedOps = 0;\n\t\tvar doneOps = 0;\n\t\tfunction done(err, wrk) {\n\t\t\tif (err) {\n\t\t\t\tnewOp.resolve(err, null);\n\t\t\t} else if (++doneOps === that.data.length) {\n\t\t\t\tnewOp.resolve(null, that.data);\n\t\t\t\tif (wrk) wrk.terminate();\n\t\t\t} else if (startedOps < that.data.length) {\n\t\t\t\tthat._spawnMapWorker(startedOps++, cb, done, env, wrk);\n\t\t\t} else {\n\t\t\t\tif (wrk) wrk.terminate();\n\t\t\t}\n\t\t}\n\n\t\tvar newOp = new Operation();\n\t\tthis.operation.then(function () {\n\t\t\tfor (; startedOps - doneOps < that.options.maxWorkers && startedOps < that.data.length; ++startedOps) {\n\t\t\t\tthat._spawnMapWorker(startedOps, cb, done, env);\n\t\t\t}\n\t\t}, function (err) {\n\t\t\tnewOp.resolve(err, null);\n\t\t});\n\t\tthis.operation = newOp;\n\t\treturn this;\n\t};\n\n\tParallel.prototype._spawnReduceWorker = function (data, cb, done, env, wrk) {\n\t\tvar that = this;\n\t\tif (!wrk) wrk = that._spawnWorker(cb, env);\n\n\t\tif (wrk !== undefined) {\n\t\t\twrk.onmessage = function (msg) {\n\t\t\t\tthat.data[that.data.length] = msg.data;\n\t\t\t\tdone(null, wrk);\n\t\t\t};\n\t\t\twrk.onerror = function (e) {\n\t\t\t\twrk.terminate();\n\t\t\t\tdone(e, null);\n\t\t\t}\n\t\t\twrk.postMessage(data);\n\t\t} else if (that.options.synchronous) {\n\t\t\tsetImmediate(function () {\n\t\t\t\tthat.data[that.data.length] = cb(data);\n\t\t\t\tdone();\n\t\t\t});\n\t\t} else {\n\t\t\tthrow new Error('Workers do not exist and synchronous operation not allowed!');\n\t\t}\n\t};\n\n\tParallel.prototype.reduce = function (cb, env) {\n\t\tenv = extend(this.options.env, env || {});\n\n\t\tif (!this.data.length) {\n\t\t\tthrow new Error('Can\\'t reduce non-array data');\n\t\t}\n\n\t\tvar runningWorkers = 0;\n\t\tvar that = this;\n\t\tfunction done(err, wrk) {\n\t\t\t--runningWorkers;\n\t\t\tif (err) {\n\t\t\t\tnewOp.resolve(err, null);\n\t\t\t} else if (that.data.length === 1 && runningWorkers === 0) {\n\t\t\t\tthat.data = that.data[0];\n\t\t\t\tnewOp.resolve(null, that.data);\n\t\t\t\tif (wrk) wrk.terminate();\n\t\t\t} else if (that.data.length > 1) {\n\t\t\t\t++runningWorkers;\n\t\t\t\tthat._spawnReduceWorker([that.data[0], that.data[1]], cb, done, env, wrk);\n\t\t\t\tthat.data.splice(0, 2);\n\t\t\t} else {\n\t\t\t\tif (wrk) wrk.terminate();\n\t\t\t}\n\t\t}\n\n\t\tvar newOp = new Operation();\n\t\tthis.operation.then(function () {\n\t\t\tif (that.data.length === 1) {\n\t\t\t\tnewOp.resolve(null, that.data[0]);\n\t\t\t} else {\n\t\t\t\tfor (var i = 0; i < that.options.maxWorkers && i < Math.floor(that.data.length / 2) ; ++i) {\n\t\t\t\t\t++runningWorkers;\n\t\t\t\t\tthat._spawnReduceWorker([that.data[i * 2], that.data[i * 2 + 1]], cb, done, env);\n\t\t\t\t}\n\n\t\t\t\tthat.data.splice(0, i * 2);\n\t\t\t}\n\t\t});\n\t\tthis.operation = newOp;\n\t\treturn this;\n\t};\n\n\tParallel.prototype.then = function (cb, errCb) {\n\t\tvar that = this;\n\t\tvar newOp = new Operation();\n\t\terrCb = typeof errCb === 'function' ? errCb : function(){};\n\n\t\tthis.operation.then(function () {\n\t\t\tvar retData;\n\n\t\t\ttry {\n\t\t\t\tif (cb) {\n\t\t\t\t\tretData = cb(that.data);\n\t\t\t\t\tif (retData !== undefined) {\n\t\t\t\t\t\tthat.data = retData;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tnewOp.resolve(null, that.data);\n\t\t\t} catch (e) {\n\t\t\t\tif (errCb) {\n\t\t\t\t\tretData = errCb(e);\n\t\t\t\t\tif (retData !== undefined) {\n\t\t\t\t\t\tthat.data = retData;\n\t\t\t\t\t}\n\n\t\t\t\t\tnewOp.resolve(null, that.data);\n\t\t\t\t} else {\n\t\t\t\t\tnewOp.resolve(null, e);\n\t\t\t\t}\n\t\t\t}\n\t\t}, function (err) {\n\t\t\tif (errCb) {\n\t\t\t\tvar retData = errCb(err);\n\t\t\t\tif (retData !== undefined) {\n\t\t\t\t\tthat.data = retData;\n\t\t\t\t}\n\n\t\t\t\tnewOp.resolve(null, that.data);\n\t\t\t} else {\n\t\t\t\tnewOp.resolve(null, err);\n\t\t\t}\n\t\t});\n\t\tthis.operation = newOp;\n\t\treturn this;\n\t};\n\n\tif (isCommonJS) {\n\t\tmodule.exports = Parallel;\n\t} else {\n\t\tself.Parallel = Parallel;\n\t}\n})();\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/paralleljs/lib/parallel.js\n// module id = 10\n// module chunks = 0","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/process/browser.js\n// module id = 11\n// module chunks = 0","'use strict';\n\nexports.__esModule = true;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nexports.getConfig = getConfig;\nexports.setConfig = setConfig;\nvar configuration = {\n  basepath: {\n    node: '',\n    web: ''\n  },\n  fallback: {\n    slaveScriptUrl: ''\n  }\n};\n\nfunction configDeepMerge(destObj, srcObj) {\n  var ancestorProps = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n\n  Object.keys(srcObj).forEach(function (propKey) {\n    var srcValue = srcObj[propKey];\n    var ancestorPropsAndThis = ancestorProps.concat([propKey]);\n\n    if ((typeof srcValue === 'undefined' ? 'undefined' : _typeof(srcValue)) === 'object') {\n      if (typeof destObj[propKey] !== 'undefined' && _typeof(destObj[propKey]) !== 'object') {\n        throw new Error('Expected config property not to be an object: ' + ancestorPropsAndThis.join('.'));\n      }\n      configDeepMerge(destObj[propKey], srcValue, ancestorPropsAndThis);\n    } else {\n      if (_typeof(destObj[propKey]) === 'object') {\n        throw new Error('Expected config property to be an object: ' + ancestorPropsAndThis.join('.'));\n      }\n      destObj[propKey] = srcValue;\n    }\n  });\n}\n\nvar config = {\n  get: function get() {\n    return configuration;\n  },\n\n  set: function set(newConfig) {\n    if ((typeof newConfig === 'undefined' ? 'undefined' : _typeof(newConfig)) !== 'object') {\n      throw new Error('Expected config object.');\n    }\n\n    configDeepMerge(configuration, newConfig);\n  }\n};\n\nexports.default = config;\nfunction getConfig() {\n  return config.get();\n}\n\nfunction setConfig() {\n  return config.set.apply(config, arguments);\n}\n//# sourceMappingURL=config.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/threads/lib/config.js\n// module id = 12\n// module chunks = 0","var nextTick = require('process/browser.js').nextTick;\nvar apply = Function.prototype.apply;\nvar slice = Array.prototype.slice;\nvar immediateIds = {};\nvar nextImmediateId = 0;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function() {\n  return new Timeout(apply.call(setTimeout, window, arguments), clearTimeout);\n};\nexports.setInterval = function() {\n  return new Timeout(apply.call(setInterval, window, arguments), clearInterval);\n};\nexports.clearTimeout =\nexports.clearInterval = function(timeout) { timeout.close(); };\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\nTimeout.prototype.close = function() {\n  this._clearFn.call(window, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function(item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function(item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function(item) {\n  clearTimeout(item._idleTimeoutId);\n\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout)\n        item._onTimeout();\n    }, msecs);\n  }\n};\n\n// That's not how node.js implements it but the exposed api is the same.\nexports.setImmediate = typeof setImmediate === \"function\" ? setImmediate : function(fn) {\n  var id = nextImmediateId++;\n  var args = arguments.length < 2 ? false : slice.call(arguments, 1);\n\n  immediateIds[id] = true;\n\n  nextTick(function onNextTick() {\n    if (immediateIds[id]) {\n      // fn.call() is faster so we optimize for the common use-case\n      // @see http://jsperf.com/call-apply-segu\n      if (args) {\n        fn.apply(null, args);\n      } else {\n        fn.call(null);\n      }\n      // Prevent ids from leaking\n      exports.clearImmediate(id);\n    }\n  });\n\n  return id;\n};\n\nexports.clearImmediate = typeof clearImmediate === \"function\" ? clearImmediate : function(id) {\n  delete immediateIds[id];\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/timers-browserify/main.js\n// module id = 13\n// module chunks = 0","'use strict';\n\nexports.__esModule = true;\nexports.Pool = exports.defaults = exports.config = undefined;\nexports.spawn = spawn;\n\nrequire('native-promise-only');\n\nvar _config = require('./config');\n\nvar _config2 = _interopRequireDefault(_config);\n\nvar _defaults = require('./defaults');\n\nvar _defaults2 = _interopRequireDefault(_defaults);\n\nvar _pool = require('./pool');\n\nvar _pool2 = _interopRequireDefault(_pool);\n\nvar _worker = require('./worker');\n\nvar _worker2 = _interopRequireDefault(_worker);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.config = _config2.default;\nexports.defaults = _defaults2.default;\nexports.Pool = _pool2.default;\nfunction spawn() {\n  var runnable = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n  var importScripts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n\n  return new _worker2.default(runnable, importScripts);\n}\n\nexports.default = {\n  config: _config2.default,\n  defaults: _defaults2.default,\n  Pool: _pool2.default,\n  spawn: spawn,\n  Worker: _worker2.default\n};\n//# sourceMappingURL=index.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/threads/lib/index.js\n// module id = 14\n// module chunks = 0","'use strict';\n\n/*eslint-env node*/\n/*\n * This file is only a stub to make './defaults' resolve the './defaults.node' module.\n * Loading the browser defaults into the browser bundle is done in the gulpfile by\n * configuring a browserify override.\n */\n\nif (typeof process !== 'undefined' && 'pid' in process) {\n  module.exports = require('./defaults.node');\n} else {\n  module.exports = require('./defaults.browser');\n}\n//# sourceMappingURL=defaults.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/threads/lib/defaults.js\n// module id = 15\n// module chunks = 0","const Parallel = require(\"paralleljs\");\n\nexport interface ICoordinate {\n    readonly x: number;\n    readonly y: number;\n}\n\nexport interface IKnightTourEnvironment {\n    boardSize: number;\n    board: number[];\n}\n\nexport function knightTours(startPath: ICoordinate[], boardSize: number): number {\n    const moves = [\n        { x: -2, y: -1 }, { x: -2, y: 1}, { x: -1, y: -2 }, { x: -1, y: 2 },\n        { x: 1, y: -2 }, { x: 1, y: 2}, { x: 2, y: -1 }, { x: 2, y: 1 }\n    ];\n\n    const board: number[] = new Array(boardSize * boardSize);\n    board.fill(0);\n\n    const numberOfFields = boardSize * boardSize;\n    let results: number = 0;\n    const stack: { coordinate: ICoordinate, n: number }[] = startPath.map((pos, index) => ({ coordinate: pos, n: index + 1 }));\n\n    for (let index = 0; index < startPath.length - 1; ++index) {\n        const fieldIndex = startPath[index].x * boardSize + startPath[index].y;\n        board[fieldIndex] = index + 1;\n    }\n\n    while (stack.length > 0) {\n        const { coordinate, n } = stack[stack.length - 1];\n        const fieldIndex = coordinate.x * boardSize + coordinate.y;\n\n        if (board[fieldIndex] !== 0) {\n            // back tracking\n            board[fieldIndex] = 0;\n            stack.pop(); // remove current value\n            continue;\n        }\n\n        // entry\n        if (n === numberOfFields) {\n            ++results;\n            stack.pop();\n            continue;\n        }\n\n        board[fieldIndex] = n!;\n\n        for (let i = 0; i < moves.length; ++i) {\n            const move = moves[i];\n            const successor = { x: coordinate.x + move.x, y: coordinate.y + move.y };\n            // not outside of board and not yet accessed\n            const accessible = successor.x >= 0 && successor.y >= 0 && successor.x < boardSize &&  successor.y < boardSize && board[successor.x * boardSize + successor.y] === 0;\n\n            if (accessible) {\n                stack.push({ coordinate: successor, n: n + 1 });\n            }\n        }\n    }\n\n    return results;\n}\n\ndeclare const global: { env: { boardSize: number }};\n\nexport function parallelJSKnightTours(start: ICoordinate, boardSize: number): PromiseLike<number> {\n\n    function successors(coordinate: ICoordinate) {\n        const moves = [\n            {x: -2, y: -1}, {x: -2, y: 1}, {x: -1, y: -2}, {x: -1, y: 2},\n            {x: 1, y: -2}, {x: 1, y: 2}, {x: 2, y: -1}, {x: 2, y: 1}\n        ];\n        const result: ICoordinate[] = [];\n\n        for (let i = 0; i < moves.length; ++i) {\n            const move = moves[i];\n            const successor = {x: coordinate.x + move.x, y: coordinate.y + move.y};\n            const accessible = successor.x >= 0 && successor.y >= 0 && successor.x < boardSize && successor.y < boardSize &&\n                (successor.x !== start.x || successor.y !== start.y) && (successor.x !== coordinate.x && successor.y !== coordinate.y);\n            if (accessible) {\n                result.push(successor);\n            }\n        }\n\n        return result;\n    }\n\n    function computeStartFields() {\n        const result: ICoordinate[][] = [];\n        for (const directSuccessor of successors(start)) {\n            for (const indirectSuccessor of successors(directSuccessor)) {\n                result.push([start, directSuccessor, indirectSuccessor]);\n            }\n        }\n        return result;\n    }\n\n    return new Parallel(computeStartFields(), { env: { boardSize }})\n        .require(knightTours)\n        .map(function (startField: ICoordinate[]) {\n            return knightTours(startField, global.env.boardSize);\n        })\n        .reduce(function (toursPerRun: number[]) {\n            return toursPerRun.reduce((memo, current) => memo + current, 0);\n        });\n\n    // The reduce operation needs to wait until the map operation is complete, switches back to the main thread and then\n    // a new worker is spawned for each reduce step, e.g. for [1, 2, 3, 4, 5, 6] the three workers with [1, 2], [3, 4], [5, 6]\n    // then the sub sequent workers [3, 7] and finally, [10, 11] are spawned...\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/paralleljs/knights-tour.ts","const Parallel = require(\"paralleljs\");\nimport * as _ from \"lodash\";\n\nexport interface IComplexNumber {\n    i: number;\n    real: number;\n}\n\nexport interface IMandelbrotOptions {\n    imageHeight: number;\n    imageWidth: number;\n    iterations: number;\n    max: IComplexNumber;\n    min: IComplexNumber;\n    scalingFactor: IComplexNumber;\n}\n\nexport function computeMandelbrotLine(y: number, options: IMandelbrotOptions): Uint8ClampedArray {\n    function calculateZ(c: IComplexNumber): number {\n        const z = { i: c.i, real: c.real };\n        let n = 0;\n\n        for (; n < options.iterations; ++n) {\n            if (z.real ** 2 + z.i ** 2 > 4) {\n                break;\n            }\n\n            // z ** 2 + c\n            const zI = z.i;\n            z.i = 2 * z.real * z.i + c.i;\n            z.real = z.real ** 2 - zI ** 2 + c.real;\n        }\n\n        return n;\n    }\n\n    const line = new Uint8ClampedArray(options.imageWidth * 4);\n    const cI = options.max.i - y * options.scalingFactor.i;\n\n    for (let x = 0; x < options.imageWidth; ++x) {\n        const c = {\n            i: cI,\n            real: options.min.real + x * options.scalingFactor.real\n        };\n\n        const n = calculateZ(c);\n        const base = x * 4;\n        /* tslint:disable:no-bitwise */\n        line[base] = n & 0xFF;\n        line[base + 1] = n & 0xFF00;\n        line[base + 2] = n & 0xFF0000;\n        line[base + 3] = 255;\n    }\n    return line;\n}\n\ndeclare const global: { env: IMandelbrotOptions};\n\nexport function parallelJSMandelbrot(mandelbrotOptions: IMandelbrotOptions) {\n    const lines = _.range(mandelbrotOptions.imageHeight);\n    return new Parallel(lines, { env: mandelbrotOptions }).require(computeMandelbrotLine)\n        .map(function (line: number): Uint8ClampedArray {\n            return computeMandelbrotLine(line, global.env);\n        });\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/paralleljs/mandelbrot.ts","const Parallel = require(\"paralleljs\");\nimport {Dictionary} from \"lodash\";\n\n\n/* tslint:disable:no-var-requires */\n// declare function require(name: string): any;\n// const Random = require(\"simjs-random\");\n// const random = new Random(10);\n\nexport interface IProject {\n    startYear: number;\n    totalAmount: number;\n}\n\ninterface IBucket {\n    min: number;\n    max: number;\n\n    subBuckets: { [groupName: string]: { group: string; min: number, max: number } };\n}\n\ninterface IGroup {\n    /**\n     * The unique name of this group\n     */\n    name: string;\n\n    /**\n     * The description of the group\n     */\n    description: string;\n\n    /**\n     * Should a separator line been drawn for this group?\n     */\n    separator: boolean;\n\n    /**\n     * Whats the percentage of values in this group to the total number of simulated values\n     */\n    percentage: number;\n\n    /**\n     * Whats the minimum value that is still part of this group\n     */\n    from?: number;\n    /**\n     * Whats the maximum value (exclusive) that defines the upper end of this group\n     */\n    to?: number;\n}\n\nexport interface IProjectResult {\n    /**\n     * The minimal simulated value for this project\n     */\n    min: number;\n    /**\n     * The maximal simulated value\n     */\n    max: number;\n\n    /** The median of the values found for this project\n     */\n    median: number;\n\n    /**\n     * Defines where the 2/3 of the simulated values start / end.\n     */\n    twoThird: {\n        min: number;\n        max: number;\n    };\n\n    buckets: IBucket[];\n\n    groups: IGroup[];\n\n    /**\n     * The project\n     */\n    project: IProject;\n}\n\ninterface IMonteCarloEnvironment {\n    investmentAmount: number;\n    liquidity: number;\n    noInterestReferenceLine: number[];\n    numRuns: number;\n    numYears: number;\n    projectsByStartYear: Dictionary<IProject[]>;\n    simulatedValues: number[][];\n}\n\nexport interface IMonteCarloSimulationOptions {\n    numYears?: number;\n    numRuns?: number;\n    projects?: IProject[];\n    investmentAmount?: number;\n    performance?: number;\n    seed?: number;\n    volatility: number;\n    liquidity?: number;\n}\n\ninterface IInitializedMonteCarloSimulationOptions {\n    numYears: number;\n    numRuns: number;\n    projects: IProject[];\n    investmentAmount: number;\n    performance: number;\n    seed?: number;\n    taskIndex?: number;\n    valuesPerWorker?: number;\n    liquidity: number;\n    volatility: number;\n}\n\nfunction initializeOptions(options?: IMonteCarloSimulationOptions): IInitializedMonteCarloSimulationOptions {\n    return Object.assign({}, {\n        investmentAmount: 1000000,\n        liquidity: 10000,\n        numRuns: 10000,\n        numYears: 10,\n        performance: 0,\n        projects: [],\n        seed: undefined,\n        volatility: 0.01\n    }, options);\n}\n\nfunction createMonteCarloEnvironment(options: IInitializedMonteCarloSimulationOptions): IMonteCarloEnvironment {\n    const random = new (self as any).Random(10);\n\n    /**\n     * Performs the monte carlo simulation for all years and num runs.\n     * @param cashFlows the cash flows\n     * @returns {number[][]} the simulated outcomes grouped by year\n     */\n    function simulateOutcomes(cashFlows: number[], numYears: number): number[][]  {\n        function toAbsoluteIndices(indices: number[]) {\n            let currentPortfolioValue = options.investmentAmount;\n            let previousYearIndex = 100;\n\n            for (let relativeYear = 0; relativeYear < indices.length; ++relativeYear) {\n                const currentYearIndex = indices[relativeYear];\n                const cashFlowStartOfYear = relativeYear === 0 ? 0 : cashFlows[relativeYear - 1];\n\n                // scale current value with performance gain according to index\n                const performance = currentYearIndex / previousYearIndex;\n                currentPortfolioValue = (currentPortfolioValue + cashFlowStartOfYear) * performance;\n\n                indices[relativeYear] =  1 + random.normal(performance, options.volatility);\n\n                previousYearIndex = currentYearIndex;\n            }\n\n            return indices;\n        }\n\n        const result: number[][] = new Array(options.numYears);\n        for (let year = 0; year <= numYears; ++year) {\n            result[year] = new Array(options.numRuns);\n        }\n\n        for (let run = 0; run < options.numRuns; run++) {\n            const indices = [100];\n\n            for (let i = 1; i <= numYears; i++) {\n                // const randomPerformance = 1 + random.normal(options.performance, options.volatility);\n                const randomPerformance = 1 + Math.random();\n                indices.push(indices[i - 1] * randomPerformance);\n            }\n\n            // convert the relative values from above to absolute values.\n            toAbsoluteIndices(indices);\n\n            for (let year = 0; year < indices.length; ++year) {\n                result[year][run] = indices[year];\n            }\n        }\n\n        return result;\n    }\n\n    function projectsToCashFlows() {\n        const cashFlows: number[] = [];\n        for (let year = 0; year < options.numYears; ++year) {\n            const projectsByThisYear = projectsByStartYear[year] || [];\n            const cashFlow = -projectsByThisYear.reduce((memo, project) => memo + project.totalAmount, 0);\n            cashFlows.push(cashFlow);\n        }\n        return cashFlows;\n    }\n\n    function calculateNoInterestReferenceLine(cashFlows: number[]) {\n        const noInterestReferenceLine: number[] = [];\n\n        let investmentAmountLeft = options.investmentAmount;\n        for (let year = 0; year < options.numYears; ++year) {\n            investmentAmountLeft = investmentAmountLeft + cashFlows[year];\n            noInterestReferenceLine.push(investmentAmountLeft);\n        }\n        return noInterestReferenceLine;\n    }\n\n    let projectsToSimulate: IProject[] = options.projects;\n\n    if (options.taskIndex && options.valuesPerWorker) {\n        projectsToSimulate = options.projects.slice(options.taskIndex * options.valuesPerWorker, (options.taskIndex + 1) * options.valuesPerWorker);\n    }\n\n    const projects = options.projects.sort((a, b) => a.startYear - b.startYear);\n\n    // Group projects by startYear, use lodash groupBy instead\n    const projectsByStartYear: Dictionary<IProject[]> = {};\n    for (const project of projects) {\n        const arr = projectsByStartYear[project.startYear] = projectsByStartYear[project.startYear] || [];\n        arr.push(project);\n    }\n\n    const cashFlows = projectsToCashFlows();\n    const noInterestReferenceLine = calculateNoInterestReferenceLine(cashFlows);\n\n    const numYears = projectsToSimulate.reduce((memo, project) => Math.max(memo, project.startYear), 0);\n\n    return {\n        investmentAmount: options.investmentAmount,\n        liquidity: options.liquidity,\n        noInterestReferenceLine,\n        numRuns: options.numRuns,\n        numYears,\n        projectsByStartYear,\n        simulatedValues: simulateOutcomes(cashFlows, numYears)\n    };\n}\n\nfunction calculateProject(project: IProject, environment: IMonteCarloEnvironment): IProjectResult {\n    const NUMBER_OF_BUCKETS = 10;\n    function groupForValue(value: number, groups: IGroup[]): IGroup {\n        return groups.find(group => (typeof group.from === \"undefined\" || group.from <= value) && (typeof group.to === \"undefined\" || group.to > value))!;\n    }\n\n    function createGroups(requiredAmount: number, noInterestReference: number): IGroup[] {\n        return [\n            { description: \"Ziel erreichbar\", from: requiredAmount, name: \"green\", percentage: 0, separator: true},\n            { description: \"mit Zusatzliquidität erreichbar\", from: requiredAmount - environment.liquidity, name: \"yellow\", percentage: 0, separator: true, to: requiredAmount },\n            { description: \"nicht erreichbar\", from: noInterestReference, name: \"gray\", percentage: 0, separator: false, to: requiredAmount - environment.liquidity },\n            { description: \"nicht erreichbar, mit Verlust\", name: \"red\", percentage: 0, separator: false, to: noInterestReference }\n        ];\n    }\n\n    function calculateRequiredAmount() {\n        let amount = project.totalAmount;\n        const projectsSameYear = environment.projectsByStartYear[project.startYear];\n\n        for (const otherProject of projectsSameYear) {\n            if (otherProject === project) {\n                break;\n            }\n            amount += otherProject.totalAmount;\n        }\n        return amount;\n    }\n\n    function median(values: number[]) {\n        const half = Math.floor(values.length / 2);\n\n        if (values.length % 2) {\n            return values[half];\n        }\n\n        return (values[half - 1] + values[half]) / 2.0;\n    }\n\n    const requiredAmount = calculateRequiredAmount();\n    const simulatedValuesThisYear = environment.simulatedValues[project.startYear];\n    simulatedValuesThisYear.sort((a, b) => a - b);\n\n    const groups = createGroups(requiredAmount, environment.noInterestReferenceLine[project.startYear]);\n    const valuesByGroup: { [groupName: string]: number } = {};\n    const bucketSize = Math.round(simulatedValuesThisYear.length / NUMBER_OF_BUCKETS);\n    const buckets: IBucket[] = [];\n\n    for (let i = 0; i < simulatedValuesThisYear.length; i += bucketSize) {\n        const bucket: IBucket = {\n            max: Number.MIN_VALUE,\n            min: Number.MAX_VALUE,\n            subBuckets: {}\n        };\n\n        for (let j = i; j < i + bucketSize; ++j) {\n            const value = simulatedValuesThisYear[j];\n            bucket.min = Math.min(bucket.min, value);\n            bucket.max = Math.max(bucket.max, value);\n\n            const group = groupForValue(simulatedValuesThisYear[j], groups);\n            valuesByGroup[group.name] = (valuesByGroup[group.name] || 0) + 1;\n            const subBucket = bucket.subBuckets[group.name] = bucket.subBuckets[group.name] || { group: group.name, max: Number.MIN_VALUE, min: Number.MAX_VALUE };\n            subBucket.min = Math.min(subBucket.min, value);\n            subBucket.max = Math.max(subBucket.max, value);\n        }\n\n        buckets.push(bucket);\n    }\n\n    const nonEmptyGroups = groups.filter(group => !!valuesByGroup[group.name]);\n    nonEmptyGroups.forEach(group => group.percentage = valuesByGroup[group.name] / simulatedValuesThisYear.length);\n\n    const oneSixth = Math.round(simulatedValuesThisYear.length / 6);\n    return {\n        buckets,\n        groups: nonEmptyGroups,\n        max: simulatedValuesThisYear[simulatedValuesThisYear.length - 1],\n        median: median(simulatedValuesThisYear),\n        min: simulatedValuesThisYear[0],\n        project,\n        twoThird: {\n            max: simulatedValuesThisYear[simulatedValuesThisYear.length - oneSixth],\n            min: simulatedValuesThisYear[oneSixth]\n        }\n    };\n}\n\ndeclare const global: { simulation: { options: IInitializedMonteCarloSimulationOptions, env?: IMonteCarloEnvironment } };\n\nexport function parallelJSMonteCarlo(userOptions?: IMonteCarloSimulationOptions) {\n    const options = initializeOptions(userOptions);\n\n    // Array needs to be cloned, otherwise the original array is manipulated!\n    return new Parallel(options.projects.slice(), {\n            evalPath: \"./\" + require(\"file!paralleljs/lib/eval.js\"),\n            env: { options },\n            envNamespace: \"simulation\"\n        })\n        .require(\"https://raw.githubusercontent.com/mvarshney/simjs-source/master/src/random.js\") // the one from node uses module syntax\n        .require(createMonteCarloEnvironment)\n        .require(calculateProject)\n        .map(function (project: IProject): IProjectResult {\n            global.simulation.env = global.simulation.env || createMonteCarloEnvironment(global.simulation.options);\n            return calculateProject(project, global.simulation.env);\n        });\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/paralleljs/monte-carlo.ts","import {Pool, Done} from \"threads\";\nimport {Job} from \"threads\";\n\nexport interface ICoordinate {\n    readonly x: number;\n    readonly y: number;\n}\n\nexport interface IKnightTourEnvironment {\n    boardSize: number;\n    board: number[];\n}\n\nexport function knightTours({ startPath, boardSize }: {startPath: ICoordinate[], boardSize: number}, done: Done): void{\n    const moves = [\n        { x: -2, y: -1 }, { x: -2, y: 1}, { x: -1, y: -2 }, { x: -1, y: 2 },\n        { x: 1, y: -2 }, { x: 1, y: 2}, { x: 2, y: -1 }, { x: 2, y: 1 }\n    ];\n\n    const board: number[] = new Array(boardSize * boardSize);\n    board.fill(0);\n\n    const numberOfFields = boardSize * boardSize;\n    let results: number = 0;\n    const stack: { coordinate: ICoordinate, n: number }[] = startPath.map((pos, index) => ({ coordinate: pos, n: index + 1 }));\n\n    for (let index = 0; index < startPath.length - 1; ++index) {\n        const fieldIndex = startPath[index].x * boardSize + startPath[index].y;\n        board[fieldIndex] = index + 1;\n    }\n\n    while (stack.length > 0) {\n        const { coordinate, n } = stack[stack.length - 1];\n        const fieldIndex = coordinate.x * boardSize + coordinate.y;\n\n        if (board[fieldIndex] !== 0) {\n            // back tracking\n            board[fieldIndex] = 0;\n            stack.pop(); // remove current value\n            continue;\n        }\n\n        // entry\n        if (n === numberOfFields) {\n            ++results;\n            stack.pop();\n            continue;\n        }\n\n        board[fieldIndex] = n!;\n\n        for (let i = 0; i < moves.length; ++i) {\n            const move = moves[i];\n            const successor = { x: coordinate.x + move.x, y: coordinate.y + move.y };\n            // not outside of board and not yet accessed\n            const accessible = successor.x >= 0 && successor.y >= 0 && successor.x < boardSize &&  successor.y < boardSize && board[successor.x * boardSize + successor.y] === 0;\n\n            if (accessible) {\n                stack.push({ coordinate: successor, n: n + 1 });\n            }\n        }\n    }\n\n    done(results);\n}\n\nexport function threadsKnightTours(start: ICoordinate, boardSize: number, pool: Pool): PromiseLike<number> {\n\n    function successors(coordinate: ICoordinate) {\n        const moves = [\n            {x: -2, y: -1}, {x: -2, y: 1}, {x: -1, y: -2}, {x: -1, y: 2},\n            {x: 1, y: -2}, {x: 1, y: 2}, {x: 2, y: -1}, {x: 2, y: 1}\n        ];\n        const result: ICoordinate[] = [];\n\n        for (let i = 0; i < moves.length; ++i) {\n            const move = moves[i];\n            const successor = {x: coordinate.x + move.x, y: coordinate.y + move.y};\n            const accessible = successor.x >= 0 && successor.y >= 0 && successor.x < boardSize && successor.y < boardSize &&\n                (successor.x !== start.x || successor.y !== start.y) && (successor.x !== coordinate.x && successor.y !== coordinate.y);\n            if (accessible) {\n                result.push(successor);\n            }\n        }\n\n        return result;\n    }\n\n    function computeStartFields() {\n        const result: ICoordinate[][] = [];\n        for (const directSuccessor of successors(start)) {\n            for (const indirectSuccessor of successors(directSuccessor)) {\n                result.push([start, directSuccessor, indirectSuccessor]);\n            }\n        }\n        return result;\n    }\n\n    let resolve: (value: number) => void;\n    let reject: (error: any) => void;\n    const promise = new Promise((_resolve, _reject) => {\n        resolve = _resolve;\n        reject = _reject;\n    });\n\n    let totalTours = 0;\n    pool.run(knightTours)\n        .on(\"done\", (job: Job, tours: number) => totalTours += tours)\n        .on(\"finished\", () => {\n            resolve(totalTours)\n        });\n\n    for (const startPath of computeStartFields()) {\n        pool.send({ startPath, boardSize });\n    }\n\n    return promise;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/threads/knights-tour.ts","import {Pool, Done} from \"threads\";\nimport * as _ from \"lodash\";\n\nexport interface IComplexNumber {\n    i: number;\n    real: number;\n}\n\nexport interface IMandelbrotOptions {\n    imageHeight: number;\n    imageWidth: number;\n    iterations: number;\n    max: IComplexNumber;\n    min: IComplexNumber;\n    scalingFactor: IComplexNumber;\n}\n\nexport function computeMandelbrotLine({ y, options}: { y: number, options: IMandelbrotOptions}, done: Done): void{\n    function calculateZ(c: IComplexNumber): number {\n        const z = { i: c.i, real: c.real };\n        let n = 0;\n\n        for (; n < options.iterations; ++n) {\n            if (z.real ** 2 + z.i ** 2 > 4) {\n                break;\n            }\n\n            // z ** 2 + c\n            const zI = z.i;\n            z.i = 2 * z.real * z.i + c.i;\n            z.real = z.real ** 2 - zI ** 2 + c.real;\n        }\n\n        return n;\n    }\n\n    const line = new Uint8ClampedArray(options.imageWidth * 4);\n    const cI = options.max.i - y * options.scalingFactor.i;\n\n    for (let x = 0; x < options.imageWidth; ++x) {\n        const c = {\n            i: cI,\n            real: options.min.real + x * options.scalingFactor.real\n        };\n\n        const n = calculateZ(c);\n        const base = x * 4;\n        /* tslint:disable:no-bitwise */\n        line[base] = n & 0xFF;\n        line[base + 1] = n & 0xFF00;\n        line[base + 2] = n & 0xFF0000;\n        line[base + 3] = 255;\n    }\n    done.transfer(line, [line.buffer]);\n}\n\nexport function threadsMandelbrot(mandelbrotOptions: IMandelbrotOptions, pool: Pool) {\n    const promises: PromiseLike<Uint8ClampedArray>[] = [];\n    pool.run(computeMandelbrotLine);\n\n    const lines = _.range(mandelbrotOptions.imageHeight);\n    for (const line of lines) {\n        promises.push(pool.send({y: line, options: mandelbrotOptions}).promise());\n    }\n\n    return Promise.all(promises);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/threads/mandelbrot.ts","import {Pool, Done} from \"threads\";\nimport {Dictionary} from \"lodash\";\n\nexport interface IProject {\n    startYear: number;\n    totalAmount: number;\n}\n\ninterface IBucket {\n    min: number;\n    max: number;\n\n    subBuckets: { [groupName: string]: { group: string; min: number, max: number } };\n}\n\ninterface IGroup {\n    /**\n     * The unique name of this group\n     */\n    name: string;\n\n    /**\n     * The description of the group\n     */\n    description: string;\n\n    /**\n     * Should a separator line been drawn for this group?\n     */\n    separator: boolean;\n\n    /**\n     * Whats the percentage of values in this group to the total number of simulated values\n     */\n    percentage: number;\n\n    /**\n     * Whats the minimum value that is still part of this group\n     */\n    from?: number;\n    /**\n     * Whats the maximum value (exclusive) that defines the upper end of this group\n     */\n    to?: number;\n}\n\nexport interface IProjectResult {\n    /**\n     * The minimal simulated value for this project\n     */\n    min: number;\n    /**\n     * The maximal simulated value\n     */\n    max: number;\n\n    /** The median of the values found for this project\n     */\n    median: number;\n\n    /**\n     * Defines where the 2/3 of the simulated values start / end.\n     */\n    twoThird: {\n        min: number;\n        max: number;\n    };\n\n    buckets: IBucket[];\n\n    groups: IGroup[];\n\n    /**\n     * The project\n     */\n    project: IProject;\n}\n\ninterface IMonteCarloEnvironment {\n    investmentAmount: number;\n    liquidity: number;\n    noInterestReferenceLine: number[];\n    numRuns: number;\n    numYears: number;\n    projectsByStartYear: Dictionary<IProject[]>;\n    simulatedValues: number[][];\n}\n\nexport interface IMonteCarloSimulationOptions {\n    numYears?: number;\n    numRuns?: number;\n    projects?: IProject[];\n    investmentAmount?: number;\n    performance?: number;\n    seed?: number;\n    volatility: number;\n    liquidity?: number;\n}\n\ninterface IInitializedMonteCarloSimulationOptions {\n    numYears: number;\n    numRuns: number;\n    projects: IProject[];\n    investmentAmount: number;\n    performance: number;\n    seed?: number;\n    taskIndex?: number;\n    valuesPerWorker?: number;\n    liquidity: number;\n    volatility: number;\n}\n\nfunction initializeOptions(options?: IMonteCarloSimulationOptions): IInitializedMonteCarloSimulationOptions {\n    return Object.assign({}, {\n        investmentAmount: 1000000,\n        liquidity: 10000,\n        numRuns: 10000,\n        numYears: 10,\n        performance: 0,\n        projects: [],\n        seed: undefined,\n        volatility: 0.01\n    }, options);\n}\n\ninterface IMonteCarloSimulation {\n    environment?: IMonteCarloEnvironment;\n}\n\nfunction calculateProject(this: IMonteCarloSimulation, { project, options}: { project: IProject, options: IInitializedMonteCarloSimulationOptions}, done: Done): void {\n    const NUMBER_OF_BUCKETS = 10;\n    const environment = this.environment = this.environment || createMonteCarloEnvironment(options);\n\n    function createMonteCarloEnvironment(options: IInitializedMonteCarloSimulationOptions): IMonteCarloEnvironment {\n        const random = new (self as any).Random(10);\n\n        /**\n         * Performs the monte carlo simulation for all years and num runs.\n         * @param cashFlows the cash flows\n         * @returns {number[][]} the simulated outcomes grouped by year\n         */\n        function simulateOutcomes(cashFlows: number[], numYears: number): number[][]  {\n            function toAbsoluteIndices(indices: number[]) {\n                let currentPortfolioValue = options.investmentAmount;\n                let previousYearIndex = 100;\n\n                for (let relativeYear = 0; relativeYear < indices.length; ++relativeYear) {\n                    const currentYearIndex = indices[relativeYear];\n                    const cashFlowStartOfYear = relativeYear === 0 ? 0 : cashFlows[relativeYear - 1];\n\n                    // scale current value with performance gain according to index\n                    const performance = currentYearIndex / previousYearIndex;\n                    currentPortfolioValue = (currentPortfolioValue + cashFlowStartOfYear) * performance;\n\n                    indices[relativeYear] =  1 + random.normal(performance, options.volatility);\n\n                    previousYearIndex = currentYearIndex;\n                }\n\n                return indices;\n            }\n\n            const result: number[][] = new Array(options.numYears);\n            for (let year = 0; year <= numYears; ++year) {\n                result[year] = new Array(options.numRuns);\n            }\n\n            for (let run = 0; run < options.numRuns; run++) {\n                const indices = [100];\n\n                for (let i = 1; i <= numYears; i++) {\n                    // const randomPerformance = 1 + random.normal(options.performance, options.volatility);\n                    const randomPerformance = 1 + Math.random();\n                    indices.push(indices[i - 1] * randomPerformance);\n                }\n\n                // convert the relative values from above to absolute values.\n                toAbsoluteIndices(indices);\n\n                for (let year = 0; year < indices.length; ++year) {\n                    result[year][run] = indices[year];\n                }\n            }\n\n            return result;\n        }\n\n        function projectsToCashFlows() {\n            const cashFlows: number[] = [];\n            for (let year = 0; year < options.numYears; ++year) {\n                const projectsByThisYear = projectsByStartYear[year] || [];\n                const cashFlow = -projectsByThisYear.reduce((memo, project) => memo + project.totalAmount, 0);\n                cashFlows.push(cashFlow);\n            }\n            return cashFlows;\n        }\n\n        function calculateNoInterestReferenceLine(cashFlows: number[]) {\n            const noInterestReferenceLine: number[] = [];\n\n            let investmentAmountLeft = options.investmentAmount;\n            for (let year = 0; year < options.numYears; ++year) {\n                investmentAmountLeft = investmentAmountLeft + cashFlows[year];\n                noInterestReferenceLine.push(investmentAmountLeft);\n            }\n            return noInterestReferenceLine;\n        }\n\n        let projectsToSimulate: IProject[] = options.projects;\n\n        if (options.taskIndex && options.valuesPerWorker) {\n            projectsToSimulate = options.projects.slice(options.taskIndex * options.valuesPerWorker, (options.taskIndex + 1) * options.valuesPerWorker);\n        }\n\n        const projects = options.projects.sort((a, b) => a.startYear - b.startYear);\n\n        // Group projects by startYear, use lodash groupBy instead\n        const projectsByStartYear: Dictionary<IProject[]> = {};\n        for (const project of projects) {\n            const arr = projectsByStartYear[project.startYear] = projectsByStartYear[project.startYear] || [];\n            arr.push(project);\n        }\n\n        const cashFlows = projectsToCashFlows();\n        const noInterestReferenceLine = calculateNoInterestReferenceLine(cashFlows);\n\n        const numYears = projectsToSimulate.reduce((memo, project) => Math.max(memo, project.startYear), 0);\n\n        return {\n            investmentAmount: options.investmentAmount,\n            liquidity: options.liquidity,\n            noInterestReferenceLine,\n            numRuns: options.numRuns,\n            numYears,\n            projectsByStartYear,\n            simulatedValues: simulateOutcomes(cashFlows, numYears)\n        };\n    }\n\n    function groupForValue(value: number, groups: IGroup[]): IGroup {\n        return groups.find(group => (typeof group.from === \"undefined\" || group.from <= value) && (typeof group.to === \"undefined\" || group.to > value))!;\n    }\n\n    function createGroups(requiredAmount: number, noInterestReference: number): IGroup[] {\n        return [\n            { description: \"Ziel erreichbar\", from: requiredAmount, name: \"green\", percentage: 0, separator: true},\n            { description: \"mit Zusatzliquidität erreichbar\", from: requiredAmount - environment.liquidity, name: \"yellow\", percentage: 0, separator: true, to: requiredAmount },\n            { description: \"nicht erreichbar\", from: noInterestReference, name: \"gray\", percentage: 0, separator: false, to: requiredAmount - environment.liquidity },\n            { description: \"nicht erreichbar, mit Verlust\", name: \"red\", percentage: 0, separator: false, to: noInterestReference }\n        ];\n    }\n\n    function calculateRequiredAmount() {\n        let amount = project.totalAmount;\n        const projectsSameYear = environment.projectsByStartYear[project.startYear];\n\n        for (const otherProject of projectsSameYear) {\n            if (otherProject === project) {\n                break;\n            }\n            amount += otherProject.totalAmount;\n        }\n        return amount;\n    }\n\n    function median(values: number[]) {\n        const half = Math.floor(values.length / 2);\n\n        if (values.length % 2) {\n            return values[half];\n        }\n\n        return (values[half - 1] + values[half]) / 2.0;\n    }\n\n\n    const requiredAmount = calculateRequiredAmount();\n    const simulatedValuesThisYear = environment.simulatedValues[project.startYear];\n    simulatedValuesThisYear.sort((a, b) => a - b);\n\n    const groups = createGroups(requiredAmount, environment.noInterestReferenceLine[project.startYear]);\n    const valuesByGroup: { [groupName: string]: number } = {};\n    const bucketSize = Math.round(simulatedValuesThisYear.length / NUMBER_OF_BUCKETS);\n    const buckets: IBucket[] = [];\n\n    for (let i = 0; i < simulatedValuesThisYear.length; i += bucketSize) {\n        const bucket: IBucket = {\n            max: Number.MIN_VALUE,\n            min: Number.MAX_VALUE,\n            subBuckets: {}\n        };\n\n        for (let j = i; j < i + bucketSize; ++j) {\n            const value = simulatedValuesThisYear[j];\n            bucket.min = Math.min(bucket.min, value);\n            bucket.max = Math.max(bucket.max, value);\n\n            const group = groupForValue(simulatedValuesThisYear[j], groups);\n            valuesByGroup[group.name] = (valuesByGroup[group.name] || 0) + 1;\n            const subBucket = bucket.subBuckets[group.name] = bucket.subBuckets[group.name] || { group: group.name, max: Number.MIN_VALUE, min: Number.MAX_VALUE };\n            subBucket.min = Math.min(subBucket.min, value);\n            subBucket.max = Math.max(subBucket.max, value);\n        }\n\n        buckets.push(bucket);\n    }\n\n    const nonEmptyGroups = groups.filter(group => !!valuesByGroup[group.name]);\n    nonEmptyGroups.forEach(group => group.percentage = valuesByGroup[group.name] / simulatedValuesThisYear.length);\n\n    const oneSixth = Math.round(simulatedValuesThisYear.length / 6);\n    done({\n        buckets,\n        groups: nonEmptyGroups,\n        max: simulatedValuesThisYear[simulatedValuesThisYear.length - 1],\n        median: median(simulatedValuesThisYear),\n        min: simulatedValuesThisYear[0],\n        project,\n        twoThird: {\n            max: simulatedValuesThisYear[simulatedValuesThisYear.length - oneSixth],\n            min: simulatedValuesThisYear[oneSixth]\n        }\n    });\n}\n\nexport function threadsMonteCarlo(userOptions: IMonteCarloSimulationOptions, pool: Pool) {\n    const options = initializeOptions(userOptions);\n\n    const jobs: PromiseLike<IProjectResult>[] = [];\n    pool.run(calculateProject, [ \"https://raw.githubusercontent.com/mvarshney/simjs-source/master/src/random.js\" ]);\n\n    for (const project of options.projects) {\n        jobs.push(pool.send({ options, project }).promise());\n    }\n\n    return Promise.all(jobs);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/threads/monte-carlo.ts","/*!\n * Benchmark.js <https://benchmarkjs.com/>\n * Copyright 2010-2016 Mathias Bynens <https://mths.be/>\n * Based on JSLitmus.js, copyright Robert Kieffer <http://broofa.com/>\n * Modified by John-David Dalton <http://allyoucanleet.com/>\n * Available under MIT license <https://mths.be/mit>\n */\n;(function() {\n  'use strict';\n\n  /** Used as a safe reference for `undefined` in pre ES5 environments. */\n  var undefined;\n\n  /** Used to determine if values are of the language type Object. */\n  var objectTypes = {\n    'function': true,\n    'object': true\n  };\n\n  /** Used as a reference to the global object. */\n  var root = (objectTypes[typeof window] && window) || this;\n\n  /** Detect free variable `define`. */\n  var freeDefine = typeof define == 'function' && typeof define.amd == 'object' && define.amd && define;\n\n  /** Detect free variable `exports`. */\n  var freeExports = objectTypes[typeof exports] && exports && !exports.nodeType && exports;\n\n  /** Detect free variable `module`. */\n  var freeModule = objectTypes[typeof module] && module && !module.nodeType && module;\n\n  /** Detect free variable `global` from Node.js or Browserified code and use it as `root`. */\n  var freeGlobal = freeExports && freeModule && typeof global == 'object' && global;\n  if (freeGlobal && (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal || freeGlobal.self === freeGlobal)) {\n    root = freeGlobal;\n  }\n\n  /** Detect free variable `require`. */\n  var freeRequire = typeof require == 'function' && require;\n\n  /** Used to assign each benchmark an incremented id. */\n  var counter = 0;\n\n  /** Detect the popular CommonJS extension `module.exports`. */\n  var moduleExports = freeModule && freeModule.exports === freeExports && freeExports;\n\n  /** Used to detect primitive types. */\n  var rePrimitive = /^(?:boolean|number|string|undefined)$/;\n\n  /** Used to make every compiled test unique. */\n  var uidCounter = 0;\n\n  /** Used to assign default `context` object properties. */\n  var contextProps = [\n    'Array', 'Date', 'Function', 'Math', 'Object', 'RegExp', 'String', '_',\n    'clearTimeout', 'chrome', 'chromium', 'document', 'navigator', 'phantom',\n    'platform', 'process', 'runtime', 'setTimeout'\n  ];\n\n  /** Used to avoid hz of Infinity. */\n  var divisors = {\n    '1': 4096,\n    '2': 512,\n    '3': 64,\n    '4': 8,\n    '5': 0\n  };\n\n  /**\n   * T-Distribution two-tailed critical values for 95% confidence.\n   * For more info see http://www.itl.nist.gov/div898/handbook/eda/section3/eda3672.htm.\n   */\n  var tTable = {\n    '1':  12.706, '2':  4.303, '3':  3.182, '4':  2.776, '5':  2.571, '6':  2.447,\n    '7':  2.365,  '8':  2.306, '9':  2.262, '10': 2.228, '11': 2.201, '12': 2.179,\n    '13': 2.16,   '14': 2.145, '15': 2.131, '16': 2.12,  '17': 2.11,  '18': 2.101,\n    '19': 2.093,  '20': 2.086, '21': 2.08,  '22': 2.074, '23': 2.069, '24': 2.064,\n    '25': 2.06,   '26': 2.056, '27': 2.052, '28': 2.048, '29': 2.045, '30': 2.042,\n    'infinity': 1.96\n  };\n\n  /**\n   * Critical Mann-Whitney U-values for 95% confidence.\n   * For more info see http://www.saburchill.com/IBbiology/stats/003.html.\n   */\n  var uTable = {\n    '5':  [0, 1, 2],\n    '6':  [1, 2, 3, 5],\n    '7':  [1, 3, 5, 6, 8],\n    '8':  [2, 4, 6, 8, 10, 13],\n    '9':  [2, 4, 7, 10, 12, 15, 17],\n    '10': [3, 5, 8, 11, 14, 17, 20, 23],\n    '11': [3, 6, 9, 13, 16, 19, 23, 26, 30],\n    '12': [4, 7, 11, 14, 18, 22, 26, 29, 33, 37],\n    '13': [4, 8, 12, 16, 20, 24, 28, 33, 37, 41, 45],\n    '14': [5, 9, 13, 17, 22, 26, 31, 36, 40, 45, 50, 55],\n    '15': [5, 10, 14, 19, 24, 29, 34, 39, 44, 49, 54, 59, 64],\n    '16': [6, 11, 15, 21, 26, 31, 37, 42, 47, 53, 59, 64, 70, 75],\n    '17': [6, 11, 17, 22, 28, 34, 39, 45, 51, 57, 63, 67, 75, 81, 87],\n    '18': [7, 12, 18, 24, 30, 36, 42, 48, 55, 61, 67, 74, 80, 86, 93, 99],\n    '19': [7, 13, 19, 25, 32, 38, 45, 52, 58, 65, 72, 78, 85, 92, 99, 106, 113],\n    '20': [8, 14, 20, 27, 34, 41, 48, 55, 62, 69, 76, 83, 90, 98, 105, 112, 119, 127],\n    '21': [8, 15, 22, 29, 36, 43, 50, 58, 65, 73, 80, 88, 96, 103, 111, 119, 126, 134, 142],\n    '22': [9, 16, 23, 30, 38, 45, 53, 61, 69, 77, 85, 93, 101, 109, 117, 125, 133, 141, 150, 158],\n    '23': [9, 17, 24, 32, 40, 48, 56, 64, 73, 81, 89, 98, 106, 115, 123, 132, 140, 149, 157, 166, 175],\n    '24': [10, 17, 25, 33, 42, 50, 59, 67, 76, 85, 94, 102, 111, 120, 129, 138, 147, 156, 165, 174, 183, 192],\n    '25': [10, 18, 27, 35, 44, 53, 62, 71, 80, 89, 98, 107, 117, 126, 135, 145, 154, 163, 173, 182, 192, 201, 211],\n    '26': [11, 19, 28, 37, 46, 55, 64, 74, 83, 93, 102, 112, 122, 132, 141, 151, 161, 171, 181, 191, 200, 210, 220, 230],\n    '27': [11, 20, 29, 38, 48, 57, 67, 77, 87, 97, 107, 118, 125, 138, 147, 158, 168, 178, 188, 199, 209, 219, 230, 240, 250],\n    '28': [12, 21, 30, 40, 50, 60, 70, 80, 90, 101, 111, 122, 132, 143, 154, 164, 175, 186, 196, 207, 218, 228, 239, 250, 261, 272],\n    '29': [13, 22, 32, 42, 52, 62, 73, 83, 94, 105, 116, 127, 138, 149, 160, 171, 182, 193, 204, 215, 226, 238, 249, 260, 271, 282, 294],\n    '30': [13, 23, 33, 43, 54, 65, 76, 87, 98, 109, 120, 131, 143, 154, 166, 177, 189, 200, 212, 223, 235, 247, 258, 270, 282, 293, 305, 317]\n  };\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Create a new `Benchmark` function using the given `context` object.\n   *\n   * @static\n   * @memberOf Benchmark\n   * @param {Object} [context=root] The context object.\n   * @returns {Function} Returns a new `Benchmark` function.\n   */\n  function runInContext(context) {\n    // Exit early if unable to acquire lodash.\n    var _ = context && context._ || require('lodash') || root._;\n    if (!_) {\n      Benchmark.runInContext = runInContext;\n      return Benchmark;\n    }\n    // Avoid issues with some ES3 environments that attempt to use values, named\n    // after built-in constructors like `Object`, for the creation of literals.\n    // ES5 clears this up by stating that literals must use built-in constructors.\n    // See http://es5.github.io/#x11.1.5.\n    context = context ? _.defaults(root.Object(), context, _.pick(root, contextProps)) : root;\n\n    /** Native constructor references. */\n    var Array = context.Array,\n        Date = context.Date,\n        Function = context.Function,\n        Math = context.Math,\n        Object = context.Object,\n        RegExp = context.RegExp,\n        String = context.String;\n\n    /** Used for `Array` and `Object` method references. */\n    var arrayRef = [],\n        objectProto = Object.prototype;\n\n    /** Native method shortcuts. */\n    var abs = Math.abs,\n        clearTimeout = context.clearTimeout,\n        floor = Math.floor,\n        log = Math.log,\n        max = Math.max,\n        min = Math.min,\n        pow = Math.pow,\n        push = arrayRef.push,\n        setTimeout = context.setTimeout,\n        shift = arrayRef.shift,\n        slice = arrayRef.slice,\n        sqrt = Math.sqrt,\n        toString = objectProto.toString,\n        unshift = arrayRef.unshift;\n\n    /** Used to avoid inclusion in Browserified bundles. */\n    var req = require;\n\n    /** Detect DOM document object. */\n    var doc = isHostType(context, 'document') && context.document;\n\n    /** Used to access Wade Simmons' Node.js `microtime` module. */\n    var microtimeObject = req('microtime');\n\n    /** Used to access Node.js's high resolution timer. */\n    var processObject = isHostType(context, 'process') && context.process;\n\n    /** Used to prevent a `removeChild` memory leak in IE < 9. */\n    var trash = doc && doc.createElement('div');\n\n    /** Used to integrity check compiled tests. */\n    var uid = 'uid' + _.now();\n\n    /** Used to avoid infinite recursion when methods call each other. */\n    var calledBy = {};\n\n    /**\n     * An object used to flag environments/features.\n     *\n     * @static\n     * @memberOf Benchmark\n     * @type Object\n     */\n    var support = {};\n\n    (function() {\n\n      /**\n       * Detect if running in a browser environment.\n       *\n       * @memberOf Benchmark.support\n       * @type boolean\n       */\n      support.browser = doc && isHostType(context, 'navigator') && !isHostType(context, 'phantom');\n\n      /**\n       * Detect if the Timers API exists.\n       *\n       * @memberOf Benchmark.support\n       * @type boolean\n       */\n      support.timeout = isHostType(context, 'setTimeout') && isHostType(context, 'clearTimeout');\n\n      /**\n       * Detect if function decompilation is support.\n       *\n       * @name decompilation\n       * @memberOf Benchmark.support\n       * @type boolean\n       */\n      try {\n        // Safari 2.x removes commas in object literals from `Function#toString` results.\n        // See http://webk.it/11609 for more details.\n        // Firefox 3.6 and Opera 9.25 strip grouping parentheses from `Function#toString` results.\n        // See http://bugzil.la/559438 for more details.\n        support.decompilation = Function(\n          ('return (' + (function(x) { return { 'x': '' + (1 + x) + '', 'y': 0 }; }) + ')')\n          // Avoid issues with code added by Istanbul.\n          .replace(/__cov__[^;]+;/g, '')\n        )()(0).x === '1';\n      } catch(e) {\n        support.decompilation = false;\n      }\n    }());\n\n    /**\n     * Timer object used by `clock()` and `Deferred#resolve`.\n     *\n     * @private\n     * @type Object\n     */\n    var timer = {\n\n      /**\n       * The timer namespace object or constructor.\n       *\n       * @private\n       * @memberOf timer\n       * @type {Function|Object}\n       */\n      'ns': Date,\n\n      /**\n       * Starts the deferred timer.\n       *\n       * @private\n       * @memberOf timer\n       * @param {Object} deferred The deferred instance.\n       */\n      'start': null, // Lazy defined in `clock()`.\n\n      /**\n       * Stops the deferred timer.\n       *\n       * @private\n       * @memberOf timer\n       * @param {Object} deferred The deferred instance.\n       */\n      'stop': null // Lazy defined in `clock()`.\n    };\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The Benchmark constructor.\n     *\n     * Note: The Benchmark constructor exposes a handful of lodash methods to\n     * make working with arrays, collections, and objects easier. The lodash\n     * methods are:\n     * [`each/forEach`](https://lodash.com/docs#forEach), [`forOwn`](https://lodash.com/docs#forOwn),\n     * [`has`](https://lodash.com/docs#has), [`indexOf`](https://lodash.com/docs#indexOf),\n     * [`map`](https://lodash.com/docs#map), and [`reduce`](https://lodash.com/docs#reduce)\n     *\n     * @constructor\n     * @param {string} name A name to identify the benchmark.\n     * @param {Function|string} fn The test to benchmark.\n     * @param {Object} [options={}] Options object.\n     * @example\n     *\n     * // basic usage (the `new` operator is optional)\n     * var bench = new Benchmark(fn);\n     *\n     * // or using a name first\n     * var bench = new Benchmark('foo', fn);\n     *\n     * // or with options\n     * var bench = new Benchmark('foo', fn, {\n     *\n     *   // displayed by `Benchmark#toString` if `name` is not available\n     *   'id': 'xyz',\n     *\n     *   // called when the benchmark starts running\n     *   'onStart': onStart,\n     *\n     *   // called after each run cycle\n     *   'onCycle': onCycle,\n     *\n     *   // called when aborted\n     *   'onAbort': onAbort,\n     *\n     *   // called when a test errors\n     *   'onError': onError,\n     *\n     *   // called when reset\n     *   'onReset': onReset,\n     *\n     *   // called when the benchmark completes running\n     *   'onComplete': onComplete,\n     *\n     *   // compiled/called before the test loop\n     *   'setup': setup,\n     *\n     *   // compiled/called after the test loop\n     *   'teardown': teardown\n     * });\n     *\n     * // or name and options\n     * var bench = new Benchmark('foo', {\n     *\n     *   // a flag to indicate the benchmark is deferred\n     *   'defer': true,\n     *\n     *   // benchmark test function\n     *   'fn': function(deferred) {\n     *     // call `Deferred#resolve` when the deferred test is finished\n     *     deferred.resolve();\n     *   }\n     * });\n     *\n     * // or options only\n     * var bench = new Benchmark({\n     *\n     *   // benchmark name\n     *   'name': 'foo',\n     *\n     *   // benchmark test as a string\n     *   'fn': '[1,2,3,4].sort()'\n     * });\n     *\n     * // a test's `this` binding is set to the benchmark instance\n     * var bench = new Benchmark('foo', function() {\n     *   'My name is '.concat(this.name); // \"My name is foo\"\n     * });\n     */\n    function Benchmark(name, fn, options) {\n      var bench = this;\n\n      // Allow instance creation without the `new` operator.\n      if (!(bench instanceof Benchmark)) {\n        return new Benchmark(name, fn, options);\n      }\n      // Juggle arguments.\n      if (_.isPlainObject(name)) {\n        // 1 argument (options).\n        options = name;\n      }\n      else if (_.isFunction(name)) {\n        // 2 arguments (fn, options).\n        options = fn;\n        fn = name;\n      }\n      else if (_.isPlainObject(fn)) {\n        // 2 arguments (name, options).\n        options = fn;\n        fn = null;\n        bench.name = name;\n      }\n      else {\n        // 3 arguments (name, fn [, options]).\n        bench.name = name;\n      }\n      setOptions(bench, options);\n\n      bench.id || (bench.id = ++counter);\n      bench.fn == null && (bench.fn = fn);\n\n      bench.stats = cloneDeep(bench.stats);\n      bench.times = cloneDeep(bench.times);\n    }\n\n    /**\n     * The Deferred constructor.\n     *\n     * @constructor\n     * @memberOf Benchmark\n     * @param {Object} clone The cloned benchmark instance.\n     */\n    function Deferred(clone) {\n      var deferred = this;\n      if (!(deferred instanceof Deferred)) {\n        return new Deferred(clone);\n      }\n      deferred.benchmark = clone;\n      clock(deferred);\n    }\n\n    /**\n     * The Event constructor.\n     *\n     * @constructor\n     * @memberOf Benchmark\n     * @param {Object|string} type The event type.\n     */\n    function Event(type) {\n      var event = this;\n      if (type instanceof Event) {\n        return type;\n      }\n      return (event instanceof Event)\n        ? _.assign(event, { 'timeStamp': _.now() }, typeof type == 'string' ? { 'type': type } : type)\n        : new Event(type);\n    }\n\n    /**\n     * The Suite constructor.\n     *\n     * Note: Each Suite instance has a handful of wrapped lodash methods to\n     * make working with Suites easier. The wrapped lodash methods are:\n     * [`each/forEach`](https://lodash.com/docs#forEach), [`indexOf`](https://lodash.com/docs#indexOf),\n     * [`map`](https://lodash.com/docs#map), and [`reduce`](https://lodash.com/docs#reduce)\n     *\n     * @constructor\n     * @memberOf Benchmark\n     * @param {string} name A name to identify the suite.\n     * @param {Object} [options={}] Options object.\n     * @example\n     *\n     * // basic usage (the `new` operator is optional)\n     * var suite = new Benchmark.Suite;\n     *\n     * // or using a name first\n     * var suite = new Benchmark.Suite('foo');\n     *\n     * // or with options\n     * var suite = new Benchmark.Suite('foo', {\n     *\n     *   // called when the suite starts running\n     *   'onStart': onStart,\n     *\n     *   // called between running benchmarks\n     *   'onCycle': onCycle,\n     *\n     *   // called when aborted\n     *   'onAbort': onAbort,\n     *\n     *   // called when a test errors\n     *   'onError': onError,\n     *\n     *   // called when reset\n     *   'onReset': onReset,\n     *\n     *   // called when the suite completes running\n     *   'onComplete': onComplete\n     * });\n     */\n    function Suite(name, options) {\n      var suite = this;\n\n      // Allow instance creation without the `new` operator.\n      if (!(suite instanceof Suite)) {\n        return new Suite(name, options);\n      }\n      // Juggle arguments.\n      if (_.isPlainObject(name)) {\n        // 1 argument (options).\n        options = name;\n      } else {\n        // 2 arguments (name [, options]).\n        suite.name = name;\n      }\n      setOptions(suite, options);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * A specialized version of `_.cloneDeep` which only clones arrays and plain\n     * objects assigning all other values by reference.\n     *\n     * @private\n     * @param {*} value The value to clone.\n     * @returns {*} The cloned value.\n     */\n    var cloneDeep = _.partial(_.cloneDeepWith, _, function(value) {\n      // Only clone primitives, arrays, and plain objects.\n      return (_.isObject(value) && !_.isArray(value) && !_.isPlainObject(value))\n        ? value\n        : undefined;\n    });\n\n    /**\n     * Creates a function from the given arguments string and body.\n     *\n     * @private\n     * @param {string} args The comma separated function arguments.\n     * @param {string} body The function body.\n     * @returns {Function} The new function.\n     */\n    function createFunction() {\n      // Lazy define.\n      createFunction = function(args, body) {\n        var result,\n            anchor = freeDefine ? freeDefine.amd : Benchmark,\n            prop = uid + 'createFunction';\n\n        runScript((freeDefine ? 'define.amd.' : 'Benchmark.') + prop + '=function(' + args + '){' + body + '}');\n        result = anchor[prop];\n        delete anchor[prop];\n        return result;\n      };\n      // Fix JaegerMonkey bug.\n      // For more information see http://bugzil.la/639720.\n      createFunction = support.browser && (createFunction('', 'return\"' + uid + '\"') || _.noop)() == uid ? createFunction : Function;\n      return createFunction.apply(null, arguments);\n    }\n\n    /**\n     * Delay the execution of a function based on the benchmark's `delay` property.\n     *\n     * @private\n     * @param {Object} bench The benchmark instance.\n     * @param {Object} fn The function to execute.\n     */\n    function delay(bench, fn) {\n      bench._timerId = _.delay(fn, bench.delay * 1e3);\n    }\n\n    /**\n     * Destroys the given element.\n     *\n     * @private\n     * @param {Element} element The element to destroy.\n     */\n    function destroyElement(element) {\n      trash.appendChild(element);\n      trash.innerHTML = '';\n    }\n\n    /**\n     * Gets the name of the first argument from a function's source.\n     *\n     * @private\n     * @param {Function} fn The function.\n     * @returns {string} The argument name.\n     */\n    function getFirstArgument(fn) {\n      return (!_.has(fn, 'toString') &&\n        (/^[\\s(]*function[^(]*\\(([^\\s,)]+)/.exec(fn) || 0)[1]) || '';\n    }\n\n    /**\n     * Computes the arithmetic mean of a sample.\n     *\n     * @private\n     * @param {Array} sample The sample.\n     * @returns {number} The mean.\n     */\n    function getMean(sample) {\n      return (_.reduce(sample, function(sum, x) {\n        return sum + x;\n      }) / sample.length) || 0;\n    }\n\n    /**\n     * Gets the source code of a function.\n     *\n     * @private\n     * @param {Function} fn The function.\n     * @returns {string} The function's source code.\n     */\n    function getSource(fn) {\n      var result = '';\n      if (isStringable(fn)) {\n        result = String(fn);\n      } else if (support.decompilation) {\n        // Escape the `{` for Firefox 1.\n        result = _.result(/^[^{]+\\{([\\s\\S]*)\\}\\s*$/.exec(fn), 1);\n      }\n      // Trim string.\n      result = (result || '').replace(/^\\s+|\\s+$/g, '');\n\n      // Detect strings containing only the \"use strict\" directive.\n      return /^(?:\\/\\*+[\\w\\W]*?\\*\\/|\\/\\/.*?[\\n\\r\\u2028\\u2029]|\\s)*([\"'])use strict\\1;?$/.test(result)\n        ? ''\n        : result;\n    }\n\n    /**\n     * Checks if an object is of the specified class.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {string} name The name of the class.\n     * @returns {boolean} Returns `true` if the value is of the specified class, else `false`.\n     */\n    function isClassOf(value, name) {\n      return value != null && toString.call(value) == '[object ' + name + ']';\n    }\n\n    /**\n     * Host objects can return type values that are different from their actual\n     * data type. The objects we are concerned with usually return non-primitive\n     * types of \"object\", \"function\", or \"unknown\".\n     *\n     * @private\n     * @param {*} object The owner of the property.\n     * @param {string} property The property to check.\n     * @returns {boolean} Returns `true` if the property value is a non-primitive, else `false`.\n     */\n    function isHostType(object, property) {\n      if (object == null) {\n        return false;\n      }\n      var type = typeof object[property];\n      return !rePrimitive.test(type) && (type != 'object' || !!object[property]);\n    }\n\n    /**\n     * Checks if a value can be safely coerced to a string.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if the value can be coerced, else `false`.\n     */\n    function isStringable(value) {\n      return _.isString(value) || (_.has(value, 'toString') && _.isFunction(value.toString));\n    }\n\n    /**\n     * A wrapper around `require` to suppress `module missing` errors.\n     *\n     * @private\n     * @param {string} id The module id.\n     * @returns {*} The exported module or `null`.\n     */\n    function require(id) {\n      try {\n        var result = freeExports && freeRequire(id);\n      } catch(e) {}\n      return result || null;\n    }\n\n    /**\n     * Runs a snippet of JavaScript via script injection.\n     *\n     * @private\n     * @param {string} code The code to run.\n     */\n    function runScript(code) {\n      var anchor = freeDefine ? define.amd : Benchmark,\n          script = doc.createElement('script'),\n          sibling = doc.getElementsByTagName('script')[0],\n          parent = sibling.parentNode,\n          prop = uid + 'runScript',\n          prefix = '(' + (freeDefine ? 'define.amd.' : 'Benchmark.') + prop + '||function(){})();';\n\n      // Firefox 2.0.0.2 cannot use script injection as intended because it executes\n      // asynchronously, but that's OK because script injection is only used to avoid\n      // the previously commented JaegerMonkey bug.\n      try {\n        // Remove the inserted script *before* running the code to avoid differences\n        // in the expected script element count/order of the document.\n        script.appendChild(doc.createTextNode(prefix + code));\n        anchor[prop] = function() { destroyElement(script); };\n      } catch(e) {\n        parent = parent.cloneNode(false);\n        sibling = null;\n        script.text = code;\n      }\n      parent.insertBefore(script, sibling);\n      delete anchor[prop];\n    }\n\n    /**\n     * A helper function for setting options/event handlers.\n     *\n     * @private\n     * @param {Object} object The benchmark or suite instance.\n     * @param {Object} [options={}] Options object.\n     */\n    function setOptions(object, options) {\n      options = object.options = _.assign({}, cloneDeep(object.constructor.options), cloneDeep(options));\n\n      _.forOwn(options, function(value, key) {\n        if (value != null) {\n          // Add event listeners.\n          if (/^on[A-Z]/.test(key)) {\n            _.each(key.split(' '), function(key) {\n              object.on(key.slice(2).toLowerCase(), value);\n            });\n          } else if (!_.has(object, key)) {\n            object[key] = cloneDeep(value);\n          }\n        }\n      });\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Handles cycling/completing the deferred benchmark.\n     *\n     * @memberOf Benchmark.Deferred\n     */\n    function resolve() {\n      var deferred = this,\n          clone = deferred.benchmark,\n          bench = clone._original;\n\n      if (bench.aborted) {\n        // cycle() -> clone cycle/complete event -> compute()'s invoked bench.run() cycle/complete.\n        deferred.teardown();\n        clone.running = false;\n        cycle(deferred);\n      }\n      else if (++deferred.cycles < clone.count) {\n        clone.compiled.call(deferred, context, timer);\n      }\n      else {\n        timer.stop(deferred);\n        deferred.teardown();\n        delay(clone, function() { cycle(deferred); });\n      }\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * A generic `Array#filter` like method.\n     *\n     * @static\n     * @memberOf Benchmark\n     * @param {Array} array The array to iterate over.\n     * @param {Function|string} callback The function/alias called per iteration.\n     * @returns {Array} A new array of values that passed callback filter.\n     * @example\n     *\n     * // get odd numbers\n     * Benchmark.filter([1, 2, 3, 4, 5], function(n) {\n     *   return n % 2;\n     * }); // -> [1, 3, 5];\n     *\n     * // get fastest benchmarks\n     * Benchmark.filter(benches, 'fastest');\n     *\n     * // get slowest benchmarks\n     * Benchmark.filter(benches, 'slowest');\n     *\n     * // get benchmarks that completed without erroring\n     * Benchmark.filter(benches, 'successful');\n     */\n    function filter(array, callback) {\n      if (callback === 'successful') {\n        // Callback to exclude those that are errored, unrun, or have hz of Infinity.\n        callback = function(bench) {\n          return bench.cycles && _.isFinite(bench.hz) && !bench.error;\n        };\n      }\n      else if (callback === 'fastest' || callback === 'slowest') {\n        // Get successful, sort by period + margin of error, and filter fastest/slowest.\n        var result = filter(array, 'successful').sort(function(a, b) {\n          a = a.stats; b = b.stats;\n          return (a.mean + a.moe > b.mean + b.moe ? 1 : -1) * (callback === 'fastest' ? 1 : -1);\n        });\n\n        return _.filter(result, function(bench) {\n          return result[0].compare(bench) == 0;\n        });\n      }\n      return _.filter(array, callback);\n    }\n\n    /**\n     * Converts a number to a more readable comma-separated string representation.\n     *\n     * @static\n     * @memberOf Benchmark\n     * @param {number} number The number to convert.\n     * @returns {string} The more readable string representation.\n     */\n    function formatNumber(number) {\n      number = String(number).split('.');\n      return number[0].replace(/(?=(?:\\d{3})+$)(?!\\b)/g, ',') +\n        (number[1] ? '.' + number[1] : '');\n    }\n\n    /**\n     * Invokes a method on all items in an array.\n     *\n     * @static\n     * @memberOf Benchmark\n     * @param {Array} benches Array of benchmarks to iterate over.\n     * @param {Object|string} name The name of the method to invoke OR options object.\n     * @param {...*} [args] Arguments to invoke the method with.\n     * @returns {Array} A new array of values returned from each method invoked.\n     * @example\n     *\n     * // invoke `reset` on all benchmarks\n     * Benchmark.invoke(benches, 'reset');\n     *\n     * // invoke `emit` with arguments\n     * Benchmark.invoke(benches, 'emit', 'complete', listener);\n     *\n     * // invoke `run(true)`, treat benchmarks as a queue, and register invoke callbacks\n     * Benchmark.invoke(benches, {\n     *\n     *   // invoke the `run` method\n     *   'name': 'run',\n     *\n     *   // pass a single argument\n     *   'args': true,\n     *\n     *   // treat as queue, removing benchmarks from front of `benches` until empty\n     *   'queued': true,\n     *\n     *   // called before any benchmarks have been invoked.\n     *   'onStart': onStart,\n     *\n     *   // called between invoking benchmarks\n     *   'onCycle': onCycle,\n     *\n     *   // called after all benchmarks have been invoked.\n     *   'onComplete': onComplete\n     * });\n     */\n    function invoke(benches, name) {\n      var args,\n          bench,\n          queued,\n          index = -1,\n          eventProps = { 'currentTarget': benches },\n          options = { 'onStart': _.noop, 'onCycle': _.noop, 'onComplete': _.noop },\n          result = _.toArray(benches);\n\n      /**\n       * Invokes the method of the current object and if synchronous, fetches the next.\n       */\n      function execute() {\n        var listeners,\n            async = isAsync(bench);\n\n        if (async) {\n          // Use `getNext` as the first listener.\n          bench.on('complete', getNext);\n          listeners = bench.events.complete;\n          listeners.splice(0, 0, listeners.pop());\n        }\n        // Execute method.\n        result[index] = _.isFunction(bench && bench[name]) ? bench[name].apply(bench, args) : undefined;\n        // If synchronous return `true` until finished.\n        return !async && getNext();\n      }\n\n      /**\n       * Fetches the next bench or executes `onComplete` callback.\n       */\n      function getNext(event) {\n        var cycleEvent,\n            last = bench,\n            async = isAsync(last);\n\n        if (async) {\n          last.off('complete', getNext);\n          last.emit('complete');\n        }\n        // Emit \"cycle\" event.\n        eventProps.type = 'cycle';\n        eventProps.target = last;\n        cycleEvent = Event(eventProps);\n        options.onCycle.call(benches, cycleEvent);\n\n        // Choose next benchmark if not exiting early.\n        if (!cycleEvent.aborted && raiseIndex() !== false) {\n          bench = queued ? benches[0] : result[index];\n          if (isAsync(bench)) {\n            delay(bench, execute);\n          }\n          else if (async) {\n            // Resume execution if previously asynchronous but now synchronous.\n            while (execute()) {}\n          }\n          else {\n            // Continue synchronous execution.\n            return true;\n          }\n        } else {\n          // Emit \"complete\" event.\n          eventProps.type = 'complete';\n          options.onComplete.call(benches, Event(eventProps));\n        }\n        // When used as a listener `event.aborted = true` will cancel the rest of\n        // the \"complete\" listeners because they were already called above and when\n        // used as part of `getNext` the `return false` will exit the execution while-loop.\n        if (event) {\n          event.aborted = true;\n        } else {\n          return false;\n        }\n      }\n\n      /**\n       * Checks if invoking `Benchmark#run` with asynchronous cycles.\n       */\n      function isAsync(object) {\n        // Avoid using `instanceof` here because of IE memory leak issues with host objects.\n        var async = args[0] && args[0].async;\n        return name == 'run' && (object instanceof Benchmark) &&\n          ((async == null ? object.options.async : async) && support.timeout || object.defer);\n      }\n\n      /**\n       * Raises `index` to the next defined index or returns `false`.\n       */\n      function raiseIndex() {\n        index++;\n\n        // If queued remove the previous bench.\n        if (queued && index > 0) {\n          shift.call(benches);\n        }\n        // If we reached the last index then return `false`.\n        return (queued ? benches.length : index < result.length)\n          ? index\n          : (index = false);\n      }\n      // Juggle arguments.\n      if (_.isString(name)) {\n        // 2 arguments (array, name).\n        args = slice.call(arguments, 2);\n      } else {\n        // 2 arguments (array, options).\n        options = _.assign(options, name);\n        name = options.name;\n        args = _.isArray(args = 'args' in options ? options.args : []) ? args : [args];\n        queued = options.queued;\n      }\n      // Start iterating over the array.\n      if (raiseIndex() !== false) {\n        // Emit \"start\" event.\n        bench = result[index];\n        eventProps.type = 'start';\n        eventProps.target = bench;\n        options.onStart.call(benches, Event(eventProps));\n\n        // End early if the suite was aborted in an \"onStart\" listener.\n        if (name == 'run' && (benches instanceof Suite) && benches.aborted) {\n          // Emit \"cycle\" event.\n          eventProps.type = 'cycle';\n          options.onCycle.call(benches, Event(eventProps));\n          // Emit \"complete\" event.\n          eventProps.type = 'complete';\n          options.onComplete.call(benches, Event(eventProps));\n        }\n        // Start method execution.\n        else {\n          if (isAsync(bench)) {\n            delay(bench, execute);\n          } else {\n            while (execute()) {}\n          }\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates a string of joined array values or object key-value pairs.\n     *\n     * @static\n     * @memberOf Benchmark\n     * @param {Array|Object} object The object to operate on.\n     * @param {string} [separator1=','] The separator used between key-value pairs.\n     * @param {string} [separator2=': '] The separator used between keys and values.\n     * @returns {string} The joined result.\n     */\n    function join(object, separator1, separator2) {\n      var result = [],\n          length = (object = Object(object)).length,\n          arrayLike = length === length >>> 0;\n\n      separator2 || (separator2 = ': ');\n      _.each(object, function(value, key) {\n        result.push(arrayLike ? value : key + separator2 + value);\n      });\n      return result.join(separator1 || ',');\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Aborts all benchmarks in the suite.\n     *\n     * @name abort\n     * @memberOf Benchmark.Suite\n     * @returns {Object} The suite instance.\n     */\n    function abortSuite() {\n      var event,\n          suite = this,\n          resetting = calledBy.resetSuite;\n\n      if (suite.running) {\n        event = Event('abort');\n        suite.emit(event);\n        if (!event.cancelled || resetting) {\n          // Avoid infinite recursion.\n          calledBy.abortSuite = true;\n          suite.reset();\n          delete calledBy.abortSuite;\n\n          if (!resetting) {\n            suite.aborted = true;\n            invoke(suite, 'abort');\n          }\n        }\n      }\n      return suite;\n    }\n\n    /**\n     * Adds a test to the benchmark suite.\n     *\n     * @memberOf Benchmark.Suite\n     * @param {string} name A name to identify the benchmark.\n     * @param {Function|string} fn The test to benchmark.\n     * @param {Object} [options={}] Options object.\n     * @returns {Object} The suite instance.\n     * @example\n     *\n     * // basic usage\n     * suite.add(fn);\n     *\n     * // or using a name first\n     * suite.add('foo', fn);\n     *\n     * // or with options\n     * suite.add('foo', fn, {\n     *   'onCycle': onCycle,\n     *   'onComplete': onComplete\n     * });\n     *\n     * // or name and options\n     * suite.add('foo', {\n     *   'fn': fn,\n     *   'onCycle': onCycle,\n     *   'onComplete': onComplete\n     * });\n     *\n     * // or options only\n     * suite.add({\n     *   'name': 'foo',\n     *   'fn': fn,\n     *   'onCycle': onCycle,\n     *   'onComplete': onComplete\n     * });\n     */\n    function add(name, fn, options) {\n      var suite = this,\n          bench = new Benchmark(name, fn, options),\n          event = Event({ 'type': 'add', 'target': bench });\n\n      if (suite.emit(event), !event.cancelled) {\n        suite.push(bench);\n      }\n      return suite;\n    }\n\n    /**\n     * Creates a new suite with cloned benchmarks.\n     *\n     * @name clone\n     * @memberOf Benchmark.Suite\n     * @param {Object} options Options object to overwrite cloned options.\n     * @returns {Object} The new suite instance.\n     */\n    function cloneSuite(options) {\n      var suite = this,\n          result = new suite.constructor(_.assign({}, suite.options, options));\n\n      // Copy own properties.\n      _.forOwn(suite, function(value, key) {\n        if (!_.has(result, key)) {\n          result[key] = value && _.isFunction(value.clone)\n            ? value.clone()\n            : cloneDeep(value);\n        }\n      });\n      return result;\n    }\n\n    /**\n     * An `Array#filter` like method.\n     *\n     * @name filter\n     * @memberOf Benchmark.Suite\n     * @param {Function|string} callback The function/alias called per iteration.\n     * @returns {Object} A new suite of benchmarks that passed callback filter.\n     */\n    function filterSuite(callback) {\n      var suite = this,\n          result = new suite.constructor(suite.options);\n\n      result.push.apply(result, filter(suite, callback));\n      return result;\n    }\n\n    /**\n     * Resets all benchmarks in the suite.\n     *\n     * @name reset\n     * @memberOf Benchmark.Suite\n     * @returns {Object} The suite instance.\n     */\n    function resetSuite() {\n      var event,\n          suite = this,\n          aborting = calledBy.abortSuite;\n\n      if (suite.running && !aborting) {\n        // No worries, `resetSuite()` is called within `abortSuite()`.\n        calledBy.resetSuite = true;\n        suite.abort();\n        delete calledBy.resetSuite;\n      }\n      // Reset if the state has changed.\n      else if ((suite.aborted || suite.running) &&\n          (suite.emit(event = Event('reset')), !event.cancelled)) {\n        suite.aborted = suite.running = false;\n        if (!aborting) {\n          invoke(suite, 'reset');\n        }\n      }\n      return suite;\n    }\n\n    /**\n     * Runs the suite.\n     *\n     * @name run\n     * @memberOf Benchmark.Suite\n     * @param {Object} [options={}] Options object.\n     * @returns {Object} The suite instance.\n     * @example\n     *\n     * // basic usage\n     * suite.run();\n     *\n     * // or with options\n     * suite.run({ 'async': true, 'queued': true });\n     */\n    function runSuite(options) {\n      var suite = this;\n\n      suite.reset();\n      suite.running = true;\n      options || (options = {});\n\n      invoke(suite, {\n        'name': 'run',\n        'args': options,\n        'queued': options.queued,\n        'onStart': function(event) {\n          suite.emit(event);\n        },\n        'onCycle': function(event) {\n          var bench = event.target;\n          if (bench.error) {\n            suite.emit({ 'type': 'error', 'target': bench });\n          }\n          suite.emit(event);\n          event.aborted = suite.aborted;\n        },\n        'onComplete': function(event) {\n          suite.running = false;\n          suite.emit(event);\n        }\n      });\n      return suite;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Executes all registered listeners of the specified event type.\n     *\n     * @memberOf Benchmark, Benchmark.Suite\n     * @param {Object|string} type The event type or object.\n     * @param {...*} [args] Arguments to invoke the listener with.\n     * @returns {*} Returns the return value of the last listener executed.\n     */\n    function emit(type) {\n      var listeners,\n          object = this,\n          event = Event(type),\n          events = object.events,\n          args = (arguments[0] = event, arguments);\n\n      event.currentTarget || (event.currentTarget = object);\n      event.target || (event.target = object);\n      delete event.result;\n\n      if (events && (listeners = _.has(events, event.type) && events[event.type])) {\n        _.each(listeners.slice(), function(listener) {\n          if ((event.result = listener.apply(object, args)) === false) {\n            event.cancelled = true;\n          }\n          return !event.aborted;\n        });\n      }\n      return event.result;\n    }\n\n    /**\n     * Returns an array of event listeners for a given type that can be manipulated\n     * to add or remove listeners.\n     *\n     * @memberOf Benchmark, Benchmark.Suite\n     * @param {string} type The event type.\n     * @returns {Array} The listeners array.\n     */\n    function listeners(type) {\n      var object = this,\n          events = object.events || (object.events = {});\n\n      return _.has(events, type) ? events[type] : (events[type] = []);\n    }\n\n    /**\n     * Unregisters a listener for the specified event type(s),\n     * or unregisters all listeners for the specified event type(s),\n     * or unregisters all listeners for all event types.\n     *\n     * @memberOf Benchmark, Benchmark.Suite\n     * @param {string} [type] The event type.\n     * @param {Function} [listener] The function to unregister.\n     * @returns {Object} The current instance.\n     * @example\n     *\n     * // unregister a listener for an event type\n     * bench.off('cycle', listener);\n     *\n     * // unregister a listener for multiple event types\n     * bench.off('start cycle', listener);\n     *\n     * // unregister all listeners for an event type\n     * bench.off('cycle');\n     *\n     * // unregister all listeners for multiple event types\n     * bench.off('start cycle complete');\n     *\n     * // unregister all listeners for all event types\n     * bench.off();\n     */\n    function off(type, listener) {\n      var object = this,\n          events = object.events;\n\n      if (!events) {\n        return object;\n      }\n      _.each(type ? type.split(' ') : events, function(listeners, type) {\n        var index;\n        if (typeof listeners == 'string') {\n          type = listeners;\n          listeners = _.has(events, type) && events[type];\n        }\n        if (listeners) {\n          if (listener) {\n            index = _.indexOf(listeners, listener);\n            if (index > -1) {\n              listeners.splice(index, 1);\n            }\n          } else {\n            listeners.length = 0;\n          }\n        }\n      });\n      return object;\n    }\n\n    /**\n     * Registers a listener for the specified event type(s).\n     *\n     * @memberOf Benchmark, Benchmark.Suite\n     * @param {string} type The event type.\n     * @param {Function} listener The function to register.\n     * @returns {Object} The current instance.\n     * @example\n     *\n     * // register a listener for an event type\n     * bench.on('cycle', listener);\n     *\n     * // register a listener for multiple event types\n     * bench.on('start cycle', listener);\n     */\n    function on(type, listener) {\n      var object = this,\n          events = object.events || (object.events = {});\n\n      _.each(type.split(' '), function(type) {\n        (_.has(events, type)\n          ? events[type]\n          : (events[type] = [])\n        ).push(listener);\n      });\n      return object;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Aborts the benchmark without recording times.\n     *\n     * @memberOf Benchmark\n     * @returns {Object} The benchmark instance.\n     */\n    function abort() {\n      var event,\n          bench = this,\n          resetting = calledBy.reset;\n\n      if (bench.running) {\n        event = Event('abort');\n        bench.emit(event);\n        if (!event.cancelled || resetting) {\n          // Avoid infinite recursion.\n          calledBy.abort = true;\n          bench.reset();\n          delete calledBy.abort;\n\n          if (support.timeout) {\n            clearTimeout(bench._timerId);\n            delete bench._timerId;\n          }\n          if (!resetting) {\n            bench.aborted = true;\n            bench.running = false;\n          }\n        }\n      }\n      return bench;\n    }\n\n    /**\n     * Creates a new benchmark using the same test and options.\n     *\n     * @memberOf Benchmark\n     * @param {Object} options Options object to overwrite cloned options.\n     * @returns {Object} The new benchmark instance.\n     * @example\n     *\n     * var bizarro = bench.clone({\n     *   'name': 'doppelganger'\n     * });\n     */\n    function clone(options) {\n      var bench = this,\n          result = new bench.constructor(_.assign({}, bench, options));\n\n      // Correct the `options` object.\n      result.options = _.assign({}, cloneDeep(bench.options), cloneDeep(options));\n\n      // Copy own custom properties.\n      _.forOwn(bench, function(value, key) {\n        if (!_.has(result, key)) {\n          result[key] = cloneDeep(value);\n        }\n      });\n\n      return result;\n    }\n\n    /**\n     * Determines if a benchmark is faster than another.\n     *\n     * @memberOf Benchmark\n     * @param {Object} other The benchmark to compare.\n     * @returns {number} Returns `-1` if slower, `1` if faster, and `0` if indeterminate.\n     */\n    function compare(other) {\n      var bench = this;\n\n      // Exit early if comparing the same benchmark.\n      if (bench == other) {\n        return 0;\n      }\n      var critical,\n          zStat,\n          sample1 = bench.stats.sample,\n          sample2 = other.stats.sample,\n          size1 = sample1.length,\n          size2 = sample2.length,\n          maxSize = max(size1, size2),\n          minSize = min(size1, size2),\n          u1 = getU(sample1, sample2),\n          u2 = getU(sample2, sample1),\n          u = min(u1, u2);\n\n      function getScore(xA, sampleB) {\n        return _.reduce(sampleB, function(total, xB) {\n          return total + (xB > xA ? 0 : xB < xA ? 1 : 0.5);\n        }, 0);\n      }\n\n      function getU(sampleA, sampleB) {\n        return _.reduce(sampleA, function(total, xA) {\n          return total + getScore(xA, sampleB);\n        }, 0);\n      }\n\n      function getZ(u) {\n        return (u - ((size1 * size2) / 2)) / sqrt((size1 * size2 * (size1 + size2 + 1)) / 12);\n      }\n      // Reject the null hypothesis the two samples come from the\n      // same population (i.e. have the same median) if...\n      if (size1 + size2 > 30) {\n        // ...the z-stat is greater than 1.96 or less than -1.96\n        // http://www.statisticslectures.com/topics/mannwhitneyu/\n        zStat = getZ(u);\n        return abs(zStat) > 1.96 ? (u == u1 ? 1 : -1) : 0;\n      }\n      // ...the U value is less than or equal the critical U value.\n      critical = maxSize < 5 || minSize < 3 ? 0 : uTable[maxSize][minSize - 3];\n      return u <= critical ? (u == u1 ? 1 : -1) : 0;\n    }\n\n    /**\n     * Reset properties and abort if running.\n     *\n     * @memberOf Benchmark\n     * @returns {Object} The benchmark instance.\n     */\n    function reset() {\n      var bench = this;\n      if (bench.running && !calledBy.abort) {\n        // No worries, `reset()` is called within `abort()`.\n        calledBy.reset = true;\n        bench.abort();\n        delete calledBy.reset;\n        return bench;\n      }\n      var event,\n          index = 0,\n          changes = [],\n          queue = [];\n\n      // A non-recursive solution to check if properties have changed.\n      // For more information see http://www.jslab.dk/articles/non.recursive.preorder.traversal.part4.\n      var data = {\n        'destination': bench,\n        'source': _.assign({}, cloneDeep(bench.constructor.prototype), cloneDeep(bench.options))\n      };\n\n      do {\n        _.forOwn(data.source, function(value, key) {\n          var changed,\n              destination = data.destination,\n              currValue = destination[key];\n\n          // Skip pseudo private properties like `_timerId` which could be a\n          // Java object in environments like RingoJS.\n          if (key.charAt(0) == '_') {\n            return;\n          }\n          if (value && typeof value == 'object') {\n            if (_.isArray(value)) {\n              // Check if an array value has changed to a non-array value.\n              if (!_.isArray(currValue)) {\n                changed = currValue = [];\n              }\n              // Check if an array has changed its length.\n              if (currValue.length != value.length) {\n                changed = currValue = currValue.slice(0, value.length);\n                currValue.length = value.length;\n              }\n            }\n            // Check if an object has changed to a non-object value.\n            else if (!currValue || typeof currValue != 'object') {\n              changed = currValue = {};\n            }\n            // Register a changed object.\n            if (changed) {\n              changes.push({ 'destination': destination, 'key': key, 'value': currValue });\n            }\n            queue.push({ 'destination': currValue, 'source': value });\n          }\n          // Register a changed primitive.\n          else if (value !== currValue && !(value == null || _.isFunction(value))) {\n            changes.push({ 'destination': destination, 'key': key, 'value': value });\n          }\n        });\n      }\n      while ((data = queue[index++]));\n\n      // If changed emit the `reset` event and if it isn't cancelled reset the benchmark.\n      if (changes.length && (bench.emit(event = Event('reset')), !event.cancelled)) {\n        _.each(changes, function(data) {\n          data.destination[data.key] = data.value;\n        });\n      }\n      return bench;\n    }\n\n    /**\n     * Displays relevant benchmark information when coerced to a string.\n     *\n     * @name toString\n     * @memberOf Benchmark\n     * @returns {string} A string representation of the benchmark instance.\n     */\n    function toStringBench() {\n      var bench = this,\n          error = bench.error,\n          hz = bench.hz,\n          id = bench.id,\n          stats = bench.stats,\n          size = stats.sample.length,\n          pm = '\\xb1',\n          result = bench.name || (_.isNaN(id) ? id : '<Test #' + id + '>');\n\n      if (error) {\n        var errorStr;\n        if (!_.isObject(error)) {\n          errorStr = String(error);\n        } else if (!_.isError(Error)) {\n          errorStr = join(error);\n        } else {\n          // Error#name and Error#message properties are non-enumerable.\n          errorStr = join(_.assign({ 'name': error.name, 'message': error.message }, error));\n        }\n        result += ': ' + errorStr;\n      }\n      else {\n        result += ' x ' + formatNumber(hz.toFixed(hz < 100 ? 2 : 0)) + ' ops/sec ' + pm +\n          stats.rme.toFixed(2) + '% (' + size + ' run' + (size == 1 ? '' : 's') + ' sampled)';\n      }\n      return result;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Clocks the time taken to execute a test per cycle (secs).\n     *\n     * @private\n     * @param {Object} bench The benchmark instance.\n     * @returns {number} The time taken.\n     */\n    function clock() {\n      var options = Benchmark.options,\n          templateData = {},\n          timers = [{ 'ns': timer.ns, 'res': max(0.0015, getRes('ms')), 'unit': 'ms' }];\n\n      // Lazy define for hi-res timers.\n      clock = function(clone) {\n        var deferred;\n\n        if (clone instanceof Deferred) {\n          deferred = clone;\n          clone = deferred.benchmark;\n        }\n        var bench = clone._original,\n            stringable = isStringable(bench.fn),\n            count = bench.count = clone.count,\n            decompilable = stringable || (support.decompilation && (clone.setup !== _.noop || clone.teardown !== _.noop)),\n            id = bench.id,\n            name = bench.name || (typeof id == 'number' ? '<Test #' + id + '>' : id),\n            result = 0;\n\n        // Init `minTime` if needed.\n        clone.minTime = bench.minTime || (bench.minTime = bench.options.minTime = options.minTime);\n\n        // Compile in setup/teardown functions and the test loop.\n        // Create a new compiled test, instead of using the cached `bench.compiled`,\n        // to avoid potential engine optimizations enabled over the life of the test.\n        var funcBody = deferred\n          ? 'var d#=this,${fnArg}=d#,m#=d#.benchmark._original,f#=m#.fn,su#=m#.setup,td#=m#.teardown;' +\n            // When `deferred.cycles` is `0` then...\n            'if(!d#.cycles){' +\n            // set `deferred.fn`,\n            'd#.fn=function(){var ${fnArg}=d#;if(typeof f#==\"function\"){try{${fn}\\n}catch(e#){f#(d#)}}else{${fn}\\n}};' +\n            // set `deferred.teardown`,\n            'd#.teardown=function(){d#.cycles=0;if(typeof td#==\"function\"){try{${teardown}\\n}catch(e#){td#()}}else{${teardown}\\n}};' +\n            // execute the benchmark's `setup`,\n            'if(typeof su#==\"function\"){try{${setup}\\n}catch(e#){su#()}}else{${setup}\\n};' +\n            // start timer,\n            't#.start(d#);' +\n            // and then execute `deferred.fn` and return a dummy object.\n            '}d#.fn();return{uid:\"${uid}\"}'\n\n          : 'var r#,s#,m#=this,f#=m#.fn,i#=m#.count,n#=t#.ns;${setup}\\n${begin};' +\n            'while(i#--){${fn}\\n}${end};${teardown}\\nreturn{elapsed:r#,uid:\"${uid}\"}';\n\n        var compiled = bench.compiled = clone.compiled = createCompiled(bench, decompilable, deferred, funcBody),\n            isEmpty = !(templateData.fn || stringable);\n\n        try {\n          if (isEmpty) {\n            // Firefox may remove dead code from `Function#toString` results.\n            // For more information see http://bugzil.la/536085.\n            throw new Error('The test \"' + name + '\" is empty. This may be the result of dead code removal.');\n          }\n          else if (!deferred) {\n            // Pretest to determine if compiled code exits early, usually by a\n            // rogue `return` statement, by checking for a return object with the uid.\n            bench.count = 1;\n            compiled = decompilable && (compiled.call(bench, context, timer) || {}).uid == templateData.uid && compiled;\n            bench.count = count;\n          }\n        } catch(e) {\n          compiled = null;\n          clone.error = e || new Error(String(e));\n          bench.count = count;\n        }\n        // Fallback when a test exits early or errors during pretest.\n        if (!compiled && !deferred && !isEmpty) {\n          funcBody = (\n            stringable || (decompilable && !clone.error)\n              ? 'function f#(){${fn}\\n}var r#,s#,m#=this,i#=m#.count'\n              : 'var r#,s#,m#=this,f#=m#.fn,i#=m#.count'\n            ) +\n            ',n#=t#.ns;${setup}\\n${begin};m#.f#=f#;while(i#--){m#.f#()}${end};' +\n            'delete m#.f#;${teardown}\\nreturn{elapsed:r#}';\n\n          compiled = createCompiled(bench, decompilable, deferred, funcBody);\n\n          try {\n            // Pretest one more time to check for errors.\n            bench.count = 1;\n            compiled.call(bench, context, timer);\n            bench.count = count;\n            delete clone.error;\n          }\n          catch(e) {\n            bench.count = count;\n            if (!clone.error) {\n              clone.error = e || new Error(String(e));\n            }\n          }\n        }\n        // If no errors run the full test loop.\n        if (!clone.error) {\n          compiled = bench.compiled = clone.compiled = createCompiled(bench, decompilable, deferred, funcBody);\n          result = compiled.call(deferred || bench, context, timer).elapsed;\n        }\n        return result;\n      };\n\n      /*----------------------------------------------------------------------*/\n\n      /**\n       * Creates a compiled function from the given function `body`.\n       */\n      function createCompiled(bench, decompilable, deferred, body) {\n        var fn = bench.fn,\n            fnArg = deferred ? getFirstArgument(fn) || 'deferred' : '';\n\n        templateData.uid = uid + uidCounter++;\n\n        _.assign(templateData, {\n          'setup': decompilable ? getSource(bench.setup) : interpolate('m#.setup()'),\n          'fn': decompilable ? getSource(fn) : interpolate('m#.fn(' + fnArg + ')'),\n          'fnArg': fnArg,\n          'teardown': decompilable ? getSource(bench.teardown) : interpolate('m#.teardown()')\n        });\n\n        // Use API of chosen timer.\n        if (timer.unit == 'ns') {\n          _.assign(templateData, {\n            'begin': interpolate('s#=n#()'),\n            'end': interpolate('r#=n#(s#);r#=r#[0]+(r#[1]/1e9)')\n          });\n        }\n        else if (timer.unit == 'us') {\n          if (timer.ns.stop) {\n            _.assign(templateData, {\n              'begin': interpolate('s#=n#.start()'),\n              'end': interpolate('r#=n#.microseconds()/1e6')\n            });\n          } else {\n            _.assign(templateData, {\n              'begin': interpolate('s#=n#()'),\n              'end': interpolate('r#=(n#()-s#)/1e6')\n            });\n          }\n        }\n        else if (timer.ns.now) {\n          _.assign(templateData, {\n            'begin': interpolate('s#=n#.now()'),\n            'end': interpolate('r#=(n#.now()-s#)/1e3')\n          });\n        }\n        else {\n          _.assign(templateData, {\n            'begin': interpolate('s#=new n#().getTime()'),\n            'end': interpolate('r#=(new n#().getTime()-s#)/1e3')\n          });\n        }\n        // Define `timer` methods.\n        timer.start = createFunction(\n          interpolate('o#'),\n          interpolate('var n#=this.ns,${begin};o#.elapsed=0;o#.timeStamp=s#')\n        );\n\n        timer.stop = createFunction(\n          interpolate('o#'),\n          interpolate('var n#=this.ns,s#=o#.timeStamp,${end};o#.elapsed=r#')\n        );\n\n        // Create compiled test.\n        return createFunction(\n          interpolate('window,t#'),\n          'var global = window, clearTimeout = global.clearTimeout, setTimeout = global.setTimeout;\\n' +\n          interpolate(body)\n        );\n      }\n\n      /**\n       * Gets the current timer's minimum resolution (secs).\n       */\n      function getRes(unit) {\n        var measured,\n            begin,\n            count = 30,\n            divisor = 1e3,\n            ns = timer.ns,\n            sample = [];\n\n        // Get average smallest measurable time.\n        while (count--) {\n          if (unit == 'us') {\n            divisor = 1e6;\n            if (ns.stop) {\n              ns.start();\n              while (!(measured = ns.microseconds())) {}\n            } else {\n              begin = ns();\n              while (!(measured = ns() - begin)) {}\n            }\n          }\n          else if (unit == 'ns') {\n            divisor = 1e9;\n            begin = (begin = ns())[0] + (begin[1] / divisor);\n            while (!(measured = ((measured = ns())[0] + (measured[1] / divisor)) - begin)) {}\n            divisor = 1;\n          }\n          else if (ns.now) {\n            begin = ns.now();\n            while (!(measured = ns.now() - begin)) {}\n          }\n          else {\n            begin = new ns().getTime();\n            while (!(measured = new ns().getTime() - begin)) {}\n          }\n          // Check for broken timers.\n          if (measured > 0) {\n            sample.push(measured);\n          } else {\n            sample.push(Infinity);\n            break;\n          }\n        }\n        // Convert to seconds.\n        return getMean(sample) / divisor;\n      }\n\n      /**\n       * Interpolates a given template string.\n       */\n      function interpolate(string) {\n        // Replaces all occurrences of `#` with a unique number and template tokens with content.\n        return _.template(string.replace(/\\#/g, /\\d+/.exec(templateData.uid)))(templateData);\n      }\n\n      /*----------------------------------------------------------------------*/\n\n      // Detect Chrome's microsecond timer:\n      // enable benchmarking via the --enable-benchmarking command\n      // line switch in at least Chrome 7 to use chrome.Interval\n      try {\n        if ((timer.ns = new (context.chrome || context.chromium).Interval)) {\n          timers.push({ 'ns': timer.ns, 'res': getRes('us'), 'unit': 'us' });\n        }\n      } catch(e) {}\n\n      // Detect Node.js's nanosecond resolution timer available in Node.js >= 0.8.\n      if (processObject && typeof (timer.ns = processObject.hrtime) == 'function') {\n        timers.push({ 'ns': timer.ns, 'res': getRes('ns'), 'unit': 'ns' });\n      }\n      // Detect Wade Simmons' Node.js `microtime` module.\n      if (microtimeObject && typeof (timer.ns = microtimeObject.now) == 'function') {\n        timers.push({ 'ns': timer.ns,  'res': getRes('us'), 'unit': 'us' });\n      }\n      // Pick timer with highest resolution.\n      timer = _.minBy(timers, 'res');\n\n      // Error if there are no working timers.\n      if (timer.res == Infinity) {\n        throw new Error('Benchmark.js was unable to find a working timer.');\n      }\n      // Resolve time span required to achieve a percent uncertainty of at most 1%.\n      // For more information see http://spiff.rit.edu/classes/phys273/uncert/uncert.html.\n      options.minTime || (options.minTime = max(timer.res / 2 / 0.01, 0.05));\n      return clock.apply(null, arguments);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Computes stats on benchmark results.\n     *\n     * @private\n     * @param {Object} bench The benchmark instance.\n     * @param {Object} options The options object.\n     */\n    function compute(bench, options) {\n      options || (options = {});\n\n      var async = options.async,\n          elapsed = 0,\n          initCount = bench.initCount,\n          minSamples = bench.minSamples,\n          queue = [],\n          sample = bench.stats.sample;\n\n      /**\n       * Adds a clone to the queue.\n       */\n      function enqueue() {\n        queue.push(bench.clone({\n          '_original': bench,\n          'events': {\n            'abort': [update],\n            'cycle': [update],\n            'error': [update],\n            'start': [update]\n          }\n        }));\n      }\n\n      /**\n       * Updates the clone/original benchmarks to keep their data in sync.\n       */\n      function update(event) {\n        var clone = this,\n            type = event.type;\n\n        if (bench.running) {\n          if (type == 'start') {\n            // Note: `clone.minTime` prop is inited in `clock()`.\n            clone.count = bench.initCount;\n          }\n          else {\n            if (type == 'error') {\n              bench.error = clone.error;\n            }\n            if (type == 'abort') {\n              bench.abort();\n              bench.emit('cycle');\n            } else {\n              event.currentTarget = event.target = bench;\n              bench.emit(event);\n            }\n          }\n        } else if (bench.aborted) {\n          // Clear abort listeners to avoid triggering bench's abort/cycle again.\n          clone.events.abort.length = 0;\n          clone.abort();\n        }\n      }\n\n      /**\n       * Determines if more clones should be queued or if cycling should stop.\n       */\n      function evaluate(event) {\n        var critical,\n            df,\n            mean,\n            moe,\n            rme,\n            sd,\n            sem,\n            variance,\n            clone = event.target,\n            done = bench.aborted,\n            now = _.now(),\n            size = sample.push(clone.times.period),\n            maxedOut = size >= minSamples && (elapsed += now - clone.times.timeStamp) / 1e3 > bench.maxTime,\n            times = bench.times,\n            varOf = function(sum, x) { return sum + pow(x - mean, 2); };\n\n        // Exit early for aborted or unclockable tests.\n        if (done || clone.hz == Infinity) {\n          maxedOut = !(size = sample.length = queue.length = 0);\n        }\n\n        if (!done) {\n          // Compute the sample mean (estimate of the population mean).\n          mean = getMean(sample);\n          // Compute the sample variance (estimate of the population variance).\n          variance = _.reduce(sample, varOf, 0) / (size - 1) || 0;\n          // Compute the sample standard deviation (estimate of the population standard deviation).\n          sd = sqrt(variance);\n          // Compute the standard error of the mean (a.k.a. the standard deviation of the sampling distribution of the sample mean).\n          sem = sd / sqrt(size);\n          // Compute the degrees of freedom.\n          df = size - 1;\n          // Compute the critical value.\n          critical = tTable[Math.round(df) || 1] || tTable.infinity;\n          // Compute the margin of error.\n          moe = sem * critical;\n          // Compute the relative margin of error.\n          rme = (moe / mean) * 100 || 0;\n\n          _.assign(bench.stats, {\n            'deviation': sd,\n            'mean': mean,\n            'moe': moe,\n            'rme': rme,\n            'sem': sem,\n            'variance': variance\n          });\n\n          // Abort the cycle loop when the minimum sample size has been collected\n          // and the elapsed time exceeds the maximum time allowed per benchmark.\n          // We don't count cycle delays toward the max time because delays may be\n          // increased by browsers that clamp timeouts for inactive tabs. For more\n          // information see https://developer.mozilla.org/en/window.setTimeout#Inactive_tabs.\n          if (maxedOut) {\n            // Reset the `initCount` in case the benchmark is rerun.\n            bench.initCount = initCount;\n            bench.running = false;\n            done = true;\n            times.elapsed = (now - times.timeStamp) / 1e3;\n          }\n          if (bench.hz != Infinity) {\n            bench.hz = 1 / mean;\n            times.cycle = mean * bench.count;\n            times.period = mean;\n          }\n        }\n        // If time permits, increase sample size to reduce the margin of error.\n        if (queue.length < 2 && !maxedOut) {\n          enqueue();\n        }\n        // Abort the `invoke` cycle when done.\n        event.aborted = done;\n      }\n\n      // Init queue and begin.\n      enqueue();\n      invoke(queue, {\n        'name': 'run',\n        'args': { 'async': async },\n        'queued': true,\n        'onCycle': evaluate,\n        'onComplete': function() { bench.emit('complete'); }\n      });\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Cycles a benchmark until a run `count` can be established.\n     *\n     * @private\n     * @param {Object} clone The cloned benchmark instance.\n     * @param {Object} options The options object.\n     */\n    function cycle(clone, options) {\n      options || (options = {});\n\n      var deferred;\n      if (clone instanceof Deferred) {\n        deferred = clone;\n        clone = clone.benchmark;\n      }\n      var clocked,\n          cycles,\n          divisor,\n          event,\n          minTime,\n          period,\n          async = options.async,\n          bench = clone._original,\n          count = clone.count,\n          times = clone.times;\n\n      // Continue, if not aborted between cycles.\n      if (clone.running) {\n        // `minTime` is set to `Benchmark.options.minTime` in `clock()`.\n        cycles = ++clone.cycles;\n        clocked = deferred ? deferred.elapsed : clock(clone);\n        minTime = clone.minTime;\n\n        if (cycles > bench.cycles) {\n          bench.cycles = cycles;\n        }\n        if (clone.error) {\n          event = Event('error');\n          event.message = clone.error;\n          clone.emit(event);\n          if (!event.cancelled) {\n            clone.abort();\n          }\n        }\n      }\n      // Continue, if not errored.\n      if (clone.running) {\n        // Compute the time taken to complete last test cycle.\n        bench.times.cycle = times.cycle = clocked;\n        // Compute the seconds per operation.\n        period = bench.times.period = times.period = clocked / count;\n        // Compute the ops per second.\n        bench.hz = clone.hz = 1 / period;\n        // Avoid working our way up to this next time.\n        bench.initCount = clone.initCount = count;\n        // Do we need to do another cycle?\n        clone.running = clocked < minTime;\n\n        if (clone.running) {\n          // Tests may clock at `0` when `initCount` is a small number,\n          // to avoid that we set its count to something a bit higher.\n          if (!clocked && (divisor = divisors[clone.cycles]) != null) {\n            count = floor(4e6 / divisor);\n          }\n          // Calculate how many more iterations it will take to achieve the `minTime`.\n          if (count <= clone.count) {\n            count += Math.ceil((minTime - clocked) / period);\n          }\n          clone.running = count != Infinity;\n        }\n      }\n      // Should we exit early?\n      event = Event('cycle');\n      clone.emit(event);\n      if (event.aborted) {\n        clone.abort();\n      }\n      // Figure out what to do next.\n      if (clone.running) {\n        // Start a new cycle.\n        clone.count = count;\n        if (deferred) {\n          clone.compiled.call(deferred, context, timer);\n        } else if (async) {\n          delay(clone, function() { cycle(clone, options); });\n        } else {\n          cycle(clone);\n        }\n      }\n      else {\n        // Fix TraceMonkey bug associated with clock fallbacks.\n        // For more information see http://bugzil.la/509069.\n        if (support.browser) {\n          runScript(uid + '=1;delete ' + uid);\n        }\n        // We're done.\n        clone.emit('complete');\n      }\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Runs the benchmark.\n     *\n     * @memberOf Benchmark\n     * @param {Object} [options={}] Options object.\n     * @returns {Object} The benchmark instance.\n     * @example\n     *\n     * // basic usage\n     * bench.run();\n     *\n     * // or with options\n     * bench.run({ 'async': true });\n     */\n    function run(options) {\n      var bench = this,\n          event = Event('start');\n\n      // Set `running` to `false` so `reset()` won't call `abort()`.\n      bench.running = false;\n      bench.reset();\n      bench.running = true;\n\n      bench.count = bench.initCount;\n      bench.times.timeStamp = _.now();\n      bench.emit(event);\n\n      if (!event.cancelled) {\n        options = { 'async': ((options = options && options.async) == null ? bench.async : options) && support.timeout };\n\n        // For clones created within `compute()`.\n        if (bench._original) {\n          if (bench.defer) {\n            Deferred(bench);\n          } else {\n            cycle(bench, options);\n          }\n        }\n        // For original benchmarks.\n        else {\n          compute(bench, options);\n        }\n      }\n      return bench;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    // Firefox 1 erroneously defines variable and argument names of functions on\n    // the function itself as non-configurable properties with `undefined` values.\n    // The bugginess continues as the `Benchmark` constructor has an argument\n    // named `options` and Firefox 1 will not assign a value to `Benchmark.options`,\n    // making it non-writable in the process, unless it is the first property\n    // assigned by for-in loop of `_.assign()`.\n    _.assign(Benchmark, {\n\n      /**\n       * The default options copied by benchmark instances.\n       *\n       * @static\n       * @memberOf Benchmark\n       * @type Object\n       */\n      'options': {\n\n        /**\n         * A flag to indicate that benchmark cycles will execute asynchronously\n         * by default.\n         *\n         * @memberOf Benchmark.options\n         * @type boolean\n         */\n        'async': false,\n\n        /**\n         * A flag to indicate that the benchmark clock is deferred.\n         *\n         * @memberOf Benchmark.options\n         * @type boolean\n         */\n        'defer': false,\n\n        /**\n         * The delay between test cycles (secs).\n         * @memberOf Benchmark.options\n         * @type number\n         */\n        'delay': 0.005,\n\n        /**\n         * Displayed by `Benchmark#toString` when a `name` is not available\n         * (auto-generated if absent).\n         *\n         * @memberOf Benchmark.options\n         * @type string\n         */\n        'id': undefined,\n\n        /**\n         * The default number of times to execute a test on a benchmark's first cycle.\n         *\n         * @memberOf Benchmark.options\n         * @type number\n         */\n        'initCount': 1,\n\n        /**\n         * The maximum time a benchmark is allowed to run before finishing (secs).\n         *\n         * Note: Cycle delays aren't counted toward the maximum time.\n         *\n         * @memberOf Benchmark.options\n         * @type number\n         */\n        'maxTime': 5,\n\n        /**\n         * The minimum sample size required to perform statistical analysis.\n         *\n         * @memberOf Benchmark.options\n         * @type number\n         */\n        'minSamples': 5,\n\n        /**\n         * The time needed to reduce the percent uncertainty of measurement to 1% (secs).\n         *\n         * @memberOf Benchmark.options\n         * @type number\n         */\n        'minTime': 0,\n\n        /**\n         * The name of the benchmark.\n         *\n         * @memberOf Benchmark.options\n         * @type string\n         */\n        'name': undefined,\n\n        /**\n         * An event listener called when the benchmark is aborted.\n         *\n         * @memberOf Benchmark.options\n         * @type Function\n         */\n        'onAbort': undefined,\n\n        /**\n         * An event listener called when the benchmark completes running.\n         *\n         * @memberOf Benchmark.options\n         * @type Function\n         */\n        'onComplete': undefined,\n\n        /**\n         * An event listener called after each run cycle.\n         *\n         * @memberOf Benchmark.options\n         * @type Function\n         */\n        'onCycle': undefined,\n\n        /**\n         * An event listener called when a test errors.\n         *\n         * @memberOf Benchmark.options\n         * @type Function\n         */\n        'onError': undefined,\n\n        /**\n         * An event listener called when the benchmark is reset.\n         *\n         * @memberOf Benchmark.options\n         * @type Function\n         */\n        'onReset': undefined,\n\n        /**\n         * An event listener called when the benchmark starts running.\n         *\n         * @memberOf Benchmark.options\n         * @type Function\n         */\n        'onStart': undefined\n      },\n\n      /**\n       * Platform object with properties describing things like browser name,\n       * version, and operating system. See [`platform.js`](https://mths.be/platform).\n       *\n       * @static\n       * @memberOf Benchmark\n       * @type Object\n       */\n      'platform': context.platform || require('platform') || ({\n        'description': context.navigator && context.navigator.userAgent || null,\n        'layout': null,\n        'product': null,\n        'name': null,\n        'manufacturer': null,\n        'os': null,\n        'prerelease': null,\n        'version': null,\n        'toString': function() {\n          return this.description || '';\n        }\n      }),\n\n      /**\n       * The semantic version number.\n       *\n       * @static\n       * @memberOf Benchmark\n       * @type string\n       */\n      'version': '2.1.2'\n    });\n\n    _.assign(Benchmark, {\n      'filter': filter,\n      'formatNumber': formatNumber,\n      'invoke': invoke,\n      'join': join,\n      'runInContext': runInContext,\n      'support': support\n    });\n\n    // Add lodash methods to Benchmark.\n    _.each(['each', 'forEach', 'forOwn', 'has', 'indexOf', 'map', 'reduce'], function(methodName) {\n      Benchmark[methodName] = _[methodName];\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    _.assign(Benchmark.prototype, {\n\n      /**\n       * The number of times a test was executed.\n       *\n       * @memberOf Benchmark\n       * @type number\n       */\n      'count': 0,\n\n      /**\n       * The number of cycles performed while benchmarking.\n       *\n       * @memberOf Benchmark\n       * @type number\n       */\n      'cycles': 0,\n\n      /**\n       * The number of executions per second.\n       *\n       * @memberOf Benchmark\n       * @type number\n       */\n      'hz': 0,\n\n      /**\n       * The compiled test function.\n       *\n       * @memberOf Benchmark\n       * @type {Function|string}\n       */\n      'compiled': undefined,\n\n      /**\n       * The error object if the test failed.\n       *\n       * @memberOf Benchmark\n       * @type Object\n       */\n      'error': undefined,\n\n      /**\n       * The test to benchmark.\n       *\n       * @memberOf Benchmark\n       * @type {Function|string}\n       */\n      'fn': undefined,\n\n      /**\n       * A flag to indicate if the benchmark is aborted.\n       *\n       * @memberOf Benchmark\n       * @type boolean\n       */\n      'aborted': false,\n\n      /**\n       * A flag to indicate if the benchmark is running.\n       *\n       * @memberOf Benchmark\n       * @type boolean\n       */\n      'running': false,\n\n      /**\n       * Compiled into the test and executed immediately **before** the test loop.\n       *\n       * @memberOf Benchmark\n       * @type {Function|string}\n       * @example\n       *\n       * // basic usage\n       * var bench = Benchmark({\n       *   'setup': function() {\n       *     var c = this.count,\n       *         element = document.getElementById('container');\n       *     while (c--) {\n       *       element.appendChild(document.createElement('div'));\n       *     }\n       *   },\n       *   'fn': function() {\n       *     element.removeChild(element.lastChild);\n       *   }\n       * });\n       *\n       * // compiles to something like:\n       * var c = this.count,\n       *     element = document.getElementById('container');\n       * while (c--) {\n       *   element.appendChild(document.createElement('div'));\n       * }\n       * var start = new Date;\n       * while (count--) {\n       *   element.removeChild(element.lastChild);\n       * }\n       * var end = new Date - start;\n       *\n       * // or using strings\n       * var bench = Benchmark({\n       *   'setup': '\\\n       *     var a = 0;\\n\\\n       *     (function() {\\n\\\n       *       (function() {\\n\\\n       *         (function() {',\n       *   'fn': 'a += 1;',\n       *   'teardown': '\\\n       *          }())\\n\\\n       *        }())\\n\\\n       *      }())'\n       * });\n       *\n       * // compiles to something like:\n       * var a = 0;\n       * (function() {\n       *   (function() {\n       *     (function() {\n       *       var start = new Date;\n       *       while (count--) {\n       *         a += 1;\n       *       }\n       *       var end = new Date - start;\n       *     }())\n       *   }())\n       * }())\n       */\n      'setup': _.noop,\n\n      /**\n       * Compiled into the test and executed immediately **after** the test loop.\n       *\n       * @memberOf Benchmark\n       * @type {Function|string}\n       */\n      'teardown': _.noop,\n\n      /**\n       * An object of stats including mean, margin or error, and standard deviation.\n       *\n       * @memberOf Benchmark\n       * @type Object\n       */\n      'stats': {\n\n        /**\n         * The margin of error.\n         *\n         * @memberOf Benchmark#stats\n         * @type number\n         */\n        'moe': 0,\n\n        /**\n         * The relative margin of error (expressed as a percentage of the mean).\n         *\n         * @memberOf Benchmark#stats\n         * @type number\n         */\n        'rme': 0,\n\n        /**\n         * The standard error of the mean.\n         *\n         * @memberOf Benchmark#stats\n         * @type number\n         */\n        'sem': 0,\n\n        /**\n         * The sample standard deviation.\n         *\n         * @memberOf Benchmark#stats\n         * @type number\n         */\n        'deviation': 0,\n\n        /**\n         * The sample arithmetic mean (secs).\n         *\n         * @memberOf Benchmark#stats\n         * @type number\n         */\n        'mean': 0,\n\n        /**\n         * The array of sampled periods.\n         *\n         * @memberOf Benchmark#stats\n         * @type Array\n         */\n        'sample': [],\n\n        /**\n         * The sample variance.\n         *\n         * @memberOf Benchmark#stats\n         * @type number\n         */\n        'variance': 0\n      },\n\n      /**\n       * An object of timing data including cycle, elapsed, period, start, and stop.\n       *\n       * @memberOf Benchmark\n       * @type Object\n       */\n      'times': {\n\n        /**\n         * The time taken to complete the last cycle (secs).\n         *\n         * @memberOf Benchmark#times\n         * @type number\n         */\n        'cycle': 0,\n\n        /**\n         * The time taken to complete the benchmark (secs).\n         *\n         * @memberOf Benchmark#times\n         * @type number\n         */\n        'elapsed': 0,\n\n        /**\n         * The time taken to execute the test once (secs).\n         *\n         * @memberOf Benchmark#times\n         * @type number\n         */\n        'period': 0,\n\n        /**\n         * A timestamp of when the benchmark started (ms).\n         *\n         * @memberOf Benchmark#times\n         * @type number\n         */\n        'timeStamp': 0\n      }\n    });\n\n    _.assign(Benchmark.prototype, {\n      'abort': abort,\n      'clone': clone,\n      'compare': compare,\n      'emit': emit,\n      'listeners': listeners,\n      'off': off,\n      'on': on,\n      'reset': reset,\n      'run': run,\n      'toString': toStringBench\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    _.assign(Deferred.prototype, {\n\n      /**\n       * The deferred benchmark instance.\n       *\n       * @memberOf Benchmark.Deferred\n       * @type Object\n       */\n      'benchmark': null,\n\n      /**\n       * The number of deferred cycles performed while benchmarking.\n       *\n       * @memberOf Benchmark.Deferred\n       * @type number\n       */\n      'cycles': 0,\n\n      /**\n       * The time taken to complete the deferred benchmark (secs).\n       *\n       * @memberOf Benchmark.Deferred\n       * @type number\n       */\n      'elapsed': 0,\n\n      /**\n       * A timestamp of when the deferred benchmark started (ms).\n       *\n       * @memberOf Benchmark.Deferred\n       * @type number\n       */\n      'timeStamp': 0\n    });\n\n    _.assign(Deferred.prototype, {\n      'resolve': resolve\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    _.assign(Event.prototype, {\n\n      /**\n       * A flag to indicate if the emitters listener iteration is aborted.\n       *\n       * @memberOf Benchmark.Event\n       * @type boolean\n       */\n      'aborted': false,\n\n      /**\n       * A flag to indicate if the default action is cancelled.\n       *\n       * @memberOf Benchmark.Event\n       * @type boolean\n       */\n      'cancelled': false,\n\n      /**\n       * The object whose listeners are currently being processed.\n       *\n       * @memberOf Benchmark.Event\n       * @type Object\n       */\n      'currentTarget': undefined,\n\n      /**\n       * The return value of the last executed listener.\n       *\n       * @memberOf Benchmark.Event\n       * @type Mixed\n       */\n      'result': undefined,\n\n      /**\n       * The object to which the event was originally emitted.\n       *\n       * @memberOf Benchmark.Event\n       * @type Object\n       */\n      'target': undefined,\n\n      /**\n       * A timestamp of when the event was created (ms).\n       *\n       * @memberOf Benchmark.Event\n       * @type number\n       */\n      'timeStamp': 0,\n\n      /**\n       * The event type.\n       *\n       * @memberOf Benchmark.Event\n       * @type string\n       */\n      'type': ''\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The default options copied by suite instances.\n     *\n     * @static\n     * @memberOf Benchmark.Suite\n     * @type Object\n     */\n    Suite.options = {\n\n      /**\n       * The name of the suite.\n       *\n       * @memberOf Benchmark.Suite.options\n       * @type string\n       */\n      'name': undefined\n    };\n\n    /*------------------------------------------------------------------------*/\n\n    _.assign(Suite.prototype, {\n\n      /**\n       * The number of benchmarks in the suite.\n       *\n       * @memberOf Benchmark.Suite\n       * @type number\n       */\n      'length': 0,\n\n      /**\n       * A flag to indicate if the suite is aborted.\n       *\n       * @memberOf Benchmark.Suite\n       * @type boolean\n       */\n      'aborted': false,\n\n      /**\n       * A flag to indicate if the suite is running.\n       *\n       * @memberOf Benchmark.Suite\n       * @type boolean\n       */\n      'running': false\n    });\n\n    _.assign(Suite.prototype, {\n      'abort': abortSuite,\n      'add': add,\n      'clone': cloneSuite,\n      'emit': emit,\n      'filter': filterSuite,\n      'join': arrayRef.join,\n      'listeners': listeners,\n      'off': off,\n      'on': on,\n      'pop': arrayRef.pop,\n      'push': push,\n      'reset': resetSuite,\n      'run': runSuite,\n      'reverse': arrayRef.reverse,\n      'shift': shift,\n      'slice': slice,\n      'sort': arrayRef.sort,\n      'splice': arrayRef.splice,\n      'unshift': unshift\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    // Expose Deferred, Event, and Suite.\n    _.assign(Benchmark, {\n      'Deferred': Deferred,\n      'Event': Event,\n      'Suite': Suite\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    // Add lodash methods as Suite methods.\n    _.each(['each', 'forEach', 'indexOf', 'map', 'reduce'], function(methodName) {\n      var func = _[methodName];\n      Suite.prototype[methodName] = function() {\n        var args = [this];\n        push.apply(args, arguments);\n        return func.apply(_, args);\n      };\n    });\n\n    // Avoid array-like object bugs with `Array#shift` and `Array#splice`\n    // in Firefox < 10 and IE < 9.\n    _.each(['pop', 'shift', 'splice'], function(methodName) {\n      var func = arrayRef[methodName];\n\n      Suite.prototype[methodName] = function() {\n        var value = this,\n            result = func.apply(value, arguments);\n\n        if (value.length === 0) {\n          delete value[0];\n        }\n        return result;\n      };\n    });\n\n    // Avoid buggy `Array#unshift` in IE < 8 which doesn't return the new\n    // length of the array.\n    Suite.prototype.unshift = function() {\n      var value = this;\n      unshift.apply(value, arguments);\n      return value.length;\n    };\n\n    return Benchmark;\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  // Export Benchmark.\n  // Some AMD build optimizers, like r.js, check for condition patterns like the following:\n  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {\n    // Define as an anonymous module so, through path mapping, it can be aliased.\n    define(['lodash', 'platform'], function(_, platform) {\n      return runInContext({\n        '_': _,\n        'platform': platform\n      });\n    });\n  }\n  else {\n    var Benchmark = runInContext();\n\n    // Check for `exports` after `define` in case a build optimizer adds an `exports` object.\n    if (freeExports && freeModule) {\n      // Export for Node.js.\n      if (moduleExports) {\n        (freeModule.exports = Benchmark).Benchmark = Benchmark;\n      }\n      // Export for CommonJS support.\n      freeExports.Benchmark = Benchmark;\n    }\n    else {\n      // Export to the global object.\n      root.Benchmark = Benchmark;\n    }\n  }\n}.call(this));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/benchmark/benchmark.js\n// module id = 23\n// module chunks = 0","/*!\r\n * Platform.js <https://mths.be/platform>\r\n * Copyright 2014-2016 Benjamin Tan <https://demoneaux.github.io/>\r\n * Copyright 2011-2013 John-David Dalton <http://allyoucanleet.com/>\r\n * Available under MIT license <https://mths.be/mit>\r\n */\r\n;(function() {\r\n  'use strict';\r\n\r\n  /** Used to determine if values are of the language type `Object`. */\r\n  var objectTypes = {\r\n    'function': true,\r\n    'object': true\r\n  };\r\n\r\n  /** Used as a reference to the global object. */\r\n  var root = (objectTypes[typeof window] && window) || this;\r\n\r\n  /** Backup possible global object. */\r\n  var oldRoot = root;\r\n\r\n  /** Detect free variable `exports`. */\r\n  var freeExports = objectTypes[typeof exports] && exports;\r\n\r\n  /** Detect free variable `module`. */\r\n  var freeModule = objectTypes[typeof module] && module && !module.nodeType && module;\r\n\r\n  /** Detect free variable `global` from Node.js or Browserified code and use it as `root`. */\r\n  var freeGlobal = freeExports && freeModule && typeof global == 'object' && global;\r\n  if (freeGlobal && (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal || freeGlobal.self === freeGlobal)) {\r\n    root = freeGlobal;\r\n  }\r\n\r\n  /**\r\n   * Used as the maximum length of an array-like object.\r\n   * See the [ES6 spec](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength)\r\n   * for more details.\r\n   */\r\n  var maxSafeInteger = Math.pow(2, 53) - 1;\r\n\r\n  /** Regular expression to detect Opera. */\r\n  var reOpera = /\\bOpera/;\r\n\r\n  /** Possible global object. */\r\n  var thisBinding = this;\r\n\r\n  /** Used for native method references. */\r\n  var objectProto = Object.prototype;\r\n\r\n  /** Used to check for own properties of an object. */\r\n  var hasOwnProperty = objectProto.hasOwnProperty;\r\n\r\n  /** Used to resolve the internal `[[Class]]` of values. */\r\n  var toString = objectProto.toString;\r\n\r\n  /*--------------------------------------------------------------------------*/\r\n\r\n  /**\r\n   * Capitalizes a string value.\r\n   *\r\n   * @private\r\n   * @param {string} string The string to capitalize.\r\n   * @returns {string} The capitalized string.\r\n   */\r\n  function capitalize(string) {\r\n    string = String(string);\r\n    return string.charAt(0).toUpperCase() + string.slice(1);\r\n  }\r\n\r\n  /**\r\n   * A utility function to clean up the OS name.\r\n   *\r\n   * @private\r\n   * @param {string} os The OS name to clean up.\r\n   * @param {string} [pattern] A `RegExp` pattern matching the OS name.\r\n   * @param {string} [label] A label for the OS.\r\n   */\r\n  function cleanupOS(os, pattern, label) {\r\n    // Platform tokens are defined at:\r\n    // http://msdn.microsoft.com/en-us/library/ms537503(VS.85).aspx\r\n    // http://web.archive.org/web/20081122053950/http://msdn.microsoft.com/en-us/library/ms537503(VS.85).aspx\r\n    var data = {\r\n      '10.0': '10',\r\n      '6.4':  '10 Technical Preview',\r\n      '6.3':  '8.1',\r\n      '6.2':  '8',\r\n      '6.1':  'Server 2008 R2 / 7',\r\n      '6.0':  'Server 2008 / Vista',\r\n      '5.2':  'Server 2003 / XP 64-bit',\r\n      '5.1':  'XP',\r\n      '5.01': '2000 SP1',\r\n      '5.0':  '2000',\r\n      '4.0':  'NT',\r\n      '4.90': 'ME'\r\n    };\r\n    // Detect Windows version from platform tokens.\r\n    if (pattern && label && /^Win/i.test(os) && !/^Windows Phone /i.test(os) &&\r\n        (data = data[/[\\d.]+$/.exec(os)])) {\r\n      os = 'Windows ' + data;\r\n    }\r\n    // Correct character case and cleanup string.\r\n    os = String(os);\r\n\r\n    if (pattern && label) {\r\n      os = os.replace(RegExp(pattern, 'i'), label);\r\n    }\r\n\r\n    os = format(\r\n      os.replace(/ ce$/i, ' CE')\r\n        .replace(/\\bhpw/i, 'web')\r\n        .replace(/\\bMacintosh\\b/, 'Mac OS')\r\n        .replace(/_PowerPC\\b/i, ' OS')\r\n        .replace(/\\b(OS X) [^ \\d]+/i, '$1')\r\n        .replace(/\\bMac (OS X)\\b/, '$1')\r\n        .replace(/\\/(\\d)/, ' $1')\r\n        .replace(/_/g, '.')\r\n        .replace(/(?: BePC|[ .]*fc[ \\d.]+)$/i, '')\r\n        .replace(/\\bx86\\.64\\b/gi, 'x86_64')\r\n        .replace(/\\b(Windows Phone) OS\\b/, '$1')\r\n        .replace(/\\b(Chrome OS \\w+) [\\d.]+\\b/, '$1')\r\n        .split(' on ')[0]\r\n    );\r\n\r\n    return os;\r\n  }\r\n\r\n  /**\r\n   * An iteration utility for arrays and objects.\r\n   *\r\n   * @private\r\n   * @param {Array|Object} object The object to iterate over.\r\n   * @param {Function} callback The function called per iteration.\r\n   */\r\n  function each(object, callback) {\r\n    var index = -1,\r\n        length = object ? object.length : 0;\r\n\r\n    if (typeof length == 'number' && length > -1 && length <= maxSafeInteger) {\r\n      while (++index < length) {\r\n        callback(object[index], index, object);\r\n      }\r\n    } else {\r\n      forOwn(object, callback);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Trim and conditionally capitalize string values.\r\n   *\r\n   * @private\r\n   * @param {string} string The string to format.\r\n   * @returns {string} The formatted string.\r\n   */\r\n  function format(string) {\r\n    string = trim(string);\r\n    return /^(?:webOS|i(?:OS|P))/.test(string)\r\n      ? string\r\n      : capitalize(string);\r\n  }\r\n\r\n  /**\r\n   * Iterates over an object's own properties, executing the `callback` for each.\r\n   *\r\n   * @private\r\n   * @param {Object} object The object to iterate over.\r\n   * @param {Function} callback The function executed per own property.\r\n   */\r\n  function forOwn(object, callback) {\r\n    for (var key in object) {\r\n      if (hasOwnProperty.call(object, key)) {\r\n        callback(object[key], key, object);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Gets the internal `[[Class]]` of a value.\r\n   *\r\n   * @private\r\n   * @param {*} value The value.\r\n   * @returns {string} The `[[Class]]`.\r\n   */\r\n  function getClassOf(value) {\r\n    return value == null\r\n      ? capitalize(value)\r\n      : toString.call(value).slice(8, -1);\r\n  }\r\n\r\n  /**\r\n   * Host objects can return type values that are different from their actual\r\n   * data type. The objects we are concerned with usually return non-primitive\r\n   * types of \"object\", \"function\", or \"unknown\".\r\n   *\r\n   * @private\r\n   * @param {*} object The owner of the property.\r\n   * @param {string} property The property to check.\r\n   * @returns {boolean} Returns `true` if the property value is a non-primitive, else `false`.\r\n   */\r\n  function isHostType(object, property) {\r\n    var type = object != null ? typeof object[property] : 'number';\r\n    return !/^(?:boolean|number|string|undefined)$/.test(type) &&\r\n      (type == 'object' ? !!object[property] : true);\r\n  }\r\n\r\n  /**\r\n   * Prepares a string for use in a `RegExp` by making hyphens and spaces optional.\r\n   *\r\n   * @private\r\n   * @param {string} string The string to qualify.\r\n   * @returns {string} The qualified string.\r\n   */\r\n  function qualify(string) {\r\n    return String(string).replace(/([ -])(?!$)/g, '$1?');\r\n  }\r\n\r\n  /**\r\n   * A bare-bones `Array#reduce` like utility function.\r\n   *\r\n   * @private\r\n   * @param {Array} array The array to iterate over.\r\n   * @param {Function} callback The function called per iteration.\r\n   * @returns {*} The accumulated result.\r\n   */\r\n  function reduce(array, callback) {\r\n    var accumulator = null;\r\n    each(array, function(value, index) {\r\n      accumulator = callback(accumulator, value, index, array);\r\n    });\r\n    return accumulator;\r\n  }\r\n\r\n  /**\r\n   * Removes leading and trailing whitespace from a string.\r\n   *\r\n   * @private\r\n   * @param {string} string The string to trim.\r\n   * @returns {string} The trimmed string.\r\n   */\r\n  function trim(string) {\r\n    return String(string).replace(/^ +| +$/g, '');\r\n  }\r\n\r\n  /*--------------------------------------------------------------------------*/\r\n\r\n  /**\r\n   * Creates a new platform object.\r\n   *\r\n   * @memberOf platform\r\n   * @param {Object|string} [ua=navigator.userAgent] The user agent string or\r\n   *  context object.\r\n   * @returns {Object} A platform object.\r\n   */\r\n  function parse(ua) {\r\n\r\n    /** The environment context object. */\r\n    var context = root;\r\n\r\n    /** Used to flag when a custom context is provided. */\r\n    var isCustomContext = ua && typeof ua == 'object' && getClassOf(ua) != 'String';\r\n\r\n    // Juggle arguments.\r\n    if (isCustomContext) {\r\n      context = ua;\r\n      ua = null;\r\n    }\r\n\r\n    /** Browser navigator object. */\r\n    var nav = context.navigator || {};\r\n\r\n    /** Browser user agent string. */\r\n    var userAgent = nav.userAgent || '';\r\n\r\n    ua || (ua = userAgent);\r\n\r\n    /** Used to flag when `thisBinding` is the [ModuleScope]. */\r\n    var isModuleScope = isCustomContext || thisBinding == oldRoot;\r\n\r\n    /** Used to detect if browser is like Chrome. */\r\n    var likeChrome = isCustomContext\r\n      ? !!nav.likeChrome\r\n      : /\\bChrome\\b/.test(ua) && !/internal|\\n/i.test(toString.toString());\r\n\r\n    /** Internal `[[Class]]` value shortcuts. */\r\n    var objectClass = 'Object',\r\n        airRuntimeClass = isCustomContext ? objectClass : 'ScriptBridgingProxyObject',\r\n        enviroClass = isCustomContext ? objectClass : 'Environment',\r\n        javaClass = (isCustomContext && context.java) ? 'JavaPackage' : getClassOf(context.java),\r\n        phantomClass = isCustomContext ? objectClass : 'RuntimeObject';\r\n\r\n    /** Detect Java environments. */\r\n    var java = /\\bJava/.test(javaClass) && context.java;\r\n\r\n    /** Detect Rhino. */\r\n    var rhino = java && getClassOf(context.environment) == enviroClass;\r\n\r\n    /** A character to represent alpha. */\r\n    var alpha = java ? 'a' : '\\u03b1';\r\n\r\n    /** A character to represent beta. */\r\n    var beta = java ? 'b' : '\\u03b2';\r\n\r\n    /** Browser document object. */\r\n    var doc = context.document || {};\r\n\r\n    /**\r\n     * Detect Opera browser (Presto-based).\r\n     * http://www.howtocreate.co.uk/operaStuff/operaObject.html\r\n     * http://dev.opera.com/articles/view/opera-mini-web-content-authoring-guidelines/#operamini\r\n     */\r\n    var opera = context.operamini || context.opera;\r\n\r\n    /** Opera `[[Class]]`. */\r\n    var operaClass = reOpera.test(operaClass = (isCustomContext && opera) ? opera['[[Class]]'] : getClassOf(opera))\r\n      ? operaClass\r\n      : (opera = null);\r\n\r\n    /*------------------------------------------------------------------------*/\r\n\r\n    /** Temporary variable used over the script's lifetime. */\r\n    var data;\r\n\r\n    /** The CPU architecture. */\r\n    var arch = ua;\r\n\r\n    /** Platform description array. */\r\n    var description = [];\r\n\r\n    /** Platform alpha/beta indicator. */\r\n    var prerelease = null;\r\n\r\n    /** A flag to indicate that environment features should be used to resolve the platform. */\r\n    var useFeatures = ua == userAgent;\r\n\r\n    /** The browser/environment version. */\r\n    var version = useFeatures && opera && typeof opera.version == 'function' && opera.version();\r\n\r\n    /** A flag to indicate if the OS ends with \"/ Version\" */\r\n    var isSpecialCasedOS;\r\n\r\n    /* Detectable layout engines (order is important). */\r\n    var layout = getLayout([\r\n      { 'label': 'EdgeHTML', 'pattern': 'Edge' },\r\n      'Trident',\r\n      { 'label': 'WebKit', 'pattern': 'AppleWebKit' },\r\n      'iCab',\r\n      'Presto',\r\n      'NetFront',\r\n      'Tasman',\r\n      'KHTML',\r\n      'Gecko'\r\n    ]);\r\n\r\n    /* Detectable browser names (order is important). */\r\n    var name = getName([\r\n      'Adobe AIR',\r\n      'Arora',\r\n      'Avant Browser',\r\n      'Breach',\r\n      'Camino',\r\n      'Epiphany',\r\n      'Fennec',\r\n      'Flock',\r\n      'Galeon',\r\n      'GreenBrowser',\r\n      'iCab',\r\n      'Iceweasel',\r\n      'K-Meleon',\r\n      'Konqueror',\r\n      'Lunascape',\r\n      'Maxthon',\r\n      { 'label': 'Microsoft Edge', 'pattern': 'Edge' },\r\n      'Midori',\r\n      'Nook Browser',\r\n      'PaleMoon',\r\n      'PhantomJS',\r\n      'Raven',\r\n      'Rekonq',\r\n      'RockMelt',\r\n      'SeaMonkey',\r\n      { 'label': 'Silk', 'pattern': '(?:Cloud9|Silk-Accelerated)' },\r\n      'Sleipnir',\r\n      'SlimBrowser',\r\n      { 'label': 'SRWare Iron', 'pattern': 'Iron' },\r\n      'Sunrise',\r\n      'Swiftfox',\r\n      'WebPositive',\r\n      'Opera Mini',\r\n      { 'label': 'Opera Mini', 'pattern': 'OPiOS' },\r\n      'Opera',\r\n      { 'label': 'Opera', 'pattern': 'OPR' },\r\n      'Chrome',\r\n      { 'label': 'Chrome Mobile', 'pattern': '(?:CriOS|CrMo)' },\r\n      { 'label': 'Firefox', 'pattern': '(?:Firefox|Minefield)' },\r\n      { 'label': 'Firefox for iOS', 'pattern': 'FxiOS' },\r\n      { 'label': 'IE', 'pattern': 'IEMobile' },\r\n      { 'label': 'IE', 'pattern': 'MSIE' },\r\n      'Safari'\r\n    ]);\r\n\r\n    /* Detectable products (order is important). */\r\n    var product = getProduct([\r\n      { 'label': 'BlackBerry', 'pattern': 'BB10' },\r\n      'BlackBerry',\r\n      { 'label': 'Galaxy S', 'pattern': 'GT-I9000' },\r\n      { 'label': 'Galaxy S2', 'pattern': 'GT-I9100' },\r\n      { 'label': 'Galaxy S3', 'pattern': 'GT-I9300' },\r\n      { 'label': 'Galaxy S4', 'pattern': 'GT-I9500' },\r\n      'Google TV',\r\n      'Lumia',\r\n      'iPad',\r\n      'iPod',\r\n      'iPhone',\r\n      'Kindle',\r\n      { 'label': 'Kindle Fire', 'pattern': '(?:Cloud9|Silk-Accelerated)' },\r\n      'Nexus',\r\n      'Nook',\r\n      'PlayBook',\r\n      'PlayStation 3',\r\n      'PlayStation 4',\r\n      'PlayStation Vita',\r\n      'TouchPad',\r\n      'Transformer',\r\n      { 'label': 'Wii U', 'pattern': 'WiiU' },\r\n      'Wii',\r\n      'Xbox One',\r\n      { 'label': 'Xbox 360', 'pattern': 'Xbox' },\r\n      'Xoom'\r\n    ]);\r\n\r\n    /* Detectable manufacturers. */\r\n    var manufacturer = getManufacturer({\r\n      'Apple': { 'iPad': 1, 'iPhone': 1, 'iPod': 1 },\r\n      'Archos': {},\r\n      'Amazon': { 'Kindle': 1, 'Kindle Fire': 1 },\r\n      'Asus': { 'Transformer': 1 },\r\n      'Barnes & Noble': { 'Nook': 1 },\r\n      'BlackBerry': { 'PlayBook': 1 },\r\n      'Google': { 'Google TV': 1, 'Nexus': 1 },\r\n      'HP': { 'TouchPad': 1 },\r\n      'HTC': {},\r\n      'LG': {},\r\n      'Microsoft': { 'Xbox': 1, 'Xbox One': 1 },\r\n      'Motorola': { 'Xoom': 1 },\r\n      'Nintendo': { 'Wii U': 1,  'Wii': 1 },\r\n      'Nokia': { 'Lumia': 1 },\r\n      'Samsung': { 'Galaxy S': 1, 'Galaxy S2': 1, 'Galaxy S3': 1, 'Galaxy S4': 1 },\r\n      'Sony': { 'PlayStation 4': 1, 'PlayStation 3': 1, 'PlayStation Vita': 1 }\r\n    });\r\n\r\n    /* Detectable operating systems (order is important). */\r\n    var os = getOS([\r\n      'Windows Phone',\r\n      'Android',\r\n      'CentOS',\r\n      { 'label': 'Chrome OS', 'pattern': 'CrOS' },\r\n      'Debian',\r\n      'Fedora',\r\n      'FreeBSD',\r\n      'Gentoo',\r\n      'Haiku',\r\n      'Kubuntu',\r\n      'Linux Mint',\r\n      'OpenBSD',\r\n      'Red Hat',\r\n      'SuSE',\r\n      'Ubuntu',\r\n      'Xubuntu',\r\n      'Cygwin',\r\n      'Symbian OS',\r\n      'hpwOS',\r\n      'webOS ',\r\n      'webOS',\r\n      'Tablet OS',\r\n      'Linux',\r\n      'Mac OS X',\r\n      'Macintosh',\r\n      'Mac',\r\n      'Windows 98;',\r\n      'Windows '\r\n    ]);\r\n\r\n    /*------------------------------------------------------------------------*/\r\n\r\n    /**\r\n     * Picks the layout engine from an array of guesses.\r\n     *\r\n     * @private\r\n     * @param {Array} guesses An array of guesses.\r\n     * @returns {null|string} The detected layout engine.\r\n     */\r\n    function getLayout(guesses) {\r\n      return reduce(guesses, function(result, guess) {\r\n        return result || RegExp('\\\\b' + (\r\n          guess.pattern || qualify(guess)\r\n        ) + '\\\\b', 'i').exec(ua) && (guess.label || guess);\r\n      });\r\n    }\r\n\r\n    /**\r\n     * Picks the manufacturer from an array of guesses.\r\n     *\r\n     * @private\r\n     * @param {Array} guesses An object of guesses.\r\n     * @returns {null|string} The detected manufacturer.\r\n     */\r\n    function getManufacturer(guesses) {\r\n      return reduce(guesses, function(result, value, key) {\r\n        // Lookup the manufacturer by product or scan the UA for the manufacturer.\r\n        return result || (\r\n          value[product] ||\r\n          value[/^[a-z]+(?: +[a-z]+\\b)*/i.exec(product)] ||\r\n          RegExp('\\\\b' + qualify(key) + '(?:\\\\b|\\\\w*\\\\d)', 'i').exec(ua)\r\n        ) && key;\r\n      });\r\n    }\r\n\r\n    /**\r\n     * Picks the browser name from an array of guesses.\r\n     *\r\n     * @private\r\n     * @param {Array} guesses An array of guesses.\r\n     * @returns {null|string} The detected browser name.\r\n     */\r\n    function getName(guesses) {\r\n      return reduce(guesses, function(result, guess) {\r\n        return result || RegExp('\\\\b' + (\r\n          guess.pattern || qualify(guess)\r\n        ) + '\\\\b', 'i').exec(ua) && (guess.label || guess);\r\n      });\r\n    }\r\n\r\n    /**\r\n     * Picks the OS name from an array of guesses.\r\n     *\r\n     * @private\r\n     * @param {Array} guesses An array of guesses.\r\n     * @returns {null|string} The detected OS name.\r\n     */\r\n    function getOS(guesses) {\r\n      return reduce(guesses, function(result, guess) {\r\n        var pattern = guess.pattern || qualify(guess);\r\n        if (!result && (result =\r\n              RegExp('\\\\b' + pattern + '(?:/[\\\\d.]+|[ \\\\w.]*)', 'i').exec(ua)\r\n            )) {\r\n          result = cleanupOS(result, pattern, guess.label || guess);\r\n        }\r\n        return result;\r\n      });\r\n    }\r\n\r\n    /**\r\n     * Picks the product name from an array of guesses.\r\n     *\r\n     * @private\r\n     * @param {Array} guesses An array of guesses.\r\n     * @returns {null|string} The detected product name.\r\n     */\r\n    function getProduct(guesses) {\r\n      return reduce(guesses, function(result, guess) {\r\n        var pattern = guess.pattern || qualify(guess);\r\n        if (!result && (result =\r\n              RegExp('\\\\b' + pattern + ' *\\\\d+[.\\\\w_]*', 'i').exec(ua) ||\r\n              RegExp('\\\\b' + pattern + '(?:; *(?:[a-z]+[_-])?[a-z]+\\\\d+|[^ ();-]*)', 'i').exec(ua)\r\n            )) {\r\n          // Split by forward slash and append product version if needed.\r\n          if ((result = String((guess.label && !RegExp(pattern, 'i').test(guess.label)) ? guess.label : result).split('/'))[1] && !/[\\d.]+/.test(result[0])) {\r\n            result[0] += ' ' + result[1];\r\n          }\r\n          // Correct character case and cleanup string.\r\n          guess = guess.label || guess;\r\n          result = format(result[0]\r\n            .replace(RegExp(pattern, 'i'), guess)\r\n            .replace(RegExp('; *(?:' + guess + '[_-])?', 'i'), ' ')\r\n            .replace(RegExp('(' + guess + ')[-_.]?(\\\\w)', 'i'), '$1 $2'));\r\n        }\r\n        return result;\r\n      });\r\n    }\r\n\r\n    /**\r\n     * Resolves the version using an array of UA patterns.\r\n     *\r\n     * @private\r\n     * @param {Array} patterns An array of UA patterns.\r\n     * @returns {null|string} The detected version.\r\n     */\r\n    function getVersion(patterns) {\r\n      return reduce(patterns, function(result, pattern) {\r\n        return result || (RegExp(pattern +\r\n          '(?:-[\\\\d.]+/|(?: for [\\\\w-]+)?[ /-])([\\\\d.]+[^ ();/_-]*)', 'i').exec(ua) || 0)[1] || null;\r\n      });\r\n    }\r\n\r\n    /**\r\n     * Returns `platform.description` when the platform object is coerced to a string.\r\n     *\r\n     * @name toString\r\n     * @memberOf platform\r\n     * @returns {string} Returns `platform.description` if available, else an empty string.\r\n     */\r\n    function toStringPlatform() {\r\n      return this.description || '';\r\n    }\r\n\r\n    /*------------------------------------------------------------------------*/\r\n\r\n    // Convert layout to an array so we can add extra details.\r\n    layout && (layout = [layout]);\r\n\r\n    // Detect product names that contain their manufacturer's name.\r\n    if (manufacturer && !product) {\r\n      product = getProduct([manufacturer]);\r\n    }\r\n    // Clean up Google TV.\r\n    if ((data = /\\bGoogle TV\\b/.exec(product))) {\r\n      product = data[0];\r\n    }\r\n    // Detect simulators.\r\n    if (/\\bSimulator\\b/i.test(ua)) {\r\n      product = (product ? product + ' ' : '') + 'Simulator';\r\n    }\r\n    // Detect Opera Mini 8+ running in Turbo/Uncompressed mode on iOS.\r\n    if (name == 'Opera Mini' && /\\bOPiOS\\b/.test(ua)) {\r\n      description.push('running in Turbo/Uncompressed mode');\r\n    }\r\n    // Detect IE Mobile 11.\r\n    if (name == 'IE' && /\\blike iPhone OS\\b/.test(ua)) {\r\n      data = parse(ua.replace(/like iPhone OS/, ''));\r\n      manufacturer = data.manufacturer;\r\n      product = data.product;\r\n    }\r\n    // Detect iOS.\r\n    else if (/^iP/.test(product)) {\r\n      name || (name = 'Safari');\r\n      os = 'iOS' + ((data = / OS ([\\d_]+)/i.exec(ua))\r\n        ? ' ' + data[1].replace(/_/g, '.')\r\n        : '');\r\n    }\r\n    // Detect Kubuntu.\r\n    else if (name == 'Konqueror' && !/buntu/i.test(os)) {\r\n      os = 'Kubuntu';\r\n    }\r\n    // Detect Android browsers.\r\n    else if ((manufacturer && manufacturer != 'Google' &&\r\n        ((/Chrome/.test(name) && !/\\bMobile Safari\\b/i.test(ua)) || /\\bVita\\b/.test(product))) ||\r\n        (/\\bAndroid\\b/.test(os) && /^Chrome/.test(name) && /\\bVersion\\//i.test(ua))) {\r\n      name = 'Android Browser';\r\n      os = /\\bAndroid\\b/.test(os) ? os : 'Android';\r\n    }\r\n    // Detect Silk desktop/accelerated modes.\r\n    else if (name == 'Silk') {\r\n      if (!/\\bMobi/i.test(ua)) {\r\n        os = 'Android';\r\n        description.unshift('desktop mode');\r\n      }\r\n      if (/Accelerated *= *true/i.test(ua)) {\r\n        description.unshift('accelerated');\r\n      }\r\n    }\r\n    // Detect PaleMoon identifying as Firefox.\r\n    else if (name == 'PaleMoon' && (data = /\\bFirefox\\/([\\d.]+)\\b/.exec(ua))) {\r\n      description.push('identifying as Firefox ' + data[1]);\r\n    }\r\n    // Detect Firefox OS and products running Firefox.\r\n    else if (name == 'Firefox' && (data = /\\b(Mobile|Tablet|TV)\\b/i.exec(ua))) {\r\n      os || (os = 'Firefox OS');\r\n      product || (product = data[1]);\r\n    }\r\n    // Detect false positives for Firefox/Safari.\r\n    else if (!name || (data = !/\\bMinefield\\b/i.test(ua) && /\\b(?:Firefox|Safari)\\b/.exec(name))) {\r\n      // Escape the `/` for Firefox 1.\r\n      if (name && !product && /[\\/,]|^[^(]+?\\)/.test(ua.slice(ua.indexOf(data + '/') + 8))) {\r\n        // Clear name of false positives.\r\n        name = null;\r\n      }\r\n      // Reassign a generic name.\r\n      if ((data = product || manufacturer || os) &&\r\n          (product || manufacturer || /\\b(?:Android|Symbian OS|Tablet OS|webOS)\\b/.test(os))) {\r\n        name = /[a-z]+(?: Hat)?/i.exec(/\\bAndroid\\b/.test(os) ? os : data) + ' Browser';\r\n      }\r\n    }\r\n    // Detect non-Opera (Presto-based) versions (order is important).\r\n    if (!version) {\r\n      version = getVersion([\r\n        '(?:Cloud9|CriOS|CrMo|Edge|FxiOS|IEMobile|Iron|Opera ?Mini|OPiOS|OPR|Raven|Silk(?!/[\\\\d.]+$))',\r\n        'Version',\r\n        qualify(name),\r\n        '(?:Firefox|Minefield|NetFront)'\r\n      ]);\r\n    }\r\n    // Detect stubborn layout engines.\r\n    if ((data =\r\n          layout == 'iCab' && parseFloat(version) > 3 && 'WebKit' ||\r\n          /\\bOpera\\b/.test(name) && (/\\bOPR\\b/.test(ua) ? 'Blink' : 'Presto') ||\r\n          /\\b(?:Midori|Nook|Safari)\\b/i.test(ua) && !/^(?:Trident|EdgeHTML)$/.test(layout) && 'WebKit' ||\r\n          !layout && /\\bMSIE\\b/i.test(ua) && (os == 'Mac OS' ? 'Tasman' : 'Trident') ||\r\n          layout == 'WebKit' && /\\bPlayStation\\b(?! Vita\\b)/i.test(name) && 'NetFront'\r\n        )) {\r\n      layout = [data];\r\n    }\r\n    // Detect Windows Phone 7 desktop mode.\r\n    if (name == 'IE' && (data = (/; *(?:XBLWP|ZuneWP)(\\d+)/i.exec(ua) || 0)[1])) {\r\n      name += ' Mobile';\r\n      os = 'Windows Phone ' + (/\\+$/.test(data) ? data : data + '.x');\r\n      description.unshift('desktop mode');\r\n    }\r\n    // Detect Windows Phone 8.x desktop mode.\r\n    else if (/\\bWPDesktop\\b/i.test(ua)) {\r\n      name = 'IE Mobile';\r\n      os = 'Windows Phone 8.x';\r\n      description.unshift('desktop mode');\r\n      version || (version = (/\\brv:([\\d.]+)/.exec(ua) || 0)[1]);\r\n    }\r\n    // Detect IE 11.\r\n    else if (name != 'IE' && layout == 'Trident' && (data = /\\brv:([\\d.]+)/.exec(ua))) {\r\n      if (name) {\r\n        description.push('identifying as ' + name + (version ? ' ' + version : ''));\r\n      }\r\n      name = 'IE';\r\n      version = data[1];\r\n    }\r\n    // Leverage environment features.\r\n    if (useFeatures) {\r\n      // Detect server-side environments.\r\n      // Rhino has a global function while others have a global object.\r\n      if (isHostType(context, 'global')) {\r\n        if (java) {\r\n          data = java.lang.System;\r\n          arch = data.getProperty('os.arch');\r\n          os = os || data.getProperty('os.name') + ' ' + data.getProperty('os.version');\r\n        }\r\n        if (isModuleScope && isHostType(context, 'system') && (data = [context.system])[0]) {\r\n          os || (os = data[0].os || null);\r\n          try {\r\n            data[1] = context.require('ringo/engine').version;\r\n            version = data[1].join('.');\r\n            name = 'RingoJS';\r\n          } catch(e) {\r\n            if (data[0].global.system == context.system) {\r\n              name = 'Narwhal';\r\n            }\r\n          }\r\n        }\r\n        else if (\r\n          typeof context.process == 'object' && !context.process.browser &&\r\n          (data = context.process)\r\n        ) {\r\n          name = 'Node.js';\r\n          arch = data.arch;\r\n          os = data.platform;\r\n          version = /[\\d.]+/.exec(data.version)[0];\r\n        }\r\n        else if (rhino) {\r\n          name = 'Rhino';\r\n        }\r\n      }\r\n      // Detect Adobe AIR.\r\n      else if (getClassOf((data = context.runtime)) == airRuntimeClass) {\r\n        name = 'Adobe AIR';\r\n        os = data.flash.system.Capabilities.os;\r\n      }\r\n      // Detect PhantomJS.\r\n      else if (getClassOf((data = context.phantom)) == phantomClass) {\r\n        name = 'PhantomJS';\r\n        version = (data = data.version || null) && (data.major + '.' + data.minor + '.' + data.patch);\r\n      }\r\n      // Detect IE compatibility modes.\r\n      else if (typeof doc.documentMode == 'number' && (data = /\\bTrident\\/(\\d+)/i.exec(ua))) {\r\n        // We're in compatibility mode when the Trident version + 4 doesn't\r\n        // equal the document mode.\r\n        version = [version, doc.documentMode];\r\n        if ((data = +data[1] + 4) != version[1]) {\r\n          description.push('IE ' + version[1] + ' mode');\r\n          layout && (layout[1] = '');\r\n          version[1] = data;\r\n        }\r\n        version = name == 'IE' ? String(version[1].toFixed(1)) : version[0];\r\n      }\r\n      os = os && format(os);\r\n    }\r\n    // Detect prerelease phases.\r\n    if (version && (data =\r\n          /(?:[ab]|dp|pre|[ab]\\d+pre)(?:\\d+\\+?)?$/i.exec(version) ||\r\n          /(?:alpha|beta)(?: ?\\d)?/i.exec(ua + ';' + (useFeatures && nav.appMinorVersion)) ||\r\n          /\\bMinefield\\b/i.test(ua) && 'a'\r\n        )) {\r\n      prerelease = /b/i.test(data) ? 'beta' : 'alpha';\r\n      version = version.replace(RegExp(data + '\\\\+?$'), '') +\r\n        (prerelease == 'beta' ? beta : alpha) + (/\\d+\\+?/.exec(data) || '');\r\n    }\r\n    // Detect Firefox Mobile.\r\n    if (name == 'Fennec' || name == 'Firefox' && /\\b(?:Android|Firefox OS)\\b/.test(os)) {\r\n      name = 'Firefox Mobile';\r\n    }\r\n    // Obscure Maxthon's unreliable version.\r\n    else if (name == 'Maxthon' && version) {\r\n      version = version.replace(/\\.[\\d.]+/, '.x');\r\n    }\r\n    // Detect Xbox 360 and Xbox One.\r\n    else if (/\\bXbox\\b/i.test(product)) {\r\n      os = null;\r\n      if (product == 'Xbox 360' && /\\bIEMobile\\b/.test(ua)) {\r\n        description.unshift('mobile mode');\r\n      }\r\n    }\r\n    // Add mobile postfix.\r\n    else if ((/^(?:Chrome|IE|Opera)$/.test(name) || name && !product && !/Browser|Mobi/.test(name)) &&\r\n        (os == 'Windows CE' || /Mobi/i.test(ua))) {\r\n      name += ' Mobile';\r\n    }\r\n    // Detect IE platform preview.\r\n    else if (name == 'IE' && useFeatures && context.external === null) {\r\n      description.unshift('platform preview');\r\n    }\r\n    // Detect BlackBerry OS version.\r\n    // http://docs.blackberry.com/en/developers/deliverables/18169/HTTP_headers_sent_by_BB_Browser_1234911_11.jsp\r\n    else if ((/\\bBlackBerry\\b/.test(product) || /\\bBB10\\b/.test(ua)) && (data =\r\n          (RegExp(product.replace(/ +/g, ' *') + '/([.\\\\d]+)', 'i').exec(ua) || 0)[1] ||\r\n          version\r\n        )) {\r\n      data = [data, /BB10/.test(ua)];\r\n      os = (data[1] ? (product = null, manufacturer = 'BlackBerry') : 'Device Software') + ' ' + data[0];\r\n      version = null;\r\n    }\r\n    // Detect Opera identifying/masking itself as another browser.\r\n    // http://www.opera.com/support/kb/view/843/\r\n    else if (this != forOwn && product != 'Wii' && (\r\n          (useFeatures && opera) ||\r\n          (/Opera/.test(name) && /\\b(?:MSIE|Firefox)\\b/i.test(ua)) ||\r\n          (name == 'Firefox' && /\\bOS X (?:\\d+\\.){2,}/.test(os)) ||\r\n          (name == 'IE' && (\r\n            (os && !/^Win/.test(os) && version > 5.5) ||\r\n            /\\bWindows XP\\b/.test(os) && version > 8 ||\r\n            version == 8 && !/\\bTrident\\b/.test(ua)\r\n          ))\r\n        ) && !reOpera.test((data = parse.call(forOwn, ua.replace(reOpera, '') + ';'))) && data.name) {\r\n      // When \"identifying\", the UA contains both Opera and the other browser's name.\r\n      data = 'ing as ' + data.name + ((data = data.version) ? ' ' + data : '');\r\n      if (reOpera.test(name)) {\r\n        if (/\\bIE\\b/.test(data) && os == 'Mac OS') {\r\n          os = null;\r\n        }\r\n        data = 'identify' + data;\r\n      }\r\n      // When \"masking\", the UA contains only the other browser's name.\r\n      else {\r\n        data = 'mask' + data;\r\n        if (operaClass) {\r\n          name = format(operaClass.replace(/([a-z])([A-Z])/g, '$1 $2'));\r\n        } else {\r\n          name = 'Opera';\r\n        }\r\n        if (/\\bIE\\b/.test(data)) {\r\n          os = null;\r\n        }\r\n        if (!useFeatures) {\r\n          version = null;\r\n        }\r\n      }\r\n      layout = ['Presto'];\r\n      description.push(data);\r\n    }\r\n    // Detect WebKit Nightly and approximate Chrome/Safari versions.\r\n    if ((data = (/\\bAppleWebKit\\/([\\d.]+\\+?)/i.exec(ua) || 0)[1])) {\r\n      // Correct build number for numeric comparison.\r\n      // (e.g. \"532.5\" becomes \"532.05\")\r\n      data = [parseFloat(data.replace(/\\.(\\d)$/, '.0$1')), data];\r\n      // Nightly builds are postfixed with a \"+\".\r\n      if (name == 'Safari' && data[1].slice(-1) == '+') {\r\n        name = 'WebKit Nightly';\r\n        prerelease = 'alpha';\r\n        version = data[1].slice(0, -1);\r\n      }\r\n      // Clear incorrect browser versions.\r\n      else if (version == data[1] ||\r\n          version == (data[2] = (/\\bSafari\\/([\\d.]+\\+?)/i.exec(ua) || 0)[1])) {\r\n        version = null;\r\n      }\r\n      // Use the full Chrome version when available.\r\n      data[1] = (/\\bChrome\\/([\\d.]+)/i.exec(ua) || 0)[1];\r\n      // Detect Blink layout engine.\r\n      if (data[0] == 537.36 && data[2] == 537.36 && parseFloat(data[1]) >= 28 && layout == 'WebKit') {\r\n        layout = ['Blink'];\r\n      }\r\n      // Detect JavaScriptCore.\r\n      // http://stackoverflow.com/questions/6768474/how-can-i-detect-which-javascript-engine-v8-or-jsc-is-used-at-runtime-in-androi\r\n      if (!useFeatures || (!likeChrome && !data[1])) {\r\n        layout && (layout[1] = 'like Safari');\r\n        data = (data = data[0], data < 400 ? 1 : data < 500 ? 2 : data < 526 ? 3 : data < 533 ? 4 : data < 534 ? '4+' : data < 535 ? 5 : data < 537 ? 6 : data < 538 ? 7 : data < 601 ? 8 : '8');\r\n      } else {\r\n        layout && (layout[1] = 'like Chrome');\r\n        data = data[1] || (data = data[0], data < 530 ? 1 : data < 532 ? 2 : data < 532.05 ? 3 : data < 533 ? 4 : data < 534.03 ? 5 : data < 534.07 ? 6 : data < 534.10 ? 7 : data < 534.13 ? 8 : data < 534.16 ? 9 : data < 534.24 ? 10 : data < 534.30 ? 11 : data < 535.01 ? 12 : data < 535.02 ? '13+' : data < 535.07 ? 15 : data < 535.11 ? 16 : data < 535.19 ? 17 : data < 536.05 ? 18 : data < 536.10 ? 19 : data < 537.01 ? 20 : data < 537.11 ? '21+' : data < 537.13 ? 23 : data < 537.18 ? 24 : data < 537.24 ? 25 : data < 537.36 ? 26 : layout != 'Blink' ? '27' : '28');\r\n      }\r\n      // Add the postfix of \".x\" or \"+\" for approximate versions.\r\n      layout && (layout[1] += ' ' + (data += typeof data == 'number' ? '.x' : /[.+]/.test(data) ? '' : '+'));\r\n      // Obscure version for some Safari 1-2 releases.\r\n      if (name == 'Safari' && (!version || parseInt(version) > 45)) {\r\n        version = data;\r\n      }\r\n    }\r\n    // Detect Opera desktop modes.\r\n    if (name == 'Opera' &&  (data = /\\bzbov|zvav$/.exec(os))) {\r\n      name += ' ';\r\n      description.unshift('desktop mode');\r\n      if (data == 'zvav') {\r\n        name += 'Mini';\r\n        version = null;\r\n      } else {\r\n        name += 'Mobile';\r\n      }\r\n      os = os.replace(RegExp(' *' + data + '$'), '');\r\n    }\r\n    // Detect Chrome desktop mode.\r\n    else if (name == 'Safari' && /\\bChrome\\b/.exec(layout && layout[1])) {\r\n      description.unshift('desktop mode');\r\n      name = 'Chrome Mobile';\r\n      version = null;\r\n\r\n      if (/\\bOS X\\b/.test(os)) {\r\n        manufacturer = 'Apple';\r\n        os = 'iOS 4.3+';\r\n      } else {\r\n        os = null;\r\n      }\r\n    }\r\n    // Strip incorrect OS versions.\r\n    if (version && version.indexOf((data = /[\\d.]+$/.exec(os))) == 0 &&\r\n        ua.indexOf('/' + data + '-') > -1) {\r\n      os = trim(os.replace(data, ''));\r\n    }\r\n    // Add layout engine.\r\n    if (layout && !/\\b(?:Avant|Nook)\\b/.test(name) && (\r\n        /Browser|Lunascape|Maxthon/.test(name) ||\r\n        name != 'Safari' && /^iOS/.test(os) && /\\bSafari\\b/.test(layout[1]) ||\r\n        /^(?:Adobe|Arora|Breach|Midori|Opera|Phantom|Rekonq|Rock|Sleipnir|Web)/.test(name) && layout[1])) {\r\n      // Don't add layout details to description if they are falsey.\r\n      (data = layout[layout.length - 1]) && description.push(data);\r\n    }\r\n    // Combine contextual information.\r\n    if (description.length) {\r\n      description = ['(' + description.join('; ') + ')'];\r\n    }\r\n    // Append manufacturer to description.\r\n    if (manufacturer && product && product.indexOf(manufacturer) < 0) {\r\n      description.push('on ' + manufacturer);\r\n    }\r\n    // Append product to description.\r\n    if (product) {\r\n      description.push((/^on /.test(description[description.length - 1]) ? '' : 'on ') + product);\r\n    }\r\n    // Parse the OS into an object.\r\n    if (os) {\r\n      data = / ([\\d.+]+)$/.exec(os);\r\n      isSpecialCasedOS = data && os.charAt(os.length - data[0].length - 1) == '/';\r\n      os = {\r\n        'architecture': 32,\r\n        'family': (data && !isSpecialCasedOS) ? os.replace(data[0], '') : os,\r\n        'version': data ? data[1] : null,\r\n        'toString': function() {\r\n          var version = this.version;\r\n          return this.family + ((version && !isSpecialCasedOS) ? ' ' + version : '') + (this.architecture == 64 ? ' 64-bit' : '');\r\n        }\r\n      };\r\n    }\r\n    // Add browser/OS architecture.\r\n    if ((data = /\\b(?:AMD|IA|Win|WOW|x86_|x)64\\b/i.exec(arch)) && !/\\bi686\\b/i.test(arch)) {\r\n      if (os) {\r\n        os.architecture = 64;\r\n        os.family = os.family.replace(RegExp(' *' + data), '');\r\n      }\r\n      if (\r\n          name && (/\\bWOW64\\b/i.test(ua) ||\r\n          (useFeatures && /\\w(?:86|32)$/.test(nav.cpuClass || nav.platform) && !/\\bWin64; x64\\b/i.test(ua)))\r\n      ) {\r\n        description.unshift('32-bit');\r\n      }\r\n    }\r\n    // Chrome 39 and above on OS X is always 64-bit.\r\n    else if (\r\n        os && /^OS X/.test(os.family) &&\r\n        name == 'Chrome' && parseFloat(version) >= 39\r\n    ) {\r\n      os.architecture = 64;\r\n    }\r\n\r\n    ua || (ua = null);\r\n\r\n    /*------------------------------------------------------------------------*/\r\n\r\n    /**\r\n     * The platform object.\r\n     *\r\n     * @name platform\r\n     * @type Object\r\n     */\r\n    var platform = {};\r\n\r\n    /**\r\n     * The platform description.\r\n     *\r\n     * @memberOf platform\r\n     * @type string|null\r\n     */\r\n    platform.description = ua;\r\n\r\n    /**\r\n     * The name of the browser's layout engine.\r\n     *\r\n     * @memberOf platform\r\n     * @type string|null\r\n     */\r\n    platform.layout = layout && layout[0];\r\n\r\n    /**\r\n     * The name of the product's manufacturer.\r\n     *\r\n     * @memberOf platform\r\n     * @type string|null\r\n     */\r\n    platform.manufacturer = manufacturer;\r\n\r\n    /**\r\n     * The name of the browser/environment.\r\n     *\r\n     * @memberOf platform\r\n     * @type string|null\r\n     */\r\n    platform.name = name;\r\n\r\n    /**\r\n     * The alpha/beta release indicator.\r\n     *\r\n     * @memberOf platform\r\n     * @type string|null\r\n     */\r\n    platform.prerelease = prerelease;\r\n\r\n    /**\r\n     * The name of the product hosting the browser.\r\n     *\r\n     * @memberOf platform\r\n     * @type string|null\r\n     */\r\n    platform.product = product;\r\n\r\n    /**\r\n     * The browser's user agent string.\r\n     *\r\n     * @memberOf platform\r\n     * @type string|null\r\n     */\r\n    platform.ua = ua;\r\n\r\n    /**\r\n     * The browser/environment version.\r\n     *\r\n     * @memberOf platform\r\n     * @type string|null\r\n     */\r\n    platform.version = name && version;\r\n\r\n    /**\r\n     * The name of the operating system.\r\n     *\r\n     * @memberOf platform\r\n     * @type Object\r\n     */\r\n    platform.os = os || {\r\n\r\n      /**\r\n       * The CPU architecture the OS is built for.\r\n       *\r\n       * @memberOf platform.os\r\n       * @type number|null\r\n       */\r\n      'architecture': null,\r\n\r\n      /**\r\n       * The family of the OS.\r\n       *\r\n       * Common values include:\r\n       * \"Windows\", \"Windows Server 2008 R2 / 7\", \"Windows Server 2008 / Vista\",\r\n       * \"Windows XP\", \"OS X\", \"Ubuntu\", \"Debian\", \"Fedora\", \"Red Hat\", \"SuSE\",\r\n       * \"Android\", \"iOS\" and \"Windows Phone\"\r\n       *\r\n       * @memberOf platform.os\r\n       * @type string|null\r\n       */\r\n      'family': null,\r\n\r\n      /**\r\n       * The version of the OS.\r\n       *\r\n       * @memberOf platform.os\r\n       * @type string|null\r\n       */\r\n      'version': null,\r\n\r\n      /**\r\n       * Returns the OS string.\r\n       *\r\n       * @memberOf platform.os\r\n       * @returns {string} The OS string.\r\n       */\r\n      'toString': function() { return 'null'; }\r\n    };\r\n\r\n    platform.parse = parse;\r\n    platform.toString = toStringPlatform;\r\n\r\n    if (platform.version) {\r\n      description.unshift(version);\r\n    }\r\n    if (platform.name) {\r\n      description.unshift(name);\r\n    }\r\n    if (os && name && !(os == String(os).split(' ')[0] && (os == name.split(' ')[0] || product))) {\r\n      description.push(product ? '(' + os + ')' : 'on ' + os);\r\n    }\r\n    if (description.length) {\r\n      platform.description = description.join(' ');\r\n    }\r\n    return platform;\r\n  }\r\n\r\n  /*--------------------------------------------------------------------------*/\r\n\r\n  // Export platform.\r\n  var platform = parse();\r\n\r\n  // Some AMD build optimizers, like r.js, check for condition patterns like the following:\r\n  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {\r\n    // Expose platform on the global object to prevent errors when platform is\r\n    // loaded by a script tag in the presence of an AMD loader.\r\n    // See http://requirejs.org/docs/errors.html#mismatch for more details.\r\n    root.platform = platform;\r\n\r\n    // Define as an anonymous module so platform can be aliased through path mapping.\r\n    define(function() {\r\n      return platform;\r\n    });\r\n  }\r\n  // Check for `exports` after `define` in case a build optimizer adds an `exports` object.\r\n  else if (freeExports && freeModule) {\r\n    // Export for CommonJS support.\r\n    forOwn(platform, function(value, key) {\r\n      freeExports[key] = value;\r\n    });\r\n  }\r\n  else {\r\n    // Export to the global object.\r\n    root.platform = platform;\r\n  }\r\n}.call(this));\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/platform/platform.js\n// module id = 24\n// module chunks = 0","module.exports = __webpack_public_path__ + \"aa8cb5fbc710c7dded973a341ced2e66.js\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/file-loader!./~/paralleljs/lib/eval.js\n// module id = 25\n// module chunks = 0","/*! Native Promise Only\n    v0.8.1 (c) Kyle Simpson\n    MIT License: http://getify.mit-license.org\n*/\n\n(function UMD(name,context,definition){\n\t// special form of UMD for polyfilling across evironments\n\tcontext[name] = context[name] || definition();\n\tif (typeof module != \"undefined\" && module.exports) { module.exports = context[name]; }\n\telse if (typeof define == \"function\" && define.amd) { define(function $AMD$(){ return context[name]; }); }\n})(\"Promise\",typeof global != \"undefined\" ? global : this,function DEF(){\n\t/*jshint validthis:true */\n\t\"use strict\";\n\n\tvar builtInProp, cycle, scheduling_queue,\n\t\tToString = Object.prototype.toString,\n\t\ttimer = (typeof setImmediate != \"undefined\") ?\n\t\t\tfunction timer(fn) { return setImmediate(fn); } :\n\t\t\tsetTimeout\n\t;\n\n\t// dammit, IE8.\n\ttry {\n\t\tObject.defineProperty({},\"x\",{});\n\t\tbuiltInProp = function builtInProp(obj,name,val,config) {\n\t\t\treturn Object.defineProperty(obj,name,{\n\t\t\t\tvalue: val,\n\t\t\t\twritable: true,\n\t\t\t\tconfigurable: config !== false\n\t\t\t});\n\t\t};\n\t}\n\tcatch (err) {\n\t\tbuiltInProp = function builtInProp(obj,name,val) {\n\t\t\tobj[name] = val;\n\t\t\treturn obj;\n\t\t};\n\t}\n\n\t// Note: using a queue instead of array for efficiency\n\tscheduling_queue = (function Queue() {\n\t\tvar first, last, item;\n\n\t\tfunction Item(fn,self) {\n\t\t\tthis.fn = fn;\n\t\t\tthis.self = self;\n\t\t\tthis.next = void 0;\n\t\t}\n\n\t\treturn {\n\t\t\tadd: function add(fn,self) {\n\t\t\t\titem = new Item(fn,self);\n\t\t\t\tif (last) {\n\t\t\t\t\tlast.next = item;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tfirst = item;\n\t\t\t\t}\n\t\t\t\tlast = item;\n\t\t\t\titem = void 0;\n\t\t\t},\n\t\t\tdrain: function drain() {\n\t\t\t\tvar f = first;\n\t\t\t\tfirst = last = cycle = void 0;\n\n\t\t\t\twhile (f) {\n\t\t\t\t\tf.fn.call(f.self);\n\t\t\t\t\tf = f.next;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t})();\n\n\tfunction schedule(fn,self) {\n\t\tscheduling_queue.add(fn,self);\n\t\tif (!cycle) {\n\t\t\tcycle = timer(scheduling_queue.drain);\n\t\t}\n\t}\n\n\t// promise duck typing\n\tfunction isThenable(o) {\n\t\tvar _then, o_type = typeof o;\n\n\t\tif (o != null &&\n\t\t\t(\n\t\t\t\to_type == \"object\" || o_type == \"function\"\n\t\t\t)\n\t\t) {\n\t\t\t_then = o.then;\n\t\t}\n\t\treturn typeof _then == \"function\" ? _then : false;\n\t}\n\n\tfunction notify() {\n\t\tfor (var i=0; i<this.chain.length; i++) {\n\t\t\tnotifyIsolated(\n\t\t\t\tthis,\n\t\t\t\t(this.state === 1) ? this.chain[i].success : this.chain[i].failure,\n\t\t\t\tthis.chain[i]\n\t\t\t);\n\t\t}\n\t\tthis.chain.length = 0;\n\t}\n\n\t// NOTE: This is a separate function to isolate\n\t// the `try..catch` so that other code can be\n\t// optimized better\n\tfunction notifyIsolated(self,cb,chain) {\n\t\tvar ret, _then;\n\t\ttry {\n\t\t\tif (cb === false) {\n\t\t\t\tchain.reject(self.msg);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (cb === true) {\n\t\t\t\t\tret = self.msg;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tret = cb.call(void 0,self.msg);\n\t\t\t\t}\n\n\t\t\t\tif (ret === chain.promise) {\n\t\t\t\t\tchain.reject(TypeError(\"Promise-chain cycle\"));\n\t\t\t\t}\n\t\t\t\telse if (_then = isThenable(ret)) {\n\t\t\t\t\t_then.call(ret,chain.resolve,chain.reject);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tchain.resolve(ret);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcatch (err) {\n\t\t\tchain.reject(err);\n\t\t}\n\t}\n\n\tfunction resolve(msg) {\n\t\tvar _then, self = this;\n\n\t\t// already triggered?\n\t\tif (self.triggered) { return; }\n\n\t\tself.triggered = true;\n\n\t\t// unwrap\n\t\tif (self.def) {\n\t\t\tself = self.def;\n\t\t}\n\n\t\ttry {\n\t\t\tif (_then = isThenable(msg)) {\n\t\t\t\tschedule(function(){\n\t\t\t\t\tvar def_wrapper = new MakeDefWrapper(self);\n\t\t\t\t\ttry {\n\t\t\t\t\t\t_then.call(msg,\n\t\t\t\t\t\t\tfunction $resolve$(){ resolve.apply(def_wrapper,arguments); },\n\t\t\t\t\t\t\tfunction $reject$(){ reject.apply(def_wrapper,arguments); }\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\tcatch (err) {\n\t\t\t\t\t\treject.call(def_wrapper,err);\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\t\t\telse {\n\t\t\t\tself.msg = msg;\n\t\t\t\tself.state = 1;\n\t\t\t\tif (self.chain.length > 0) {\n\t\t\t\t\tschedule(notify,self);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcatch (err) {\n\t\t\treject.call(new MakeDefWrapper(self),err);\n\t\t}\n\t}\n\n\tfunction reject(msg) {\n\t\tvar self = this;\n\n\t\t// already triggered?\n\t\tif (self.triggered) { return; }\n\n\t\tself.triggered = true;\n\n\t\t// unwrap\n\t\tif (self.def) {\n\t\t\tself = self.def;\n\t\t}\n\n\t\tself.msg = msg;\n\t\tself.state = 2;\n\t\tif (self.chain.length > 0) {\n\t\t\tschedule(notify,self);\n\t\t}\n\t}\n\n\tfunction iteratePromises(Constructor,arr,resolver,rejecter) {\n\t\tfor (var idx=0; idx<arr.length; idx++) {\n\t\t\t(function IIFE(idx){\n\t\t\t\tConstructor.resolve(arr[idx])\n\t\t\t\t.then(\n\t\t\t\t\tfunction $resolver$(msg){\n\t\t\t\t\t\tresolver(idx,msg);\n\t\t\t\t\t},\n\t\t\t\t\trejecter\n\t\t\t\t);\n\t\t\t})(idx);\n\t\t}\n\t}\n\n\tfunction MakeDefWrapper(self) {\n\t\tthis.def = self;\n\t\tthis.triggered = false;\n\t}\n\n\tfunction MakeDef(self) {\n\t\tthis.promise = self;\n\t\tthis.state = 0;\n\t\tthis.triggered = false;\n\t\tthis.chain = [];\n\t\tthis.msg = void 0;\n\t}\n\n\tfunction Promise(executor) {\n\t\tif (typeof executor != \"function\") {\n\t\t\tthrow TypeError(\"Not a function\");\n\t\t}\n\n\t\tif (this.__NPO__ !== 0) {\n\t\t\tthrow TypeError(\"Not a promise\");\n\t\t}\n\n\t\t// instance shadowing the inherited \"brand\"\n\t\t// to signal an already \"initialized\" promise\n\t\tthis.__NPO__ = 1;\n\n\t\tvar def = new MakeDef(this);\n\n\t\tthis[\"then\"] = function then(success,failure) {\n\t\t\tvar o = {\n\t\t\t\tsuccess: typeof success == \"function\" ? success : true,\n\t\t\t\tfailure: typeof failure == \"function\" ? failure : false\n\t\t\t};\n\t\t\t// Note: `then(..)` itself can be borrowed to be used against\n\t\t\t// a different promise constructor for making the chained promise,\n\t\t\t// by substituting a different `this` binding.\n\t\t\to.promise = new this.constructor(function extractChain(resolve,reject) {\n\t\t\t\tif (typeof resolve != \"function\" || typeof reject != \"function\") {\n\t\t\t\t\tthrow TypeError(\"Not a function\");\n\t\t\t\t}\n\n\t\t\t\to.resolve = resolve;\n\t\t\t\to.reject = reject;\n\t\t\t});\n\t\t\tdef.chain.push(o);\n\n\t\t\tif (def.state !== 0) {\n\t\t\t\tschedule(notify,def);\n\t\t\t}\n\n\t\t\treturn o.promise;\n\t\t};\n\t\tthis[\"catch\"] = function $catch$(failure) {\n\t\t\treturn this.then(void 0,failure);\n\t\t};\n\n\t\ttry {\n\t\t\texecutor.call(\n\t\t\t\tvoid 0,\n\t\t\t\tfunction publicResolve(msg){\n\t\t\t\t\tresolve.call(def,msg);\n\t\t\t\t},\n\t\t\t\tfunction publicReject(msg) {\n\t\t\t\t\treject.call(def,msg);\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\t\tcatch (err) {\n\t\t\treject.call(def,err);\n\t\t}\n\t}\n\n\tvar PromisePrototype = builtInProp({},\"constructor\",Promise,\n\t\t/*configurable=*/false\n\t);\n\n\t// Note: Android 4 cannot use `Object.defineProperty(..)` here\n\tPromise.prototype = PromisePrototype;\n\n\t// built-in \"brand\" to signal an \"uninitialized\" promise\n\tbuiltInProp(PromisePrototype,\"__NPO__\",0,\n\t\t/*configurable=*/false\n\t);\n\n\tbuiltInProp(Promise,\"resolve\",function Promise$resolve(msg) {\n\t\tvar Constructor = this;\n\n\t\t// spec mandated checks\n\t\t// note: best \"isPromise\" check that's practical for now\n\t\tif (msg && typeof msg == \"object\" && msg.__NPO__ === 1) {\n\t\t\treturn msg;\n\t\t}\n\n\t\treturn new Constructor(function executor(resolve,reject){\n\t\t\tif (typeof resolve != \"function\" || typeof reject != \"function\") {\n\t\t\t\tthrow TypeError(\"Not a function\");\n\t\t\t}\n\n\t\t\tresolve(msg);\n\t\t});\n\t});\n\n\tbuiltInProp(Promise,\"reject\",function Promise$reject(msg) {\n\t\treturn new this(function executor(resolve,reject){\n\t\t\tif (typeof resolve != \"function\" || typeof reject != \"function\") {\n\t\t\t\tthrow TypeError(\"Not a function\");\n\t\t\t}\n\n\t\t\treject(msg);\n\t\t});\n\t});\n\n\tbuiltInProp(Promise,\"all\",function Promise$all(arr) {\n\t\tvar Constructor = this;\n\n\t\t// spec mandated checks\n\t\tif (ToString.call(arr) != \"[object Array]\") {\n\t\t\treturn Constructor.reject(TypeError(\"Not an array\"));\n\t\t}\n\t\tif (arr.length === 0) {\n\t\t\treturn Constructor.resolve([]);\n\t\t}\n\n\t\treturn new Constructor(function executor(resolve,reject){\n\t\t\tif (typeof resolve != \"function\" || typeof reject != \"function\") {\n\t\t\t\tthrow TypeError(\"Not a function\");\n\t\t\t}\n\n\t\t\tvar len = arr.length, msgs = Array(len), count = 0;\n\n\t\t\titeratePromises(Constructor,arr,function resolver(idx,msg) {\n\t\t\t\tmsgs[idx] = msg;\n\t\t\t\tif (++count === len) {\n\t\t\t\t\tresolve(msgs);\n\t\t\t\t}\n\t\t\t},reject);\n\t\t});\n\t});\n\n\tbuiltInProp(Promise,\"race\",function Promise$race(arr) {\n\t\tvar Constructor = this;\n\n\t\t// spec mandated checks\n\t\tif (ToString.call(arr) != \"[object Array]\") {\n\t\t\treturn Constructor.reject(TypeError(\"Not an array\"));\n\t\t}\n\n\t\treturn new Constructor(function executor(resolve,reject){\n\t\t\tif (typeof resolve != \"function\" || typeof reject != \"function\") {\n\t\t\t\tthrow TypeError(\"Not a function\");\n\t\t\t}\n\n\t\t\titeratePromises(Constructor,arr,function resolver(idx,msg){\n\t\t\t\tresolve(msg);\n\t\t\t},reject);\n\t\t});\n\t});\n\n\treturn Promise;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/native-promise-only/lib/npo.src.js\n// module id = 26\n// module chunks = 0","\"use strict\";\n\nexports.__esModule = true;\n/*eslint-env browser*/\n\nexports.default = {\n  pool: {\n    size: navigator.hardwareConcurrency || 8\n  }\n};\n//# sourceMappingURL=defaults.browser.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/threads/lib/defaults.browser.js\n// module id = 28\n// module chunks = 0","'use strict';\n\nexports.__esModule = true;\n\nvar _os = require('os');\n\nexports.default = {\n  pool: {\n    size: (0, _os.cpus)().length\n  }\n};\n//# sourceMappingURL=defaults.node.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/threads/lib/defaults.node.js\n// module id = 29\n// module chunks = 0","'use strict';\n\nexports.__esModule = true;\n\nvar _eventemitter = require('eventemitter3');\n\nvar _eventemitter2 = _interopRequireDefault(_eventemitter);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Job = function (_EventEmitter) {\n  _inherits(Job, _EventEmitter);\n\n  function Job(pool) {\n    _classCallCheck(this, Job);\n\n    var _this = _possibleConstructorReturn(this, _EventEmitter.call(this));\n\n    _this.pool = pool;\n    _this.thread = null;\n\n    _this.runArgs = [];\n    _this.sendArgs = [];\n\n    pool.emit('newJob', _this);\n    return _this;\n  }\n\n  Job.prototype.run = function run() {\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    if (args.length === 0) {\n      throw new Error('Cannot call .run() without arguments.');\n    }\n\n    this.runArgs = args;\n    return this;\n  };\n\n  Job.prototype.send = function send() {\n    if (this.runArgs.length === 0) {\n      throw new Error('Cannot .send() before .run().');\n    }\n\n    for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    this.sendArgs = args;\n\n    this.emit('readyToRun');\n    return this;\n  };\n\n  Job.prototype.executeOn = function executeOn(thread) {\n    var _thread$once$once$run, _thread$once$once;\n\n    (_thread$once$once$run = (_thread$once$once = thread.once('message', this.emit.bind(this, 'done')).once('error', this.emit.bind(this, 'error'))).run.apply(_thread$once$once, this.runArgs)).send.apply(_thread$once$once$run, this.sendArgs);\n\n    this.thread = thread;\n\n    this.emit('threadChanged');\n    return this;\n  };\n\n  Job.prototype.promise = function promise() {\n    var _this2 = this;\n\n    // Always return a promise\n    return new Promise(function (resolve) {\n      // If the thread isn't set, listen for the threadChanged event\n      if (!_this2.thread) {\n        _this2.once('threadChanged', function () {\n          resolve(_this2.thread.promise());\n        });\n      } else {\n        resolve(_this2.thread.promise());\n      }\n    });\n  };\n\n  return Job;\n}(_eventemitter2.default);\n\nexports.default = Job;\n//# sourceMappingURL=job.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/threads/lib/job.js\n// module id = 30\n// module chunks = 0","'use strict';\n\nexports.__esModule = true;\n\nvar _eventemitter = require('eventemitter3');\n\nvar _eventemitter2 = _interopRequireDefault(_eventemitter);\n\nvar _job = require('./job');\n\nvar _job2 = _interopRequireDefault(_job);\n\nvar _defaults = require('./defaults');\n\nvar _defaults2 = _interopRequireDefault(_defaults);\n\nvar _ = require('./');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Pool = function (_EventEmitter) {\n  _inherits(Pool, _EventEmitter);\n\n  function Pool(threads) {\n    _classCallCheck(this, Pool);\n\n    var _this = _possibleConstructorReturn(this, _EventEmitter.call(this));\n\n    _this.threads = Pool.spawn(threads || _defaults2.default.pool.size);\n    _this.idleThreads = _this.threads.slice();\n    _this.jobQueue = [];\n    _this.runArgs = [];\n\n    _this.on('newJob', function (job) {\n      return _this.handleNewJob(job);\n    });\n    _this.on('threadAvailable', function () {\n      return _this.dequeue();\n    });\n    return _this;\n  }\n\n  Pool.prototype.run = function run() {\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    this.runArgs = args;\n    return this;\n  };\n\n  Pool.prototype.send = function send() {\n    if (!this.runArgs) {\n      throw new Error('Pool.send() called without prior Pool.run(). You need to define what to run first.');\n    }\n\n    var job = new _job2.default(this);\n    job.run.apply(job, this.runArgs);\n    return job.send.apply(job, arguments);\n  };\n\n  Pool.prototype.killAll = function killAll() {\n    this.threads.forEach(function (thread) {\n      thread.kill();\n    });\n  };\n\n  Pool.prototype.queueJob = function queueJob(job) {\n    this.jobQueue.push(job);\n    this.dequeue();\n  };\n\n  Pool.prototype.dequeue = function dequeue() {\n    var _this2 = this;\n\n    if (this.jobQueue.length === 0 || this.idleThreads.length === 0) {\n      return;\n    }\n\n    var job = this.jobQueue.shift();\n    var thread = this.idleThreads.shift();\n\n    job.once('done', function () {\n      for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      return _this2.handleJobSuccess.apply(_this2, [thread, job].concat(args));\n    }).once('error', function () {\n      for (var _len3 = arguments.length, args = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        args[_key3] = arguments[_key3];\n      }\n\n      return _this2.handleJobError.apply(_this2, [thread, job].concat(args));\n    });\n\n    job.executeOn(thread);\n  };\n\n  Pool.prototype.handleNewJob = function handleNewJob(job) {\n    var _this3 = this;\n\n    this.lastCreatedJob = job;\n    job.once('readyToRun', function () {\n      return _this3.queueJob(job);\n    }); // triggered by job.send()\n  };\n\n  Pool.prototype.handleJobSuccess = function handleJobSuccess(thread, job) {\n    for (var _len4 = arguments.length, responseArgs = Array(_len4 > 2 ? _len4 - 2 : 0), _key4 = 2; _key4 < _len4; _key4++) {\n      responseArgs[_key4 - 2] = arguments[_key4];\n    }\n\n    this.emit.apply(this, ['done', job].concat(responseArgs));\n    this.handleJobDone(thread);\n  };\n\n  Pool.prototype.handleJobError = function handleJobError(thread, job, error) {\n    this.emit('error', job, error);\n    this.handleJobDone(thread);\n  };\n\n  Pool.prototype.handleJobDone = function handleJobDone(thread) {\n    var _this4 = this;\n\n    this.idleThreads.push(thread);\n    this.emit('threadAvailable');\n\n    if (this.idleThreads.length === this.threads.length) {\n      // run deferred to give other job.on('done') handlers time to run first\n      setTimeout(function () {\n        _this4.emit('finished');\n      }, 0);\n    }\n  };\n\n  return Pool;\n}(_eventemitter2.default);\n\nexports.default = Pool;\n\n\nPool.spawn = function (threadCount) {\n  var threads = [];\n\n  for (var threadIndex = 0; threadIndex < threadCount; threadIndex++) {\n    threads.push((0, _.spawn)());\n  }\n\n  return threads;\n};\n//# sourceMappingURL=pool.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/threads/lib/pool.js\n// module id = 31\n// module chunks = 0","'use strict';\n\nexports.__esModule = true;\n\nvar _slaveCode = require('./slave-code');\n\nvar _slaveCode2 = _interopRequireDefault(_slaveCode);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar slaveCodeDataUri = 'data:text/javascript;charset=utf-8,' + encodeURI(_slaveCode2.default);\nvar createBlobURL = window.createBlobURL || window.createObjectURL;\n\nif (!createBlobURL) {\n  var URL = window.URL || window.webkitURL;\n\n  if (URL) {\n    createBlobURL = URL.createObjectURL;\n  } else {\n    throw new Error('No Blob creation implementation found.');\n  }\n}\n\nif (typeof window.BlobBuilder === 'function' && typeof createBlobURL === 'function') {\n  var blobBuilder = new window.BlobBuilder();\n  blobBuilder.append(_slaveCode2.default);\n  slaveCodeDataUri = createBlobURL(blobBuilder.getBlob());\n} else if (typeof window.Blob === 'function' && typeof createBlobURL === 'function') {\n  var blob = new window.Blob([_slaveCode2.default], { type: 'text/javascript' });\n  slaveCodeDataUri = createBlobURL(blob);\n}\n\nexports.default = slaveCodeDataUri;\n//# sourceMappingURL=slave-code-uri.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/threads/lib/worker.browser/slave-code-uri.js\n// module id = 32\n// module chunks = 0","module.exports = \"/*eslint-env worker*/\\n/*global importScripts*/\\n/*eslint-disable no-console*/\\nself.module = {\\n  exports : function() {\\n    if (console) { console.error('No thread logic initialized.'); }\\n  }\\n};\\n\\nfunction handlerDone() {\\n  var args = Array.prototype.slice.call(arguments, 0);\\n  this.postMessage({ response : args });\\n}\\n\\nfunction handlerProgress(progress) {\\n  this.postMessage({ progress : progress });\\n}\\n\\nfunction handlerDoneTransfer() {\\n  var args = Array.prototype.slice.call(arguments);\\n  var lastArg = args.pop();\\n\\n  if (!(lastArg instanceof Array) && this.console) {\\n    console.error('Expected 2nd parameter of <doneCallback>.transfer() to be an array. Got:', lastArg);\\n  }\\n\\n  this.postMessage({ response : args }, lastArg);\\n}\\n\\nself.onmessage = function (event) {\\n  var scripts = event.data.scripts;\\n  if (scripts && scripts.length > 0 && typeof importScripts !== 'function') {\\n    throw new Error('importScripts() not supported.');\\n  }\\n\\n  if (event.data.initByScripts) {\\n    importScripts.apply(null, scripts);\\n  }\\n\\n  if (event.data.initByMethod) {\\n    var method = event.data.method;\\n    this.module.exports = Function.apply(null, method.args.concat(method.body));\\n\\n    if (scripts && scripts.length > 0) {\\n      importScripts.apply(null, scripts);\\n    }\\n  }\\n\\n  if (event.data.doRun) {\\n    var handler = this.module.exports;\\n    if (typeof handler !== 'function') {\\n      throw new Error('Cannot run thread logic. No handler has been exported.');\\n    }\\n\\n    var preparedHandlerDone = handlerDone.bind(this);\\n    preparedHandlerDone.transfer = handlerDoneTransfer.bind(this);\\n\\n    handler.call(this, event.data.param, preparedHandlerDone, handlerProgress.bind(this));\\n  }\\n}.bind(self);\\n\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/threads/lib/worker.browser/slave-code.js\n// module id = 33\n// module chunks = 0","'use strict';\n\nexports.__esModule = true;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _eventemitter = require('eventemitter3');\n\nvar _eventemitter2 = _interopRequireDefault(_eventemitter);\n\nvar _slaveCodeUri = require('./slave-code-uri');\n\nvar _slaveCodeUri2 = _interopRequireDefault(_slaveCodeUri);\n\nvar _config = require('../config');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nif (_typeof(window.Worker) !== 'object' && typeof window.Worker !== 'function') {\n  throw new Error('Browser does not support web workers!');\n}\n\nfunction joinPaths(path1, path2) {\n  if (!path1 || !path2) {\n    return path1 + path2;\n  } else if (path1.charAt(path1.length - 1) === '/' || path2.charAt(0) === '/') {\n    return path1 + path2;\n  } else {\n    return path1 + '/' + path2;\n  }\n}\n\nfunction prependScriptUrl(scriptUrl) {\n  var prefix = (0, _config.getConfig)().basepath.web;\n  return prefix ? joinPaths(prefix, scriptUrl) : scriptUrl;\n}\n\nfunction convertToArray(input) {\n  var outputArray = [];\n  var index = 0;\n\n  while (typeof input[index] !== 'undefined') {\n    outputArray.push(input[index]);\n    index++;\n  }\n\n  return outputArray;\n}\n\nfunction logError(error) {\n  if (error.stack) {\n    console.error(error.stack); // eslint-disable-line no-console\n  } else if (error.message && error.filename && error.lineno) {\n    var fileName = error.filename.match(/^data:text\\/javascript/) && error.filename.length > 50 ? error.filename.substr(0, 50) + '...' : error.filename;\n    console.error(error.message + ' @' + fileName + ':' + error.lineno); // eslint-disable-line no-console\n  } else {\n    console.error(error); // eslint-disable-line no-console\n  }\n}\n\nvar Worker = function (_EventEmitter) {\n  _inherits(Worker, _EventEmitter);\n\n  function Worker() {\n    var initialScript = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n    var importScripts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n\n    _classCallCheck(this, Worker);\n\n    // used by `run()` to decide if the worker must be re-initialized\n    var _this = _possibleConstructorReturn(this, _EventEmitter.call(this));\n\n    _this.currentRunnable = null;\n    _this.currentImportScripts = [];\n\n    _this.initWorker();\n    _this.worker.addEventListener('message', _this.handleMessage.bind(_this));\n    _this.worker.addEventListener('error', _this.handleError.bind(_this));\n\n    if (initialScript) {\n      _this.run(initialScript, importScripts);\n    }\n    return _this;\n  }\n\n  Worker.prototype.initWorker = function initWorker() {\n    try {\n      this.worker = new window.Worker(_slaveCodeUri2.default);\n    } catch (error) {\n      var slaveScriptUrl = (0, _config.getConfig)().fallback.slaveScriptUrl;\n      if (slaveScriptUrl) {\n        // try using the slave script file instead of the data URI\n        this.worker = new window.Worker(_slaveCodeUri2.default);\n      } else {\n        // re-throw\n        throw error;\n      }\n    }\n  };\n\n  Worker.prototype.run = function run(toRun) {\n    var importScripts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n\n    if (this.alreadyInitializedToRun(toRun, importScripts)) {\n      // don't re-initialize with the new logic if it already has been\n      return this;\n    }\n\n    if (typeof toRun === 'function') {\n      this.runMethod(toRun, importScripts);\n    } else {\n      this.runScripts(toRun, importScripts);\n    }\n\n    this.currentRunnable = toRun;\n    this.currentImportScripts = importScripts;\n\n    return this;\n  };\n\n  Worker.prototype.runMethod = function runMethod(method, importScripts) {\n    var methodStr = method.toString();\n    var args = methodStr.substring(methodStr.indexOf('(') + 1, methodStr.indexOf(')')).split(',');\n    var body = methodStr.substring(methodStr.indexOf('{') + 1, methodStr.lastIndexOf('}'));\n\n    this.worker.postMessage({\n      initByMethod: true,\n      method: { args: args, body: body },\n      scripts: importScripts.map(prependScriptUrl)\n    });\n  };\n\n  Worker.prototype.runScripts = function runScripts(script, importScripts) {\n    if (!script) {\n      throw new Error('Must pass a function or a script URL to run().');\n    }\n\n    // attention: array for browser, single script for node\n    this.worker.postMessage({\n      initByScripts: true,\n      scripts: importScripts.concat([script]).map(prependScriptUrl)\n    });\n  };\n\n  Worker.prototype.send = function send(param) {\n    var transferables = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n\n    this.worker.postMessage({\n      doRun: true,\n      param: param\n    }, transferables);\n    return this;\n  };\n\n  Worker.prototype.kill = function kill() {\n    this.worker.terminate();\n    this.emit('exit');\n    return this;\n  };\n\n  Worker.prototype.promise = function promise() {\n    var _this2 = this;\n\n    return new Promise(function (resolve, reject) {\n      var resolved = void 0,\n          rejected = void 0;\n      resolved = function resolved(result) {\n        _this2.removeListener('error', rejected);\n        resolve(result);\n      };\n      rejected = function rejected(err) {\n        _this2.removeListener('message', resolved);\n        reject(err);\n      };\n\n      _this2.once('message', resolved).once('error', rejected);\n    });\n  };\n\n  Worker.prototype.alreadyInitializedToRun = function alreadyInitializedToRun(toRun, importScripts) {\n    var runnablesMatch = this.currentRunnable === toRun;\n    var importScriptsMatch = this.currentImportScripts === importScripts || importScripts.length === 0 && this.currentImportScripts.length === 0;\n\n    return runnablesMatch && importScriptsMatch;\n  };\n\n  Worker.prototype.handleMessage = function handleMessage(event) {\n    if (event.data.error) {\n      this.handleError(event.data.error);\n    } else if (event.data.progress) {\n      this.handleProgress(event.data.progress);\n    } else {\n      var responseArgs = convertToArray(event.data.response);\n      this.emit.apply(this, ['message'].concat(responseArgs));\n      this.emit.apply(this, ['done'].concat(responseArgs)); // this one is just for convenience\n    }\n  };\n\n  Worker.prototype.handleProgress = function handleProgress(progress) {\n    this.emit('progress', progress);\n  };\n\n  Worker.prototype.handleError = function handleError(error) {\n    if (!this.listeners('error', true)) {\n      logError(error);\n    }\n\n    if (error.preventDefault) {\n      error.preventDefault();\n    }\n\n    this.emit('error', error);\n  };\n\n  return Worker;\n}(_eventemitter2.default);\n\nexports.default = Worker;\n//# sourceMappingURL=worker.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/threads/lib/worker.browser/worker.js\n// module id = 34\n// module chunks = 0","'use strict';\n\n/*eslint-env node*/\n/*\n * This file is only a stub to make './worker' resolve the './worker.node/worker' module.\n * Loading the browser worker into the browser bundle is done in the gulpfile by\n * configuring a browserify override.\n */\n\nif (typeof process !== 'undefined' && 'pid' in process) {\n  module.exports = require('./worker.node/worker');\n} else {\n  module.exports = require('./worker.browser/worker');\n}\n//# sourceMappingURL=worker.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/threads/lib/worker.js\n// module id = 35\n// module chunks = 0","'use strict';\n\nexports.__esModule = true;\n\nvar _child_process = require('child_process');\n\nvar _child_process2 = _interopRequireDefault(_child_process);\n\nvar _path = require('path');\n\nvar _path2 = _interopRequireDefault(_path);\n\nvar _eventemitter = require('eventemitter3');\n\nvar _eventemitter2 = _interopRequireDefault(_eventemitter);\n\nvar _config = require('../config');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Worker = function (_EventEmitter) {\n  _inherits(Worker, _EventEmitter);\n\n  function Worker(initialRunnable) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    _classCallCheck(this, Worker);\n\n    var _this = _possibleConstructorReturn(this, _EventEmitter.call(this));\n\n    _this.slave = _child_process2.default.fork(_path2.default.join(__dirname, 'slave.js'), [], options);\n    _this.slave.on('message', _this.handleMessage.bind(_this));\n    _this.slave.on('error', _this.handleError.bind(_this));\n    _this.slave.on('exit', _this.emit.bind(_this, 'exit'));\n\n    if (initialRunnable) {\n      _this.run(initialRunnable);\n    }\n    return _this;\n  }\n\n  Worker.prototype.run = function run(toRun) {\n    if (typeof toRun === 'function') {\n      this.runMethod(toRun);\n    } else {\n      this.runScript(toRun);\n    }\n    return this;\n  };\n\n  Worker.prototype.runMethod = function runMethod(method) {\n    this.slave.send({\n      initByMethod: true,\n      method: method.toString()\n    });\n  };\n\n  Worker.prototype.runScript = function runScript(script) {\n    if (!script) {\n      throw new Error('Must pass a function or a script path to run().');\n    }\n\n    var prefixedScriptPath = _path2.default.join((0, _config.getConfig)().basepath.node, script);\n\n    // attention: single script for node, array for browser\n    this.slave.send({\n      initByScript: true,\n      script: _path2.default.resolve(prefixedScriptPath)\n    });\n  };\n\n  Worker.prototype.send = function send(param) {\n    this.slave.send({\n      doRun: true,\n      param: param\n    });\n    return this;\n  };\n\n  Worker.prototype.kill = function kill() {\n    this.slave.kill();\n    return this;\n  };\n\n  Worker.prototype.promise = function promise() {\n    var _this2 = this;\n\n    return new Promise(function (resolve, reject) {\n      var resolved = void 0,\n          rejected = void 0;\n      resolved = function resolved(result) {\n        _this2.removeListener('error', rejected);\n        resolve(result);\n      };\n      rejected = function rejected(err) {\n        _this2.removeListener('message', resolved);\n        reject(err);\n      };\n\n      _this2.once('message', resolved).once('error', rejected);\n    });\n  };\n\n  Worker.prototype.handleMessage = function handleMessage(message) {\n    if (message.error) {\n      var error = new Error(message.error.message);\n      error.stack = message.error.stack;\n\n      this.handleError(error);\n    } else if (message.progress) {\n      this.handleProgress(message.progress);\n    } else {\n      this.emit.apply(this, ['message'].concat(message.response));\n      this.emit.apply(this, ['done'].concat(message.response)); // this one is just for convenience\n    }\n  };\n\n  Worker.prototype.handleProgress = function handleProgress(progress) {\n    this.emit('progress', progress);\n  };\n\n  Worker.prototype.handleError = function handleError(error) {\n    if (!this.listeners('error', true)) {\n      console.error(error.stack || error); // eslint-disable-line no-console\n    }\n    this.emit('error', error);\n  };\n\n  return Worker;\n}(_eventemitter2.default);\n\nexports.default = Worker;\n//# sourceMappingURL=worker.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/threads/lib/worker.node/worker.js\n// module id = 36\n// module chunks = 0","import * as _ from \"lodash\";\n/* tslint:disable:no-var-requires */\nimport * as benchmark from \"benchmark\";\nconst platform = require(\"platform\");\n/* tslint:enable:no-var-requires */\n\nimport {mandelbrot as transpiledParallelMandelbrot} from \"./transpiled/mandelbrot\";\nimport {syncKnightTours, parallelKnightTours as transpiledParallelKnightTours} from \"./transpiled/knights-tour\";\nimport {syncMonteCarlo as simJsMonteCarlo, parallelMonteCarlo as simJsParallelMonteCarlo} from \"./transpiled/monte-carlo\";\n\nimport {parallelKnightTours as dynamicParallelKnightTours} from \"./dynamic/knights-tour\";\nimport {createMandelOptions, parallelMandelbrot as dynamicParallelMandelbrot, syncMandelbrot} from \"./dynamic/mandelbrot\";\nimport {IMonteCarloSimulationOptions, syncMonteCarlo as randomMonteCarlo, parallelMonteCarlo as randomParallelMonteCarlo, IProject} from \"./dynamic/monte-carlo\";\n\nimport {parallelJSMandelbrot} from \"./paralleljs/mandelbrot\";\nimport {parallelJSMonteCarlo} from \"./paralleljs/monte-carlo\";\nimport {parallelJSKnightTours} from \"./paralleljs/knights-tour\";\n\nimport {threadsMonteCarlo} from \"./threads/monte-carlo\";\nimport {threadsMandelbrot} from \"./threads/mandelbrot\";\nimport {threadsKnightTours} from \"./threads/knights-tour\";\nimport {Pool} from \"threads\";\n\nlet Benchmark = (benchmark as any).runInContext({ _ });\n(window as any).Benchmark = Benchmark;\n\nconst runButton = document.querySelector(\"#run\") as HTMLInputElement;\nconst outputTable = document.querySelector(\"#output-table\") as HTMLTableElement;\nconst jsonOutputField = document.querySelector(\"#json-output\") as HTMLElement;\n\nconst setCheckboxes = document.querySelectorAll('[id*=\"-set\"]') as NodeListOf<HTMLInputElement>;\n\nconst knightRunner6x6 = document.querySelector(\"#knight-runner-6-6\") as HTMLInputElement;\n\ntype Deferred = { resolve: () => void };\n\nfunction addAsyncTest(suite: benchmark.Suite, optionsOrTitle: string | (benchmark.Options & { fn: (this: undefined) => PromiseLike<any> }), fn?: ((this: undefined) => PromiseLike<any>)) {\n    const options: benchmark.Options = typeof(optionsOrTitle) === \"string\" ? { name: optionsOrTitle, fn} : optionsOrTitle;\n    const asyncFn = options.fn as Function;\n\n    options.defer = true;\n    options.fn = function (this: benchmark, deferred: Deferred) {\n        const benchmark = this;\n        asyncFn.apply(undefined, [])\n            .then(function () { deferred.resolve() },\n                function (error: any) {\n                    console.error(error);\n                    benchmark.error = error;\n                    deferred.resolve();\n                }\n            );\n    };\n\n    return suite.add(options);\n}\n\n/**\n * Helper for threadjs tests. Creates the thread pool before the tests are run. A new thread pool for each test run is needed\n * to avoid caching of the environment across runs.\n */\nfunction addThreadJsTest(this: any, suite: benchmark.Suite, name: string, fn: (...args: any[]) => void, ...args: any[]) {\n    let argsWithPool: any[];\n    let pool: Pool;\n    addAsyncTest(suite, {\n        name,\n        setup: function () {\n            pool = new Pool();\n            argsWithPool = args.slice();\n            argsWithPool.push(pool);\n        },\n        fn: () => fn.apply(this, argsWithPool),\n        teardown: function () {\n            if (pool) {\n                pool.killAll();\n            }\n        }\n    });\n}\n\nfunction addKnightBoardTests(suite: benchmark.Suite) {\n    const boardSizes = knightRunner6x6.checked ? [5, 6] : [5];\n\n    for (const boardSize of boardSizes) {\n        const title = `Knights Tour (${boardSize}x${boardSize})`;\n        suite.add(`sync: ${title}`, function () {\n            syncKnightTours({x: 0, y: 0}, boardSize);\n        });\n\n        addAsyncTest(suite, `parallel-dynamic: ${title}`, () => dynamicParallelKnightTours({x: 0, y: 0}, boardSize));\n        addAsyncTest(suite, `parallel-transpiled: ${title}`, () => transpiledParallelKnightTours({x: 0, y: 0}, boardSize));\n        addAsyncTest(suite, `paralleljs: ${title}`, () => parallelJSKnightTours({x: 0, y: 0}, boardSize));\n        addThreadJsTest(suite, `threadsjs: ${title}`, threadsKnightTours, {x: 0, y: 0}, boardSize);\n    }\n}\n\nfunction addMonteCarloTest(suite: benchmark.Suite, options: IMonteCarloSimulationOptions & {numberOfProjects: number, numRuns: number}) {\n    const runOptions = _.extend(options, {\n        projects: createProjects(options.numberOfProjects)\n    });\n\n    const configName = `(projects: ${options.numberOfProjects}, runs: ${options.numRuns.toLocaleString()})`;\n\n    suite.add(`sync: Monte Carlo Math.random ${configName}`, function () {\n        randomMonteCarlo(options);\n    });\n\n    addAsyncTest(suite, `parallel-dynamic: Monte Carlo Math.random ${configName}`, () => randomParallelMonteCarlo(runOptions));\n    suite.add(`sync: Monte Carlo simjs ${configName}`, function () {\n        simJsMonteCarlo(options);\n    });\n\n    addAsyncTest(suite, `parallel-transpiled: Monte Carlo simjs ${configName}`, () => simJsParallelMonteCarlo(runOptions));\n    addAsyncTest(suite, `paralleljs: Monte Carlo simjs ${configName}`, () => parallelJSMonteCarlo(runOptions));\n    addThreadJsTest(suite, `threadsjs: Monte Carlo simjs ${configName}`, threadsMonteCarlo, runOptions);\n}\n\nfunction addMonteCarloTests(suite: benchmark.Suite) {\n    const oneMillionRuns = (document.querySelector(\"#monte-carlo-1m\") as HTMLInputElement).checked;\n    const monteCarloOptions = {\n        investmentAmount: 620000,\n        numYears: 15,\n        performance: 0.0340000,\n        seed: 10,\n        volatility: 0.0896000\n    };\n\n    const runs = [10**4, 10**5];\n    if (oneMillionRuns) {\n        runs.push(10**6);\n    }\n\n    for (const numRuns of runs) {\n        for (const numberOfProjects of  [1, 4, 8, 16]) {\n            const options = _.extend({}, monteCarloOptions, { numberOfProjects, numRuns });\n            addMonteCarloTest(suite, options);\n        }\n    }\n}\n\nfunction addMandelbrotTests(suite: benchmark.Suite) {\n    const mandelbrotHeight = parseInt((document.querySelector(\"#mandelbrot-height\") as HTMLInputElement).value, 10);\n    const mandelbrotWidth = parseInt((document.querySelector(\"#mandelbrot-width\") as HTMLInputElement).value, 10);\n    const mandelbrotIterations = parseInt((document.querySelector(\"#mandelbrot-iterations\") as HTMLInputElement).value, 10);\n    const onlyDefaultScheduling = (document.querySelector(\"#mandelbrot-only-default-scheduling\") as HTMLInputElement).checked;\n\n    const mandelbrotOptions = createMandelOptions(mandelbrotWidth, mandelbrotHeight, mandelbrotIterations);\n\n    suite.add(`sync: Mandelbrot ${mandelbrotWidth}x${mandelbrotHeight}, ${mandelbrotIterations}`, function () {\n        syncMandelbrot(mandelbrotOptions, () => undefined);\n    });\n\n    const  taskSizes = onlyDefaultScheduling ? [undefined] : [undefined, 1, 150, 312, 625, 1250, 2500];\n    for (const valuesPerTask of taskSizes) {\n        const parallelOptions = { maxValuesPerTask: valuesPerTask, minValuesPerTask: valuesPerTask };\n        let title = `Mandelbrot ${mandelbrotOptions.imageWidth}x${mandelbrotOptions.imageHeight}, ${mandelbrotOptions.iterations}`;\n        if (valuesPerTask) {\n            title += ` (${valuesPerTask})`;\n        }\n\n        addAsyncTest(suite, `parallel-dynamic: ${title}`, () => dynamicParallelMandelbrot(mandelbrotOptions, parallelOptions));\n        addAsyncTest(suite, `parallel-transpiled: ${title}`, () => transpiledParallelMandelbrot(mandelbrotOptions, parallelOptions));\n    }\n\n    addAsyncTest(suite, `paralleljs: Mandelbrot ${mandelbrotWidth}x${mandelbrotHeight}, ${mandelbrotIterations}`, () => parallelJSMandelbrot(mandelbrotOptions));\n    addThreadJsTest(suite, `threadsjs: Mandelbrot ${mandelbrotWidth}x${mandelbrotHeight}, ${mandelbrotIterations}`, threadsMandelbrot, mandelbrotOptions)\n}\n\nfunction measure() {\n    const runMonteCarlo = (document.querySelector(\"#monte-carlo\") as HTMLInputElement).checked;\n    const runMandelbrot = (document.querySelector(\"#mandelbrot-field\") as HTMLInputElement).checked;\n    const runKnightTour = (document.querySelector(\"#knight-runner\") as HTMLInputElement).checked;\n    const allTestsSuite = new Benchmark.Suite();\n\n    if (runMandelbrot) {\n        addMandelbrotTests(allTestsSuite);\n    }\n    if (runKnightTour) {\n        addKnightBoardTests(allTestsSuite);\n    }\n    if (runMonteCarlo) {\n        addMonteCarloTests(allTestsSuite);\n    }\n\n    const suite = allTestsSuite.filter((benchmark: benchmark  & {name: string }) => {\n        for (let i = 0; i < setCheckboxes.length; ++i) {\n            const checkbox = setCheckboxes[i];\n            const parts = checkbox.id.split(\"-\");\n            const name = parts.slice(0, parts.length - 1).join(\"-\");\n\n            if (checkbox.checked && benchmark.name.startsWith(name)) {\n                return true;\n            }\n        }\n        return false;\n    });\n\n    suite.forEach((benchmark: benchmark) => {\n        const index = suite.indexOf(benchmark);\n        benchmark.on(\"cycle\", () => appendTestResults(benchmark, index));\n    });\n\n    suite.on(\"cycle\", function (event: benchmark.Event) {\n        const benchmark = event.target as (benchmark);\n        const index = (event.currentTarget as Array<benchmark>).indexOf(benchmark);\n        appendTestResults(benchmark, index);\n    });\n\n    suite.on(\"complete\", function (event: benchmark.Event) {\n        const benchmarks = (event.currentTarget as benchmark.Suite).map((benchmark: benchmark & {name: string }) => {\n            return {\n                info: benchmark.toString,\n                name: benchmark.name,\n                stats: benchmark.stats,\n                times: benchmark.times\n            };\n        });\n\n        jsonOutputField.textContent = JSON.stringify({ benchmarks, platform}, undefined, \"    \");\n        runButton.disabled = false;\n    });\n\n    suite.on(\"start\", initResultTable);\n\n    suite.run({async: true });\n}\n\nrunButton.addEventListener(\"click\", function (event: MouseEvent) {\n    event.preventDefault();\n    runButton.disabled = true;\n    measure();\n});\n\nfunction initResultTable(event: benchmark.Event) {\n    clearOutputTable();\n\n    function clearOutputTable() {\n        while (outputTable.tBodies.length > 0) {\n            outputTable.removeChild(outputTable.tBodies[0]);\n        }\n    }\n\n    const body = outputTable.createTBody();\n    (event.currentTarget as Array<benchmark.Options>).forEach(suite => {\n        const row = body.insertRow();\n        const [set, ...nameParts] = suite.name!.split(\":\");\n\n        row.insertCell().textContent = set;\n        row.insertCell().textContent = nameParts.join(\":\");\n        const columns = (outputTable.tHead.rows[0] as HTMLTableRowElement).cells.length;\n        for (let i = 0; i < columns; ++i) {\n            row.insertCell();\n        }\n    });\n}\n\nfunction appendTestResults(benchmark: benchmark, index: number) {\n    const body = outputTable.tBodies[0] as HTMLTableSectionElement;\n    const row = body.rows[index] as HTMLTableRowElement;\n\n    row.cells[2].textContent = benchmark.stats.deviation.toFixed(4);\n    row.cells[3].textContent = benchmark.stats.mean.toFixed(4);\n    row.cells[4].textContent = benchmark.stats.moe.toFixed(4);\n    row.cells[5].textContent = benchmark.stats.rme.toFixed(4);\n    row.cells[6].textContent = benchmark.stats.sem.toFixed(4);\n    row.cells[7].textContent = benchmark.stats.variance.toFixed(4);\n    row.cells[8].textContent = benchmark.stats.sample.length.toFixed(0);\n    row.cells[9].textContent = benchmark.hz.toFixed(4);\n}\n\nfunction createProjects(count: number): IProject[] {\n    const projects: IProject[] = [];\n\n    for (let i = 0; i < count; ++i) {\n        projects.push({\n            startYear: Math.round(Math.random() * 15),\n            totalAmount: Math.round(Math.random() * 100000)\n        });\n    }\n\n    return projects;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/performance-measurement.ts"],"sourceRoot":""}