{"version":3,"sources":["webpack:///performance-measurements.js","webpack:///./~/eventemitter3/index.js","webpack:///./~/process/browser.js","webpack:///./~/Hamsters.js/src/es6/hamsters.js","webpack:///./~/paralleljs/lib/parallel.js","webpack:///./~/threads/lib/config.js","webpack:///./~/timers-browserify/main.js","webpack:///./~/threads/lib/index.js","webpack:///./~/threads/lib/defaults.js","webpack:///./src/hamstersjs/knights-tour.ts","webpack:///./src/hamstersjs/mandelbrot.ts","webpack:///./src/hamstersjs/monte-carlo.ts","webpack:///./src/paralleljs/knights-tour.ts","webpack:///./src/paralleljs/mandelbrot.ts","webpack:///./src/paralleljs/monte-carlo.ts","webpack:///./src/threads/knights-tour.ts","webpack:///./src/threads/mandelbrot.ts","webpack:///./src/threads/monte-carlo.ts","webpack:///./~/benchmark/benchmark.js","webpack:///./~/platform/platform.js","webpack:///./~/paralleljs/lib/eval.js","webpack:///./~/native-promise-only/lib/npo.src.js","webpack:///./~/threads/lib/defaults.browser.js","webpack:///./~/threads/lib/defaults.node.js","webpack:///./~/threads/lib/job.js","webpack:///./~/threads/lib/pool.js","webpack:///./~/threads/lib/worker.browser/slave-code-uri.js","webpack:///./~/threads/lib/worker.browser/slave-code.js","webpack:///./~/threads/lib/worker.browser/worker.js","webpack:///./~/threads/lib/worker.js","webpack:///./~/threads/lib/worker.node/worker.js","webpack:///./src/performance-measurement.ts"],"names":["webpackJsonp","module","exports","__webpack_require__","Events","EE","fn","context","once","this","EventEmitter","_events","_eventsCount","has","Object","prototype","hasOwnProperty","prefix","create","__proto__","eventNames","events","name","names","call","push","slice","getOwnPropertySymbols","concat","listeners","event","exists","evt","available","i","l","length","ee","Array","emit","a1","a2","a3","a4","a5","args","len","arguments","removeListener","undefined","apply","j","on","listener","removeAllListeners","off","addListener","setMaxListeners","prefixed","defaultSetTimout","Error","defaultClearTimeout","runTimeout","fun","cachedSetTimeout","setTimeout","e","runClearTimeout","marker","cachedClearTimeout","clearTimeout","cleanUpNextTick","draining","currentQueue","queue","queueIndex","drainQueue","timeout","run","Item","array","noop","process","nextTick","title","browser","env","argv","version","versions","binding","cwd","chdir","dir","umask","global","_typeof","Symbol","iterator","obj","constructor","hamsters","debug","cache","persistence","maxThreads","navigator","hardwareConcurrency","tools","wheel","legacy","node","shell","worker","ie10","transferrable","running","pending","tasks","errors","uri","isIE","RegExp","isNaN","test","userAgent","setupEnv","callback","window","importScripts","reactNative","self","hamster","Worker","terminate","indexOf","toLowerCase","URL","createObjectURL","createBlob","String","giveHamsterWork","SharedWorker","Uint8Array","checkErrors","msg","total","splitArray","n","size","Math","ceil","subarray","loop","input","console","error","threads","operator","substring","params","init","startIndex","incrementBy","dataType","limit","eval","Function","rtn","data","output","parseJson","string","JSON","parse","stringifyJson","json","stringify","randomArray","count","round","random","compareArrays","array1","array2","every","el","checkCache","item","sessionStorage","equals","func","processDataType","memoize","inputArray","setItem","eve","clear","spawnHamsters","buffer","types","uint32","Uint32Array","uint16","Uint16Array","uint8","uint8clamped","Uint8ClampedArray","int32","Int32Array","int16","Int16Array","int8","Int8Array","float32","Float32Array","float64","Float64Array","addEventListener","port","ports","start","success","postMessage","results","onmessage","sort","arr","order","a","b","reverse","workers","aggregate","task","newTask","_ret","result","taskid","v","work","workArray","food","key","newWheel","cb","id","trackInput","threadid","hamsterfood","workerid","Date","getTime","trackThread","poolThread","agg","legacyProcessor","textContent","Blob","BlobBuilder","WebKitBlobBuilder","MozBlobBuilder","MSBlobBuilder","blob","append","type","getBlob","reduce","bufferLength","offset","set","getOutput","processQueue","clean","splice","trainHamster","info","timeStamp","prepareToMemoize","shift","normalizeArray","onerror","lineno","filename","message","processData","feedHamster","ie","buffers","extend","from","to","Operation","_callbacks","_errCallbacks","_resolved","_result","Parallel","options","defaults","operation","resolve","requiredScripts","requiredFunctions","isCommonJS","isNode","setImmediate","require","__dirname","webkitURL","_supports","err","res","iE","then","errCb","evalPath","maxWorkers","cpus","synchronous","envNamespace","isSupported","getWorkerSource","preStr","join","toString","ns","_spawnWorker","wrk","src","url","spawn","that","newOp","_spawnMapWorker","done","map","doneOps","startedOps","_spawnReduceWorker","runningWorkers","floor","retData","configDeepMerge","destObj","srcObj","ancestorProps","keys","forEach","propKey","srcValue","ancestorPropsAndThis","getConfig","config","get","setConfig","__esModule","configuration","basepath","web","fallback","slaveScriptUrl","newConfig","default","clearImmediate","Timeout","clearFn","_id","_clearFn","immediateIds","nextImmediateId","setInterval","clearInterval","close","unref","ref","enroll","msecs","_idleTimeoutId","_idleTimeout","unenroll","_unrefActive","active","_onTimeout","_interopRequireDefault","runnable","_worker2","Pool","_config","_config2","_defaults","_defaults2","_pool","_pool2","_worker","knightTours","moves","x","y","boardSize","numberOfFields","board","fill","startPath","stack","pos","index","coordinate","fieldIndex","_stack","_fieldIndex","_i","move","successor","accessible","pop","computeTours","successors","computeStartFields","_iterator","_isArray","isArray","_i2","_ref","next","value","directSuccessor","_iterator2","_isArray2","_i3","_ref2","indirectSuccessor","reject","promise","Promise","rej","startFields","__WEBPACK_IMPORTED_MODULE_0_Hamsters_js__","aggregateTours","memo","parallelKnightTours","computeMandelbrotLine","calculateZ","c","z","real","iterations","pow","zI","line","imageWidth","cI","max","scalingFactor","min","base","mandelbrot","range","__WEBPACK_IMPORTED_MODULE_1_lodash__","imageHeight","initializeOptions","assign","investmentAmount","liquidity","numRuns","numYears","performance","projects","seed","volatility","runSimulation","createMonteCarloEnvironment","simulateOutcomes","cashFlows","toAbsoluteIndices","indices","currentPortfolioValue","previousYearIndex","relativeYear","currentYearIndex","cashFlowStartOfYear","year","randomPerformance","_year","projectsToCashFlows","projectsByThisYear","projectsByStartYear","cashFlow","project","totalAmount","calculateNoInterestReferenceLine","noInterestReferenceLine","investmentAmountLeft","projectsToSimulate","taskIndex","valuesPerWorker","startYear","simulatedValues","calculateProject","environment","groupForValue","groups","find","group","createGroups","requiredAmount","noInterestReference","description","percentage","separator","calculateRequiredAmount","amount","projectsSameYear","otherProject","median","values","half","NUMBER_OF_BUCKETS","simulatedValuesThisYear","valuesByGroup","bucketSize","buckets","bucket","Number","MIN_VALUE","MAX_VALUE","subBuckets","subBucket","nonEmptyGroups","filter","oneSixth","twoThird","parallelMonteCarlo","userOptions","parallelJSKnightTours","startField","toursPerRun","current","parallelJSMandelbrot","mandelbrotOptions","lines","__WEBPACK_IMPORTED_MODULE_0_lodash__","normal","Random","parallelJSMonteCarlo","simulation","threadsKnightTours","pool","_ref3","_resolve","_reject","totalTours","job","tours","_iterator3","_isArray3","_ref4","send","transfer","threadsMandelbrot","promises","all","_project","threadsMonteCarlo","jobs","runInContext","Benchmark","bench","_","isPlainObject","isFunction","setOptions","counter","stats","cloneDeep","times","Deferred","clone","deferred","benchmark","clock","Event","now","Suite","suite","createFunction","body","anchor","freeDefine","amd","prop","uid","runScript","support","delay","_timerId","destroyElement","element","trash","appendChild","innerHTML","getFirstArgument","exec","getMean","sample","sum","getSource","isStringable","decompilation","replace","isHostType","object","property","rePrimitive","isString","freeExports","freeRequire","code","define","script","doc","createElement","sibling","getElementsByTagName","parent","parentNode","createTextNode","cloneNode","text","insertBefore","forOwn","each","split","_original","aborted","teardown","cycle","cycles","compiled","timer","stop","isFinite","hz","mean","moe","compare","formatNumber","number","invoke","benches","execute","async","isAsync","getNext","complete","cycleEvent","last","eventProps","target","onCycle","raiseIndex","onComplete","queued","defer","currentTarget","onStart","toArray","separator1","separator2","arrayLike","abortSuite","resetting","calledBy","resetSuite","cancelled","reset","add","cloneSuite","filterSuite","aborting","abort","runSuite","other","getScore","xA","sampleB","xB","getU","sampleA","getZ","u","size1","size2","sqrt","critical","zStat","sample1","sample2","maxSize","minSize","u1","u2","abs","uTable","changes","destination","source","changed","currValue","charAt","toStringBench","pm","errorStr","isObject","isError","toFixed","rme","createCompiled","decompilable","fnArg","templateData","uidCounter","setup","interpolate","unit","begin","end","getRes","measured","divisor","microseconds","Infinity","template","timers","stringable","minTime","funcBody","isEmpty","elapsed","chrome","chromium","Interval","processObject","hrtime","microtimeObject","minBy","compute","enqueue","update","initCount","evaluate","df","sd","sem","variance","period","maxedOut","minSamples","maxTime","varOf","tTable","infinity","deviation","clocked","divisors","root","pick","contextProps","arrayRef","objectProto","log","unshift","req","document","partial","cloneDeepWith","onAbort","onError","onReset","platform","layout","product","manufacturer","os","prerelease","methodName","objectTypes","function","nodeType","freeModule","freeGlobal","moduleExports","1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","__WEBPACK_AMD_DEFINE_RESULT__","capitalize","toUpperCase","cleanupOS","pattern","label","10.0","6.4","6.3","6.2","6.1","6.0","5.2","5.1","5.01","5.0","4.0","4.90","format","maxSafeInteger","trim","getClassOf","qualify","accumulator","ua","getLayout","guesses","guess","getManufacturer","getName","getOS","getProduct","getVersion","patterns","toStringPlatform","isCustomContext","nav","isSpecialCasedOS","isModuleScope","thisBinding","oldRoot","likeChrome","objectClass","airRuntimeClass","enviroClass","javaClass","java","phantomClass","rhino","alpha","beta","opera","operamini","operaClass","reOpera","arch","useFeatures","Apple","iPad","iPhone","iPod","Archos","Amazon","Kindle","Kindle Fire","Asus","Transformer","Barnes & Noble","Nook","BlackBerry","PlayBook","Google","Google TV","Nexus","HP","TouchPad","HTC","LG","Microsoft","Xbox","Xbox One","Motorola","Xoom","Nintendo","Wii U","Wii","Nokia","Lumia","Samsung","Galaxy S","Galaxy S2","Galaxy S3","Galaxy S4","Sony","PlayStation 4","PlayStation 3","PlayStation Vita","parseFloat","lang","System","getProperty","system","runtime","flash","Capabilities","phantom","major","minor","patch","documentMode","appMinorVersion","external","parseInt","architecture","family","cpuClass","p","definition","schedule","scheduling_queue","drain","isThenable","o","_then","o_type","notify","chain","notifyIsolated","state","failure","ret","TypeError","triggered","def","def_wrapper","MakeDefWrapper","iteratePromises","Constructor","resolver","rejecter","idx","MakeDef","executor","__NPO__","builtInProp","ToString","defineProperty","val","writable","configurable","first","f","PromisePrototype","msgs","_os","_classCallCheck","instance","_possibleConstructorReturn","ReferenceError","_inherits","subClass","superClass","enumerable","setPrototypeOf","_eventemitter","_eventemitter2","Job","_EventEmitter","_this","thread","runArgs","sendArgs","_len","_key","_len2","_key2","executeOn","_thread$once$once$run","_thread$once$once","bind","_this2","_job","_job2","idleThreads","jobQueue","handleNewJob","dequeue","killAll","kill","queueJob","handleJobSuccess","_len3","_key3","handleJobError","_this3","lastCreatedJob","_len4","responseArgs","_key4","handleJobDone","_this4","threadCount","threadIndex","_slaveCode","_slaveCode2","slaveCodeDataUri","encodeURI","createBlobURL","blobBuilder","joinPaths","path1","path2","prependScriptUrl","scriptUrl","convertToArray","outputArray","logError","fileName","match","substr","_slaveCodeUri","_slaveCodeUri2","initialScript","currentRunnable","currentImportScripts","initWorker","handleMessage","handleError","toRun","alreadyInitializedToRun","runMethod","runScripts","method","methodStr","lastIndexOf","initByMethod","scripts","initByScripts","param","transferables","doRun","resolved","rejected","runnablesMatch","importScriptsMatch","progress","handleProgress","response","preventDefault","_child_process","_child_process2","_path","_path2","initialRunnable","slave","fork","prefixedScriptPath","initByScript","addAsyncTest","optionsOrTitle","asyncFn","addThreadJsTest","_fn","argsWithPool","__WEBPACK_IMPORTED_MODULE_14_threads__","addKnightBoardTests","boardSizes","knightRunner6x6","checked","_loop","__WEBPACK_IMPORTED_MODULE_3__transpiled_knights_tour__","__WEBPACK_IMPORTED_MODULE_5__dynamic_knights_tour__","__WEBPACK_IMPORTED_MODULE_10__paralleljs_knights_tour__","__WEBPACK_IMPORTED_MODULE_13__threads_knights_tour__","__WEBPACK_IMPORTED_MODULE_16__hamstersjs_knights_tour__","addMonteCarloTest","runOptions","createProjects","numberOfProjects","configName","toLocaleString","__WEBPACK_IMPORTED_MODULE_7__dynamic_monte_carlo__","__WEBPACK_IMPORTED_MODULE_4__transpiled_monte_carlo__","__WEBPACK_IMPORTED_MODULE_9__paralleljs_monte_carlo__","__WEBPACK_IMPORTED_MODULE_11__threads_monte_carlo__","__WEBPACK_IMPORTED_MODULE_17__hamstersjs_monte_carlo__","addMonteCarloTests","oneMillionRuns","querySelector","monteCarloOptions","runs","_arr","addMandelbrotTests","mandelbrotHeight","mandelbrotWidth","mandelbrotIterations","onlyDefaultScheduling","__WEBPACK_IMPORTED_MODULE_6__dynamic_mandelbrot__","taskSizes","_loop2","_i4","valuesPerTask","parallelOptions","maxValuesPerTask","minValuesPerTask","__WEBPACK_IMPORTED_MODULE_2__transpiled_mandelbrot__","_ret2","__WEBPACK_IMPORTED_MODULE_8__paralleljs_mandelbrot__","__WEBPACK_IMPORTED_MODULE_12__threads_mandelbrot__","__WEBPACK_IMPORTED_MODULE_15__hamstersjs_mandelbrot__","measure","runMonteCarlo","runMandelbrot","runKnightTour","allTestsSuite","setCheckboxes","checkbox","parts","appendTestResults","benchmarks","jsonOutputField","runButton","disabled","initResultTable","clearOutputTable","outputTable","tBodies","removeChild","createTBody","row","insertRow","_suite$name$split","nameParts","insertCell","columns","tHead","rows","cells","__WEBPACK_IMPORTED_MODULE_1_benchmark__","querySelectorAll"],"mappings":"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","file":"performance-measurements.js","sourcesContent":["webpackJsonp([0],[\n/* 0 */,\n/* 1 */,\n/* 2 */,\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @api private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {Mixed} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @api private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @api public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @api public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {String|Symbol} event The event name.\n * @param {Boolean} exists Only check if there are listeners.\n * @returns {Array|Boolean}\n * @api public\n */\nEventEmitter.prototype.listeners = function listeners(event, exists) {\n  var evt = prefix ? prefix + event : event\n    , available = this._events[evt];\n\n  if (exists) return !!available;\n  if (!available) return [];\n  if (available.fn) return [available.fn];\n\n  for (var i = 0, l = available.length, ee = new Array(l); i < l; i++) {\n    ee[i] = available[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {String|Symbol} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @api public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {String|Symbol} event The event name.\n * @param {Function} fn The listener function.\n * @param {Mixed} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @api public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  var listener = new EE(fn, context || this)\n    , evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) this._events[evt] = listener, this._eventsCount++;\n  else if (!this._events[evt].fn) this._events[evt].push(listener);\n  else this._events[evt] = [this._events[evt], listener];\n\n  return this;\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {String|Symbol} event The event name.\n * @param {Function} fn The listener function.\n * @param {Mixed} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @api public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  var listener = new EE(fn, context || this, true)\n    , evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) this._events[evt] = listener, this._eventsCount++;\n  else if (!this._events[evt].fn) this._events[evt].push(listener);\n  else this._events[evt] = [this._events[evt], listener];\n\n  return this;\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {String|Symbol} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {Mixed} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @api public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    if (--this._eventsCount === 0) this._events = new Events();\n    else delete this._events[evt];\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n         listeners.fn === fn\n      && (!once || listeners.once)\n      && (!context || listeners.context === context)\n    ) {\n      if (--this._eventsCount === 0) this._events = new Events();\n      else delete this._events[evt];\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n           listeners[i].fn !== fn\n        || (once && !listeners[i].once)\n        || (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else if (--this._eventsCount === 0) this._events = new Events();\n    else delete this._events[evt];\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {String|Symbol} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @api public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) {\n      if (--this._eventsCount === 0) this._events = new Events();\n      else delete this._events[evt];\n    }\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// This function doesn't apply anymore.\n//\nEventEmitter.prototype.setMaxListeners = function setMaxListeners() {\n  return this;\n};\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif (true) {\n  module.exports = EventEmitter;\n}\n\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n/***/ },\n/* 5 */,\n/* 6 */,\n/* 7 */,\n/* 8 */,\n/* 9 */,\n/* 10 */,\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(process, global) {var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n/*\n* Title: WebHamsters\n* Description: Javascript library to add multi-threading support to javascript by exploiting concurrent web workers\n* Author: Austin K. Smith\n* Contact: austin@asmithdev.com\n* Copyright: 2015 Austin K. Smith - austin@asmithdev.com\n* License: Artistic License 2.0\n*/\n\nvar hamsters = {\n  version: '3.9',\n  debug: false,\n  cache: false,\n  persistence: true,\n  maxThreads: navigator.hardwareConcurrency || 4,\n  tools: {},\n  wheel: {\n    env: {\n      legacy: false,\n      node: false,\n      shell: false,\n      worker: false,\n      browser: false,\n      ie10: false,\n      transferrable: true\n    },\n    queue: {\n      running: [],\n      pending: []\n    },\n    hamsters: [],\n    tasks: [],\n    errors: [],\n    uri: null\n  }\n};\n\n/**\n * @description: Initializes and sets up library functionality\n * @return\n */\n(function () {\n  \"use strict\";\n\n  /**\n   * @description: Detect Internet Explorer by Version IE10 and below\n   * @method isIE\n   * @param {integer} version\n   * @return CallExpression\n   */\n\n  var isIE = function isIE(version) {\n    return new RegExp('msie' + (!isNaN(version) ? '\\\\s' + version : ''), 'i').test(navigator.userAgent);\n  };\n\n  /**\n   * Description\n   * @description: Detect support for web workers\n   * @method setupEnv\n   * @return\n   */\n  var setupEnv = function setupEnv(callback) {\n    hamsters.wheel.env.browser = (typeof window === 'undefined' ? 'undefined' : _typeof(window)) === \"object\";\n    hamsters.wheel.env.worker = typeof importScripts === \"function\";\n    hamsters.wheel.env.node = (typeof process === 'undefined' ? 'undefined' : _typeof(process)) === \"object\" && \"function\" === \"function\" && !hamsters.wheel.env.browser && !hamsters.wheel.env.worker && !hamsters.wheel.env.reactNative;\n    hamsters.wheel.env.reactNative = !hamsters.wheel.env.node && (typeof global === 'undefined' ? 'undefined' : _typeof(global)) === 'object';\n    hamsters.wheel.env.shell = !hamsters.wheel.env.browser && !hamsters.wheel.env.node && !hamsters.wheel.env.worker && !hamsters.wheel.env.reactNative;\n    if (hamsters.wheel.env.reactNative || hamsters.wheel.env.node) {\n      global.self = global;\n    }\n    if (hamsters.wheel.env.browser && !hamsters.wheel.env.worker) {\n      if (isIE(10)) {\n        try {\n          var hamster = new Worker('common/wheel.min.js');\n          hamster.terminate();\n          hamsters.wheel.env.ie10 = true;\n        } catch (e) {\n          hamsters.wheel.env.legacy = true;\n        }\n      }\n      if (!self.Worker || navigator.userAgent.indexOf('Kindle/3.0') !== -1 || navigator.userAgent.indexOf('Mobile/8F190') !== -1 || navigator.userAgent.indexOf('IEMobile') !== -1) {\n        hamsters.wheel.env.legacy = true;\n      } else if (navigator.userAgent.toLowerCase().indexOf('firefox') !== -1) {\n        if (hamsters.maxThreads > 20) {\n          hamsters.maxThreads = 20;\n        }\n      }\n    }\n    if (hamsters.wheel.env.worker) {\n      try {\n        hamsters.wheel.uri = self.URL.createObjectURL(createBlob('(' + String(giveHamsterWork(true)) + '());'));\n        var SharedHamster = new SharedWorker(hamsters.wheel.uri, 'SharedHamsterWheel');\n      } catch (e) {\n        hamsters.wheel.env.legacy = true;\n      }\n    }\n    if (hamsters.wheel.env.shell) {\n      hamsters.wheel.env.legacy = true;\n    }\n    //Check for transferrable object support\n    if (!Uint8Array) {\n      hamsters.wheel.env.transferrable = false;\n    }\n    callback(hamsters.wheel.env.legacy);\n  };\n\n  /**\n   * @description: Method for checking wheel error log\n   * @method checkErrors\n   * @return ObjectExpression\n   */\n  hamsters.tools.checkErrors = function () {\n    return {\n      msg: 'There are currently ' + hamsters.wheel.errors.length + ' errors captured in the wheel',\n      total: hamsters.wheel.errors.length,\n      errors: hamsters.wheel.errors\n    };\n  };\n\n  /**\n   * @description: Splits an array into equal sized subarrays for individual workers\n   * @constructor\n   * @method splitArray\n   * @param {array} array - incoming array to be split\n   * @param {integer} n - total subarrays  \n   * @return ArrayExpression\n   */\n  hamsters.tools.splitArray = function (array, n) {\n    var i = 0;\n    var tasks = [];\n    var size = Math.ceil(array.length / n);\n    if (array.slice) {\n      while (i < array.length) {\n        tasks.push(array.slice(i, i += size));\n      }\n    } else {\n      while (i < array.length) {\n        tasks.push(array.subarray(i, i += size));\n      }\n    }\n    return tasks;\n  };\n\n  /**\n   * @description: Abstracts for loop usage\n   * @constructor\n   * @method for\n   * @param {object} input - input params\n   * @param {function} callback - callback when output ready\n   * @return \n   */\n  hamsters.tools.loop = function (input, callback) {\n    if (!input.array) {\n      console.error('Missing data array');\n      return;\n    }\n    var threads = input.threads || 1;\n    if (!hamsters.wheel.env.legacy) {\n      input.operator = String(input.operator);\n      if (!hamsters.wheel.env.worker) {\n        input.operator = input.operator.substring(input.operator.indexOf(\"{\") + 1, input.operator.length - 1);\n      }\n    }\n    var params = {\n      run: input.operator,\n      init: input.startIndex || 0,\n      array: input.array,\n      incrementBy: input.incrementBy || 1,\n      dataType: input.dataType || null,\n      worker: hamsters.wheel.env.worker\n    };\n    if (threads === 1) {\n      params.limit = input.limit || input.array.length;\n    } else {\n      params.limit = 'compute';\n    }\n    hamsters.run(params, function () {\n      if (typeof self.params.run === 'string') {\n        if (!self.params.worker) {\n          self.operator = new Function(self.params.run);\n        } else {\n          self.operator = eval(\"(\" + self.params.run + \")\");\n        }\n      } else {\n        self.operator = self.params.run;\n      }\n      if (self.params.limit === 'compute') {\n        self.params.limit = self.params.array.length;\n      }\n      var i = 0;\n      for (i = self.params.init; i < self.params.limit; i += self.params.incrementBy) {\n        rtn.data.push(self.operator(self.params.array[i]));\n      }\n    }, function (output) {\n      callback(output);\n    }, threads, true, input.dataType);\n  };\n\n  /**\n   * @description: Parses a json string in a background thread\n   * @constructor\n   * @method parseJson\n   * @param {string} string - json string object\n   * @param {function} callback - callback when output ready\n   * @return \n   */\n  hamsters.tools.parseJson = function (string, callback) {\n    hamsters.run({ input: string }, function () {\n      rtn.data.push(JSON.parse(params.input));\n    }, function (output) {\n      callback(output[0]);\n    }, 1, true);\n  };\n\n  /**\n   * @description: Stringifies a json object in a background thread\n   * @constructor\n   * @method parseJson\n   * @param {object} json - json object\n   * @param {function} callback - callback when output ready\n   * @return \n   */\n  hamsters.tools.stringifyJson = function (json, callback) {\n    hamsters.run({ input: json }, function () {\n      rtn.data.push(JSON.stringify(params.input));\n    }, function (output) {\n      callback(output[0]);\n    }, 1, true);\n  };\n\n  /**\n   * @description: Generates a worker which generates an array of random numbers for testing\n   * @constructor\n   * @function randomArray\n   * @method randomArray\n   * @param {integer} count - array size\n   * @param {function} callback - callback when array ready\n   * @return \n   */\n  hamsters.tools.randomArray = function (count, callback) {\n    if (!count || !callback) {\n      hamsters.wheel.errors.push({\n        msg: 'Unable to generate random array, missing required params'\n      });\n      return;\n    }\n    var params = {\n      count: count\n    };\n    hamsters.run(params, function () {\n      var total = params.count;\n      var i = 0;\n      while (i < total) {\n        rtn.data[rtn.data.length] = Math.round(Math.random() * (100 - 1) + 1);\n        i += 1;\n      }\n    }, function (output) {\n      callback(output);\n    }, 1, false, null, false);\n  };\n\n  /**\n  * Description\n  * @method compareArrays\n  * @param {array} array1\n  * @param {array} array2\n  * @return CallExpression\n  */\n  hamsters.wheel.compareArrays = function (array1, array2) {\n    if (!array1 && !array2) {\n      return true;\n    }\n    if (array1.length !== array2.length) {\n      return false;\n    }\n    return array1.every(function (el, i) {\n      return el === array2[i];\n    });\n  };\n\n  /**\n   * Description\n   * @method checkCache\n   * @param {string} fn\n   * @param {array} input\n   * @param {string} dataType\n   * @return \n  */\n  hamsters.wheel.checkCache = function (fn, input, dataType) {\n    var item = void 0;\n    for (var i = 0, len = sessionStorage.length; i < len; i++) {\n      item = eval('(' + sessionStorage[i] + ')');\n      var equals = hamsters.wheel.compareArrays(item.input, input);\n      if (item && item.func === fn && equals && !item.dataType && !dataType) {\n        return item.output;\n      } else if (item && item.func === fn && equals && item.dataType === dataType) {\n        return hamsters.wheel.processDataType(item.dataType, item.output);\n      }\n    }\n  };\n\n  hamsters.wheel.memoize = function (fn, inputArray, output, dataType) {\n    if (hamsters.wheel.checkCache(fn, input, dataType)) {\n      return;\n    }\n    try {\n      sessionStorage.setItem(sessionStorage.length, JSON.stringify({ 'func': fn, 'input': inputArray, 'output': output, 'dataType': dataType }));\n    } catch (eve) {\n      if (eve.name === 'QuotaExceededError') {\n        sessionStorage.clear();\n        try {\n          sessionStorage.setItem(sessionStorage.length, JSON.stringify({ 'func': fn, 'input': inputArray, 'output': output, 'dataType': dataType }));\n        } catch (e) {\n          //Do nothing, can't cache this result..too large\n          return;\n        }\n      }\n    }\n  };\n\n  /**\n    * @description: Setups library objects for web worker use with library boilerplate\n    * @constructor\n    * @function spawnHamsters\n    * @method spawnHamsters\n    * @return \n  */\n  var spawnHamsters = function spawnHamsters() {\n    if (hamsters.wheel.env.browser) {\n      hamsters.wheel.uri = self.URL.createObjectURL(createBlob('(' + String(giveHamsterWork(false)) + '());'));\n    }\n    if (hamsters.persistence) {\n      var i = hamsters.maxThreads;\n      for (i; i > 0; i--) {\n        if (hamsters.wheel.env.node || hamsters.wheel.env.ie10) {\n          hamsters.wheel.hamsters.push(new Worker('common/wheel.min.js'));\n        } else if (hamsters.wheel.env.worker) {\n          hamsters.wheel.hamsters.push(new SharedWorker(hamsters.wheel.uri, 'SharedHamsterWheel'));\n        } else {\n          hamsters.wheel.hamsters.push(new Worker(hamsters.wheel.uri));\n        }\n      }\n    }\n  };\n\n  /**\n    * @description: Creates boiler plate logic for worker thread\n    * @constructor\n    * @method giveHamsterWork\n    * @return work\n  */\n  var giveHamsterWork = function giveHamsterWork(worker) {\n    /**\n     * Description\n     * @method processDataType\n     * @param {string} dataType\n     * @param {array} buffer\n     * @return arr\n     */\n    /**\n     * Description\n     * @method onmessage\n     * @param {object} e\n     * @return \n     */\n    if (worker) {\n      return function () {\n        self.processDataType = function (dataType, buffer) {\n          var types = {\n            'uint32': Uint32Array,\n            'uint16': Uint16Array,\n            'uint8': Uint8Array,\n            'uint8clamped': Uint8ClampedArray,\n            'int32': Int32Array,\n            'int16': Int16Array,\n            'int8': Int8Array,\n            'float32': Float32Array,\n            'float64': Float64Array\n          };\n          if (!types[dataType]) {\n            return dataType;\n          }\n          return new types[dataType](buffer);\n        };\n        self.addEventListener(\"connect\", function (e) {\n          var port = e.ports[0];\n          port.start();\n          port.addEventListener(\"message\", function (e) {\n            self.rtn = {\n              success: true,\n              data: []\n            };\n            self.params = e.data;\n            self.fn = eval(\"(\" + params.fn + \")\");\n            if (fn) {\n              self.fn();\n            }\n            if (self.params.dataType && self.params.dataType != \"na\") {\n              self.rtn.data = self.processDataType(self.params.dataType, self.rtn.data);\n              self.rtn.dataType = self.params.dataType;\n            }\n            port.postMessage({\n              results: self.rtn\n            });\n          }, false);\n        }, false);\n      };\n    }\n    /**\n     * Description\n     * @method onmessage\n     * @param {object} e\n     * @return \n     */\n    return function () {\n      self.processDataType = function (dataType, buffer) {\n        var types = {\n          'uint32': Uint32Array,\n          'uint16': Uint16Array,\n          'uint8': Uint8Array,\n          'uint8clamped': Uint8ClampedArray,\n          'int32': Int32Array,\n          'int16': Int16Array,\n          'int8': Int8Array,\n          'float32': Float32Array,\n          'float64': Float64Array\n        };\n        if (!types[dataType]) {\n          return dataType;\n        }\n        return new types[dataType](buffer);\n      };\n      self.onmessage = function (e) {\n        self.rtn = {\n          success: true,\n          data: []\n        };\n        self.params = e.data;\n        self.fn = new Function(self.params.fn);\n        if (self.fn) {\n          self.fn();\n        }\n        if (self.params.dataType && self.params.dataType != \"na\") {\n          self.rtn.data = self.processDataType(self.params.dataType, self.rtn.data);\n          self.rtn.dataType = self.params.dataType;\n          self.postMessage({\n            results: self.rtn\n          }, [rtn.data.buffer]);\n        } else {\n          self.postMessage({\n            results: self.rtn\n          });\n        }\n      };\n    };\n  };\n\n  /**\n    * @description: Sorts an array of objects based on incoming property param\n    * @constructor\n    * @method sort\n    * @param {string} property - property to sort by\n    * @return FunctionExpression\n  */\n  hamsters.wheel.sort = function (arr, order) {\n    if (order === 'desc') {\n      return Array.prototype.sort.call(arr, function (a, b) {\n        return b - a;\n      });\n    }\n    if (order === 'asc') {\n      return Array.prototype.sort.call(arr, function (a, b) {\n        return a - b;\n      });\n    }\n    if (order === 'ascAlpha') {\n      return arr.sort();\n    }\n    if (order === 'descAlpha') {\n      return arr.reverse();\n    }\n  };\n\n  /**\n    * @description: Takes an incoming sequential function and automatically splits the work across as many defined threads for paralell execution\n    * @constructor\n    * @method run\n    * @param {object} params - Incoming params object for task\n    * @param {function} fn - Sequential function to execute\n    * @param {function} callback - Task callback when all threads complete\n    * @param {integer} workers - Total number of threads to use\n    * @param {boolean} aggregate - Aggregate individual thread outputs into final array (yes/no)\n    * @param {string} dataType - Optional typedArray data type for transferrable object support\n    * @param {boolean} memoize - Memoize final result (yes/no)\n    * @param {string} order - Optional sort direction param \n    * @return \n  */\n  hamsters.run = function (params, fn, callback, workers, aggregate, dataType, memoize, order) {\n    if (!params || !fn) {\n      return 'Error processing for loop, missing params or function';\n    }\n    workers = workers || 1;\n    var task = hamsters.wheel.newTask(hamsters.wheel.tasks.length, workers, order, dataType, fn, callback);\n    if (dataType) {\n      dataType = dataType.toLowerCase();\n    }\n    if (hamsters.cache && memoize) {\n      var _ret = function () {\n        var result = hamsters.wheel.checkCache(fn, task.input, dataType);\n        if (result && callback) {\n          setTimeout(function () {\n            hamsters.wheel.tasks[taskid] = null; //Clean up our task, not needed any longer\n            callback(result);\n          }, 4);\n          return {\n            v: void 0\n          };\n        }\n      }();\n\n      if ((typeof _ret === 'undefined' ? 'undefined' : _typeof(_ret)) === \"object\") return _ret.v;\n    } else {\n      hamsters.wheel.work(task, params, fn, callback, aggregate, dataType, memoize, order);\n    }\n  };\n\n  hamsters.wheel.work = function (task, params, fn, callback, aggregate, dataType, memoize, order) {\n    var workArray = params.array || null;\n    if (params.array && task.threads !== 1) {\n      workArray = hamsters.tools.splitArray(params.array, task.threads); //Divide our array into equal array sizes\n    }\n    if (!hamsters.wheel.env.legacy) {\n      params.fn = String(fn);\n      if (!hamsters.wheel.env.worker) {\n        //Truncate function string so we can use new Function call instead of eval\n        params.fn = params.fn.substring(params.fn.indexOf(\"{\") + 1, params.fn.length - 1);\n      }\n    } else {\n      params.fn = fn;\n    }\n    var food = {};\n    var key = void 0;\n    for (key in params) {\n      if (params.hasOwnProperty(key) && key !== 'array') {\n        food[key] = params[key];\n      }\n    }\n    food.dataType = dataType;\n    var i = 0;\n    while (i < task.threads) {\n      if (workArray && task.threads !== 1) {\n        hamsters.wheel.newWheel(workArray[i], food, aggregate, callback, task, task.count, null, memoize);\n      } else {\n        hamsters.wheel.newWheel(workArray, food, aggregate, callback, task, task.count, null, memoize);\n      }\n      i += 1;\n    }\n  };\n\n  /**\n    * @description: Registers new task for runtime\n    * @constructor\n    * @method newTask\n    * @param {integer} taskid - ID to use for task generation\n    * @param {integer} workers - Number of threads to spawn for this task\n    * @param {string}  order - Optional sorting order param\n    * @param {string}  dataType - Optional dataType param\n    * @param {function} fn - Function to run for this task\n    * @param {function} cb - Task callback for output result\n    * @return \n  */\n  hamsters.wheel.newTask = function (taskid, workers, order, dataType, fn, cb) {\n    hamsters.wheel.tasks.push({\n      id: taskid,\n      workers: [],\n      count: 0,\n      threads: workers,\n      input: [],\n      dataType: dataType || null,\n      fn: fn,\n      output: [],\n      order: order || null,\n      callback: cb\n    });\n    return hamsters.wheel.tasks[taskid];\n  };\n\n  /**\n    * @description: Tracks thread input for memoization\n    * @constructor\n    * @method trackInput\n    * @param {array} inputArray - Incoming array param\n    * @param {string} threadid - Current worker threadid\n    * @param {object} task - Current task to track\n    * @param {object} hamsterfood - Incoming task params\n    * @return \n  */\n  hamsters.wheel.trackInput = function (inputArray, threadid, task, hamsterfood) {\n    task.input.push({\n      input: inputArray,\n      workerid: threadid,\n      taskid: task.id,\n      params: hamsterfood,\n      start: new Date().getTime()\n    });\n  };\n\n  hamsters.wheel.trackThread = function (task, running, id) {\n    task.workers.push(id); //Keep track of threads scoped to current task\n    running.push(id); //Keep track of all currently running threads\n  };\n\n  /**\n    * @description: Adds thread to thread pool for execution when a free thread is available\n    * @constructor\n    * @method poolThread\n    * @param {array} inputArray - Input array\n    * @param {object} hamsterfood - Input params object\n    * @param {string} threadid - task scoped worker thread id\n    * @param {function} callback - Callback function to return response\n    * @param {function} task - Work to be executed inside thread\n    * @param {boolean} agg - Aggregate final result (yes/no)\n    * @param {boolean} memoize - Memoize final result (yes/no)\n    * @return \n  */\n  hamsters.wheel.poolThread = function (inputArray, hamsterfood, threadid, cb, task, agg, memoize) {\n    hamsters.wheel.queue.pending.push({\n      memoize: memoize,\n      input: inputArray,\n      params: hamsterfood,\n      workerid: threadid,\n      callback: cb,\n      task: task,\n      aggregate: agg\n    });\n  };\n\n  /**\n    * @description: Simulates threading for execution on devices that don't support workers\n    * @constructor\n    * @method legacyProcessor\n    * @param {object} food - Input params object\n    * @param {array} inputArray - Input array\n    * @param {function} callback - Callback function to return response\n    * @return \n  */\n  hamsters.wheel.legacyProcessor = function (params, inputArray, callback) {\n    setTimeout(function () {\n      self.rtn = {\n        success: true,\n        data: []\n      };\n      self.params = params;\n      self.params.array = inputArray;\n      if (self.params.fn) {\n        self.params.fn();\n        if (self.params.dataType) {\n          self.rtn.data = hamsters.wheel.processDataType(self.params.dataType, self.rtn.data);\n          self.rtn.dataType = self.params.dataType;\n        }\n        callback(self.rtn);\n      } else {\n        self.rtn.success = false;\n        self.rtn.error = 'Missing function';\n        callback(self.rtn);\n      }\n    }, 4); //4ms delay (HTML5 spec minimum), simulate threading\n  };\n\n  /**\n    * @description: Creates dataBlob for worker generation\n    * @constructor\n    * @method createBlob\n    * @param {string} textContent - Web worker boiler plate\n    * @return blob\n  */\n  var createBlob = function createBlob(textContent) {\n    if (!self.Blob) {\n      self.BlobBuilder = self.BlobBuilder || self.WebKitBlobBuilder || self.MozBlobBuilder || self.MSBlobBuilder;\n      var blob = new BlobBuilder();\n      blob.append([textContent], {\n        type: 'application/javascript'\n      });\n      return blob.getBlob();\n    }\n    return new Blob([textContent], {\n      type: 'application/javascript'\n    });\n  };\n\n  /**\n    * @description: Aggregates individual hamster outputs into a single array\n    * @constructor\n    * @method aggregate\n    * @param {array} input - incoming array of subarrays\n    * @param {string} dataType\n    * @return output\n  */\n  hamsters.tools.aggregate = function (input, dataType) {\n    if (!dataType || !hamsters.wheel.env.transferrable) {\n      return input.reduce(function (a, b) {\n        return a.concat(b);\n      });\n    }\n    var i = 0;\n    var len = input.length;\n    var bufferLength = 0;\n    for (i; i < len; i += 1) {\n      bufferLength += input[i].length;\n    }\n    var output = hamsters.wheel.processDataType(dataType, bufferLength);\n    var offset = 0;\n    for (i = 0; i < len; i += 1) {\n      output.set(input[i], offset);\n      offset += input[i].length;\n    }\n    return output;\n  };\n\n  /**\n    * @description: Get our nested output values from each task, return array of subarrays\n    * @constructor\n    * @method getOutput\n    * @param {array} output - incoming task output\n    * @param {boolean} aggregate\n    * @param {string} dataType\n    * @return rtn\n  */\n  hamsters.wheel.getOutput = function (output, aggregate, dataType) {\n    if (aggregate && output.length <= 20) {\n      return hamsters.tools.aggregate(output, dataType);\n    }\n    return output;\n  };\n\n  /**\n    * @description: Process next item in queue\n    * @constructor\n    * @method processQueue\n    * @param {object} hamster - Most recently finished web worker, for reuse\n    * @param {blob} dataBlob\n    * @return \n  */\n  hamsters.wheel.processQueue = function (hamster, item) {\n    if (!item) {\n      return;\n    }\n    hamsters.wheel.newWheel(item.input, item.params, item.aggregate, item.callback, item.task, item.workerid, hamster, item.memoize); //Assign most recently finished thread to queue item\n  };\n\n  /**\n    * @description: Cleans up last running thread\n    * @constructor\n    * @method clean\n    * @param {object} task - Task associated with id\n    * @param {string} id - Most recently finished thread id\n    * @return \n  */\n  hamsters.wheel.clean = function (task, id) {\n    hamsters.wheel.queue.running.splice(hamsters.wheel.queue.running.indexOf(id), 1); //Remove thread from running pool\n    task.workers.splice(task.workers.indexOf(id), 1); //Remove thread from task running pool\n  };\n\n  /**\n    * @description: Handle response from worker thread, setup error handling\n    * @constructor\n    * @method trainHamster\n    * @param {integer} id - global wheel threadid\n    * @param {boolean} aggregate - boolean aggregate individual thread outputs into final array  \n    * @param {function} callback - task callback when all hamsters complete\n    * @param {integer} taskid - global wheel task id\n    * @param {integer} workerid - worker wheel threadid\n    * @param {object} hamster - web worker\n    * @param {blob} dataBlob\n    * @return \n  */\n  hamsters.wheel.trainHamster = function (id, aggregate, callback, task, hamster, memoize) {\n    /**\n      * @description: Runs when a hamster (thread) finishes it's work\n      * @constructor\n      * @method onmessage\n      * @param {object} e - Web Worker event object\n      * @return \n    */\n    var onmessage = function onmessage(e, results) {\n      hamsters.wheel.clean(task, id);\n      results = e.data.results;\n      task.output[id] = results.data;\n      if (hamsters.debug === 'verbose') {\n        console.info('Hamster #' + id + ' finished ' + '@ ' + e.timeStamp);\n      }\n      if (task.workers.length === 0 && task.count === task.threads) {\n        if (task.order) {\n          callback(hamsters.wheel.sort(hamsters.wheel.getOutput(task.output, aggregate, results.dataType), task.order));\n        } else {\n          callback(hamsters.wheel.getOutput(task.output, aggregate, results.dataType));\n        }\n        if (hamsters.debug) {\n          console.info('Execution Complete! Elapsed: ' + (e.timeStamp - task.input[0].start) / 1000 + 's');\n        }\n        hamsters.wheel.tasks[task.id] = null; //Clean up our task, not needed any longer\n        if (hamsters.cache && memoize) {\n          prepareToMemoize(task, aggregate, results);\n        }\n      }\n      if (hamsters.wheel.queue.pending.length !== 0) {\n        hamsters.wheel.processQueue(hamster, hamsters.wheel.queue.pending.shift());\n      } else if (!hamsters.persistence && !hamsters.wheel.env.worker) {\n        hamster.terminate(); //Kill the thread only if no items waiting to run (20-22% performance improvement observed during testing, repurposing threads vs recreating them)\n      }\n    };\n\n    var prepareToMemoize = function prepareToMemoize(task, aggregate, results) {\n      var output = hamsters.wheel.getOutput(task.output, aggregate, results.dataType);\n      if (output && !output.slice) {\n        hamsters.wheel.memoize(task.fn, task.input[0].input, hamsters.wheel.normalizeArray(output), results.dataType);\n      } else {\n        hamsters.wheel.memoize(task.fn, task.input[0].input, hamsters.wheel.getOutput(task.output, aggregate, results.dataType), results.dataType);\n      }\n    };\n\n    /**\n      * @description: Setup error handling\n      * @constructor\n      * @method errorHandler\n      * @param {object} e - Web Worker event object\n      * @return \n    */\n    var onerror = function onerror(e) {\n      if (!hamsters.wheel.env.worker) {\n        hamster.terminate(); //Kill the thread\n      }\n      hamsters.wheel.errors.push({\n        msg: 'Error Hamster #' + id + ': Line ' + e.lineno + ' in ' + e.filename + ': ' + e.message\n      });\n      console.error('Error Hamster #' + id + ': Line ' + e.lineno + ' in ' + e.filename + ': ' + e.message);\n    };\n\n    if (hamsters.wheel.env.worker) {\n      hamster.port.onmessage = onmessage;\n      hamster.port.onerror = onerror;\n    } else {\n      hamster.onmessage = onmessage;\n      hamster.onerror = onerror;\n    }\n  };\n\n  /**\n    * @description: Normalizes typed array into normal array\n    * @constructor\n    * @method normalizeArray\n    * @param {object} input - typedArray input\n    * @return arr\n  */\n  hamsters.wheel.normalizeArray = function (input) {\n    var arr = [];\n    var n = 0;\n    var len = input.length;\n    for (n; n < len; n += 1) {\n      arr.push(input[n]);\n    }\n    return arr;\n  };\n\n  hamsters.wheel.processData = function (dataType, buffer) {\n    var types = {\n      'uint32': Uint32Array,\n      'uint16': Uint16Array,\n      'uint8': Uint8Array,\n      'uint8clamped': Uint8ClampedArray,\n      'int32': Int32Array,\n      'int16': Int16Array,\n      'int8': Int8Array,\n      'float32': Float32Array,\n      'float64': Float64Array\n    };\n    if (!types[dataType]) {\n      return dataType;\n    }\n    return new types[dataType](buffer);\n  };\n\n  /**\n    * @description: Converts array buffer or normal array into a typed array\n    * @constructor\n    * @method processDataType\n    * @param {string} dataType - dataType config param\n    * @param {object} buffer - buffer object or normal array\n    * @return arr\n  */\n  hamsters.wheel.processDataType = function (dataType, buffer) {\n    if (hamsters.wheel.env.transferrable) {\n      return hamsters.wheel.processData(dataType, buffer);\n    }\n    return buffer; //Return normal array if transferrable objects not supported\n  };\n\n  /**\n    * @description: Sends message to worker thread to invoke execution\n    * @constructor\n    * @method feedHamster\n    * @param {object} hamster - web worker\n    * @param {object} food - params object for worker\n    * @param {array} inputArray\n    * @return \n  */\n  hamsters.wheel.feedHamster = function (hamster, food, inputArray) {\n    if (hamsters.wheel.env.worker || hamsters.wheel.env.ie10) {\n      food.array = inputArray;\n      if (hamsters.wheel.env.ie10) {\n        food.ie = true;\n        hamster.postMessage(food);\n      } else {\n        hamster.port.postMessage(food);\n      }\n    } else {\n      var key = void 0,\n          buffers = [];\n      if (inputArray) {\n        if (food.dataType) {\n          //Transferable object transfer if using typed array\n          food.array = hamsters.wheel.processDataType(food.dataType, inputArray);\n        } else {\n          food.array = inputArray;\n        }\n      }\n      for (key in food) {\n        if (food.hasOwnProperty(key) && food[key] && food[key].buffer) {\n          buffers.push(food[key].buffer);\n        }\n      }\n      hamster.postMessage(food, buffers);\n    }\n  };\n\n  /**\n    * @description: Creates new worker thread with body of work to be completed\n    * @constructor\n    * @method newWheel\n    * @param {array} inputArray\n    * @param {object} hamsterfood - incoming params object for worker\n    * @param {boolean} aggregate - boolean aggregate individual thread outputs into final array  \n    * @param {function} callback - task callback when all hamsters complete\n    * @param {integer} taskid - global wheel task id\n    * @param {integer} threadid - global wheel threadid\n    * @param {object} hamster - web worker\n    * @param {blob} dataBlob\n    * @return \n   */\n  setupEnv(function (legacy) {\n    if (legacy) {\n      hamsters.wheel.newWheel = function (inputArray, hamsterfood, aggregate, callback, task, threadid, hamster, memoize) {\n        hamsters.wheel.trackThread(task, hamsters.wheel.queue.running, threadid);\n        if (memoize || hamsters.debug) {\n          hamsters.wheel.trackInput(inputArray, threadid, task, hamsterfood);\n        }\n        hamsters.wheel.legacyProcessor(hamsterfood, inputArray, function (output) {\n          hamsters.wheel.clean(task, threadid);\n          task.output[threadid] = output.data;\n          if (task.workers.length === 0 && task.count === task.threads) {\n            //Task complete get output and return\n            if (hamsters.debug) {\n              console.info('Execution Complete! Elapsed: ' + (new Date().getTime() - task.input[0].start) / 1000 + 's');\n            }\n            callback(hamsters.wheel.getOutput(task.output, aggregate, output.dataType));\n            hamsters.wheel.tasks[task.id] = null; //Clean up our task, not needed any longer\n            if (hamsters.cache && memoize !== false) {\n              if (output.data.length > 0 && !output.dataType) {\n                hamsters.wheel.memoize(task.fn, task.input, output.data, 'na');\n              } else if (output.data.length > 0 && output.dataType) {\n                hamsters.wheel.memoize(task.fn, task.input, hamsters.wheel.normalizeArray(output.data), output.dataType);\n              }\n            }\n          }\n        });\n        task.count += 1; //Thread finished\n        return;\n      };\n    } else {\n      hamsters.wheel.newWheel = function (inputArray, hamsterfood, aggregate, callback, task, threadid, hamster, memoize) {\n        if (hamsters.maxThreads === hamsters.wheel.queue.running.length) {\n          hamsters.wheel.poolThread(inputArray, hamsterfood, threadid, callback, task, aggregate, memoize);\n          return;\n        }\n        if (memoize || hamsters.debug) {\n          hamsters.wheel.trackInput(inputArray, threadid, task, hamsterfood);\n        }\n        if (!hamster) {\n          if (hamsters.persistence) {\n            hamster = hamsters.wheel.hamsters[hamsters.wheel.queue.running.length];\n          } else if (hamsters.wheel.env.node || hamsters.wheel.env.ie10) {\n            hamster = new Worker('common/wheel.min.js');\n          } else if (hamsters.wheel.env.worker) {\n            hamster = new SharedWorker(hamsters.wheel.uri, 'SharedHamsterWheel');\n          } else {\n            hamster = new Worker(hamsters.wheel.uri);\n          }\n        }\n        hamsters.wheel.trainHamster(threadid, aggregate, callback, task, hamster, memoize);\n        hamsters.wheel.trackThread(task, hamsters.wheel.queue.running, threadid);\n        hamsters.wheel.feedHamster(hamster, hamsterfood, inputArray);\n        task.count += 1; //Increment count, thread is running\n        if (hamsters.debug === 'verbose') {\n          console.info('Spawning Hamster #' + threadid + ' @ ' + new Date().getTime());\n        }\n      };\n      spawnHamsters();\n    }\n  });\n})();\n\n/*** EXPORTS FROM exports-loader ***/\nexports[\"hamsters\"] = (hamsters);\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4), __webpack_require__(0)))\n\n/***/ },\n/* 12 */\n/***/ function(module, exports) {\n\n﻿(function () {\n\tvar isCommonJS = typeof module !== 'undefined' && module.exports;\n\tvar isNode = !(typeof window !== 'undefined' && this === window);\n\tvar setImmediate = setImmediate || function (cb) {\n\t\tsetTimeout(cb, 0);\n\t};\n\tvar Worker = isNode ? require(__dirname + '/Worker.js') : self.Worker;\n\tvar URL = typeof self !== 'undefined' ? (self.URL ? self.URL : self.webkitURL) : null;\n\tvar _supports = (isNode || self.Worker) ? true : false; // node always supports parallel\n\n\tfunction extend(from, to) {\n\t\tif (!to) to = {};\n\t\tfor (var i in from) {\n\t\t\tif (to[i] === undefined) to[i] = from[i];\n\t\t}\n\t\treturn to;\n\t}\n\n\tfunction Operation() {\n\t\tthis._callbacks = [];\n\t\tthis._errCallbacks = [];\n\n\t\tthis._resolved = 0;\n\t\tthis._result = null;\n\t}\n\n\tOperation.prototype.resolve = function (err, res) {\n\t\tif (!err) {\n\t\t\tthis._resolved = 1;\n\t\t\tthis._result = res;\n\n\t\t\tfor (var i = 0; i < this._callbacks.length; ++i) {\n\t\t\t\tthis._callbacks[i](res);\n\t\t\t}\n\t\t} else {\n\t\t\tthis._resolved = 2;\n\t\t\tthis._result = err;\n\n\t\t\tfor (var iE = 0; iE < this._errCallbacks.length; ++iE) {\n\t\t\t\tthis._errCallbacks[iE](err);\n\t\t\t}\n\t\t}\n\n\t\tthis._callbacks = [];\n\t\tthis._errCallbacks = [];\n\t};\n\n\tOperation.prototype.then = function (cb, errCb) {\n\t\tif (this._resolved === 1) { // result\n\t\t\tif (cb) {\n\t\t\t\tcb(this._result);\n\t\t\t}\n\n\t\t\treturn;\n\t\t} else if (this._resolved === 2) { // error\n\t\t\tif (errCb) {\n\t\t\t\terrCb(this._result);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tif (cb) {\n\t\t\tthis._callbacks[this._callbacks.length] = cb;\n\t\t}\n\n\t\tif (errCb) {\n\t\t\tthis._errCallbacks[this._errCallbacks.length] = errCb;\n\t\t}\n\t\treturn this;\n\t};\n\n\tvar defaults = {\n\t\tevalPath: isNode ? __dirname + '/eval.js' : null,\n\t\tmaxWorkers: isNode ? require('os').cpus().length : (navigator.hardwareConcurrency || 4),\n\t\tsynchronous: true,\n\t\tenv: {},\n\t\tenvNamespace: 'env'\n\t};\n\n\tfunction Parallel(data, options) {\n\t\tthis.data = data;\n\t\tthis.options = extend(defaults, options);\n\t\tthis.operation = new Operation();\n\t\tthis.operation.resolve(null, this.data);\n\t\tthis.requiredScripts = [];\n\t\tthis.requiredFunctions = [];\n\t}\n\n\t// static method\n\tParallel.isSupported = function () { return _supports; }\n\n\tParallel.prototype.getWorkerSource = function (cb, env) {\n\t\tvar that = this;\n\t\tvar preStr = '';\n\t\tvar i = 0;\n\t\tif (!isNode && this.requiredScripts.length !== 0) {\n\t\t\tpreStr += 'importScripts(\"' + this.requiredScripts.join('\",\"') + '\");\\r\\n';\n\t\t}\n\n\t\tfor (i = 0; i < this.requiredFunctions.length; ++i) {\n\t\t\tif (this.requiredFunctions[i].name) {\n\t\t\t\tpreStr += 'var ' + this.requiredFunctions[i].name + ' = ' + this.requiredFunctions[i].fn.toString() + ';';\n\t\t\t} else {\n\t\t\t\tpreStr += this.requiredFunctions[i].fn.toString();\n\t\t\t}\n\t\t}\n\n\t\tenv = JSON.stringify(env || {});\n\n\t\tvar ns = this.options.envNamespace;\n\n\t\tif (isNode) {\n\t\t\treturn preStr + 'process.on(\"message\", function(e) {global.' + ns + ' = ' + env + ';process.send(JSON.stringify((' + cb.toString() + ')(JSON.parse(e).data)))})';\n\t\t} else {\n\t\t\treturn preStr + 'self.onmessage = function(e) {var global = {}; global.' + ns + ' = ' + env + ';self.postMessage((' + cb.toString() + ')(e.data))}';\n\t\t}\n\t};\n\n\tParallel.prototype.require = function () {\n\t\tvar args = Array.prototype.slice.call(arguments, 0),\n\t\t\tfunc;\n\n\t\tfor (var i = 0; i < args.length; i++) {\n\t\t\tfunc = args[i];\n\n\t\t\tif (typeof func === 'string') {\n\t\t\t\tthis.requiredScripts.push(func);\n\t\t\t} else if (typeof func === 'function') {\n\t\t\t\tthis.requiredFunctions.push({ fn: func });\n\t\t\t} else if (typeof func === 'object') {\n\t\t\t\tthis.requiredFunctions.push(func);\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t};\n\n\tParallel.prototype._spawnWorker = function (cb, env) {\n\t\tvar wrk;\n\t\tvar src = this.getWorkerSource(cb, env);\n\t\tif (isNode) {\n\t\t\twrk = new Worker(this.options.evalPath);\n\t\t\twrk.postMessage(src);\n\t\t} else {\n\t\t\tif (Worker === undefined) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (this.requiredScripts.length !== 0) {\n\t\t\t\t\tif (this.options.evalPath !== null) {\n\t\t\t\t\t\twrk = new Worker(this.options.evalPath);\n\t\t\t\t\t\twrk.postMessage(src);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthrow new Error('Can\\'t use required scripts without eval.js!');\n\t\t\t\t\t}\n\t\t\t\t} else if (!URL) {\n\t\t\t\t\tthrow new Error('Can\\'t create a blob URL in this browser!');\n\t\t\t\t} else {\n\t\t\t\t\tvar blob = new Blob([src], { type: 'text/javascript' });\n\t\t\t\t\tvar url = URL.createObjectURL(blob);\n\n\t\t\t\t\twrk = new Worker(url);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\tif (this.options.evalPath !== null) { // blob/url unsupported, cross-origin error\n\t\t\t\t\twrk = new Worker(this.options.evalPath);\n\t\t\t\t\twrk.postMessage(src);\n\t\t\t\t} else {\n\t\t\t\t\tthrow e;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn wrk;\n\t};\n\n\tParallel.prototype.spawn = function (cb, env) {\n\t\tvar that = this;\n\t\tvar newOp = new Operation();\n\n\t\tenv = extend(this.options.env, env || {});\n\n\t\tthis.operation.then(function () {\n\t\t\tvar wrk = that._spawnWorker(cb, env);\n\t\t\tif (wrk !== undefined) {\n\t\t\t\twrk.onmessage = function (msg) {\n\t\t\t\t\twrk.terminate();\n\t\t\t\t\tthat.data = msg.data;\n\t\t\t\t\tnewOp.resolve(null, that.data);\n\t\t\t\t};\n\t\t\t\twrk.onerror = function (e) {\n\t\t\t\t\twrk.terminate();\n\t\t\t\t\tnewOp.resolve(e, null);\n\t\t\t\t};\n\t\t\t\twrk.postMessage(that.data);\n\t\t\t} else if (that.options.synchronous) {\n\t\t\t\tsetImmediate(function () {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tthat.data = cb(that.data);\n\t\t\t\t\t\tnewOp.resolve(null, that.data);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\tnewOp.resolve(e, null);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthrow new Error('Workers do not exist and synchronous operation not allowed!');\n\t\t\t}\n\t\t});\n\t\tthis.operation = newOp;\n\t\treturn this;\n\t};\n\n\tParallel.prototype._spawnMapWorker = function (i, cb, done, env, wrk) {\n\t\tvar that = this;\n\n\t\tif (!wrk) wrk = that._spawnWorker(cb, env);\n\n\t\tif (wrk !== undefined) {\n\t\t\twrk.onmessage = function (msg) {\n\t\t\t\tthat.data[i] = msg.data;\n\t\t\t\tdone(null, wrk);\n\t\t\t};\n\t\t\twrk.onerror = function (e) {\n\t\t\t\twrk.terminate();\n\t\t\t\tdone(e);\n\t\t\t};\n\t\t\twrk.postMessage(that.data[i]);\n\t\t} else if (that.options.synchronous) {\n\t\t\tsetImmediate(function () {\n\t\t\t\tthat.data[i] = cb(that.data[i]);\n\t\t\t\tdone();\n\t\t\t});\n\t\t} else {\n\t\t\tthrow new Error('Workers do not exist and synchronous operation not allowed!');\n\t\t}\n\t};\n\n\tParallel.prototype.map = function (cb, env) {\n\t\tenv = extend(this.options.env, env || {});\n\n\t\tif (!this.data.length) {\n\t\t\treturn this.spawn(cb, env);\n\t\t}\n\n\t\tvar that = this;\n\t\tvar startedOps = 0;\n\t\tvar doneOps = 0;\n\t\tfunction done(err, wrk) {\n\t\t\tif (err) {\n\t\t\t\tnewOp.resolve(err, null);\n\t\t\t} else if (++doneOps === that.data.length) {\n\t\t\t\tnewOp.resolve(null, that.data);\n\t\t\t\tif (wrk) wrk.terminate();\n\t\t\t} else if (startedOps < that.data.length) {\n\t\t\t\tthat._spawnMapWorker(startedOps++, cb, done, env, wrk);\n\t\t\t} else {\n\t\t\t\tif (wrk) wrk.terminate();\n\t\t\t}\n\t\t}\n\n\t\tvar newOp = new Operation();\n\t\tthis.operation.then(function () {\n\t\t\tfor (; startedOps - doneOps < that.options.maxWorkers && startedOps < that.data.length; ++startedOps) {\n\t\t\t\tthat._spawnMapWorker(startedOps, cb, done, env);\n\t\t\t}\n\t\t}, function (err) {\n\t\t\tnewOp.resolve(err, null);\n\t\t});\n\t\tthis.operation = newOp;\n\t\treturn this;\n\t};\n\n\tParallel.prototype._spawnReduceWorker = function (data, cb, done, env, wrk) {\n\t\tvar that = this;\n\t\tif (!wrk) wrk = that._spawnWorker(cb, env);\n\n\t\tif (wrk !== undefined) {\n\t\t\twrk.onmessage = function (msg) {\n\t\t\t\tthat.data[that.data.length] = msg.data;\n\t\t\t\tdone(null, wrk);\n\t\t\t};\n\t\t\twrk.onerror = function (e) {\n\t\t\t\twrk.terminate();\n\t\t\t\tdone(e, null);\n\t\t\t}\n\t\t\twrk.postMessage(data);\n\t\t} else if (that.options.synchronous) {\n\t\t\tsetImmediate(function () {\n\t\t\t\tthat.data[that.data.length] = cb(data);\n\t\t\t\tdone();\n\t\t\t});\n\t\t} else {\n\t\t\tthrow new Error('Workers do not exist and synchronous operation not allowed!');\n\t\t}\n\t};\n\n\tParallel.prototype.reduce = function (cb, env) {\n\t\tenv = extend(this.options.env, env || {});\n\n\t\tif (!this.data.length) {\n\t\t\tthrow new Error('Can\\'t reduce non-array data');\n\t\t}\n\n\t\tvar runningWorkers = 0;\n\t\tvar that = this;\n\t\tfunction done(err, wrk) {\n\t\t\t--runningWorkers;\n\t\t\tif (err) {\n\t\t\t\tnewOp.resolve(err, null);\n\t\t\t} else if (that.data.length === 1 && runningWorkers === 0) {\n\t\t\t\tthat.data = that.data[0];\n\t\t\t\tnewOp.resolve(null, that.data);\n\t\t\t\tif (wrk) wrk.terminate();\n\t\t\t} else if (that.data.length > 1) {\n\t\t\t\t++runningWorkers;\n\t\t\t\tthat._spawnReduceWorker([that.data[0], that.data[1]], cb, done, env, wrk);\n\t\t\t\tthat.data.splice(0, 2);\n\t\t\t} else {\n\t\t\t\tif (wrk) wrk.terminate();\n\t\t\t}\n\t\t}\n\n\t\tvar newOp = new Operation();\n\t\tthis.operation.then(function () {\n\t\t\tif (that.data.length === 1) {\n\t\t\t\tnewOp.resolve(null, that.data[0]);\n\t\t\t} else {\n\t\t\t\tfor (var i = 0; i < that.options.maxWorkers && i < Math.floor(that.data.length / 2) ; ++i) {\n\t\t\t\t\t++runningWorkers;\n\t\t\t\t\tthat._spawnReduceWorker([that.data[i * 2], that.data[i * 2 + 1]], cb, done, env);\n\t\t\t\t}\n\n\t\t\t\tthat.data.splice(0, i * 2);\n\t\t\t}\n\t\t});\n\t\tthis.operation = newOp;\n\t\treturn this;\n\t};\n\n\tParallel.prototype.then = function (cb, errCb) {\n\t\tvar that = this;\n\t\tvar newOp = new Operation();\n\t\terrCb = typeof errCb === 'function' ? errCb : function(){};\n\n\t\tthis.operation.then(function () {\n\t\t\tvar retData;\n\n\t\t\ttry {\n\t\t\t\tif (cb) {\n\t\t\t\t\tretData = cb(that.data);\n\t\t\t\t\tif (retData !== undefined) {\n\t\t\t\t\t\tthat.data = retData;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tnewOp.resolve(null, that.data);\n\t\t\t} catch (e) {\n\t\t\t\tif (errCb) {\n\t\t\t\t\tretData = errCb(e);\n\t\t\t\t\tif (retData !== undefined) {\n\t\t\t\t\t\tthat.data = retData;\n\t\t\t\t\t}\n\n\t\t\t\t\tnewOp.resolve(null, that.data);\n\t\t\t\t} else {\n\t\t\t\t\tnewOp.resolve(null, e);\n\t\t\t\t}\n\t\t\t}\n\t\t}, function (err) {\n\t\t\tif (errCb) {\n\t\t\t\tvar retData = errCb(err);\n\t\t\t\tif (retData !== undefined) {\n\t\t\t\t\tthat.data = retData;\n\t\t\t\t}\n\n\t\t\t\tnewOp.resolve(null, that.data);\n\t\t\t} else {\n\t\t\t\tnewOp.resolve(null, err);\n\t\t\t}\n\t\t});\n\t\tthis.operation = newOp;\n\t\treturn this;\n\t};\n\n\tif (isCommonJS) {\n\t\tmodule.exports = Parallel;\n\t} else {\n\t\tself.Parallel = Parallel;\n\t}\n})();\n\n\n/***/ },\n/* 13 */\n/***/ function(module, exports) {\n\n\"use strict\";\n'use strict';\n\nexports.__esModule = true;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nexports.getConfig = getConfig;\nexports.setConfig = setConfig;\nvar configuration = {\n  basepath: {\n    node: '',\n    web: ''\n  },\n  fallback: {\n    slaveScriptUrl: ''\n  }\n};\n\nfunction configDeepMerge(destObj, srcObj) {\n  var ancestorProps = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n\n  Object.keys(srcObj).forEach(function (propKey) {\n    var srcValue = srcObj[propKey];\n    var ancestorPropsAndThis = ancestorProps.concat([propKey]);\n\n    if ((typeof srcValue === 'undefined' ? 'undefined' : _typeof(srcValue)) === 'object') {\n      if (typeof destObj[propKey] !== 'undefined' && _typeof(destObj[propKey]) !== 'object') {\n        throw new Error('Expected config property not to be an object: ' + ancestorPropsAndThis.join('.'));\n      }\n      configDeepMerge(destObj[propKey], srcValue, ancestorPropsAndThis);\n    } else {\n      if (_typeof(destObj[propKey]) === 'object') {\n        throw new Error('Expected config property to be an object: ' + ancestorPropsAndThis.join('.'));\n      }\n      destObj[propKey] = srcValue;\n    }\n  });\n}\n\nvar config = {\n  get: function get() {\n    return configuration;\n  },\n\n  set: function set(newConfig) {\n    if ((typeof newConfig === 'undefined' ? 'undefined' : _typeof(newConfig)) !== 'object') {\n      throw new Error('Expected config object.');\n    }\n\n    configDeepMerge(configuration, newConfig);\n  }\n};\n\nexports.default = config;\nfunction getConfig() {\n  return config.get();\n}\n\nfunction setConfig() {\n  return config.set.apply(config, arguments);\n}\n//# sourceMappingURL=config.js.map\n\n\n/***/ },\n/* 14 */\n/***/ function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(setImmediate, clearImmediate) {var nextTick = __webpack_require__(4).nextTick;\nvar apply = Function.prototype.apply;\nvar slice = Array.prototype.slice;\nvar immediateIds = {};\nvar nextImmediateId = 0;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function() {\n  return new Timeout(apply.call(setTimeout, window, arguments), clearTimeout);\n};\nexports.setInterval = function() {\n  return new Timeout(apply.call(setInterval, window, arguments), clearInterval);\n};\nexports.clearTimeout =\nexports.clearInterval = function(timeout) { timeout.close(); };\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\nTimeout.prototype.close = function() {\n  this._clearFn.call(window, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function(item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function(item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function(item) {\n  clearTimeout(item._idleTimeoutId);\n\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout)\n        item._onTimeout();\n    }, msecs);\n  }\n};\n\n// That's not how node.js implements it but the exposed api is the same.\nexports.setImmediate = typeof setImmediate === \"function\" ? setImmediate : function(fn) {\n  var id = nextImmediateId++;\n  var args = arguments.length < 2 ? false : slice.call(arguments, 1);\n\n  immediateIds[id] = true;\n\n  nextTick(function onNextTick() {\n    if (immediateIds[id]) {\n      // fn.call() is faster so we optimize for the common use-case\n      // @see http://jsperf.com/call-apply-segu\n      if (args) {\n        fn.apply(null, args);\n      } else {\n        fn.call(null);\n      }\n      // Prevent ids from leaking\n      exports.clearImmediate(id);\n    }\n  });\n\n  return id;\n};\n\nexports.clearImmediate = typeof clearImmediate === \"function\" ? clearImmediate : function(id) {\n  delete immediateIds[id];\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(14).setImmediate, __webpack_require__(14).clearImmediate))\n\n/***/ },\n/* 15 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n\nexports.__esModule = true;\nexports.Pool = exports.defaults = exports.config = undefined;\nexports.spawn = spawn;\n\n__webpack_require__(30);\n\nvar _config = __webpack_require__(13);\n\nvar _config2 = _interopRequireDefault(_config);\n\nvar _defaults = __webpack_require__(16);\n\nvar _defaults2 = _interopRequireDefault(_defaults);\n\nvar _pool = __webpack_require__(35);\n\nvar _pool2 = _interopRequireDefault(_pool);\n\nvar _worker = __webpack_require__(39);\n\nvar _worker2 = _interopRequireDefault(_worker);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.config = _config2.default;\nexports.defaults = _defaults2.default;\nexports.Pool = _pool2.default;\nfunction spawn() {\n  var runnable = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n  var importScripts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n\n  return new _worker2.default(runnable, importScripts);\n}\n\nexports.default = {\n  config: _config2.default,\n  defaults: _defaults2.default,\n  Pool: _pool2.default,\n  spawn: spawn,\n  Worker: _worker2.default\n};\n//# sourceMappingURL=index.js.map\n\n\n/***/ },\n/* 16 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(process) {'use strict';\n\n/*eslint-env node*/\n/*\n * This file is only a stub to make './defaults' resolve the './defaults.node' module.\n * Loading the browser defaults into the browser bundle is done in the gulpfile by\n * configuring a browserify override.\n */\n\nif (typeof process !== 'undefined' && 'pid' in process) {\n  module.exports = __webpack_require__(33);\n} else {\n  module.exports = __webpack_require__(32);\n}\n//# sourceMappingURL=defaults.js.map\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))\n\n/***/ },\n/* 17 */,\n/* 18 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_Hamsters_js__ = __webpack_require__(11);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_Hamsters_js___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_Hamsters_js__);\n/* harmony export (immutable) */ exports[\"a\"] = parallelKnightTours;\n\nfunction knightTours() {\n    var moves = [{ x: -2, y: -1 }, { x: -2, y: 1 }, { x: -1, y: -2 }, { x: -1, y: 2 }, { x: 1, y: -2 }, { x: 1, y: 2 }, { x: 2, y: -1 }, { x: 2, y: 1 }];\n    var boardSize = this.params.boardSize;\n    var numberOfFields = boardSize * boardSize;\n    var board = new Array(boardSize * boardSize);\n    board.fill(0);\n    var results = 0;\n    for (var i = 0; i < this.params.array.length; ++i) {\n        var startPath = this.params.array[i];\n        var stack = startPath.map(function (pos, index) {\n            return { coordinate: pos, n: index + 1 };\n        });\n        for (var index = 0; index < startPath.length - 1; ++index) {\n            var fieldIndex = startPath[index].x * boardSize + startPath[index].y;\n            board[fieldIndex] = index + 1;\n        }\n        while (stack.length > 0) {\n            var _stack = stack[stack.length - 1],\n                coordinate = _stack.coordinate,\n                n = _stack.n;\n\n            var _fieldIndex = coordinate.x * boardSize + coordinate.y;\n            if (board[_fieldIndex] !== 0) {\n                // back tracking\n                board[_fieldIndex] = 0;\n                stack.pop(); // remove current value\n                continue;\n            }\n            // entry\n            if (n === numberOfFields) {\n                ++results;\n                stack.pop();\n                continue;\n            }\n            board[_fieldIndex] = n;\n            for (var _i = 0; _i < moves.length; ++_i) {\n                var move = moves[_i];\n                var successor = { x: coordinate.x + move.x, y: coordinate.y + move.y };\n                // not outside of board and not yet accessed\n                var accessible = successor.x >= 0 && successor.y >= 0 && successor.x < boardSize && successor.y < boardSize && board[successor.x * boardSize + successor.y] === 0;\n                if (accessible) {\n                    stack.push({ coordinate: successor, n: n + 1 });\n                }\n            }\n        }\n    }\n    this.rtn.data.push(results);\n}\nfunction computeTours(start, boardSize) {\n    function successors(coordinate) {\n        var moves = [{ x: -2, y: -1 }, { x: -2, y: 1 }, { x: -1, y: -2 }, { x: -1, y: 2 }, { x: 1, y: -2 }, { x: 1, y: 2 }, { x: 2, y: -1 }, { x: 2, y: 1 }];\n        var result = [];\n        for (var i = 0; i < moves.length; ++i) {\n            var move = moves[i];\n            var successor = { x: coordinate.x + move.x, y: coordinate.y + move.y };\n            var accessible = successor.x >= 0 && successor.y >= 0 && successor.x < boardSize && successor.y < boardSize && (successor.x !== start.x || successor.y !== start.y) && successor.x !== coordinate.x && successor.y !== coordinate.y;\n            if (accessible) {\n                result.push(successor);\n            }\n        }\n        return result;\n    }\n    function computeStartFields() {\n        var result = [];\n        for (var _iterator = successors(start), _isArray = Array.isArray(_iterator), _i2 = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n            var _ref;\n\n            if (_isArray) {\n                if (_i2 >= _iterator.length) break;\n                _ref = _iterator[_i2++];\n            } else {\n                _i2 = _iterator.next();\n                if (_i2.done) break;\n                _ref = _i2.value;\n            }\n\n            var directSuccessor = _ref;\n\n            for (var _iterator2 = successors(directSuccessor), _isArray2 = Array.isArray(_iterator2), _i3 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {\n                var _ref2;\n\n                if (_isArray2) {\n                    if (_i3 >= _iterator2.length) break;\n                    _ref2 = _iterator2[_i3++];\n                } else {\n                    _i3 = _iterator2.next();\n                    if (_i3.done) break;\n                    _ref2 = _i3.value;\n                }\n\n                var indirectSuccessor = _ref2;\n\n                result.push([start, directSuccessor, indirectSuccessor]);\n            }\n        }\n        return result;\n    }\n    var resolve = void 0;\n    var reject = void 0;\n    var promise = new Promise(function (res, rej) {\n        resolve = res;\n        reject = rej;\n    });\n    var startFields = computeStartFields();\n    var params = {\n        array: startFields,\n        boardSize: boardSize\n    };\n    __WEBPACK_IMPORTED_MODULE_0_Hamsters_js__[\"hamsters\"].run(params, knightTours, function (result) {\n        return resolve(result);\n    }, __WEBPACK_IMPORTED_MODULE_0_Hamsters_js__[\"hamsters\"].maxThreads, true);\n    return promise;\n}\nfunction aggregateTours(results) {\n    var resolve = void 0;\n    var reject = void 0;\n    var promise = new Promise(function (res, rej) {\n        resolve = res;\n        reject = rej;\n    });\n    __WEBPACK_IMPORTED_MODULE_0_Hamsters_js__[\"hamsters\"].run({ array: results }, function () {\n        var result = this.params.array.reduce(function (memo, value) {\n            return memo + value;\n        }, 0);\n        this.rtn.data.push(result);\n    }, function (results) {\n        resolve(results[0]);\n    }, 1, true);\n    return promise;\n}\nfunction parallelKnightTours(start, boardSize) {\n    return computeTours(start, boardSize).then(aggregateTours);\n}\n\n/***/ },\n/* 19 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_Hamsters_js__ = __webpack_require__(11);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_Hamsters_js___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_Hamsters_js__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_lodash__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_lodash___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_lodash__);\n/* harmony export (immutable) */ exports[\"a\"] = mandelbrot;\n\n\nfunction computeMandelbrotLine() {\n    var options = this.params.options;\n    // Function inline is up to 30% faster than if the function is not inline\n    // https://jsperf.com/mandelbrot-env3 https://jsperf.com/mandelbrot-env4\n    function calculateZ(c) {\n        var z = { i: c.i, real: c.real };\n        var n = 0;\n        for (; n < options.iterations; ++n) {\n            if (Math.pow(z.real, 2) + Math.pow(z.i, 2) > 4) {\n                break;\n            }\n            // z ** 2 + c\n            var zI = z.i;\n            z.i = 2 * z.real * z.i + c.i;\n            z.real = Math.pow(z.real, 2) - Math.pow(zI, 2) + c.real;\n        }\n        return n;\n    }\n    var array = this.params.array;\n    for (var i = 0; i < array.length; ++i) {\n        var y = array[i];\n        var line = new Uint8ClampedArray(options.imageWidth * 4);\n        var cI = options.max.i - y * options.scalingFactor.i;\n        for (var x = 0; x < options.imageWidth; ++x) {\n            var c = {\n                i: cI,\n                real: options.min.real + x * options.scalingFactor.real\n            };\n            var n = calculateZ(c);\n            var base = x * 4;\n            /* tslint:disable:no-bitwise */\n            line[base] = n & 0xFF;\n            line[base + 1] = n & 0xFF00;\n            line[base + 2] = n & 0xFF0000;\n            line[base + 3] = 255;\n        }\n        this.rtn.data.push(line);\n    }\n}\nfunction mandelbrot(options) {\n    var resolve = void 0;\n    var reject = void 0;\n    var promise = new Promise(function (res, rej) {\n        resolve = res;\n        reject = rej;\n    });\n    var range = __WEBPACK_IMPORTED_MODULE_1_lodash__[\"range\"](options.imageHeight);\n    var params = {\n        array: range,\n        options: options\n    };\n    __WEBPACK_IMPORTED_MODULE_0_Hamsters_js__[\"hamsters\"].run(params, computeMandelbrotLine, function (result) {\n        return resolve(result);\n    }, __WEBPACK_IMPORTED_MODULE_0_Hamsters_js__[\"hamsters\"].maxThreads, true);\n    return promise;\n}\n\n/***/ },\n/* 20 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_Hamsters_js__ = __webpack_require__(11);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_Hamsters_js___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_Hamsters_js__);\n/* harmony export (immutable) */ exports[\"a\"] = parallelMonteCarlo;\n\nfunction initializeOptions(options) {\n    return Object.assign({}, {\n        investmentAmount: 1000000,\n        liquidity: 10000,\n        numRuns: 10000,\n        numYears: 10,\n        performance: 0,\n        projects: [],\n        seed: undefined,\n        volatility: 0.01\n    }, options);\n}\nfunction runSimulation() {\n    function createMonteCarloEnvironment(options) {\n        /**\n         * Performs the monte carlo simulation for all years and num runs.\n         * @param cashFlows the cash flows\n         * @returns {number[][]} the simulated outcomes grouped by year\n         */\n        function simulateOutcomes(cashFlows, numYears) {\n            function toAbsoluteIndices(indices) {\n                var currentPortfolioValue = options.investmentAmount;\n                var previousYearIndex = 100;\n                for (var relativeYear = 0; relativeYear < indices.length; ++relativeYear) {\n                    var currentYearIndex = indices[relativeYear];\n                    var cashFlowStartOfYear = relativeYear === 0 ? 0 : cashFlows[relativeYear - 1];\n                    // scale current value with performance gain according to index\n                    var performance = currentYearIndex / previousYearIndex;\n                    currentPortfolioValue = (currentPortfolioValue + cashFlowStartOfYear) * performance;\n                    indices[relativeYear] = Math.round(currentPortfolioValue);\n                    previousYearIndex = currentYearIndex;\n                }\n                return indices;\n            }\n            var result = new Array(options.numYears);\n            for (var year = 0; year <= numYears; ++year) {\n                result[year] = new Array(options.numRuns);\n            }\n            for (var run = 0; run < options.numRuns; run++) {\n                var indices = [100];\n                for (var i = 1; i <= numYears; i++) {\n                    // const randomPerformance = 1 + random.normal(options.performance, options.volatility);\n                    var randomPerformance = 1 + Math.random();\n                    indices.push(indices[i - 1] * randomPerformance);\n                }\n                // convert the relative values from above to absolute values.\n                toAbsoluteIndices(indices);\n                for (var _year = 0; _year < indices.length; ++_year) {\n                    result[_year][run] = indices[_year];\n                }\n            }\n            return result;\n        }\n        function projectsToCashFlows() {\n            var cashFlows = [];\n            for (var year = 0; year < options.numYears; ++year) {\n                var projectsByThisYear = projectsByStartYear[year] || [];\n                var cashFlow = -projectsByThisYear.reduce(function (memo, project) {\n                    return memo + project.totalAmount;\n                }, 0);\n                cashFlows.push(cashFlow);\n            }\n            return cashFlows;\n        }\n        function calculateNoInterestReferenceLine(cashFlows) {\n            var noInterestReferenceLine = [];\n            var investmentAmountLeft = options.investmentAmount;\n            for (var year = 0; year < options.numYears; ++year) {\n                investmentAmountLeft = investmentAmountLeft + cashFlows[year];\n                noInterestReferenceLine.push(investmentAmountLeft);\n            }\n            return noInterestReferenceLine;\n        }\n        var projectsToSimulate = options.projects;\n        if (options.taskIndex && options.valuesPerWorker) {\n            projectsToSimulate = options.projects.slice(options.taskIndex * options.valuesPerWorker, (options.taskIndex + 1) * options.valuesPerWorker);\n        }\n        var projects = options.projects.sort(function (a, b) {\n            return a.startYear - b.startYear;\n        });\n        // Group projects by startYear, use lodash groupBy instead\n        var projectsByStartYear = {};\n        for (var _iterator = projects, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n            var _ref;\n\n            if (_isArray) {\n                if (_i >= _iterator.length) break;\n                _ref = _iterator[_i++];\n            } else {\n                _i = _iterator.next();\n                if (_i.done) break;\n                _ref = _i.value;\n            }\n\n            var project = _ref;\n\n            var arr = projectsByStartYear[project.startYear] = projectsByStartYear[project.startYear] || [];\n            arr.push(project);\n        }\n        var cashFlows = projectsToCashFlows();\n        var noInterestReferenceLine = calculateNoInterestReferenceLine(cashFlows);\n        var numYears = projectsToSimulate.reduce(function (memo, project) {\n            return Math.max(memo, project.startYear);\n        }, 0);\n        return {\n            investmentAmount: options.investmentAmount,\n            liquidity: options.liquidity,\n            noInterestReferenceLine: noInterestReferenceLine,\n            numRuns: options.numRuns,\n            numYears: numYears,\n            projectsByStartYear: projectsByStartYear,\n            simulatedValues: simulateOutcomes(cashFlows, numYears)\n        };\n    }\n    function calculateProject(project, environment) {\n        var NUMBER_OF_BUCKETS = 10;\n        function groupForValue(value, groups) {\n            return groups.find(function (group) {\n                return (typeof group.from === \"undefined\" || group.from <= value) && (typeof group.to === \"undefined\" || group.to > value);\n            });\n        }\n        function createGroups(requiredAmount, noInterestReference) {\n            return [{ description: \"Ziel erreichbar\", from: requiredAmount, name: \"green\", percentage: 0, separator: true }, { description: \"mit Zusatzliquidität erreichbar\", from: requiredAmount - environment.liquidity, name: \"yellow\", percentage: 0, separator: true, to: requiredAmount }, { description: \"nicht erreichbar\", from: noInterestReference, name: \"gray\", percentage: 0, separator: false, to: requiredAmount - environment.liquidity }, { description: \"nicht erreichbar, mit Verlust\", name: \"red\", percentage: 0, separator: false, to: noInterestReference }];\n        }\n        function calculateRequiredAmount() {\n            var amount = project.totalAmount;\n            var projectsSameYear = environment.projectsByStartYear[project.startYear];\n            for (var _iterator2 = projectsSameYear, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {\n                var _ref2;\n\n                if (_isArray2) {\n                    if (_i2 >= _iterator2.length) break;\n                    _ref2 = _iterator2[_i2++];\n                } else {\n                    _i2 = _iterator2.next();\n                    if (_i2.done) break;\n                    _ref2 = _i2.value;\n                }\n\n                var otherProject = _ref2;\n\n                if (otherProject === project) {\n                    break;\n                }\n                amount += otherProject.totalAmount;\n            }\n            return amount;\n        }\n        function median(values) {\n            var half = Math.floor(values.length / 2);\n            if (values.length % 2) {\n                return values[half];\n            }\n            return (values[half - 1] + values[half]) / 2.0;\n        }\n        var requiredAmount = calculateRequiredAmount();\n        var simulatedValuesThisYear = environment.simulatedValues[project.startYear];\n        simulatedValuesThisYear.sort(function (a, b) {\n            return a - b;\n        });\n        var groups = createGroups(requiredAmount, environment.noInterestReferenceLine[project.startYear]);\n        var valuesByGroup = {};\n        var bucketSize = Math.round(simulatedValuesThisYear.length / NUMBER_OF_BUCKETS);\n        var buckets = [];\n        for (var i = 0; i < simulatedValuesThisYear.length; i += bucketSize) {\n            var bucket = {\n                max: Number.MIN_VALUE,\n                min: Number.MAX_VALUE,\n                subBuckets: {}\n            };\n            for (var j = i; j < i + bucketSize; ++j) {\n                var value = simulatedValuesThisYear[j];\n                bucket.min = Math.min(bucket.min, value);\n                bucket.max = Math.max(bucket.max, value);\n                var group = groupForValue(simulatedValuesThisYear[j], groups);\n                valuesByGroup[group.name] = (valuesByGroup[group.name] || 0) + 1;\n                var subBucket = bucket.subBuckets[group.name] = bucket.subBuckets[group.name] || { group: group.name, max: Number.MIN_VALUE, min: Number.MAX_VALUE };\n                subBucket.min = Math.min(subBucket.min, value);\n                subBucket.max = Math.max(subBucket.max, value);\n            }\n            buckets.push(bucket);\n        }\n        var nonEmptyGroups = groups.filter(function (group) {\n            return !!valuesByGroup[group.name];\n        });\n        nonEmptyGroups.forEach(function (group) {\n            return group.percentage = valuesByGroup[group.name] / simulatedValuesThisYear.length;\n        });\n        var oneSixth = Math.round(simulatedValuesThisYear.length / 6);\n        return {\n            buckets: buckets,\n            groups: nonEmptyGroups,\n            max: simulatedValuesThisYear[simulatedValuesThisYear.length - 1],\n            median: median(simulatedValuesThisYear),\n            min: simulatedValuesThisYear[0],\n            project: project,\n            twoThird: {\n                max: simulatedValuesThisYear[simulatedValuesThisYear.length - oneSixth],\n                min: simulatedValuesThisYear[oneSixth]\n            }\n        };\n    }\n    var environment = createMonteCarloEnvironment(this.params.options);\n    for (var i = 0; i < this.params.array.length; ++i) {\n        var project = this.params.array[i];\n        this.rtn.data.push(calculateProject(project, environment));\n    }\n}\nfunction parallelMonteCarlo(userOptions) {\n    var options = initializeOptions(userOptions);\n    var resolve = void 0;\n    var reject = void 0;\n    var promise = new Promise(function (res, rej) {\n        resolve = res;\n        reject = rej;\n    });\n    __WEBPACK_IMPORTED_MODULE_0_Hamsters_js__[\"hamsters\"].run({ array: options.projects, options: options }, runSimulation, function (result) {\n        return resolve(result);\n    }, __WEBPACK_IMPORTED_MODULE_0_Hamsters_js__[\"hamsters\"].maxThreads, true);\n    return promise;\n}\n\n/***/ },\n/* 21 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(global) {/* unused harmony export knightTours */\n/* harmony export (immutable) */ exports[\"a\"] = parallelJSKnightTours;\nvar Parallel = __webpack_require__(12);\nfunction knightTours(startPath, boardSize) {\n    var moves = [{ x: -2, y: -1 }, { x: -2, y: 1 }, { x: -1, y: -2 }, { x: -1, y: 2 }, { x: 1, y: -2 }, { x: 1, y: 2 }, { x: 2, y: -1 }, { x: 2, y: 1 }];\n    var board = new Array(boardSize * boardSize);\n    board.fill(0);\n    var numberOfFields = boardSize * boardSize;\n    var results = 0;\n    var stack = startPath.map(function (pos, index) {\n        return { coordinate: pos, n: index + 1 };\n    });\n    for (var index = 0; index < startPath.length - 1; ++index) {\n        var fieldIndex = startPath[index].x * boardSize + startPath[index].y;\n        board[fieldIndex] = index + 1;\n    }\n    while (stack.length > 0) {\n        var _stack = stack[stack.length - 1],\n            coordinate = _stack.coordinate,\n            n = _stack.n;\n\n        var _fieldIndex = coordinate.x * boardSize + coordinate.y;\n        if (board[_fieldIndex] !== 0) {\n            // back tracking\n            board[_fieldIndex] = 0;\n            stack.pop(); // remove current value\n            continue;\n        }\n        // entry\n        if (n === numberOfFields) {\n            ++results;\n            stack.pop();\n            continue;\n        }\n        board[_fieldIndex] = n;\n        for (var i = 0; i < moves.length; ++i) {\n            var move = moves[i];\n            var successor = { x: coordinate.x + move.x, y: coordinate.y + move.y };\n            // not outside of board and not yet accessed\n            var accessible = successor.x >= 0 && successor.y >= 0 && successor.x < boardSize && successor.y < boardSize && board[successor.x * boardSize + successor.y] === 0;\n            if (accessible) {\n                stack.push({ coordinate: successor, n: n + 1 });\n            }\n        }\n    }\n    return results;\n}\nfunction parallelJSKnightTours(start, boardSize) {\n    function successors(coordinate) {\n        var moves = [{ x: -2, y: -1 }, { x: -2, y: 1 }, { x: -1, y: -2 }, { x: -1, y: 2 }, { x: 1, y: -2 }, { x: 1, y: 2 }, { x: 2, y: -1 }, { x: 2, y: 1 }];\n        var result = [];\n        for (var i = 0; i < moves.length; ++i) {\n            var move = moves[i];\n            var successor = { x: coordinate.x + move.x, y: coordinate.y + move.y };\n            var accessible = successor.x >= 0 && successor.y >= 0 && successor.x < boardSize && successor.y < boardSize && (successor.x !== start.x || successor.y !== start.y) && successor.x !== coordinate.x && successor.y !== coordinate.y;\n            if (accessible) {\n                result.push(successor);\n            }\n        }\n        return result;\n    }\n    function computeStartFields() {\n        var result = [];\n        for (var _iterator = successors(start), _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n            var _ref;\n\n            if (_isArray) {\n                if (_i >= _iterator.length) break;\n                _ref = _iterator[_i++];\n            } else {\n                _i = _iterator.next();\n                if (_i.done) break;\n                _ref = _i.value;\n            }\n\n            var directSuccessor = _ref;\n\n            for (var _iterator2 = successors(directSuccessor), _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {\n                var _ref2;\n\n                if (_isArray2) {\n                    if (_i2 >= _iterator2.length) break;\n                    _ref2 = _iterator2[_i2++];\n                } else {\n                    _i2 = _iterator2.next();\n                    if (_i2.done) break;\n                    _ref2 = _i2.value;\n                }\n\n                var indirectSuccessor = _ref2;\n\n                result.push([start, directSuccessor, indirectSuccessor]);\n            }\n        }\n        return result;\n    }\n    return new Parallel(computeStartFields(), { env: { boardSize: boardSize } }).require(knightTours).map(function (startField) {\n        return knightTours(startField, global.env.boardSize);\n    }).reduce(function (toursPerRun) {\n        return toursPerRun.reduce(function (memo, current) {\n            return memo + current;\n        }, 0);\n    });\n    // The reduce operation needs to wait until the map operation is complete, switches back to the main thread and then\n    // a new worker is spawned for each reduce step, e.g. for [1, 2, 3, 4, 5, 6] the three workers with [1, 2], [3, 4], [5, 6]\n    // then the sub sequent workers [3, 7] and finally, [10, 11] are spawned...\n}\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))\n\n/***/ },\n/* 22 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(global) {/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_lodash__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_lodash___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_lodash__);\n/* unused harmony export computeMandelbrotLine */\n/* harmony export (immutable) */ exports[\"a\"] = parallelJSMandelbrot;\nvar Parallel = __webpack_require__(12);\n\nfunction computeMandelbrotLine(y, options) {\n    function calculateZ(c) {\n        var z = { i: c.i, real: c.real };\n        var n = 0;\n        for (; n < options.iterations; ++n) {\n            if (Math.pow(z.real, 2) + Math.pow(z.i, 2) > 4) {\n                break;\n            }\n            // z ** 2 + c\n            var zI = z.i;\n            z.i = 2 * z.real * z.i + c.i;\n            z.real = Math.pow(z.real, 2) - Math.pow(zI, 2) + c.real;\n        }\n        return n;\n    }\n    var line = new Uint8ClampedArray(options.imageWidth * 4);\n    var cI = options.max.i - y * options.scalingFactor.i;\n    for (var x = 0; x < options.imageWidth; ++x) {\n        var c = {\n            i: cI,\n            real: options.min.real + x * options.scalingFactor.real\n        };\n        var n = calculateZ(c);\n        var base = x * 4;\n        /* tslint:disable:no-bitwise */\n        line[base] = n & 0xFF;\n        line[base + 1] = n & 0xFF00;\n        line[base + 2] = n & 0xFF0000;\n        line[base + 3] = 255;\n    }\n    return line;\n}\nfunction parallelJSMandelbrot(mandelbrotOptions) {\n    var lines = __WEBPACK_IMPORTED_MODULE_0_lodash__[\"range\"](mandelbrotOptions.imageHeight);\n    return new Parallel(lines, { env: mandelbrotOptions }).require(computeMandelbrotLine).map(function (line) {\n        return computeMandelbrotLine(line, global.env);\n    });\n}\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))\n\n/***/ },\n/* 23 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(global) {/* harmony export (immutable) */ exports[\"a\"] = parallelJSMonteCarlo;\nvar Parallel = __webpack_require__(12);\nfunction initializeOptions(options) {\n    return Object.assign({}, {\n        investmentAmount: 1000000,\n        liquidity: 10000,\n        numRuns: 10000,\n        numYears: 10,\n        performance: 0,\n        projects: [],\n        seed: undefined,\n        volatility: 0.01\n    }, options);\n}\nfunction createMonteCarloEnvironment(options) {\n    var random = new self.Random(10);\n    /**\n     * Performs the monte carlo simulation for all years and num runs.\n     * @param cashFlows the cash flows\n     * @returns {number[][]} the simulated outcomes grouped by year\n     */\n    function simulateOutcomes(cashFlows, numYears) {\n        function toAbsoluteIndices(indices) {\n            var currentPortfolioValue = options.investmentAmount;\n            var previousYearIndex = 100;\n            for (var relativeYear = 0; relativeYear < indices.length; ++relativeYear) {\n                var currentYearIndex = indices[relativeYear];\n                var cashFlowStartOfYear = relativeYear === 0 ? 0 : cashFlows[relativeYear - 1];\n                // scale current value with performance gain according to index\n                var performance = currentYearIndex / previousYearIndex;\n                currentPortfolioValue = (currentPortfolioValue + cashFlowStartOfYear) * performance;\n                indices[relativeYear] = 1 + random.normal(performance, options.volatility);\n                previousYearIndex = currentYearIndex;\n            }\n            return indices;\n        }\n        var result = new Array(options.numYears);\n        for (var year = 0; year <= numYears; ++year) {\n            result[year] = new Array(options.numRuns);\n        }\n        for (var run = 0; run < options.numRuns; run++) {\n            var indices = [100];\n            for (var i = 1; i <= numYears; i++) {\n                // const randomPerformance = 1 + random.normal(options.performance, options.volatility);\n                var randomPerformance = 1 + Math.random();\n                indices.push(indices[i - 1] * randomPerformance);\n            }\n            // convert the relative values from above to absolute values.\n            toAbsoluteIndices(indices);\n            for (var _year = 0; _year < indices.length; ++_year) {\n                result[_year][run] = indices[_year];\n            }\n        }\n        return result;\n    }\n    function projectsToCashFlows() {\n        var cashFlows = [];\n        for (var year = 0; year < options.numYears; ++year) {\n            var projectsByThisYear = projectsByStartYear[year] || [];\n            var cashFlow = -projectsByThisYear.reduce(function (memo, project) {\n                return memo + project.totalAmount;\n            }, 0);\n            cashFlows.push(cashFlow);\n        }\n        return cashFlows;\n    }\n    function calculateNoInterestReferenceLine(cashFlows) {\n        var noInterestReferenceLine = [];\n        var investmentAmountLeft = options.investmentAmount;\n        for (var year = 0; year < options.numYears; ++year) {\n            investmentAmountLeft = investmentAmountLeft + cashFlows[year];\n            noInterestReferenceLine.push(investmentAmountLeft);\n        }\n        return noInterestReferenceLine;\n    }\n    var projectsToSimulate = options.projects;\n    if (options.taskIndex && options.valuesPerWorker) {\n        projectsToSimulate = options.projects.slice(options.taskIndex * options.valuesPerWorker, (options.taskIndex + 1) * options.valuesPerWorker);\n    }\n    var projects = options.projects.sort(function (a, b) {\n        return a.startYear - b.startYear;\n    });\n    // Group projects by startYear, use lodash groupBy instead\n    var projectsByStartYear = {};\n    for (var _iterator = projects, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n        var _ref;\n\n        if (_isArray) {\n            if (_i >= _iterator.length) break;\n            _ref = _iterator[_i++];\n        } else {\n            _i = _iterator.next();\n            if (_i.done) break;\n            _ref = _i.value;\n        }\n\n        var project = _ref;\n\n        var arr = projectsByStartYear[project.startYear] = projectsByStartYear[project.startYear] || [];\n        arr.push(project);\n    }\n    var cashFlows = projectsToCashFlows();\n    var noInterestReferenceLine = calculateNoInterestReferenceLine(cashFlows);\n    var numYears = projectsToSimulate.reduce(function (memo, project) {\n        return Math.max(memo, project.startYear);\n    }, 0);\n    return {\n        investmentAmount: options.investmentAmount,\n        liquidity: options.liquidity,\n        noInterestReferenceLine: noInterestReferenceLine,\n        numRuns: options.numRuns,\n        numYears: numYears,\n        projectsByStartYear: projectsByStartYear,\n        simulatedValues: simulateOutcomes(cashFlows, numYears)\n    };\n}\nfunction calculateProject(project, environment) {\n    var NUMBER_OF_BUCKETS = 10;\n    function groupForValue(value, groups) {\n        return groups.find(function (group) {\n            return (typeof group.from === \"undefined\" || group.from <= value) && (typeof group.to === \"undefined\" || group.to > value);\n        });\n    }\n    function createGroups(requiredAmount, noInterestReference) {\n        return [{ description: \"Ziel erreichbar\", from: requiredAmount, name: \"green\", percentage: 0, separator: true }, { description: \"mit Zusatzliquidität erreichbar\", from: requiredAmount - environment.liquidity, name: \"yellow\", percentage: 0, separator: true, to: requiredAmount }, { description: \"nicht erreichbar\", from: noInterestReference, name: \"gray\", percentage: 0, separator: false, to: requiredAmount - environment.liquidity }, { description: \"nicht erreichbar, mit Verlust\", name: \"red\", percentage: 0, separator: false, to: noInterestReference }];\n    }\n    function calculateRequiredAmount() {\n        var amount = project.totalAmount;\n        var projectsSameYear = environment.projectsByStartYear[project.startYear];\n        for (var _iterator2 = projectsSameYear, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {\n            var _ref2;\n\n            if (_isArray2) {\n                if (_i2 >= _iterator2.length) break;\n                _ref2 = _iterator2[_i2++];\n            } else {\n                _i2 = _iterator2.next();\n                if (_i2.done) break;\n                _ref2 = _i2.value;\n            }\n\n            var otherProject = _ref2;\n\n            if (otherProject === project) {\n                break;\n            }\n            amount += otherProject.totalAmount;\n        }\n        return amount;\n    }\n    function median(values) {\n        var half = Math.floor(values.length / 2);\n        if (values.length % 2) {\n            return values[half];\n        }\n        return (values[half - 1] + values[half]) / 2.0;\n    }\n    var requiredAmount = calculateRequiredAmount();\n    var simulatedValuesThisYear = environment.simulatedValues[project.startYear];\n    simulatedValuesThisYear.sort(function (a, b) {\n        return a - b;\n    });\n    var groups = createGroups(requiredAmount, environment.noInterestReferenceLine[project.startYear]);\n    var valuesByGroup = {};\n    var bucketSize = Math.round(simulatedValuesThisYear.length / NUMBER_OF_BUCKETS);\n    var buckets = [];\n    for (var i = 0; i < simulatedValuesThisYear.length; i += bucketSize) {\n        var bucket = {\n            max: Number.MIN_VALUE,\n            min: Number.MAX_VALUE,\n            subBuckets: {}\n        };\n        for (var j = i; j < i + bucketSize; ++j) {\n            var value = simulatedValuesThisYear[j];\n            bucket.min = Math.min(bucket.min, value);\n            bucket.max = Math.max(bucket.max, value);\n            var group = groupForValue(simulatedValuesThisYear[j], groups);\n            valuesByGroup[group.name] = (valuesByGroup[group.name] || 0) + 1;\n            var subBucket = bucket.subBuckets[group.name] = bucket.subBuckets[group.name] || { group: group.name, max: Number.MIN_VALUE, min: Number.MAX_VALUE };\n            subBucket.min = Math.min(subBucket.min, value);\n            subBucket.max = Math.max(subBucket.max, value);\n        }\n        buckets.push(bucket);\n    }\n    var nonEmptyGroups = groups.filter(function (group) {\n        return !!valuesByGroup[group.name];\n    });\n    nonEmptyGroups.forEach(function (group) {\n        return group.percentage = valuesByGroup[group.name] / simulatedValuesThisYear.length;\n    });\n    var oneSixth = Math.round(simulatedValuesThisYear.length / 6);\n    return {\n        buckets: buckets,\n        groups: nonEmptyGroups,\n        max: simulatedValuesThisYear[simulatedValuesThisYear.length - 1],\n        median: median(simulatedValuesThisYear),\n        min: simulatedValuesThisYear[0],\n        project: project,\n        twoThird: {\n            max: simulatedValuesThisYear[simulatedValuesThisYear.length - oneSixth],\n            min: simulatedValuesThisYear[oneSixth]\n        }\n    };\n}\nfunction parallelJSMonteCarlo(userOptions) {\n    var options = initializeOptions(userOptions);\n    // Array needs to be cloned, otherwise the original array is manipulated!\n    return new Parallel(options.projects.slice(), {\n        evalPath: \"./\" + __webpack_require__(29),\n        env: { options: options },\n        envNamespace: \"simulation\"\n    }).require(\"https://raw.githubusercontent.com/mvarshney/simjs-source/master/src/random.js\") // the one from node uses module syntax\n    .require(createMonteCarloEnvironment).require(calculateProject).map(function (project) {\n        global.simulation.env = global.simulation.env || createMonteCarloEnvironment(global.simulation.options);\n        return calculateProject(project, global.simulation.env);\n    });\n}\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))\n\n/***/ },\n/* 24 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export knightTours */\n/* harmony export (immutable) */ exports[\"a\"] = threadsKnightTours;\nfunction knightTours(_ref, done) {\n    var startPath = _ref.startPath,\n        boardSize = _ref.boardSize;\n\n    var moves = [{ x: -2, y: -1 }, { x: -2, y: 1 }, { x: -1, y: -2 }, { x: -1, y: 2 }, { x: 1, y: -2 }, { x: 1, y: 2 }, { x: 2, y: -1 }, { x: 2, y: 1 }];\n    var board = new Array(boardSize * boardSize);\n    board.fill(0);\n    var numberOfFields = boardSize * boardSize;\n    var results = 0;\n    var stack = startPath.map(function (pos, index) {\n        return { coordinate: pos, n: index + 1 };\n    });\n    for (var index = 0; index < startPath.length - 1; ++index) {\n        var fieldIndex = startPath[index].x * boardSize + startPath[index].y;\n        board[fieldIndex] = index + 1;\n    }\n    while (stack.length > 0) {\n        var _stack = stack[stack.length - 1],\n            coordinate = _stack.coordinate,\n            n = _stack.n;\n\n        var _fieldIndex = coordinate.x * boardSize + coordinate.y;\n        if (board[_fieldIndex] !== 0) {\n            // back tracking\n            board[_fieldIndex] = 0;\n            stack.pop(); // remove current value\n            continue;\n        }\n        // entry\n        if (n === numberOfFields) {\n            ++results;\n            stack.pop();\n            continue;\n        }\n        board[_fieldIndex] = n;\n        for (var i = 0; i < moves.length; ++i) {\n            var move = moves[i];\n            var successor = { x: coordinate.x + move.x, y: coordinate.y + move.y };\n            // not outside of board and not yet accessed\n            var accessible = successor.x >= 0 && successor.y >= 0 && successor.x < boardSize && successor.y < boardSize && board[successor.x * boardSize + successor.y] === 0;\n            if (accessible) {\n                stack.push({ coordinate: successor, n: n + 1 });\n            }\n        }\n    }\n    done(results);\n}\nfunction threadsKnightTours(start, boardSize, pool) {\n    function successors(coordinate) {\n        var moves = [{ x: -2, y: -1 }, { x: -2, y: 1 }, { x: -1, y: -2 }, { x: -1, y: 2 }, { x: 1, y: -2 }, { x: 1, y: 2 }, { x: 2, y: -1 }, { x: 2, y: 1 }];\n        var result = [];\n        for (var i = 0; i < moves.length; ++i) {\n            var move = moves[i];\n            var successor = { x: coordinate.x + move.x, y: coordinate.y + move.y };\n            var accessible = successor.x >= 0 && successor.y >= 0 && successor.x < boardSize && successor.y < boardSize && (successor.x !== start.x || successor.y !== start.y) && successor.x !== coordinate.x && successor.y !== coordinate.y;\n            if (accessible) {\n                result.push(successor);\n            }\n        }\n        return result;\n    }\n    function computeStartFields() {\n        var result = [];\n        for (var _iterator = successors(start), _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n            var _ref2;\n\n            if (_isArray) {\n                if (_i >= _iterator.length) break;\n                _ref2 = _iterator[_i++];\n            } else {\n                _i = _iterator.next();\n                if (_i.done) break;\n                _ref2 = _i.value;\n            }\n\n            var directSuccessor = _ref2;\n\n            for (var _iterator2 = successors(directSuccessor), _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {\n                var _ref3;\n\n                if (_isArray2) {\n                    if (_i2 >= _iterator2.length) break;\n                    _ref3 = _iterator2[_i2++];\n                } else {\n                    _i2 = _iterator2.next();\n                    if (_i2.done) break;\n                    _ref3 = _i2.value;\n                }\n\n                var indirectSuccessor = _ref3;\n\n                result.push([start, directSuccessor, indirectSuccessor]);\n            }\n        }\n        return result;\n    }\n    var resolve = void 0;\n    var reject = void 0;\n    var promise = new Promise(function (_resolve, _reject) {\n        resolve = _resolve;\n        reject = _reject;\n    });\n    var totalTours = 0;\n    pool.run(knightTours).on(\"done\", function (job, tours) {\n        return totalTours += tours;\n    }).on(\"finished\", function () {\n        resolve(totalTours);\n    });\n    for (var _iterator3 = computeStartFields(), _isArray3 = Array.isArray(_iterator3), _i3 = 0, _iterator3 = _isArray3 ? _iterator3 : _iterator3[Symbol.iterator]();;) {\n        var _ref4;\n\n        if (_isArray3) {\n            if (_i3 >= _iterator3.length) break;\n            _ref4 = _iterator3[_i3++];\n        } else {\n            _i3 = _iterator3.next();\n            if (_i3.done) break;\n            _ref4 = _i3.value;\n        }\n\n        var startPath = _ref4;\n\n        pool.send({ startPath: startPath, boardSize: boardSize });\n    }\n    return promise;\n}\n\n/***/ },\n/* 25 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_lodash__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_lodash___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_lodash__);\n/* unused harmony export computeMandelbrotLine */\n/* harmony export (immutable) */ exports[\"a\"] = threadsMandelbrot;\n\nfunction computeMandelbrotLine(_ref, done) {\n    var y = _ref.y,\n        options = _ref.options;\n\n    function calculateZ(c) {\n        var z = { i: c.i, real: c.real };\n        var n = 0;\n        for (; n < options.iterations; ++n) {\n            if (Math.pow(z.real, 2) + Math.pow(z.i, 2) > 4) {\n                break;\n            }\n            // z ** 2 + c\n            var zI = z.i;\n            z.i = 2 * z.real * z.i + c.i;\n            z.real = Math.pow(z.real, 2) - Math.pow(zI, 2) + c.real;\n        }\n        return n;\n    }\n    var line = new Uint8ClampedArray(options.imageWidth * 4);\n    var cI = options.max.i - y * options.scalingFactor.i;\n    for (var x = 0; x < options.imageWidth; ++x) {\n        var c = {\n            i: cI,\n            real: options.min.real + x * options.scalingFactor.real\n        };\n        var n = calculateZ(c);\n        var base = x * 4;\n        /* tslint:disable:no-bitwise */\n        line[base] = n & 0xFF;\n        line[base + 1] = n & 0xFF00;\n        line[base + 2] = n & 0xFF0000;\n        line[base + 3] = 255;\n    }\n    done.transfer(line, [line.buffer]);\n}\nfunction threadsMandelbrot(mandelbrotOptions, pool) {\n    var promises = [];\n    pool.run(computeMandelbrotLine);\n    var lines = __WEBPACK_IMPORTED_MODULE_0_lodash__[\"range\"](mandelbrotOptions.imageHeight);\n    for (var _iterator = lines, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n        var _ref2;\n\n        if (_isArray) {\n            if (_i >= _iterator.length) break;\n            _ref2 = _iterator[_i++];\n        } else {\n            _i = _iterator.next();\n            if (_i.done) break;\n            _ref2 = _i.value;\n        }\n\n        var line = _ref2;\n\n        promises.push(pool.send({ y: line, options: mandelbrotOptions }).promise());\n    }\n    return Promise.all(promises);\n}\n\n/***/ },\n/* 26 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ exports[\"a\"] = threadsMonteCarlo;\nfunction initializeOptions(options) {\n    return Object.assign({}, {\n        investmentAmount: 1000000,\n        liquidity: 10000,\n        numRuns: 10000,\n        numYears: 10,\n        performance: 0,\n        projects: [],\n        seed: undefined,\n        volatility: 0.01\n    }, options);\n}\nfunction calculateProject(_ref, done) {\n    var project = _ref.project,\n        options = _ref.options;\n\n    var NUMBER_OF_BUCKETS = 10;\n    var environment = this.environment = this.environment || createMonteCarloEnvironment(options);\n    function createMonteCarloEnvironment(options) {\n        var random = new self.Random(10);\n        /**\n         * Performs the monte carlo simulation for all years and num runs.\n         * @param cashFlows the cash flows\n         * @returns {number[][]} the simulated outcomes grouped by year\n         */\n        function simulateOutcomes(cashFlows, numYears) {\n            function toAbsoluteIndices(indices) {\n                var currentPortfolioValue = options.investmentAmount;\n                var previousYearIndex = 100;\n                for (var relativeYear = 0; relativeYear < indices.length; ++relativeYear) {\n                    var currentYearIndex = indices[relativeYear];\n                    var cashFlowStartOfYear = relativeYear === 0 ? 0 : cashFlows[relativeYear - 1];\n                    // scale current value with performance gain according to index\n                    var performance = currentYearIndex / previousYearIndex;\n                    currentPortfolioValue = (currentPortfolioValue + cashFlowStartOfYear) * performance;\n                    indices[relativeYear] = 1 + random.normal(performance, options.volatility);\n                    previousYearIndex = currentYearIndex;\n                }\n                return indices;\n            }\n            var result = new Array(options.numYears);\n            for (var year = 0; year <= numYears; ++year) {\n                result[year] = new Array(options.numRuns);\n            }\n            for (var run = 0; run < options.numRuns; run++) {\n                var indices = [100];\n                for (var i = 1; i <= numYears; i++) {\n                    // const randomPerformance = 1 + random.normal(options.performance, options.volatility);\n                    var randomPerformance = 1 + Math.random();\n                    indices.push(indices[i - 1] * randomPerformance);\n                }\n                // convert the relative values from above to absolute values.\n                toAbsoluteIndices(indices);\n                for (var _year = 0; _year < indices.length; ++_year) {\n                    result[_year][run] = indices[_year];\n                }\n            }\n            return result;\n        }\n        function projectsToCashFlows() {\n            var cashFlows = [];\n            for (var year = 0; year < options.numYears; ++year) {\n                var projectsByThisYear = projectsByStartYear[year] || [];\n                var cashFlow = -projectsByThisYear.reduce(function (memo, project) {\n                    return memo + project.totalAmount;\n                }, 0);\n                cashFlows.push(cashFlow);\n            }\n            return cashFlows;\n        }\n        function calculateNoInterestReferenceLine(cashFlows) {\n            var noInterestReferenceLine = [];\n            var investmentAmountLeft = options.investmentAmount;\n            for (var year = 0; year < options.numYears; ++year) {\n                investmentAmountLeft = investmentAmountLeft + cashFlows[year];\n                noInterestReferenceLine.push(investmentAmountLeft);\n            }\n            return noInterestReferenceLine;\n        }\n        var projectsToSimulate = options.projects;\n        if (options.taskIndex && options.valuesPerWorker) {\n            projectsToSimulate = options.projects.slice(options.taskIndex * options.valuesPerWorker, (options.taskIndex + 1) * options.valuesPerWorker);\n        }\n        var projects = options.projects.sort(function (a, b) {\n            return a.startYear - b.startYear;\n        });\n        // Group projects by startYear, use lodash groupBy instead\n        var projectsByStartYear = {};\n        for (var _iterator = projects, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n            var _ref2;\n\n            if (_isArray) {\n                if (_i >= _iterator.length) break;\n                _ref2 = _iterator[_i++];\n            } else {\n                _i = _iterator.next();\n                if (_i.done) break;\n                _ref2 = _i.value;\n            }\n\n            var _project = _ref2;\n\n            var arr = projectsByStartYear[_project.startYear] = projectsByStartYear[_project.startYear] || [];\n            arr.push(_project);\n        }\n        var cashFlows = projectsToCashFlows();\n        var noInterestReferenceLine = calculateNoInterestReferenceLine(cashFlows);\n        var numYears = projectsToSimulate.reduce(function (memo, project) {\n            return Math.max(memo, project.startYear);\n        }, 0);\n        return {\n            investmentAmount: options.investmentAmount,\n            liquidity: options.liquidity,\n            noInterestReferenceLine: noInterestReferenceLine,\n            numRuns: options.numRuns,\n            numYears: numYears,\n            projectsByStartYear: projectsByStartYear,\n            simulatedValues: simulateOutcomes(cashFlows, numYears)\n        };\n    }\n    function groupForValue(value, groups) {\n        return groups.find(function (group) {\n            return (typeof group.from === \"undefined\" || group.from <= value) && (typeof group.to === \"undefined\" || group.to > value);\n        });\n    }\n    function createGroups(requiredAmount, noInterestReference) {\n        return [{ description: \"Ziel erreichbar\", from: requiredAmount, name: \"green\", percentage: 0, separator: true }, { description: \"mit Zusatzliquidität erreichbar\", from: requiredAmount - environment.liquidity, name: \"yellow\", percentage: 0, separator: true, to: requiredAmount }, { description: \"nicht erreichbar\", from: noInterestReference, name: \"gray\", percentage: 0, separator: false, to: requiredAmount - environment.liquidity }, { description: \"nicht erreichbar, mit Verlust\", name: \"red\", percentage: 0, separator: false, to: noInterestReference }];\n    }\n    function calculateRequiredAmount() {\n        var amount = project.totalAmount;\n        var projectsSameYear = environment.projectsByStartYear[project.startYear];\n        for (var _iterator2 = projectsSameYear, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {\n            var _ref3;\n\n            if (_isArray2) {\n                if (_i2 >= _iterator2.length) break;\n                _ref3 = _iterator2[_i2++];\n            } else {\n                _i2 = _iterator2.next();\n                if (_i2.done) break;\n                _ref3 = _i2.value;\n            }\n\n            var otherProject = _ref3;\n\n            if (otherProject === project) {\n                break;\n            }\n            amount += otherProject.totalAmount;\n        }\n        return amount;\n    }\n    function median(values) {\n        var half = Math.floor(values.length / 2);\n        if (values.length % 2) {\n            return values[half];\n        }\n        return (values[half - 1] + values[half]) / 2.0;\n    }\n    var requiredAmount = calculateRequiredAmount();\n    var simulatedValuesThisYear = environment.simulatedValues[project.startYear];\n    simulatedValuesThisYear.sort(function (a, b) {\n        return a - b;\n    });\n    var groups = createGroups(requiredAmount, environment.noInterestReferenceLine[project.startYear]);\n    var valuesByGroup = {};\n    var bucketSize = Math.round(simulatedValuesThisYear.length / NUMBER_OF_BUCKETS);\n    var buckets = [];\n    for (var i = 0; i < simulatedValuesThisYear.length; i += bucketSize) {\n        var bucket = {\n            max: Number.MIN_VALUE,\n            min: Number.MAX_VALUE,\n            subBuckets: {}\n        };\n        for (var j = i; j < i + bucketSize; ++j) {\n            var value = simulatedValuesThisYear[j];\n            bucket.min = Math.min(bucket.min, value);\n            bucket.max = Math.max(bucket.max, value);\n            var group = groupForValue(simulatedValuesThisYear[j], groups);\n            valuesByGroup[group.name] = (valuesByGroup[group.name] || 0) + 1;\n            var subBucket = bucket.subBuckets[group.name] = bucket.subBuckets[group.name] || { group: group.name, max: Number.MIN_VALUE, min: Number.MAX_VALUE };\n            subBucket.min = Math.min(subBucket.min, value);\n            subBucket.max = Math.max(subBucket.max, value);\n        }\n        buckets.push(bucket);\n    }\n    var nonEmptyGroups = groups.filter(function (group) {\n        return !!valuesByGroup[group.name];\n    });\n    nonEmptyGroups.forEach(function (group) {\n        return group.percentage = valuesByGroup[group.name] / simulatedValuesThisYear.length;\n    });\n    var oneSixth = Math.round(simulatedValuesThisYear.length / 6);\n    done({\n        buckets: buckets,\n        groups: nonEmptyGroups,\n        max: simulatedValuesThisYear[simulatedValuesThisYear.length - 1],\n        median: median(simulatedValuesThisYear),\n        min: simulatedValuesThisYear[0],\n        project: project,\n        twoThird: {\n            max: simulatedValuesThisYear[simulatedValuesThisYear.length - oneSixth],\n            min: simulatedValuesThisYear[oneSixth]\n        }\n    });\n}\nfunction threadsMonteCarlo(userOptions, pool) {\n    var options = initializeOptions(userOptions);\n    var jobs = [];\n    pool.run(calculateProject, [\"https://raw.githubusercontent.com/mvarshney/simjs-source/master/src/random.js\"]);\n    for (var _iterator3 = options.projects, _isArray3 = Array.isArray(_iterator3), _i3 = 0, _iterator3 = _isArray3 ? _iterator3 : _iterator3[Symbol.iterator]();;) {\n        var _ref4;\n\n        if (_isArray3) {\n            if (_i3 >= _iterator3.length) break;\n            _ref4 = _iterator3[_i3++];\n        } else {\n            _i3 = _iterator3.next();\n            if (_i3.done) break;\n            _ref4 = _i3.value;\n        }\n\n        var project = _ref4;\n\n        jobs.push(pool.send({ options: options, project: project }).promise());\n    }\n    return Promise.all(jobs);\n}\n\n/***/ },\n/* 27 */\n/***/ function(module, exports) {\n\n/*!\n * Benchmark.js <https://benchmarkjs.com/>\n * Copyright 2010-2016 Mathias Bynens <https://mths.be/>\n * Based on JSLitmus.js, copyright Robert Kieffer <http://broofa.com/>\n * Modified by John-David Dalton <http://allyoucanleet.com/>\n * Available under MIT license <https://mths.be/mit>\n */\n;(function() {\n  'use strict';\n\n  /** Used as a safe reference for `undefined` in pre ES5 environments. */\n  var undefined;\n\n  /** Used to determine if values are of the language type Object. */\n  var objectTypes = {\n    'function': true,\n    'object': true\n  };\n\n  /** Used as a reference to the global object. */\n  var root = (objectTypes[typeof window] && window) || this;\n\n  /** Detect free variable `define`. */\n  var freeDefine = typeof define == 'function' && typeof define.amd == 'object' && define.amd && define;\n\n  /** Detect free variable `exports`. */\n  var freeExports = objectTypes[typeof exports] && exports && !exports.nodeType && exports;\n\n  /** Detect free variable `module`. */\n  var freeModule = objectTypes[typeof module] && module && !module.nodeType && module;\n\n  /** Detect free variable `global` from Node.js or Browserified code and use it as `root`. */\n  var freeGlobal = freeExports && freeModule && typeof global == 'object' && global;\n  if (freeGlobal && (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal || freeGlobal.self === freeGlobal)) {\n    root = freeGlobal;\n  }\n\n  /** Detect free variable `require`. */\n  var freeRequire = typeof require == 'function' && require;\n\n  /** Used to assign each benchmark an incremented id. */\n  var counter = 0;\n\n  /** Detect the popular CommonJS extension `module.exports`. */\n  var moduleExports = freeModule && freeModule.exports === freeExports && freeExports;\n\n  /** Used to detect primitive types. */\n  var rePrimitive = /^(?:boolean|number|string|undefined)$/;\n\n  /** Used to make every compiled test unique. */\n  var uidCounter = 0;\n\n  /** Used to assign default `context` object properties. */\n  var contextProps = [\n    'Array', 'Date', 'Function', 'Math', 'Object', 'RegExp', 'String', '_',\n    'clearTimeout', 'chrome', 'chromium', 'document', 'navigator', 'phantom',\n    'platform', 'process', 'runtime', 'setTimeout'\n  ];\n\n  /** Used to avoid hz of Infinity. */\n  var divisors = {\n    '1': 4096,\n    '2': 512,\n    '3': 64,\n    '4': 8,\n    '5': 0\n  };\n\n  /**\n   * T-Distribution two-tailed critical values for 95% confidence.\n   * For more info see http://www.itl.nist.gov/div898/handbook/eda/section3/eda3672.htm.\n   */\n  var tTable = {\n    '1':  12.706, '2':  4.303, '3':  3.182, '4':  2.776, '5':  2.571, '6':  2.447,\n    '7':  2.365,  '8':  2.306, '9':  2.262, '10': 2.228, '11': 2.201, '12': 2.179,\n    '13': 2.16,   '14': 2.145, '15': 2.131, '16': 2.12,  '17': 2.11,  '18': 2.101,\n    '19': 2.093,  '20': 2.086, '21': 2.08,  '22': 2.074, '23': 2.069, '24': 2.064,\n    '25': 2.06,   '26': 2.056, '27': 2.052, '28': 2.048, '29': 2.045, '30': 2.042,\n    'infinity': 1.96\n  };\n\n  /**\n   * Critical Mann-Whitney U-values for 95% confidence.\n   * For more info see http://www.saburchill.com/IBbiology/stats/003.html.\n   */\n  var uTable = {\n    '5':  [0, 1, 2],\n    '6':  [1, 2, 3, 5],\n    '7':  [1, 3, 5, 6, 8],\n    '8':  [2, 4, 6, 8, 10, 13],\n    '9':  [2, 4, 7, 10, 12, 15, 17],\n    '10': [3, 5, 8, 11, 14, 17, 20, 23],\n    '11': [3, 6, 9, 13, 16, 19, 23, 26, 30],\n    '12': [4, 7, 11, 14, 18, 22, 26, 29, 33, 37],\n    '13': [4, 8, 12, 16, 20, 24, 28, 33, 37, 41, 45],\n    '14': [5, 9, 13, 17, 22, 26, 31, 36, 40, 45, 50, 55],\n    '15': [5, 10, 14, 19, 24, 29, 34, 39, 44, 49, 54, 59, 64],\n    '16': [6, 11, 15, 21, 26, 31, 37, 42, 47, 53, 59, 64, 70, 75],\n    '17': [6, 11, 17, 22, 28, 34, 39, 45, 51, 57, 63, 67, 75, 81, 87],\n    '18': [7, 12, 18, 24, 30, 36, 42, 48, 55, 61, 67, 74, 80, 86, 93, 99],\n    '19': [7, 13, 19, 25, 32, 38, 45, 52, 58, 65, 72, 78, 85, 92, 99, 106, 113],\n    '20': [8, 14, 20, 27, 34, 41, 48, 55, 62, 69, 76, 83, 90, 98, 105, 112, 119, 127],\n    '21': [8, 15, 22, 29, 36, 43, 50, 58, 65, 73, 80, 88, 96, 103, 111, 119, 126, 134, 142],\n    '22': [9, 16, 23, 30, 38, 45, 53, 61, 69, 77, 85, 93, 101, 109, 117, 125, 133, 141, 150, 158],\n    '23': [9, 17, 24, 32, 40, 48, 56, 64, 73, 81, 89, 98, 106, 115, 123, 132, 140, 149, 157, 166, 175],\n    '24': [10, 17, 25, 33, 42, 50, 59, 67, 76, 85, 94, 102, 111, 120, 129, 138, 147, 156, 165, 174, 183, 192],\n    '25': [10, 18, 27, 35, 44, 53, 62, 71, 80, 89, 98, 107, 117, 126, 135, 145, 154, 163, 173, 182, 192, 201, 211],\n    '26': [11, 19, 28, 37, 46, 55, 64, 74, 83, 93, 102, 112, 122, 132, 141, 151, 161, 171, 181, 191, 200, 210, 220, 230],\n    '27': [11, 20, 29, 38, 48, 57, 67, 77, 87, 97, 107, 118, 125, 138, 147, 158, 168, 178, 188, 199, 209, 219, 230, 240, 250],\n    '28': [12, 21, 30, 40, 50, 60, 70, 80, 90, 101, 111, 122, 132, 143, 154, 164, 175, 186, 196, 207, 218, 228, 239, 250, 261, 272],\n    '29': [13, 22, 32, 42, 52, 62, 73, 83, 94, 105, 116, 127, 138, 149, 160, 171, 182, 193, 204, 215, 226, 238, 249, 260, 271, 282, 294],\n    '30': [13, 23, 33, 43, 54, 65, 76, 87, 98, 109, 120, 131, 143, 154, 166, 177, 189, 200, 212, 223, 235, 247, 258, 270, 282, 293, 305, 317]\n  };\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Create a new `Benchmark` function using the given `context` object.\n   *\n   * @static\n   * @memberOf Benchmark\n   * @param {Object} [context=root] The context object.\n   * @returns {Function} Returns a new `Benchmark` function.\n   */\n  function runInContext(context) {\n    // Exit early if unable to acquire lodash.\n    var _ = context && context._ || require('lodash') || root._;\n    if (!_) {\n      Benchmark.runInContext = runInContext;\n      return Benchmark;\n    }\n    // Avoid issues with some ES3 environments that attempt to use values, named\n    // after built-in constructors like `Object`, for the creation of literals.\n    // ES5 clears this up by stating that literals must use built-in constructors.\n    // See http://es5.github.io/#x11.1.5.\n    context = context ? _.defaults(root.Object(), context, _.pick(root, contextProps)) : root;\n\n    /** Native constructor references. */\n    var Array = context.Array,\n        Date = context.Date,\n        Function = context.Function,\n        Math = context.Math,\n        Object = context.Object,\n        RegExp = context.RegExp,\n        String = context.String;\n\n    /** Used for `Array` and `Object` method references. */\n    var arrayRef = [],\n        objectProto = Object.prototype;\n\n    /** Native method shortcuts. */\n    var abs = Math.abs,\n        clearTimeout = context.clearTimeout,\n        floor = Math.floor,\n        log = Math.log,\n        max = Math.max,\n        min = Math.min,\n        pow = Math.pow,\n        push = arrayRef.push,\n        setTimeout = context.setTimeout,\n        shift = arrayRef.shift,\n        slice = arrayRef.slice,\n        sqrt = Math.sqrt,\n        toString = objectProto.toString,\n        unshift = arrayRef.unshift;\n\n    /** Used to avoid inclusion in Browserified bundles. */\n    var req = require;\n\n    /** Detect DOM document object. */\n    var doc = isHostType(context, 'document') && context.document;\n\n    /** Used to access Wade Simmons' Node.js `microtime` module. */\n    var microtimeObject = req('microtime');\n\n    /** Used to access Node.js's high resolution timer. */\n    var processObject = isHostType(context, 'process') && context.process;\n\n    /** Used to prevent a `removeChild` memory leak in IE < 9. */\n    var trash = doc && doc.createElement('div');\n\n    /** Used to integrity check compiled tests. */\n    var uid = 'uid' + _.now();\n\n    /** Used to avoid infinite recursion when methods call each other. */\n    var calledBy = {};\n\n    /**\n     * An object used to flag environments/features.\n     *\n     * @static\n     * @memberOf Benchmark\n     * @type Object\n     */\n    var support = {};\n\n    (function() {\n\n      /**\n       * Detect if running in a browser environment.\n       *\n       * @memberOf Benchmark.support\n       * @type boolean\n       */\n      support.browser = doc && isHostType(context, 'navigator') && !isHostType(context, 'phantom');\n\n      /**\n       * Detect if the Timers API exists.\n       *\n       * @memberOf Benchmark.support\n       * @type boolean\n       */\n      support.timeout = isHostType(context, 'setTimeout') && isHostType(context, 'clearTimeout');\n\n      /**\n       * Detect if function decompilation is support.\n       *\n       * @name decompilation\n       * @memberOf Benchmark.support\n       * @type boolean\n       */\n      try {\n        // Safari 2.x removes commas in object literals from `Function#toString` results.\n        // See http://webk.it/11609 for more details.\n        // Firefox 3.6 and Opera 9.25 strip grouping parentheses from `Function#toString` results.\n        // See http://bugzil.la/559438 for more details.\n        support.decompilation = Function(\n          ('return (' + (function(x) { return { 'x': '' + (1 + x) + '', 'y': 0 }; }) + ')')\n          // Avoid issues with code added by Istanbul.\n          .replace(/__cov__[^;]+;/g, '')\n        )()(0).x === '1';\n      } catch(e) {\n        support.decompilation = false;\n      }\n    }());\n\n    /**\n     * Timer object used by `clock()` and `Deferred#resolve`.\n     *\n     * @private\n     * @type Object\n     */\n    var timer = {\n\n      /**\n       * The timer namespace object or constructor.\n       *\n       * @private\n       * @memberOf timer\n       * @type {Function|Object}\n       */\n      'ns': Date,\n\n      /**\n       * Starts the deferred timer.\n       *\n       * @private\n       * @memberOf timer\n       * @param {Object} deferred The deferred instance.\n       */\n      'start': null, // Lazy defined in `clock()`.\n\n      /**\n       * Stops the deferred timer.\n       *\n       * @private\n       * @memberOf timer\n       * @param {Object} deferred The deferred instance.\n       */\n      'stop': null // Lazy defined in `clock()`.\n    };\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The Benchmark constructor.\n     *\n     * Note: The Benchmark constructor exposes a handful of lodash methods to\n     * make working with arrays, collections, and objects easier. The lodash\n     * methods are:\n     * [`each/forEach`](https://lodash.com/docs#forEach), [`forOwn`](https://lodash.com/docs#forOwn),\n     * [`has`](https://lodash.com/docs#has), [`indexOf`](https://lodash.com/docs#indexOf),\n     * [`map`](https://lodash.com/docs#map), and [`reduce`](https://lodash.com/docs#reduce)\n     *\n     * @constructor\n     * @param {string} name A name to identify the benchmark.\n     * @param {Function|string} fn The test to benchmark.\n     * @param {Object} [options={}] Options object.\n     * @example\n     *\n     * // basic usage (the `new` operator is optional)\n     * var bench = new Benchmark(fn);\n     *\n     * // or using a name first\n     * var bench = new Benchmark('foo', fn);\n     *\n     * // or with options\n     * var bench = new Benchmark('foo', fn, {\n     *\n     *   // displayed by `Benchmark#toString` if `name` is not available\n     *   'id': 'xyz',\n     *\n     *   // called when the benchmark starts running\n     *   'onStart': onStart,\n     *\n     *   // called after each run cycle\n     *   'onCycle': onCycle,\n     *\n     *   // called when aborted\n     *   'onAbort': onAbort,\n     *\n     *   // called when a test errors\n     *   'onError': onError,\n     *\n     *   // called when reset\n     *   'onReset': onReset,\n     *\n     *   // called when the benchmark completes running\n     *   'onComplete': onComplete,\n     *\n     *   // compiled/called before the test loop\n     *   'setup': setup,\n     *\n     *   // compiled/called after the test loop\n     *   'teardown': teardown\n     * });\n     *\n     * // or name and options\n     * var bench = new Benchmark('foo', {\n     *\n     *   // a flag to indicate the benchmark is deferred\n     *   'defer': true,\n     *\n     *   // benchmark test function\n     *   'fn': function(deferred) {\n     *     // call `Deferred#resolve` when the deferred test is finished\n     *     deferred.resolve();\n     *   }\n     * });\n     *\n     * // or options only\n     * var bench = new Benchmark({\n     *\n     *   // benchmark name\n     *   'name': 'foo',\n     *\n     *   // benchmark test as a string\n     *   'fn': '[1,2,3,4].sort()'\n     * });\n     *\n     * // a test's `this` binding is set to the benchmark instance\n     * var bench = new Benchmark('foo', function() {\n     *   'My name is '.concat(this.name); // \"My name is foo\"\n     * });\n     */\n    function Benchmark(name, fn, options) {\n      var bench = this;\n\n      // Allow instance creation without the `new` operator.\n      if (!(bench instanceof Benchmark)) {\n        return new Benchmark(name, fn, options);\n      }\n      // Juggle arguments.\n      if (_.isPlainObject(name)) {\n        // 1 argument (options).\n        options = name;\n      }\n      else if (_.isFunction(name)) {\n        // 2 arguments (fn, options).\n        options = fn;\n        fn = name;\n      }\n      else if (_.isPlainObject(fn)) {\n        // 2 arguments (name, options).\n        options = fn;\n        fn = null;\n        bench.name = name;\n      }\n      else {\n        // 3 arguments (name, fn [, options]).\n        bench.name = name;\n      }\n      setOptions(bench, options);\n\n      bench.id || (bench.id = ++counter);\n      bench.fn == null && (bench.fn = fn);\n\n      bench.stats = cloneDeep(bench.stats);\n      bench.times = cloneDeep(bench.times);\n    }\n\n    /**\n     * The Deferred constructor.\n     *\n     * @constructor\n     * @memberOf Benchmark\n     * @param {Object} clone The cloned benchmark instance.\n     */\n    function Deferred(clone) {\n      var deferred = this;\n      if (!(deferred instanceof Deferred)) {\n        return new Deferred(clone);\n      }\n      deferred.benchmark = clone;\n      clock(deferred);\n    }\n\n    /**\n     * The Event constructor.\n     *\n     * @constructor\n     * @memberOf Benchmark\n     * @param {Object|string} type The event type.\n     */\n    function Event(type) {\n      var event = this;\n      if (type instanceof Event) {\n        return type;\n      }\n      return (event instanceof Event)\n        ? _.assign(event, { 'timeStamp': _.now() }, typeof type == 'string' ? { 'type': type } : type)\n        : new Event(type);\n    }\n\n    /**\n     * The Suite constructor.\n     *\n     * Note: Each Suite instance has a handful of wrapped lodash methods to\n     * make working with Suites easier. The wrapped lodash methods are:\n     * [`each/forEach`](https://lodash.com/docs#forEach), [`indexOf`](https://lodash.com/docs#indexOf),\n     * [`map`](https://lodash.com/docs#map), and [`reduce`](https://lodash.com/docs#reduce)\n     *\n     * @constructor\n     * @memberOf Benchmark\n     * @param {string} name A name to identify the suite.\n     * @param {Object} [options={}] Options object.\n     * @example\n     *\n     * // basic usage (the `new` operator is optional)\n     * var suite = new Benchmark.Suite;\n     *\n     * // or using a name first\n     * var suite = new Benchmark.Suite('foo');\n     *\n     * // or with options\n     * var suite = new Benchmark.Suite('foo', {\n     *\n     *   // called when the suite starts running\n     *   'onStart': onStart,\n     *\n     *   // called between running benchmarks\n     *   'onCycle': onCycle,\n     *\n     *   // called when aborted\n     *   'onAbort': onAbort,\n     *\n     *   // called when a test errors\n     *   'onError': onError,\n     *\n     *   // called when reset\n     *   'onReset': onReset,\n     *\n     *   // called when the suite completes running\n     *   'onComplete': onComplete\n     * });\n     */\n    function Suite(name, options) {\n      var suite = this;\n\n      // Allow instance creation without the `new` operator.\n      if (!(suite instanceof Suite)) {\n        return new Suite(name, options);\n      }\n      // Juggle arguments.\n      if (_.isPlainObject(name)) {\n        // 1 argument (options).\n        options = name;\n      } else {\n        // 2 arguments (name [, options]).\n        suite.name = name;\n      }\n      setOptions(suite, options);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * A specialized version of `_.cloneDeep` which only clones arrays and plain\n     * objects assigning all other values by reference.\n     *\n     * @private\n     * @param {*} value The value to clone.\n     * @returns {*} The cloned value.\n     */\n    var cloneDeep = _.partial(_.cloneDeepWith, _, function(value) {\n      // Only clone primitives, arrays, and plain objects.\n      return (_.isObject(value) && !_.isArray(value) && !_.isPlainObject(value))\n        ? value\n        : undefined;\n    });\n\n    /**\n     * Creates a function from the given arguments string and body.\n     *\n     * @private\n     * @param {string} args The comma separated function arguments.\n     * @param {string} body The function body.\n     * @returns {Function} The new function.\n     */\n    function createFunction() {\n      // Lazy define.\n      createFunction = function(args, body) {\n        var result,\n            anchor = freeDefine ? freeDefine.amd : Benchmark,\n            prop = uid + 'createFunction';\n\n        runScript((freeDefine ? 'define.amd.' : 'Benchmark.') + prop + '=function(' + args + '){' + body + '}');\n        result = anchor[prop];\n        delete anchor[prop];\n        return result;\n      };\n      // Fix JaegerMonkey bug.\n      // For more information see http://bugzil.la/639720.\n      createFunction = support.browser && (createFunction('', 'return\"' + uid + '\"') || _.noop)() == uid ? createFunction : Function;\n      return createFunction.apply(null, arguments);\n    }\n\n    /**\n     * Delay the execution of a function based on the benchmark's `delay` property.\n     *\n     * @private\n     * @param {Object} bench The benchmark instance.\n     * @param {Object} fn The function to execute.\n     */\n    function delay(bench, fn) {\n      bench._timerId = _.delay(fn, bench.delay * 1e3);\n    }\n\n    /**\n     * Destroys the given element.\n     *\n     * @private\n     * @param {Element} element The element to destroy.\n     */\n    function destroyElement(element) {\n      trash.appendChild(element);\n      trash.innerHTML = '';\n    }\n\n    /**\n     * Gets the name of the first argument from a function's source.\n     *\n     * @private\n     * @param {Function} fn The function.\n     * @returns {string} The argument name.\n     */\n    function getFirstArgument(fn) {\n      return (!_.has(fn, 'toString') &&\n        (/^[\\s(]*function[^(]*\\(([^\\s,)]+)/.exec(fn) || 0)[1]) || '';\n    }\n\n    /**\n     * Computes the arithmetic mean of a sample.\n     *\n     * @private\n     * @param {Array} sample The sample.\n     * @returns {number} The mean.\n     */\n    function getMean(sample) {\n      return (_.reduce(sample, function(sum, x) {\n        return sum + x;\n      }) / sample.length) || 0;\n    }\n\n    /**\n     * Gets the source code of a function.\n     *\n     * @private\n     * @param {Function} fn The function.\n     * @returns {string} The function's source code.\n     */\n    function getSource(fn) {\n      var result = '';\n      if (isStringable(fn)) {\n        result = String(fn);\n      } else if (support.decompilation) {\n        // Escape the `{` for Firefox 1.\n        result = _.result(/^[^{]+\\{([\\s\\S]*)\\}\\s*$/.exec(fn), 1);\n      }\n      // Trim string.\n      result = (result || '').replace(/^\\s+|\\s+$/g, '');\n\n      // Detect strings containing only the \"use strict\" directive.\n      return /^(?:\\/\\*+[\\w\\W]*?\\*\\/|\\/\\/.*?[\\n\\r\\u2028\\u2029]|\\s)*([\"'])use strict\\1;?$/.test(result)\n        ? ''\n        : result;\n    }\n\n    /**\n     * Checks if an object is of the specified class.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {string} name The name of the class.\n     * @returns {boolean} Returns `true` if the value is of the specified class, else `false`.\n     */\n    function isClassOf(value, name) {\n      return value != null && toString.call(value) == '[object ' + name + ']';\n    }\n\n    /**\n     * Host objects can return type values that are different from their actual\n     * data type. The objects we are concerned with usually return non-primitive\n     * types of \"object\", \"function\", or \"unknown\".\n     *\n     * @private\n     * @param {*} object The owner of the property.\n     * @param {string} property The property to check.\n     * @returns {boolean} Returns `true` if the property value is a non-primitive, else `false`.\n     */\n    function isHostType(object, property) {\n      if (object == null) {\n        return false;\n      }\n      var type = typeof object[property];\n      return !rePrimitive.test(type) && (type != 'object' || !!object[property]);\n    }\n\n    /**\n     * Checks if a value can be safely coerced to a string.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if the value can be coerced, else `false`.\n     */\n    function isStringable(value) {\n      return _.isString(value) || (_.has(value, 'toString') && _.isFunction(value.toString));\n    }\n\n    /**\n     * A wrapper around `require` to suppress `module missing` errors.\n     *\n     * @private\n     * @param {string} id The module id.\n     * @returns {*} The exported module or `null`.\n     */\n    function require(id) {\n      try {\n        var result = freeExports && freeRequire(id);\n      } catch(e) {}\n      return result || null;\n    }\n\n    /**\n     * Runs a snippet of JavaScript via script injection.\n     *\n     * @private\n     * @param {string} code The code to run.\n     */\n    function runScript(code) {\n      var anchor = freeDefine ? define.amd : Benchmark,\n          script = doc.createElement('script'),\n          sibling = doc.getElementsByTagName('script')[0],\n          parent = sibling.parentNode,\n          prop = uid + 'runScript',\n          prefix = '(' + (freeDefine ? 'define.amd.' : 'Benchmark.') + prop + '||function(){})();';\n\n      // Firefox 2.0.0.2 cannot use script injection as intended because it executes\n      // asynchronously, but that's OK because script injection is only used to avoid\n      // the previously commented JaegerMonkey bug.\n      try {\n        // Remove the inserted script *before* running the code to avoid differences\n        // in the expected script element count/order of the document.\n        script.appendChild(doc.createTextNode(prefix + code));\n        anchor[prop] = function() { destroyElement(script); };\n      } catch(e) {\n        parent = parent.cloneNode(false);\n        sibling = null;\n        script.text = code;\n      }\n      parent.insertBefore(script, sibling);\n      delete anchor[prop];\n    }\n\n    /**\n     * A helper function for setting options/event handlers.\n     *\n     * @private\n     * @param {Object} object The benchmark or suite instance.\n     * @param {Object} [options={}] Options object.\n     */\n    function setOptions(object, options) {\n      options = object.options = _.assign({}, cloneDeep(object.constructor.options), cloneDeep(options));\n\n      _.forOwn(options, function(value, key) {\n        if (value != null) {\n          // Add event listeners.\n          if (/^on[A-Z]/.test(key)) {\n            _.each(key.split(' '), function(key) {\n              object.on(key.slice(2).toLowerCase(), value);\n            });\n          } else if (!_.has(object, key)) {\n            object[key] = cloneDeep(value);\n          }\n        }\n      });\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Handles cycling/completing the deferred benchmark.\n     *\n     * @memberOf Benchmark.Deferred\n     */\n    function resolve() {\n      var deferred = this,\n          clone = deferred.benchmark,\n          bench = clone._original;\n\n      if (bench.aborted) {\n        // cycle() -> clone cycle/complete event -> compute()'s invoked bench.run() cycle/complete.\n        deferred.teardown();\n        clone.running = false;\n        cycle(deferred);\n      }\n      else if (++deferred.cycles < clone.count) {\n        clone.compiled.call(deferred, context, timer);\n      }\n      else {\n        timer.stop(deferred);\n        deferred.teardown();\n        delay(clone, function() { cycle(deferred); });\n      }\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * A generic `Array#filter` like method.\n     *\n     * @static\n     * @memberOf Benchmark\n     * @param {Array} array The array to iterate over.\n     * @param {Function|string} callback The function/alias called per iteration.\n     * @returns {Array} A new array of values that passed callback filter.\n     * @example\n     *\n     * // get odd numbers\n     * Benchmark.filter([1, 2, 3, 4, 5], function(n) {\n     *   return n % 2;\n     * }); // -> [1, 3, 5];\n     *\n     * // get fastest benchmarks\n     * Benchmark.filter(benches, 'fastest');\n     *\n     * // get slowest benchmarks\n     * Benchmark.filter(benches, 'slowest');\n     *\n     * // get benchmarks that completed without erroring\n     * Benchmark.filter(benches, 'successful');\n     */\n    function filter(array, callback) {\n      if (callback === 'successful') {\n        // Callback to exclude those that are errored, unrun, or have hz of Infinity.\n        callback = function(bench) {\n          return bench.cycles && _.isFinite(bench.hz) && !bench.error;\n        };\n      }\n      else if (callback === 'fastest' || callback === 'slowest') {\n        // Get successful, sort by period + margin of error, and filter fastest/slowest.\n        var result = filter(array, 'successful').sort(function(a, b) {\n          a = a.stats; b = b.stats;\n          return (a.mean + a.moe > b.mean + b.moe ? 1 : -1) * (callback === 'fastest' ? 1 : -1);\n        });\n\n        return _.filter(result, function(bench) {\n          return result[0].compare(bench) == 0;\n        });\n      }\n      return _.filter(array, callback);\n    }\n\n    /**\n     * Converts a number to a more readable comma-separated string representation.\n     *\n     * @static\n     * @memberOf Benchmark\n     * @param {number} number The number to convert.\n     * @returns {string} The more readable string representation.\n     */\n    function formatNumber(number) {\n      number = String(number).split('.');\n      return number[0].replace(/(?=(?:\\d{3})+$)(?!\\b)/g, ',') +\n        (number[1] ? '.' + number[1] : '');\n    }\n\n    /**\n     * Invokes a method on all items in an array.\n     *\n     * @static\n     * @memberOf Benchmark\n     * @param {Array} benches Array of benchmarks to iterate over.\n     * @param {Object|string} name The name of the method to invoke OR options object.\n     * @param {...*} [args] Arguments to invoke the method with.\n     * @returns {Array} A new array of values returned from each method invoked.\n     * @example\n     *\n     * // invoke `reset` on all benchmarks\n     * Benchmark.invoke(benches, 'reset');\n     *\n     * // invoke `emit` with arguments\n     * Benchmark.invoke(benches, 'emit', 'complete', listener);\n     *\n     * // invoke `run(true)`, treat benchmarks as a queue, and register invoke callbacks\n     * Benchmark.invoke(benches, {\n     *\n     *   // invoke the `run` method\n     *   'name': 'run',\n     *\n     *   // pass a single argument\n     *   'args': true,\n     *\n     *   // treat as queue, removing benchmarks from front of `benches` until empty\n     *   'queued': true,\n     *\n     *   // called before any benchmarks have been invoked.\n     *   'onStart': onStart,\n     *\n     *   // called between invoking benchmarks\n     *   'onCycle': onCycle,\n     *\n     *   // called after all benchmarks have been invoked.\n     *   'onComplete': onComplete\n     * });\n     */\n    function invoke(benches, name) {\n      var args,\n          bench,\n          queued,\n          index = -1,\n          eventProps = { 'currentTarget': benches },\n          options = { 'onStart': _.noop, 'onCycle': _.noop, 'onComplete': _.noop },\n          result = _.toArray(benches);\n\n      /**\n       * Invokes the method of the current object and if synchronous, fetches the next.\n       */\n      function execute() {\n        var listeners,\n            async = isAsync(bench);\n\n        if (async) {\n          // Use `getNext` as the first listener.\n          bench.on('complete', getNext);\n          listeners = bench.events.complete;\n          listeners.splice(0, 0, listeners.pop());\n        }\n        // Execute method.\n        result[index] = _.isFunction(bench && bench[name]) ? bench[name].apply(bench, args) : undefined;\n        // If synchronous return `true` until finished.\n        return !async && getNext();\n      }\n\n      /**\n       * Fetches the next bench or executes `onComplete` callback.\n       */\n      function getNext(event) {\n        var cycleEvent,\n            last = bench,\n            async = isAsync(last);\n\n        if (async) {\n          last.off('complete', getNext);\n          last.emit('complete');\n        }\n        // Emit \"cycle\" event.\n        eventProps.type = 'cycle';\n        eventProps.target = last;\n        cycleEvent = Event(eventProps);\n        options.onCycle.call(benches, cycleEvent);\n\n        // Choose next benchmark if not exiting early.\n        if (!cycleEvent.aborted && raiseIndex() !== false) {\n          bench = queued ? benches[0] : result[index];\n          if (isAsync(bench)) {\n            delay(bench, execute);\n          }\n          else if (async) {\n            // Resume execution if previously asynchronous but now synchronous.\n            while (execute()) {}\n          }\n          else {\n            // Continue synchronous execution.\n            return true;\n          }\n        } else {\n          // Emit \"complete\" event.\n          eventProps.type = 'complete';\n          options.onComplete.call(benches, Event(eventProps));\n        }\n        // When used as a listener `event.aborted = true` will cancel the rest of\n        // the \"complete\" listeners because they were already called above and when\n        // used as part of `getNext` the `return false` will exit the execution while-loop.\n        if (event) {\n          event.aborted = true;\n        } else {\n          return false;\n        }\n      }\n\n      /**\n       * Checks if invoking `Benchmark#run` with asynchronous cycles.\n       */\n      function isAsync(object) {\n        // Avoid using `instanceof` here because of IE memory leak issues with host objects.\n        var async = args[0] && args[0].async;\n        return name == 'run' && (object instanceof Benchmark) &&\n          ((async == null ? object.options.async : async) && support.timeout || object.defer);\n      }\n\n      /**\n       * Raises `index` to the next defined index or returns `false`.\n       */\n      function raiseIndex() {\n        index++;\n\n        // If queued remove the previous bench.\n        if (queued && index > 0) {\n          shift.call(benches);\n        }\n        // If we reached the last index then return `false`.\n        return (queued ? benches.length : index < result.length)\n          ? index\n          : (index = false);\n      }\n      // Juggle arguments.\n      if (_.isString(name)) {\n        // 2 arguments (array, name).\n        args = slice.call(arguments, 2);\n      } else {\n        // 2 arguments (array, options).\n        options = _.assign(options, name);\n        name = options.name;\n        args = _.isArray(args = 'args' in options ? options.args : []) ? args : [args];\n        queued = options.queued;\n      }\n      // Start iterating over the array.\n      if (raiseIndex() !== false) {\n        // Emit \"start\" event.\n        bench = result[index];\n        eventProps.type = 'start';\n        eventProps.target = bench;\n        options.onStart.call(benches, Event(eventProps));\n\n        // End early if the suite was aborted in an \"onStart\" listener.\n        if (name == 'run' && (benches instanceof Suite) && benches.aborted) {\n          // Emit \"cycle\" event.\n          eventProps.type = 'cycle';\n          options.onCycle.call(benches, Event(eventProps));\n          // Emit \"complete\" event.\n          eventProps.type = 'complete';\n          options.onComplete.call(benches, Event(eventProps));\n        }\n        // Start method execution.\n        else {\n          if (isAsync(bench)) {\n            delay(bench, execute);\n          } else {\n            while (execute()) {}\n          }\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates a string of joined array values or object key-value pairs.\n     *\n     * @static\n     * @memberOf Benchmark\n     * @param {Array|Object} object The object to operate on.\n     * @param {string} [separator1=','] The separator used between key-value pairs.\n     * @param {string} [separator2=': '] The separator used between keys and values.\n     * @returns {string} The joined result.\n     */\n    function join(object, separator1, separator2) {\n      var result = [],\n          length = (object = Object(object)).length,\n          arrayLike = length === length >>> 0;\n\n      separator2 || (separator2 = ': ');\n      _.each(object, function(value, key) {\n        result.push(arrayLike ? value : key + separator2 + value);\n      });\n      return result.join(separator1 || ',');\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Aborts all benchmarks in the suite.\n     *\n     * @name abort\n     * @memberOf Benchmark.Suite\n     * @returns {Object} The suite instance.\n     */\n    function abortSuite() {\n      var event,\n          suite = this,\n          resetting = calledBy.resetSuite;\n\n      if (suite.running) {\n        event = Event('abort');\n        suite.emit(event);\n        if (!event.cancelled || resetting) {\n          // Avoid infinite recursion.\n          calledBy.abortSuite = true;\n          suite.reset();\n          delete calledBy.abortSuite;\n\n          if (!resetting) {\n            suite.aborted = true;\n            invoke(suite, 'abort');\n          }\n        }\n      }\n      return suite;\n    }\n\n    /**\n     * Adds a test to the benchmark suite.\n     *\n     * @memberOf Benchmark.Suite\n     * @param {string} name A name to identify the benchmark.\n     * @param {Function|string} fn The test to benchmark.\n     * @param {Object} [options={}] Options object.\n     * @returns {Object} The suite instance.\n     * @example\n     *\n     * // basic usage\n     * suite.add(fn);\n     *\n     * // or using a name first\n     * suite.add('foo', fn);\n     *\n     * // or with options\n     * suite.add('foo', fn, {\n     *   'onCycle': onCycle,\n     *   'onComplete': onComplete\n     * });\n     *\n     * // or name and options\n     * suite.add('foo', {\n     *   'fn': fn,\n     *   'onCycle': onCycle,\n     *   'onComplete': onComplete\n     * });\n     *\n     * // or options only\n     * suite.add({\n     *   'name': 'foo',\n     *   'fn': fn,\n     *   'onCycle': onCycle,\n     *   'onComplete': onComplete\n     * });\n     */\n    function add(name, fn, options) {\n      var suite = this,\n          bench = new Benchmark(name, fn, options),\n          event = Event({ 'type': 'add', 'target': bench });\n\n      if (suite.emit(event), !event.cancelled) {\n        suite.push(bench);\n      }\n      return suite;\n    }\n\n    /**\n     * Creates a new suite with cloned benchmarks.\n     *\n     * @name clone\n     * @memberOf Benchmark.Suite\n     * @param {Object} options Options object to overwrite cloned options.\n     * @returns {Object} The new suite instance.\n     */\n    function cloneSuite(options) {\n      var suite = this,\n          result = new suite.constructor(_.assign({}, suite.options, options));\n\n      // Copy own properties.\n      _.forOwn(suite, function(value, key) {\n        if (!_.has(result, key)) {\n          result[key] = value && _.isFunction(value.clone)\n            ? value.clone()\n            : cloneDeep(value);\n        }\n      });\n      return result;\n    }\n\n    /**\n     * An `Array#filter` like method.\n     *\n     * @name filter\n     * @memberOf Benchmark.Suite\n     * @param {Function|string} callback The function/alias called per iteration.\n     * @returns {Object} A new suite of benchmarks that passed callback filter.\n     */\n    function filterSuite(callback) {\n      var suite = this,\n          result = new suite.constructor(suite.options);\n\n      result.push.apply(result, filter(suite, callback));\n      return result;\n    }\n\n    /**\n     * Resets all benchmarks in the suite.\n     *\n     * @name reset\n     * @memberOf Benchmark.Suite\n     * @returns {Object} The suite instance.\n     */\n    function resetSuite() {\n      var event,\n          suite = this,\n          aborting = calledBy.abortSuite;\n\n      if (suite.running && !aborting) {\n        // No worries, `resetSuite()` is called within `abortSuite()`.\n        calledBy.resetSuite = true;\n        suite.abort();\n        delete calledBy.resetSuite;\n      }\n      // Reset if the state has changed.\n      else if ((suite.aborted || suite.running) &&\n          (suite.emit(event = Event('reset')), !event.cancelled)) {\n        suite.aborted = suite.running = false;\n        if (!aborting) {\n          invoke(suite, 'reset');\n        }\n      }\n      return suite;\n    }\n\n    /**\n     * Runs the suite.\n     *\n     * @name run\n     * @memberOf Benchmark.Suite\n     * @param {Object} [options={}] Options object.\n     * @returns {Object} The suite instance.\n     * @example\n     *\n     * // basic usage\n     * suite.run();\n     *\n     * // or with options\n     * suite.run({ 'async': true, 'queued': true });\n     */\n    function runSuite(options) {\n      var suite = this;\n\n      suite.reset();\n      suite.running = true;\n      options || (options = {});\n\n      invoke(suite, {\n        'name': 'run',\n        'args': options,\n        'queued': options.queued,\n        'onStart': function(event) {\n          suite.emit(event);\n        },\n        'onCycle': function(event) {\n          var bench = event.target;\n          if (bench.error) {\n            suite.emit({ 'type': 'error', 'target': bench });\n          }\n          suite.emit(event);\n          event.aborted = suite.aborted;\n        },\n        'onComplete': function(event) {\n          suite.running = false;\n          suite.emit(event);\n        }\n      });\n      return suite;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Executes all registered listeners of the specified event type.\n     *\n     * @memberOf Benchmark, Benchmark.Suite\n     * @param {Object|string} type The event type or object.\n     * @param {...*} [args] Arguments to invoke the listener with.\n     * @returns {*} Returns the return value of the last listener executed.\n     */\n    function emit(type) {\n      var listeners,\n          object = this,\n          event = Event(type),\n          events = object.events,\n          args = (arguments[0] = event, arguments);\n\n      event.currentTarget || (event.currentTarget = object);\n      event.target || (event.target = object);\n      delete event.result;\n\n      if (events && (listeners = _.has(events, event.type) && events[event.type])) {\n        _.each(listeners.slice(), function(listener) {\n          if ((event.result = listener.apply(object, args)) === false) {\n            event.cancelled = true;\n          }\n          return !event.aborted;\n        });\n      }\n      return event.result;\n    }\n\n    /**\n     * Returns an array of event listeners for a given type that can be manipulated\n     * to add or remove listeners.\n     *\n     * @memberOf Benchmark, Benchmark.Suite\n     * @param {string} type The event type.\n     * @returns {Array} The listeners array.\n     */\n    function listeners(type) {\n      var object = this,\n          events = object.events || (object.events = {});\n\n      return _.has(events, type) ? events[type] : (events[type] = []);\n    }\n\n    /**\n     * Unregisters a listener for the specified event type(s),\n     * or unregisters all listeners for the specified event type(s),\n     * or unregisters all listeners for all event types.\n     *\n     * @memberOf Benchmark, Benchmark.Suite\n     * @param {string} [type] The event type.\n     * @param {Function} [listener] The function to unregister.\n     * @returns {Object} The current instance.\n     * @example\n     *\n     * // unregister a listener for an event type\n     * bench.off('cycle', listener);\n     *\n     * // unregister a listener for multiple event types\n     * bench.off('start cycle', listener);\n     *\n     * // unregister all listeners for an event type\n     * bench.off('cycle');\n     *\n     * // unregister all listeners for multiple event types\n     * bench.off('start cycle complete');\n     *\n     * // unregister all listeners for all event types\n     * bench.off();\n     */\n    function off(type, listener) {\n      var object = this,\n          events = object.events;\n\n      if (!events) {\n        return object;\n      }\n      _.each(type ? type.split(' ') : events, function(listeners, type) {\n        var index;\n        if (typeof listeners == 'string') {\n          type = listeners;\n          listeners = _.has(events, type) && events[type];\n        }\n        if (listeners) {\n          if (listener) {\n            index = _.indexOf(listeners, listener);\n            if (index > -1) {\n              listeners.splice(index, 1);\n            }\n          } else {\n            listeners.length = 0;\n          }\n        }\n      });\n      return object;\n    }\n\n    /**\n     * Registers a listener for the specified event type(s).\n     *\n     * @memberOf Benchmark, Benchmark.Suite\n     * @param {string} type The event type.\n     * @param {Function} listener The function to register.\n     * @returns {Object} The current instance.\n     * @example\n     *\n     * // register a listener for an event type\n     * bench.on('cycle', listener);\n     *\n     * // register a listener for multiple event types\n     * bench.on('start cycle', listener);\n     */\n    function on(type, listener) {\n      var object = this,\n          events = object.events || (object.events = {});\n\n      _.each(type.split(' '), function(type) {\n        (_.has(events, type)\n          ? events[type]\n          : (events[type] = [])\n        ).push(listener);\n      });\n      return object;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Aborts the benchmark without recording times.\n     *\n     * @memberOf Benchmark\n     * @returns {Object} The benchmark instance.\n     */\n    function abort() {\n      var event,\n          bench = this,\n          resetting = calledBy.reset;\n\n      if (bench.running) {\n        event = Event('abort');\n        bench.emit(event);\n        if (!event.cancelled || resetting) {\n          // Avoid infinite recursion.\n          calledBy.abort = true;\n          bench.reset();\n          delete calledBy.abort;\n\n          if (support.timeout) {\n            clearTimeout(bench._timerId);\n            delete bench._timerId;\n          }\n          if (!resetting) {\n            bench.aborted = true;\n            bench.running = false;\n          }\n        }\n      }\n      return bench;\n    }\n\n    /**\n     * Creates a new benchmark using the same test and options.\n     *\n     * @memberOf Benchmark\n     * @param {Object} options Options object to overwrite cloned options.\n     * @returns {Object} The new benchmark instance.\n     * @example\n     *\n     * var bizarro = bench.clone({\n     *   'name': 'doppelganger'\n     * });\n     */\n    function clone(options) {\n      var bench = this,\n          result = new bench.constructor(_.assign({}, bench, options));\n\n      // Correct the `options` object.\n      result.options = _.assign({}, cloneDeep(bench.options), cloneDeep(options));\n\n      // Copy own custom properties.\n      _.forOwn(bench, function(value, key) {\n        if (!_.has(result, key)) {\n          result[key] = cloneDeep(value);\n        }\n      });\n\n      return result;\n    }\n\n    /**\n     * Determines if a benchmark is faster than another.\n     *\n     * @memberOf Benchmark\n     * @param {Object} other The benchmark to compare.\n     * @returns {number} Returns `-1` if slower, `1` if faster, and `0` if indeterminate.\n     */\n    function compare(other) {\n      var bench = this;\n\n      // Exit early if comparing the same benchmark.\n      if (bench == other) {\n        return 0;\n      }\n      var critical,\n          zStat,\n          sample1 = bench.stats.sample,\n          sample2 = other.stats.sample,\n          size1 = sample1.length,\n          size2 = sample2.length,\n          maxSize = max(size1, size2),\n          minSize = min(size1, size2),\n          u1 = getU(sample1, sample2),\n          u2 = getU(sample2, sample1),\n          u = min(u1, u2);\n\n      function getScore(xA, sampleB) {\n        return _.reduce(sampleB, function(total, xB) {\n          return total + (xB > xA ? 0 : xB < xA ? 1 : 0.5);\n        }, 0);\n      }\n\n      function getU(sampleA, sampleB) {\n        return _.reduce(sampleA, function(total, xA) {\n          return total + getScore(xA, sampleB);\n        }, 0);\n      }\n\n      function getZ(u) {\n        return (u - ((size1 * size2) / 2)) / sqrt((size1 * size2 * (size1 + size2 + 1)) / 12);\n      }\n      // Reject the null hypothesis the two samples come from the\n      // same population (i.e. have the same median) if...\n      if (size1 + size2 > 30) {\n        // ...the z-stat is greater than 1.96 or less than -1.96\n        // http://www.statisticslectures.com/topics/mannwhitneyu/\n        zStat = getZ(u);\n        return abs(zStat) > 1.96 ? (u == u1 ? 1 : -1) : 0;\n      }\n      // ...the U value is less than or equal the critical U value.\n      critical = maxSize < 5 || minSize < 3 ? 0 : uTable[maxSize][minSize - 3];\n      return u <= critical ? (u == u1 ? 1 : -1) : 0;\n    }\n\n    /**\n     * Reset properties and abort if running.\n     *\n     * @memberOf Benchmark\n     * @returns {Object} The benchmark instance.\n     */\n    function reset() {\n      var bench = this;\n      if (bench.running && !calledBy.abort) {\n        // No worries, `reset()` is called within `abort()`.\n        calledBy.reset = true;\n        bench.abort();\n        delete calledBy.reset;\n        return bench;\n      }\n      var event,\n          index = 0,\n          changes = [],\n          queue = [];\n\n      // A non-recursive solution to check if properties have changed.\n      // For more information see http://www.jslab.dk/articles/non.recursive.preorder.traversal.part4.\n      var data = {\n        'destination': bench,\n        'source': _.assign({}, cloneDeep(bench.constructor.prototype), cloneDeep(bench.options))\n      };\n\n      do {\n        _.forOwn(data.source, function(value, key) {\n          var changed,\n              destination = data.destination,\n              currValue = destination[key];\n\n          // Skip pseudo private properties like `_timerId` which could be a\n          // Java object in environments like RingoJS.\n          if (key.charAt(0) == '_') {\n            return;\n          }\n          if (value && typeof value == 'object') {\n            if (_.isArray(value)) {\n              // Check if an array value has changed to a non-array value.\n              if (!_.isArray(currValue)) {\n                changed = currValue = [];\n              }\n              // Check if an array has changed its length.\n              if (currValue.length != value.length) {\n                changed = currValue = currValue.slice(0, value.length);\n                currValue.length = value.length;\n              }\n            }\n            // Check if an object has changed to a non-object value.\n            else if (!currValue || typeof currValue != 'object') {\n              changed = currValue = {};\n            }\n            // Register a changed object.\n            if (changed) {\n              changes.push({ 'destination': destination, 'key': key, 'value': currValue });\n            }\n            queue.push({ 'destination': currValue, 'source': value });\n          }\n          // Register a changed primitive.\n          else if (value !== currValue && !(value == null || _.isFunction(value))) {\n            changes.push({ 'destination': destination, 'key': key, 'value': value });\n          }\n        });\n      }\n      while ((data = queue[index++]));\n\n      // If changed emit the `reset` event and if it isn't cancelled reset the benchmark.\n      if (changes.length && (bench.emit(event = Event('reset')), !event.cancelled)) {\n        _.each(changes, function(data) {\n          data.destination[data.key] = data.value;\n        });\n      }\n      return bench;\n    }\n\n    /**\n     * Displays relevant benchmark information when coerced to a string.\n     *\n     * @name toString\n     * @memberOf Benchmark\n     * @returns {string} A string representation of the benchmark instance.\n     */\n    function toStringBench() {\n      var bench = this,\n          error = bench.error,\n          hz = bench.hz,\n          id = bench.id,\n          stats = bench.stats,\n          size = stats.sample.length,\n          pm = '\\xb1',\n          result = bench.name || (_.isNaN(id) ? id : '<Test #' + id + '>');\n\n      if (error) {\n        var errorStr;\n        if (!_.isObject(error)) {\n          errorStr = String(error);\n        } else if (!_.isError(Error)) {\n          errorStr = join(error);\n        } else {\n          // Error#name and Error#message properties are non-enumerable.\n          errorStr = join(_.assign({ 'name': error.name, 'message': error.message }, error));\n        }\n        result += ': ' + errorStr;\n      }\n      else {\n        result += ' x ' + formatNumber(hz.toFixed(hz < 100 ? 2 : 0)) + ' ops/sec ' + pm +\n          stats.rme.toFixed(2) + '% (' + size + ' run' + (size == 1 ? '' : 's') + ' sampled)';\n      }\n      return result;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Clocks the time taken to execute a test per cycle (secs).\n     *\n     * @private\n     * @param {Object} bench The benchmark instance.\n     * @returns {number} The time taken.\n     */\n    function clock() {\n      var options = Benchmark.options,\n          templateData = {},\n          timers = [{ 'ns': timer.ns, 'res': max(0.0015, getRes('ms')), 'unit': 'ms' }];\n\n      // Lazy define for hi-res timers.\n      clock = function(clone) {\n        var deferred;\n\n        if (clone instanceof Deferred) {\n          deferred = clone;\n          clone = deferred.benchmark;\n        }\n        var bench = clone._original,\n            stringable = isStringable(bench.fn),\n            count = bench.count = clone.count,\n            decompilable = stringable || (support.decompilation && (clone.setup !== _.noop || clone.teardown !== _.noop)),\n            id = bench.id,\n            name = bench.name || (typeof id == 'number' ? '<Test #' + id + '>' : id),\n            result = 0;\n\n        // Init `minTime` if needed.\n        clone.minTime = bench.minTime || (bench.minTime = bench.options.minTime = options.minTime);\n\n        // Compile in setup/teardown functions and the test loop.\n        // Create a new compiled test, instead of using the cached `bench.compiled`,\n        // to avoid potential engine optimizations enabled over the life of the test.\n        var funcBody = deferred\n          ? 'var d#=this,${fnArg}=d#,m#=d#.benchmark._original,f#=m#.fn,su#=m#.setup,td#=m#.teardown;' +\n            // When `deferred.cycles` is `0` then...\n            'if(!d#.cycles){' +\n            // set `deferred.fn`,\n            'd#.fn=function(){var ${fnArg}=d#;if(typeof f#==\"function\"){try{${fn}\\n}catch(e#){f#(d#)}}else{${fn}\\n}};' +\n            // set `deferred.teardown`,\n            'd#.teardown=function(){d#.cycles=0;if(typeof td#==\"function\"){try{${teardown}\\n}catch(e#){td#()}}else{${teardown}\\n}};' +\n            // execute the benchmark's `setup`,\n            'if(typeof su#==\"function\"){try{${setup}\\n}catch(e#){su#()}}else{${setup}\\n};' +\n            // start timer,\n            't#.start(d#);' +\n            // and then execute `deferred.fn` and return a dummy object.\n            '}d#.fn();return{uid:\"${uid}\"}'\n\n          : 'var r#,s#,m#=this,f#=m#.fn,i#=m#.count,n#=t#.ns;${setup}\\n${begin};' +\n            'while(i#--){${fn}\\n}${end};${teardown}\\nreturn{elapsed:r#,uid:\"${uid}\"}';\n\n        var compiled = bench.compiled = clone.compiled = createCompiled(bench, decompilable, deferred, funcBody),\n            isEmpty = !(templateData.fn || stringable);\n\n        try {\n          if (isEmpty) {\n            // Firefox may remove dead code from `Function#toString` results.\n            // For more information see http://bugzil.la/536085.\n            throw new Error('The test \"' + name + '\" is empty. This may be the result of dead code removal.');\n          }\n          else if (!deferred) {\n            // Pretest to determine if compiled code exits early, usually by a\n            // rogue `return` statement, by checking for a return object with the uid.\n            bench.count = 1;\n            compiled = decompilable && (compiled.call(bench, context, timer) || {}).uid == templateData.uid && compiled;\n            bench.count = count;\n          }\n        } catch(e) {\n          compiled = null;\n          clone.error = e || new Error(String(e));\n          bench.count = count;\n        }\n        // Fallback when a test exits early or errors during pretest.\n        if (!compiled && !deferred && !isEmpty) {\n          funcBody = (\n            stringable || (decompilable && !clone.error)\n              ? 'function f#(){${fn}\\n}var r#,s#,m#=this,i#=m#.count'\n              : 'var r#,s#,m#=this,f#=m#.fn,i#=m#.count'\n            ) +\n            ',n#=t#.ns;${setup}\\n${begin};m#.f#=f#;while(i#--){m#.f#()}${end};' +\n            'delete m#.f#;${teardown}\\nreturn{elapsed:r#}';\n\n          compiled = createCompiled(bench, decompilable, deferred, funcBody);\n\n          try {\n            // Pretest one more time to check for errors.\n            bench.count = 1;\n            compiled.call(bench, context, timer);\n            bench.count = count;\n            delete clone.error;\n          }\n          catch(e) {\n            bench.count = count;\n            if (!clone.error) {\n              clone.error = e || new Error(String(e));\n            }\n          }\n        }\n        // If no errors run the full test loop.\n        if (!clone.error) {\n          compiled = bench.compiled = clone.compiled = createCompiled(bench, decompilable, deferred, funcBody);\n          result = compiled.call(deferred || bench, context, timer).elapsed;\n        }\n        return result;\n      };\n\n      /*----------------------------------------------------------------------*/\n\n      /**\n       * Creates a compiled function from the given function `body`.\n       */\n      function createCompiled(bench, decompilable, deferred, body) {\n        var fn = bench.fn,\n            fnArg = deferred ? getFirstArgument(fn) || 'deferred' : '';\n\n        templateData.uid = uid + uidCounter++;\n\n        _.assign(templateData, {\n          'setup': decompilable ? getSource(bench.setup) : interpolate('m#.setup()'),\n          'fn': decompilable ? getSource(fn) : interpolate('m#.fn(' + fnArg + ')'),\n          'fnArg': fnArg,\n          'teardown': decompilable ? getSource(bench.teardown) : interpolate('m#.teardown()')\n        });\n\n        // Use API of chosen timer.\n        if (timer.unit == 'ns') {\n          _.assign(templateData, {\n            'begin': interpolate('s#=n#()'),\n            'end': interpolate('r#=n#(s#);r#=r#[0]+(r#[1]/1e9)')\n          });\n        }\n        else if (timer.unit == 'us') {\n          if (timer.ns.stop) {\n            _.assign(templateData, {\n              'begin': interpolate('s#=n#.start()'),\n              'end': interpolate('r#=n#.microseconds()/1e6')\n            });\n          } else {\n            _.assign(templateData, {\n              'begin': interpolate('s#=n#()'),\n              'end': interpolate('r#=(n#()-s#)/1e6')\n            });\n          }\n        }\n        else if (timer.ns.now) {\n          _.assign(templateData, {\n            'begin': interpolate('s#=n#.now()'),\n            'end': interpolate('r#=(n#.now()-s#)/1e3')\n          });\n        }\n        else {\n          _.assign(templateData, {\n            'begin': interpolate('s#=new n#().getTime()'),\n            'end': interpolate('r#=(new n#().getTime()-s#)/1e3')\n          });\n        }\n        // Define `timer` methods.\n        timer.start = createFunction(\n          interpolate('o#'),\n          interpolate('var n#=this.ns,${begin};o#.elapsed=0;o#.timeStamp=s#')\n        );\n\n        timer.stop = createFunction(\n          interpolate('o#'),\n          interpolate('var n#=this.ns,s#=o#.timeStamp,${end};o#.elapsed=r#')\n        );\n\n        // Create compiled test.\n        return createFunction(\n          interpolate('window,t#'),\n          'var global = window, clearTimeout = global.clearTimeout, setTimeout = global.setTimeout;\\n' +\n          interpolate(body)\n        );\n      }\n\n      /**\n       * Gets the current timer's minimum resolution (secs).\n       */\n      function getRes(unit) {\n        var measured,\n            begin,\n            count = 30,\n            divisor = 1e3,\n            ns = timer.ns,\n            sample = [];\n\n        // Get average smallest measurable time.\n        while (count--) {\n          if (unit == 'us') {\n            divisor = 1e6;\n            if (ns.stop) {\n              ns.start();\n              while (!(measured = ns.microseconds())) {}\n            } else {\n              begin = ns();\n              while (!(measured = ns() - begin)) {}\n            }\n          }\n          else if (unit == 'ns') {\n            divisor = 1e9;\n            begin = (begin = ns())[0] + (begin[1] / divisor);\n            while (!(measured = ((measured = ns())[0] + (measured[1] / divisor)) - begin)) {}\n            divisor = 1;\n          }\n          else if (ns.now) {\n            begin = ns.now();\n            while (!(measured = ns.now() - begin)) {}\n          }\n          else {\n            begin = new ns().getTime();\n            while (!(measured = new ns().getTime() - begin)) {}\n          }\n          // Check for broken timers.\n          if (measured > 0) {\n            sample.push(measured);\n          } else {\n            sample.push(Infinity);\n            break;\n          }\n        }\n        // Convert to seconds.\n        return getMean(sample) / divisor;\n      }\n\n      /**\n       * Interpolates a given template string.\n       */\n      function interpolate(string) {\n        // Replaces all occurrences of `#` with a unique number and template tokens with content.\n        return _.template(string.replace(/\\#/g, /\\d+/.exec(templateData.uid)))(templateData);\n      }\n\n      /*----------------------------------------------------------------------*/\n\n      // Detect Chrome's microsecond timer:\n      // enable benchmarking via the --enable-benchmarking command\n      // line switch in at least Chrome 7 to use chrome.Interval\n      try {\n        if ((timer.ns = new (context.chrome || context.chromium).Interval)) {\n          timers.push({ 'ns': timer.ns, 'res': getRes('us'), 'unit': 'us' });\n        }\n      } catch(e) {}\n\n      // Detect Node.js's nanosecond resolution timer available in Node.js >= 0.8.\n      if (processObject && typeof (timer.ns = processObject.hrtime) == 'function') {\n        timers.push({ 'ns': timer.ns, 'res': getRes('ns'), 'unit': 'ns' });\n      }\n      // Detect Wade Simmons' Node.js `microtime` module.\n      if (microtimeObject && typeof (timer.ns = microtimeObject.now) == 'function') {\n        timers.push({ 'ns': timer.ns,  'res': getRes('us'), 'unit': 'us' });\n      }\n      // Pick timer with highest resolution.\n      timer = _.minBy(timers, 'res');\n\n      // Error if there are no working timers.\n      if (timer.res == Infinity) {\n        throw new Error('Benchmark.js was unable to find a working timer.');\n      }\n      // Resolve time span required to achieve a percent uncertainty of at most 1%.\n      // For more information see http://spiff.rit.edu/classes/phys273/uncert/uncert.html.\n      options.minTime || (options.minTime = max(timer.res / 2 / 0.01, 0.05));\n      return clock.apply(null, arguments);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Computes stats on benchmark results.\n     *\n     * @private\n     * @param {Object} bench The benchmark instance.\n     * @param {Object} options The options object.\n     */\n    function compute(bench, options) {\n      options || (options = {});\n\n      var async = options.async,\n          elapsed = 0,\n          initCount = bench.initCount,\n          minSamples = bench.minSamples,\n          queue = [],\n          sample = bench.stats.sample;\n\n      /**\n       * Adds a clone to the queue.\n       */\n      function enqueue() {\n        queue.push(bench.clone({\n          '_original': bench,\n          'events': {\n            'abort': [update],\n            'cycle': [update],\n            'error': [update],\n            'start': [update]\n          }\n        }));\n      }\n\n      /**\n       * Updates the clone/original benchmarks to keep their data in sync.\n       */\n      function update(event) {\n        var clone = this,\n            type = event.type;\n\n        if (bench.running) {\n          if (type == 'start') {\n            // Note: `clone.minTime` prop is inited in `clock()`.\n            clone.count = bench.initCount;\n          }\n          else {\n            if (type == 'error') {\n              bench.error = clone.error;\n            }\n            if (type == 'abort') {\n              bench.abort();\n              bench.emit('cycle');\n            } else {\n              event.currentTarget = event.target = bench;\n              bench.emit(event);\n            }\n          }\n        } else if (bench.aborted) {\n          // Clear abort listeners to avoid triggering bench's abort/cycle again.\n          clone.events.abort.length = 0;\n          clone.abort();\n        }\n      }\n\n      /**\n       * Determines if more clones should be queued or if cycling should stop.\n       */\n      function evaluate(event) {\n        var critical,\n            df,\n            mean,\n            moe,\n            rme,\n            sd,\n            sem,\n            variance,\n            clone = event.target,\n            done = bench.aborted,\n            now = _.now(),\n            size = sample.push(clone.times.period),\n            maxedOut = size >= minSamples && (elapsed += now - clone.times.timeStamp) / 1e3 > bench.maxTime,\n            times = bench.times,\n            varOf = function(sum, x) { return sum + pow(x - mean, 2); };\n\n        // Exit early for aborted or unclockable tests.\n        if (done || clone.hz == Infinity) {\n          maxedOut = !(size = sample.length = queue.length = 0);\n        }\n\n        if (!done) {\n          // Compute the sample mean (estimate of the population mean).\n          mean = getMean(sample);\n          // Compute the sample variance (estimate of the population variance).\n          variance = _.reduce(sample, varOf, 0) / (size - 1) || 0;\n          // Compute the sample standard deviation (estimate of the population standard deviation).\n          sd = sqrt(variance);\n          // Compute the standard error of the mean (a.k.a. the standard deviation of the sampling distribution of the sample mean).\n          sem = sd / sqrt(size);\n          // Compute the degrees of freedom.\n          df = size - 1;\n          // Compute the critical value.\n          critical = tTable[Math.round(df) || 1] || tTable.infinity;\n          // Compute the margin of error.\n          moe = sem * critical;\n          // Compute the relative margin of error.\n          rme = (moe / mean) * 100 || 0;\n\n          _.assign(bench.stats, {\n            'deviation': sd,\n            'mean': mean,\n            'moe': moe,\n            'rme': rme,\n            'sem': sem,\n            'variance': variance\n          });\n\n          // Abort the cycle loop when the minimum sample size has been collected\n          // and the elapsed time exceeds the maximum time allowed per benchmark.\n          // We don't count cycle delays toward the max time because delays may be\n          // increased by browsers that clamp timeouts for inactive tabs. For more\n          // information see https://developer.mozilla.org/en/window.setTimeout#Inactive_tabs.\n          if (maxedOut) {\n            // Reset the `initCount` in case the benchmark is rerun.\n            bench.initCount = initCount;\n            bench.running = false;\n            done = true;\n            times.elapsed = (now - times.timeStamp) / 1e3;\n          }\n          if (bench.hz != Infinity) {\n            bench.hz = 1 / mean;\n            times.cycle = mean * bench.count;\n            times.period = mean;\n          }\n        }\n        // If time permits, increase sample size to reduce the margin of error.\n        if (queue.length < 2 && !maxedOut) {\n          enqueue();\n        }\n        // Abort the `invoke` cycle when done.\n        event.aborted = done;\n      }\n\n      // Init queue and begin.\n      enqueue();\n      invoke(queue, {\n        'name': 'run',\n        'args': { 'async': async },\n        'queued': true,\n        'onCycle': evaluate,\n        'onComplete': function() { bench.emit('complete'); }\n      });\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Cycles a benchmark until a run `count` can be established.\n     *\n     * @private\n     * @param {Object} clone The cloned benchmark instance.\n     * @param {Object} options The options object.\n     */\n    function cycle(clone, options) {\n      options || (options = {});\n\n      var deferred;\n      if (clone instanceof Deferred) {\n        deferred = clone;\n        clone = clone.benchmark;\n      }\n      var clocked,\n          cycles,\n          divisor,\n          event,\n          minTime,\n          period,\n          async = options.async,\n          bench = clone._original,\n          count = clone.count,\n          times = clone.times;\n\n      // Continue, if not aborted between cycles.\n      if (clone.running) {\n        // `minTime` is set to `Benchmark.options.minTime` in `clock()`.\n        cycles = ++clone.cycles;\n        clocked = deferred ? deferred.elapsed : clock(clone);\n        minTime = clone.minTime;\n\n        if (cycles > bench.cycles) {\n          bench.cycles = cycles;\n        }\n        if (clone.error) {\n          event = Event('error');\n          event.message = clone.error;\n          clone.emit(event);\n          if (!event.cancelled) {\n            clone.abort();\n          }\n        }\n      }\n      // Continue, if not errored.\n      if (clone.running) {\n        // Compute the time taken to complete last test cycle.\n        bench.times.cycle = times.cycle = clocked;\n        // Compute the seconds per operation.\n        period = bench.times.period = times.period = clocked / count;\n        // Compute the ops per second.\n        bench.hz = clone.hz = 1 / period;\n        // Avoid working our way up to this next time.\n        bench.initCount = clone.initCount = count;\n        // Do we need to do another cycle?\n        clone.running = clocked < minTime;\n\n        if (clone.running) {\n          // Tests may clock at `0` when `initCount` is a small number,\n          // to avoid that we set its count to something a bit higher.\n          if (!clocked && (divisor = divisors[clone.cycles]) != null) {\n            count = floor(4e6 / divisor);\n          }\n          // Calculate how many more iterations it will take to achieve the `minTime`.\n          if (count <= clone.count) {\n            count += Math.ceil((minTime - clocked) / period);\n          }\n          clone.running = count != Infinity;\n        }\n      }\n      // Should we exit early?\n      event = Event('cycle');\n      clone.emit(event);\n      if (event.aborted) {\n        clone.abort();\n      }\n      // Figure out what to do next.\n      if (clone.running) {\n        // Start a new cycle.\n        clone.count = count;\n        if (deferred) {\n          clone.compiled.call(deferred, context, timer);\n        } else if (async) {\n          delay(clone, function() { cycle(clone, options); });\n        } else {\n          cycle(clone);\n        }\n      }\n      else {\n        // Fix TraceMonkey bug associated with clock fallbacks.\n        // For more information see http://bugzil.la/509069.\n        if (support.browser) {\n          runScript(uid + '=1;delete ' + uid);\n        }\n        // We're done.\n        clone.emit('complete');\n      }\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Runs the benchmark.\n     *\n     * @memberOf Benchmark\n     * @param {Object} [options={}] Options object.\n     * @returns {Object} The benchmark instance.\n     * @example\n     *\n     * // basic usage\n     * bench.run();\n     *\n     * // or with options\n     * bench.run({ 'async': true });\n     */\n    function run(options) {\n      var bench = this,\n          event = Event('start');\n\n      // Set `running` to `false` so `reset()` won't call `abort()`.\n      bench.running = false;\n      bench.reset();\n      bench.running = true;\n\n      bench.count = bench.initCount;\n      bench.times.timeStamp = _.now();\n      bench.emit(event);\n\n      if (!event.cancelled) {\n        options = { 'async': ((options = options && options.async) == null ? bench.async : options) && support.timeout };\n\n        // For clones created within `compute()`.\n        if (bench._original) {\n          if (bench.defer) {\n            Deferred(bench);\n          } else {\n            cycle(bench, options);\n          }\n        }\n        // For original benchmarks.\n        else {\n          compute(bench, options);\n        }\n      }\n      return bench;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    // Firefox 1 erroneously defines variable and argument names of functions on\n    // the function itself as non-configurable properties with `undefined` values.\n    // The bugginess continues as the `Benchmark` constructor has an argument\n    // named `options` and Firefox 1 will not assign a value to `Benchmark.options`,\n    // making it non-writable in the process, unless it is the first property\n    // assigned by for-in loop of `_.assign()`.\n    _.assign(Benchmark, {\n\n      /**\n       * The default options copied by benchmark instances.\n       *\n       * @static\n       * @memberOf Benchmark\n       * @type Object\n       */\n      'options': {\n\n        /**\n         * A flag to indicate that benchmark cycles will execute asynchronously\n         * by default.\n         *\n         * @memberOf Benchmark.options\n         * @type boolean\n         */\n        'async': false,\n\n        /**\n         * A flag to indicate that the benchmark clock is deferred.\n         *\n         * @memberOf Benchmark.options\n         * @type boolean\n         */\n        'defer': false,\n\n        /**\n         * The delay between test cycles (secs).\n         * @memberOf Benchmark.options\n         * @type number\n         */\n        'delay': 0.005,\n\n        /**\n         * Displayed by `Benchmark#toString` when a `name` is not available\n         * (auto-generated if absent).\n         *\n         * @memberOf Benchmark.options\n         * @type string\n         */\n        'id': undefined,\n\n        /**\n         * The default number of times to execute a test on a benchmark's first cycle.\n         *\n         * @memberOf Benchmark.options\n         * @type number\n         */\n        'initCount': 1,\n\n        /**\n         * The maximum time a benchmark is allowed to run before finishing (secs).\n         *\n         * Note: Cycle delays aren't counted toward the maximum time.\n         *\n         * @memberOf Benchmark.options\n         * @type number\n         */\n        'maxTime': 5,\n\n        /**\n         * The minimum sample size required to perform statistical analysis.\n         *\n         * @memberOf Benchmark.options\n         * @type number\n         */\n        'minSamples': 5,\n\n        /**\n         * The time needed to reduce the percent uncertainty of measurement to 1% (secs).\n         *\n         * @memberOf Benchmark.options\n         * @type number\n         */\n        'minTime': 0,\n\n        /**\n         * The name of the benchmark.\n         *\n         * @memberOf Benchmark.options\n         * @type string\n         */\n        'name': undefined,\n\n        /**\n         * An event listener called when the benchmark is aborted.\n         *\n         * @memberOf Benchmark.options\n         * @type Function\n         */\n        'onAbort': undefined,\n\n        /**\n         * An event listener called when the benchmark completes running.\n         *\n         * @memberOf Benchmark.options\n         * @type Function\n         */\n        'onComplete': undefined,\n\n        /**\n         * An event listener called after each run cycle.\n         *\n         * @memberOf Benchmark.options\n         * @type Function\n         */\n        'onCycle': undefined,\n\n        /**\n         * An event listener called when a test errors.\n         *\n         * @memberOf Benchmark.options\n         * @type Function\n         */\n        'onError': undefined,\n\n        /**\n         * An event listener called when the benchmark is reset.\n         *\n         * @memberOf Benchmark.options\n         * @type Function\n         */\n        'onReset': undefined,\n\n        /**\n         * An event listener called when the benchmark starts running.\n         *\n         * @memberOf Benchmark.options\n         * @type Function\n         */\n        'onStart': undefined\n      },\n\n      /**\n       * Platform object with properties describing things like browser name,\n       * version, and operating system. See [`platform.js`](https://mths.be/platform).\n       *\n       * @static\n       * @memberOf Benchmark\n       * @type Object\n       */\n      'platform': context.platform || require('platform') || ({\n        'description': context.navigator && context.navigator.userAgent || null,\n        'layout': null,\n        'product': null,\n        'name': null,\n        'manufacturer': null,\n        'os': null,\n        'prerelease': null,\n        'version': null,\n        'toString': function() {\n          return this.description || '';\n        }\n      }),\n\n      /**\n       * The semantic version number.\n       *\n       * @static\n       * @memberOf Benchmark\n       * @type string\n       */\n      'version': '2.1.2'\n    });\n\n    _.assign(Benchmark, {\n      'filter': filter,\n      'formatNumber': formatNumber,\n      'invoke': invoke,\n      'join': join,\n      'runInContext': runInContext,\n      'support': support\n    });\n\n    // Add lodash methods to Benchmark.\n    _.each(['each', 'forEach', 'forOwn', 'has', 'indexOf', 'map', 'reduce'], function(methodName) {\n      Benchmark[methodName] = _[methodName];\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    _.assign(Benchmark.prototype, {\n\n      /**\n       * The number of times a test was executed.\n       *\n       * @memberOf Benchmark\n       * @type number\n       */\n      'count': 0,\n\n      /**\n       * The number of cycles performed while benchmarking.\n       *\n       * @memberOf Benchmark\n       * @type number\n       */\n      'cycles': 0,\n\n      /**\n       * The number of executions per second.\n       *\n       * @memberOf Benchmark\n       * @type number\n       */\n      'hz': 0,\n\n      /**\n       * The compiled test function.\n       *\n       * @memberOf Benchmark\n       * @type {Function|string}\n       */\n      'compiled': undefined,\n\n      /**\n       * The error object if the test failed.\n       *\n       * @memberOf Benchmark\n       * @type Object\n       */\n      'error': undefined,\n\n      /**\n       * The test to benchmark.\n       *\n       * @memberOf Benchmark\n       * @type {Function|string}\n       */\n      'fn': undefined,\n\n      /**\n       * A flag to indicate if the benchmark is aborted.\n       *\n       * @memberOf Benchmark\n       * @type boolean\n       */\n      'aborted': false,\n\n      /**\n       * A flag to indicate if the benchmark is running.\n       *\n       * @memberOf Benchmark\n       * @type boolean\n       */\n      'running': false,\n\n      /**\n       * Compiled into the test and executed immediately **before** the test loop.\n       *\n       * @memberOf Benchmark\n       * @type {Function|string}\n       * @example\n       *\n       * // basic usage\n       * var bench = Benchmark({\n       *   'setup': function() {\n       *     var c = this.count,\n       *         element = document.getElementById('container');\n       *     while (c--) {\n       *       element.appendChild(document.createElement('div'));\n       *     }\n       *   },\n       *   'fn': function() {\n       *     element.removeChild(element.lastChild);\n       *   }\n       * });\n       *\n       * // compiles to something like:\n       * var c = this.count,\n       *     element = document.getElementById('container');\n       * while (c--) {\n       *   element.appendChild(document.createElement('div'));\n       * }\n       * var start = new Date;\n       * while (count--) {\n       *   element.removeChild(element.lastChild);\n       * }\n       * var end = new Date - start;\n       *\n       * // or using strings\n       * var bench = Benchmark({\n       *   'setup': '\\\n       *     var a = 0;\\n\\\n       *     (function() {\\n\\\n       *       (function() {\\n\\\n       *         (function() {',\n       *   'fn': 'a += 1;',\n       *   'teardown': '\\\n       *          }())\\n\\\n       *        }())\\n\\\n       *      }())'\n       * });\n       *\n       * // compiles to something like:\n       * var a = 0;\n       * (function() {\n       *   (function() {\n       *     (function() {\n       *       var start = new Date;\n       *       while (count--) {\n       *         a += 1;\n       *       }\n       *       var end = new Date - start;\n       *     }())\n       *   }())\n       * }())\n       */\n      'setup': _.noop,\n\n      /**\n       * Compiled into the test and executed immediately **after** the test loop.\n       *\n       * @memberOf Benchmark\n       * @type {Function|string}\n       */\n      'teardown': _.noop,\n\n      /**\n       * An object of stats including mean, margin or error, and standard deviation.\n       *\n       * @memberOf Benchmark\n       * @type Object\n       */\n      'stats': {\n\n        /**\n         * The margin of error.\n         *\n         * @memberOf Benchmark#stats\n         * @type number\n         */\n        'moe': 0,\n\n        /**\n         * The relative margin of error (expressed as a percentage of the mean).\n         *\n         * @memberOf Benchmark#stats\n         * @type number\n         */\n        'rme': 0,\n\n        /**\n         * The standard error of the mean.\n         *\n         * @memberOf Benchmark#stats\n         * @type number\n         */\n        'sem': 0,\n\n        /**\n         * The sample standard deviation.\n         *\n         * @memberOf Benchmark#stats\n         * @type number\n         */\n        'deviation': 0,\n\n        /**\n         * The sample arithmetic mean (secs).\n         *\n         * @memberOf Benchmark#stats\n         * @type number\n         */\n        'mean': 0,\n\n        /**\n         * The array of sampled periods.\n         *\n         * @memberOf Benchmark#stats\n         * @type Array\n         */\n        'sample': [],\n\n        /**\n         * The sample variance.\n         *\n         * @memberOf Benchmark#stats\n         * @type number\n         */\n        'variance': 0\n      },\n\n      /**\n       * An object of timing data including cycle, elapsed, period, start, and stop.\n       *\n       * @memberOf Benchmark\n       * @type Object\n       */\n      'times': {\n\n        /**\n         * The time taken to complete the last cycle (secs).\n         *\n         * @memberOf Benchmark#times\n         * @type number\n         */\n        'cycle': 0,\n\n        /**\n         * The time taken to complete the benchmark (secs).\n         *\n         * @memberOf Benchmark#times\n         * @type number\n         */\n        'elapsed': 0,\n\n        /**\n         * The time taken to execute the test once (secs).\n         *\n         * @memberOf Benchmark#times\n         * @type number\n         */\n        'period': 0,\n\n        /**\n         * A timestamp of when the benchmark started (ms).\n         *\n         * @memberOf Benchmark#times\n         * @type number\n         */\n        'timeStamp': 0\n      }\n    });\n\n    _.assign(Benchmark.prototype, {\n      'abort': abort,\n      'clone': clone,\n      'compare': compare,\n      'emit': emit,\n      'listeners': listeners,\n      'off': off,\n      'on': on,\n      'reset': reset,\n      'run': run,\n      'toString': toStringBench\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    _.assign(Deferred.prototype, {\n\n      /**\n       * The deferred benchmark instance.\n       *\n       * @memberOf Benchmark.Deferred\n       * @type Object\n       */\n      'benchmark': null,\n\n      /**\n       * The number of deferred cycles performed while benchmarking.\n       *\n       * @memberOf Benchmark.Deferred\n       * @type number\n       */\n      'cycles': 0,\n\n      /**\n       * The time taken to complete the deferred benchmark (secs).\n       *\n       * @memberOf Benchmark.Deferred\n       * @type number\n       */\n      'elapsed': 0,\n\n      /**\n       * A timestamp of when the deferred benchmark started (ms).\n       *\n       * @memberOf Benchmark.Deferred\n       * @type number\n       */\n      'timeStamp': 0\n    });\n\n    _.assign(Deferred.prototype, {\n      'resolve': resolve\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    _.assign(Event.prototype, {\n\n      /**\n       * A flag to indicate if the emitters listener iteration is aborted.\n       *\n       * @memberOf Benchmark.Event\n       * @type boolean\n       */\n      'aborted': false,\n\n      /**\n       * A flag to indicate if the default action is cancelled.\n       *\n       * @memberOf Benchmark.Event\n       * @type boolean\n       */\n      'cancelled': false,\n\n      /**\n       * The object whose listeners are currently being processed.\n       *\n       * @memberOf Benchmark.Event\n       * @type Object\n       */\n      'currentTarget': undefined,\n\n      /**\n       * The return value of the last executed listener.\n       *\n       * @memberOf Benchmark.Event\n       * @type Mixed\n       */\n      'result': undefined,\n\n      /**\n       * The object to which the event was originally emitted.\n       *\n       * @memberOf Benchmark.Event\n       * @type Object\n       */\n      'target': undefined,\n\n      /**\n       * A timestamp of when the event was created (ms).\n       *\n       * @memberOf Benchmark.Event\n       * @type number\n       */\n      'timeStamp': 0,\n\n      /**\n       * The event type.\n       *\n       * @memberOf Benchmark.Event\n       * @type string\n       */\n      'type': ''\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The default options copied by suite instances.\n     *\n     * @static\n     * @memberOf Benchmark.Suite\n     * @type Object\n     */\n    Suite.options = {\n\n      /**\n       * The name of the suite.\n       *\n       * @memberOf Benchmark.Suite.options\n       * @type string\n       */\n      'name': undefined\n    };\n\n    /*------------------------------------------------------------------------*/\n\n    _.assign(Suite.prototype, {\n\n      /**\n       * The number of benchmarks in the suite.\n       *\n       * @memberOf Benchmark.Suite\n       * @type number\n       */\n      'length': 0,\n\n      /**\n       * A flag to indicate if the suite is aborted.\n       *\n       * @memberOf Benchmark.Suite\n       * @type boolean\n       */\n      'aborted': false,\n\n      /**\n       * A flag to indicate if the suite is running.\n       *\n       * @memberOf Benchmark.Suite\n       * @type boolean\n       */\n      'running': false\n    });\n\n    _.assign(Suite.prototype, {\n      'abort': abortSuite,\n      'add': add,\n      'clone': cloneSuite,\n      'emit': emit,\n      'filter': filterSuite,\n      'join': arrayRef.join,\n      'listeners': listeners,\n      'off': off,\n      'on': on,\n      'pop': arrayRef.pop,\n      'push': push,\n      'reset': resetSuite,\n      'run': runSuite,\n      'reverse': arrayRef.reverse,\n      'shift': shift,\n      'slice': slice,\n      'sort': arrayRef.sort,\n      'splice': arrayRef.splice,\n      'unshift': unshift\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    // Expose Deferred, Event, and Suite.\n    _.assign(Benchmark, {\n      'Deferred': Deferred,\n      'Event': Event,\n      'Suite': Suite\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    // Add lodash methods as Suite methods.\n    _.each(['each', 'forEach', 'indexOf', 'map', 'reduce'], function(methodName) {\n      var func = _[methodName];\n      Suite.prototype[methodName] = function() {\n        var args = [this];\n        push.apply(args, arguments);\n        return func.apply(_, args);\n      };\n    });\n\n    // Avoid array-like object bugs with `Array#shift` and `Array#splice`\n    // in Firefox < 10 and IE < 9.\n    _.each(['pop', 'shift', 'splice'], function(methodName) {\n      var func = arrayRef[methodName];\n\n      Suite.prototype[methodName] = function() {\n        var value = this,\n            result = func.apply(value, arguments);\n\n        if (value.length === 0) {\n          delete value[0];\n        }\n        return result;\n      };\n    });\n\n    // Avoid buggy `Array#unshift` in IE < 8 which doesn't return the new\n    // length of the array.\n    Suite.prototype.unshift = function() {\n      var value = this;\n      unshift.apply(value, arguments);\n      return value.length;\n    };\n\n    return Benchmark;\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  // Export Benchmark.\n  // Some AMD build optimizers, like r.js, check for condition patterns like the following:\n  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {\n    // Define as an anonymous module so, through path mapping, it can be aliased.\n    define(['lodash', 'platform'], function(_, platform) {\n      return runInContext({\n        '_': _,\n        'platform': platform\n      });\n    });\n  }\n  else {\n    var Benchmark = runInContext();\n\n    // Check for `exports` after `define` in case a build optimizer adds an `exports` object.\n    if (freeExports && freeModule) {\n      // Export for Node.js.\n      if (moduleExports) {\n        (freeModule.exports = Benchmark).Benchmark = Benchmark;\n      }\n      // Export for CommonJS support.\n      freeExports.Benchmark = Benchmark;\n    }\n    else {\n      // Export to the global object.\n      root.Benchmark = Benchmark;\n    }\n  }\n}.call(this));\n\n\n/***/ },\n/* 28 */\n/***/ function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(module, global) {var __WEBPACK_AMD_DEFINE_RESULT__;/*!\r\n * Platform.js <https://mths.be/platform>\r\n * Copyright 2014-2016 Benjamin Tan <https://demoneaux.github.io/>\r\n * Copyright 2011-2013 John-David Dalton <http://allyoucanleet.com/>\r\n * Available under MIT license <https://mths.be/mit>\r\n */\r\n;(function() {\r\n  'use strict';\r\n\r\n  /** Used to determine if values are of the language type `Object`. */\r\n  var objectTypes = {\r\n    'function': true,\r\n    'object': true\r\n  };\r\n\r\n  /** Used as a reference to the global object. */\r\n  var root = (objectTypes[typeof window] && window) || this;\r\n\r\n  /** Backup possible global object. */\r\n  var oldRoot = root;\r\n\r\n  /** Detect free variable `exports`. */\r\n  var freeExports = objectTypes[typeof exports] && exports;\r\n\r\n  /** Detect free variable `module`. */\r\n  var freeModule = objectTypes[typeof module] && module && !module.nodeType && module;\r\n\r\n  /** Detect free variable `global` from Node.js or Browserified code and use it as `root`. */\r\n  var freeGlobal = freeExports && freeModule && typeof global == 'object' && global;\r\n  if (freeGlobal && (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal || freeGlobal.self === freeGlobal)) {\r\n    root = freeGlobal;\r\n  }\r\n\r\n  /**\r\n   * Used as the maximum length of an array-like object.\r\n   * See the [ES6 spec](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength)\r\n   * for more details.\r\n   */\r\n  var maxSafeInteger = Math.pow(2, 53) - 1;\r\n\r\n  /** Regular expression to detect Opera. */\r\n  var reOpera = /\\bOpera/;\r\n\r\n  /** Possible global object. */\r\n  var thisBinding = this;\r\n\r\n  /** Used for native method references. */\r\n  var objectProto = Object.prototype;\r\n\r\n  /** Used to check for own properties of an object. */\r\n  var hasOwnProperty = objectProto.hasOwnProperty;\r\n\r\n  /** Used to resolve the internal `[[Class]]` of values. */\r\n  var toString = objectProto.toString;\r\n\r\n  /*--------------------------------------------------------------------------*/\r\n\r\n  /**\r\n   * Capitalizes a string value.\r\n   *\r\n   * @private\r\n   * @param {string} string The string to capitalize.\r\n   * @returns {string} The capitalized string.\r\n   */\r\n  function capitalize(string) {\r\n    string = String(string);\r\n    return string.charAt(0).toUpperCase() + string.slice(1);\r\n  }\r\n\r\n  /**\r\n   * A utility function to clean up the OS name.\r\n   *\r\n   * @private\r\n   * @param {string} os The OS name to clean up.\r\n   * @param {string} [pattern] A `RegExp` pattern matching the OS name.\r\n   * @param {string} [label] A label for the OS.\r\n   */\r\n  function cleanupOS(os, pattern, label) {\r\n    // Platform tokens are defined at:\r\n    // http://msdn.microsoft.com/en-us/library/ms537503(VS.85).aspx\r\n    // http://web.archive.org/web/20081122053950/http://msdn.microsoft.com/en-us/library/ms537503(VS.85).aspx\r\n    var data = {\r\n      '10.0': '10',\r\n      '6.4':  '10 Technical Preview',\r\n      '6.3':  '8.1',\r\n      '6.2':  '8',\r\n      '6.1':  'Server 2008 R2 / 7',\r\n      '6.0':  'Server 2008 / Vista',\r\n      '5.2':  'Server 2003 / XP 64-bit',\r\n      '5.1':  'XP',\r\n      '5.01': '2000 SP1',\r\n      '5.0':  '2000',\r\n      '4.0':  'NT',\r\n      '4.90': 'ME'\r\n    };\r\n    // Detect Windows version from platform tokens.\r\n    if (pattern && label && /^Win/i.test(os) && !/^Windows Phone /i.test(os) &&\r\n        (data = data[/[\\d.]+$/.exec(os)])) {\r\n      os = 'Windows ' + data;\r\n    }\r\n    // Correct character case and cleanup string.\r\n    os = String(os);\r\n\r\n    if (pattern && label) {\r\n      os = os.replace(RegExp(pattern, 'i'), label);\r\n    }\r\n\r\n    os = format(\r\n      os.replace(/ ce$/i, ' CE')\r\n        .replace(/\\bhpw/i, 'web')\r\n        .replace(/\\bMacintosh\\b/, 'Mac OS')\r\n        .replace(/_PowerPC\\b/i, ' OS')\r\n        .replace(/\\b(OS X) [^ \\d]+/i, '$1')\r\n        .replace(/\\bMac (OS X)\\b/, '$1')\r\n        .replace(/\\/(\\d)/, ' $1')\r\n        .replace(/_/g, '.')\r\n        .replace(/(?: BePC|[ .]*fc[ \\d.]+)$/i, '')\r\n        .replace(/\\bx86\\.64\\b/gi, 'x86_64')\r\n        .replace(/\\b(Windows Phone) OS\\b/, '$1')\r\n        .replace(/\\b(Chrome OS \\w+) [\\d.]+\\b/, '$1')\r\n        .split(' on ')[0]\r\n    );\r\n\r\n    return os;\r\n  }\r\n\r\n  /**\r\n   * An iteration utility for arrays and objects.\r\n   *\r\n   * @private\r\n   * @param {Array|Object} object The object to iterate over.\r\n   * @param {Function} callback The function called per iteration.\r\n   */\r\n  function each(object, callback) {\r\n    var index = -1,\r\n        length = object ? object.length : 0;\r\n\r\n    if (typeof length == 'number' && length > -1 && length <= maxSafeInteger) {\r\n      while (++index < length) {\r\n        callback(object[index], index, object);\r\n      }\r\n    } else {\r\n      forOwn(object, callback);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Trim and conditionally capitalize string values.\r\n   *\r\n   * @private\r\n   * @param {string} string The string to format.\r\n   * @returns {string} The formatted string.\r\n   */\r\n  function format(string) {\r\n    string = trim(string);\r\n    return /^(?:webOS|i(?:OS|P))/.test(string)\r\n      ? string\r\n      : capitalize(string);\r\n  }\r\n\r\n  /**\r\n   * Iterates over an object's own properties, executing the `callback` for each.\r\n   *\r\n   * @private\r\n   * @param {Object} object The object to iterate over.\r\n   * @param {Function} callback The function executed per own property.\r\n   */\r\n  function forOwn(object, callback) {\r\n    for (var key in object) {\r\n      if (hasOwnProperty.call(object, key)) {\r\n        callback(object[key], key, object);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Gets the internal `[[Class]]` of a value.\r\n   *\r\n   * @private\r\n   * @param {*} value The value.\r\n   * @returns {string} The `[[Class]]`.\r\n   */\r\n  function getClassOf(value) {\r\n    return value == null\r\n      ? capitalize(value)\r\n      : toString.call(value).slice(8, -1);\r\n  }\r\n\r\n  /**\r\n   * Host objects can return type values that are different from their actual\r\n   * data type. The objects we are concerned with usually return non-primitive\r\n   * types of \"object\", \"function\", or \"unknown\".\r\n   *\r\n   * @private\r\n   * @param {*} object The owner of the property.\r\n   * @param {string} property The property to check.\r\n   * @returns {boolean} Returns `true` if the property value is a non-primitive, else `false`.\r\n   */\r\n  function isHostType(object, property) {\r\n    var type = object != null ? typeof object[property] : 'number';\r\n    return !/^(?:boolean|number|string|undefined)$/.test(type) &&\r\n      (type == 'object' ? !!object[property] : true);\r\n  }\r\n\r\n  /**\r\n   * Prepares a string for use in a `RegExp` by making hyphens and spaces optional.\r\n   *\r\n   * @private\r\n   * @param {string} string The string to qualify.\r\n   * @returns {string} The qualified string.\r\n   */\r\n  function qualify(string) {\r\n    return String(string).replace(/([ -])(?!$)/g, '$1?');\r\n  }\r\n\r\n  /**\r\n   * A bare-bones `Array#reduce` like utility function.\r\n   *\r\n   * @private\r\n   * @param {Array} array The array to iterate over.\r\n   * @param {Function} callback The function called per iteration.\r\n   * @returns {*} The accumulated result.\r\n   */\r\n  function reduce(array, callback) {\r\n    var accumulator = null;\r\n    each(array, function(value, index) {\r\n      accumulator = callback(accumulator, value, index, array);\r\n    });\r\n    return accumulator;\r\n  }\r\n\r\n  /**\r\n   * Removes leading and trailing whitespace from a string.\r\n   *\r\n   * @private\r\n   * @param {string} string The string to trim.\r\n   * @returns {string} The trimmed string.\r\n   */\r\n  function trim(string) {\r\n    return String(string).replace(/^ +| +$/g, '');\r\n  }\r\n\r\n  /*--------------------------------------------------------------------------*/\r\n\r\n  /**\r\n   * Creates a new platform object.\r\n   *\r\n   * @memberOf platform\r\n   * @param {Object|string} [ua=navigator.userAgent] The user agent string or\r\n   *  context object.\r\n   * @returns {Object} A platform object.\r\n   */\r\n  function parse(ua) {\r\n\r\n    /** The environment context object. */\r\n    var context = root;\r\n\r\n    /** Used to flag when a custom context is provided. */\r\n    var isCustomContext = ua && typeof ua == 'object' && getClassOf(ua) != 'String';\r\n\r\n    // Juggle arguments.\r\n    if (isCustomContext) {\r\n      context = ua;\r\n      ua = null;\r\n    }\r\n\r\n    /** Browser navigator object. */\r\n    var nav = context.navigator || {};\r\n\r\n    /** Browser user agent string. */\r\n    var userAgent = nav.userAgent || '';\r\n\r\n    ua || (ua = userAgent);\r\n\r\n    /** Used to flag when `thisBinding` is the [ModuleScope]. */\r\n    var isModuleScope = isCustomContext || thisBinding == oldRoot;\r\n\r\n    /** Used to detect if browser is like Chrome. */\r\n    var likeChrome = isCustomContext\r\n      ? !!nav.likeChrome\r\n      : /\\bChrome\\b/.test(ua) && !/internal|\\n/i.test(toString.toString());\r\n\r\n    /** Internal `[[Class]]` value shortcuts. */\r\n    var objectClass = 'Object',\r\n        airRuntimeClass = isCustomContext ? objectClass : 'ScriptBridgingProxyObject',\r\n        enviroClass = isCustomContext ? objectClass : 'Environment',\r\n        javaClass = (isCustomContext && context.java) ? 'JavaPackage' : getClassOf(context.java),\r\n        phantomClass = isCustomContext ? objectClass : 'RuntimeObject';\r\n\r\n    /** Detect Java environments. */\r\n    var java = /\\bJava/.test(javaClass) && context.java;\r\n\r\n    /** Detect Rhino. */\r\n    var rhino = java && getClassOf(context.environment) == enviroClass;\r\n\r\n    /** A character to represent alpha. */\r\n    var alpha = java ? 'a' : '\\u03b1';\r\n\r\n    /** A character to represent beta. */\r\n    var beta = java ? 'b' : '\\u03b2';\r\n\r\n    /** Browser document object. */\r\n    var doc = context.document || {};\r\n\r\n    /**\r\n     * Detect Opera browser (Presto-based).\r\n     * http://www.howtocreate.co.uk/operaStuff/operaObject.html\r\n     * http://dev.opera.com/articles/view/opera-mini-web-content-authoring-guidelines/#operamini\r\n     */\r\n    var opera = context.operamini || context.opera;\r\n\r\n    /** Opera `[[Class]]`. */\r\n    var operaClass = reOpera.test(operaClass = (isCustomContext && opera) ? opera['[[Class]]'] : getClassOf(opera))\r\n      ? operaClass\r\n      : (opera = null);\r\n\r\n    /*------------------------------------------------------------------------*/\r\n\r\n    /** Temporary variable used over the script's lifetime. */\r\n    var data;\r\n\r\n    /** The CPU architecture. */\r\n    var arch = ua;\r\n\r\n    /** Platform description array. */\r\n    var description = [];\r\n\r\n    /** Platform alpha/beta indicator. */\r\n    var prerelease = null;\r\n\r\n    /** A flag to indicate that environment features should be used to resolve the platform. */\r\n    var useFeatures = ua == userAgent;\r\n\r\n    /** The browser/environment version. */\r\n    var version = useFeatures && opera && typeof opera.version == 'function' && opera.version();\r\n\r\n    /** A flag to indicate if the OS ends with \"/ Version\" */\r\n    var isSpecialCasedOS;\r\n\r\n    /* Detectable layout engines (order is important). */\r\n    var layout = getLayout([\r\n      { 'label': 'EdgeHTML', 'pattern': 'Edge' },\r\n      'Trident',\r\n      { 'label': 'WebKit', 'pattern': 'AppleWebKit' },\r\n      'iCab',\r\n      'Presto',\r\n      'NetFront',\r\n      'Tasman',\r\n      'KHTML',\r\n      'Gecko'\r\n    ]);\r\n\r\n    /* Detectable browser names (order is important). */\r\n    var name = getName([\r\n      'Adobe AIR',\r\n      'Arora',\r\n      'Avant Browser',\r\n      'Breach',\r\n      'Camino',\r\n      'Epiphany',\r\n      'Fennec',\r\n      'Flock',\r\n      'Galeon',\r\n      'GreenBrowser',\r\n      'iCab',\r\n      'Iceweasel',\r\n      'K-Meleon',\r\n      'Konqueror',\r\n      'Lunascape',\r\n      'Maxthon',\r\n      { 'label': 'Microsoft Edge', 'pattern': 'Edge' },\r\n      'Midori',\r\n      'Nook Browser',\r\n      'PaleMoon',\r\n      'PhantomJS',\r\n      'Raven',\r\n      'Rekonq',\r\n      'RockMelt',\r\n      'SeaMonkey',\r\n      { 'label': 'Silk', 'pattern': '(?:Cloud9|Silk-Accelerated)' },\r\n      'Sleipnir',\r\n      'SlimBrowser',\r\n      { 'label': 'SRWare Iron', 'pattern': 'Iron' },\r\n      'Sunrise',\r\n      'Swiftfox',\r\n      'WebPositive',\r\n      'Opera Mini',\r\n      { 'label': 'Opera Mini', 'pattern': 'OPiOS' },\r\n      'Opera',\r\n      { 'label': 'Opera', 'pattern': 'OPR' },\r\n      'Chrome',\r\n      { 'label': 'Chrome Mobile', 'pattern': '(?:CriOS|CrMo)' },\r\n      { 'label': 'Firefox', 'pattern': '(?:Firefox|Minefield)' },\r\n      { 'label': 'Firefox for iOS', 'pattern': 'FxiOS' },\r\n      { 'label': 'IE', 'pattern': 'IEMobile' },\r\n      { 'label': 'IE', 'pattern': 'MSIE' },\r\n      'Safari'\r\n    ]);\r\n\r\n    /* Detectable products (order is important). */\r\n    var product = getProduct([\r\n      { 'label': 'BlackBerry', 'pattern': 'BB10' },\r\n      'BlackBerry',\r\n      { 'label': 'Galaxy S', 'pattern': 'GT-I9000' },\r\n      { 'label': 'Galaxy S2', 'pattern': 'GT-I9100' },\r\n      { 'label': 'Galaxy S3', 'pattern': 'GT-I9300' },\r\n      { 'label': 'Galaxy S4', 'pattern': 'GT-I9500' },\r\n      'Google TV',\r\n      'Lumia',\r\n      'iPad',\r\n      'iPod',\r\n      'iPhone',\r\n      'Kindle',\r\n      { 'label': 'Kindle Fire', 'pattern': '(?:Cloud9|Silk-Accelerated)' },\r\n      'Nexus',\r\n      'Nook',\r\n      'PlayBook',\r\n      'PlayStation 3',\r\n      'PlayStation 4',\r\n      'PlayStation Vita',\r\n      'TouchPad',\r\n      'Transformer',\r\n      { 'label': 'Wii U', 'pattern': 'WiiU' },\r\n      'Wii',\r\n      'Xbox One',\r\n      { 'label': 'Xbox 360', 'pattern': 'Xbox' },\r\n      'Xoom'\r\n    ]);\r\n\r\n    /* Detectable manufacturers. */\r\n    var manufacturer = getManufacturer({\r\n      'Apple': { 'iPad': 1, 'iPhone': 1, 'iPod': 1 },\r\n      'Archos': {},\r\n      'Amazon': { 'Kindle': 1, 'Kindle Fire': 1 },\r\n      'Asus': { 'Transformer': 1 },\r\n      'Barnes & Noble': { 'Nook': 1 },\r\n      'BlackBerry': { 'PlayBook': 1 },\r\n      'Google': { 'Google TV': 1, 'Nexus': 1 },\r\n      'HP': { 'TouchPad': 1 },\r\n      'HTC': {},\r\n      'LG': {},\r\n      'Microsoft': { 'Xbox': 1, 'Xbox One': 1 },\r\n      'Motorola': { 'Xoom': 1 },\r\n      'Nintendo': { 'Wii U': 1,  'Wii': 1 },\r\n      'Nokia': { 'Lumia': 1 },\r\n      'Samsung': { 'Galaxy S': 1, 'Galaxy S2': 1, 'Galaxy S3': 1, 'Galaxy S4': 1 },\r\n      'Sony': { 'PlayStation 4': 1, 'PlayStation 3': 1, 'PlayStation Vita': 1 }\r\n    });\r\n\r\n    /* Detectable operating systems (order is important). */\r\n    var os = getOS([\r\n      'Windows Phone',\r\n      'Android',\r\n      'CentOS',\r\n      { 'label': 'Chrome OS', 'pattern': 'CrOS' },\r\n      'Debian',\r\n      'Fedora',\r\n      'FreeBSD',\r\n      'Gentoo',\r\n      'Haiku',\r\n      'Kubuntu',\r\n      'Linux Mint',\r\n      'OpenBSD',\r\n      'Red Hat',\r\n      'SuSE',\r\n      'Ubuntu',\r\n      'Xubuntu',\r\n      'Cygwin',\r\n      'Symbian OS',\r\n      'hpwOS',\r\n      'webOS ',\r\n      'webOS',\r\n      'Tablet OS',\r\n      'Linux',\r\n      'Mac OS X',\r\n      'Macintosh',\r\n      'Mac',\r\n      'Windows 98;',\r\n      'Windows '\r\n    ]);\r\n\r\n    /*------------------------------------------------------------------------*/\r\n\r\n    /**\r\n     * Picks the layout engine from an array of guesses.\r\n     *\r\n     * @private\r\n     * @param {Array} guesses An array of guesses.\r\n     * @returns {null|string} The detected layout engine.\r\n     */\r\n    function getLayout(guesses) {\r\n      return reduce(guesses, function(result, guess) {\r\n        return result || RegExp('\\\\b' + (\r\n          guess.pattern || qualify(guess)\r\n        ) + '\\\\b', 'i').exec(ua) && (guess.label || guess);\r\n      });\r\n    }\r\n\r\n    /**\r\n     * Picks the manufacturer from an array of guesses.\r\n     *\r\n     * @private\r\n     * @param {Array} guesses An object of guesses.\r\n     * @returns {null|string} The detected manufacturer.\r\n     */\r\n    function getManufacturer(guesses) {\r\n      return reduce(guesses, function(result, value, key) {\r\n        // Lookup the manufacturer by product or scan the UA for the manufacturer.\r\n        return result || (\r\n          value[product] ||\r\n          value[/^[a-z]+(?: +[a-z]+\\b)*/i.exec(product)] ||\r\n          RegExp('\\\\b' + qualify(key) + '(?:\\\\b|\\\\w*\\\\d)', 'i').exec(ua)\r\n        ) && key;\r\n      });\r\n    }\r\n\r\n    /**\r\n     * Picks the browser name from an array of guesses.\r\n     *\r\n     * @private\r\n     * @param {Array} guesses An array of guesses.\r\n     * @returns {null|string} The detected browser name.\r\n     */\r\n    function getName(guesses) {\r\n      return reduce(guesses, function(result, guess) {\r\n        return result || RegExp('\\\\b' + (\r\n          guess.pattern || qualify(guess)\r\n        ) + '\\\\b', 'i').exec(ua) && (guess.label || guess);\r\n      });\r\n    }\r\n\r\n    /**\r\n     * Picks the OS name from an array of guesses.\r\n     *\r\n     * @private\r\n     * @param {Array} guesses An array of guesses.\r\n     * @returns {null|string} The detected OS name.\r\n     */\r\n    function getOS(guesses) {\r\n      return reduce(guesses, function(result, guess) {\r\n        var pattern = guess.pattern || qualify(guess);\r\n        if (!result && (result =\r\n              RegExp('\\\\b' + pattern + '(?:/[\\\\d.]+|[ \\\\w.]*)', 'i').exec(ua)\r\n            )) {\r\n          result = cleanupOS(result, pattern, guess.label || guess);\r\n        }\r\n        return result;\r\n      });\r\n    }\r\n\r\n    /**\r\n     * Picks the product name from an array of guesses.\r\n     *\r\n     * @private\r\n     * @param {Array} guesses An array of guesses.\r\n     * @returns {null|string} The detected product name.\r\n     */\r\n    function getProduct(guesses) {\r\n      return reduce(guesses, function(result, guess) {\r\n        var pattern = guess.pattern || qualify(guess);\r\n        if (!result && (result =\r\n              RegExp('\\\\b' + pattern + ' *\\\\d+[.\\\\w_]*', 'i').exec(ua) ||\r\n              RegExp('\\\\b' + pattern + '(?:; *(?:[a-z]+[_-])?[a-z]+\\\\d+|[^ ();-]*)', 'i').exec(ua)\r\n            )) {\r\n          // Split by forward slash and append product version if needed.\r\n          if ((result = String((guess.label && !RegExp(pattern, 'i').test(guess.label)) ? guess.label : result).split('/'))[1] && !/[\\d.]+/.test(result[0])) {\r\n            result[0] += ' ' + result[1];\r\n          }\r\n          // Correct character case and cleanup string.\r\n          guess = guess.label || guess;\r\n          result = format(result[0]\r\n            .replace(RegExp(pattern, 'i'), guess)\r\n            .replace(RegExp('; *(?:' + guess + '[_-])?', 'i'), ' ')\r\n            .replace(RegExp('(' + guess + ')[-_.]?(\\\\w)', 'i'), '$1 $2'));\r\n        }\r\n        return result;\r\n      });\r\n    }\r\n\r\n    /**\r\n     * Resolves the version using an array of UA patterns.\r\n     *\r\n     * @private\r\n     * @param {Array} patterns An array of UA patterns.\r\n     * @returns {null|string} The detected version.\r\n     */\r\n    function getVersion(patterns) {\r\n      return reduce(patterns, function(result, pattern) {\r\n        return result || (RegExp(pattern +\r\n          '(?:-[\\\\d.]+/|(?: for [\\\\w-]+)?[ /-])([\\\\d.]+[^ ();/_-]*)', 'i').exec(ua) || 0)[1] || null;\r\n      });\r\n    }\r\n\r\n    /**\r\n     * Returns `platform.description` when the platform object is coerced to a string.\r\n     *\r\n     * @name toString\r\n     * @memberOf platform\r\n     * @returns {string} Returns `platform.description` if available, else an empty string.\r\n     */\r\n    function toStringPlatform() {\r\n      return this.description || '';\r\n    }\r\n\r\n    /*------------------------------------------------------------------------*/\r\n\r\n    // Convert layout to an array so we can add extra details.\r\n    layout && (layout = [layout]);\r\n\r\n    // Detect product names that contain their manufacturer's name.\r\n    if (manufacturer && !product) {\r\n      product = getProduct([manufacturer]);\r\n    }\r\n    // Clean up Google TV.\r\n    if ((data = /\\bGoogle TV\\b/.exec(product))) {\r\n      product = data[0];\r\n    }\r\n    // Detect simulators.\r\n    if (/\\bSimulator\\b/i.test(ua)) {\r\n      product = (product ? product + ' ' : '') + 'Simulator';\r\n    }\r\n    // Detect Opera Mini 8+ running in Turbo/Uncompressed mode on iOS.\r\n    if (name == 'Opera Mini' && /\\bOPiOS\\b/.test(ua)) {\r\n      description.push('running in Turbo/Uncompressed mode');\r\n    }\r\n    // Detect IE Mobile 11.\r\n    if (name == 'IE' && /\\blike iPhone OS\\b/.test(ua)) {\r\n      data = parse(ua.replace(/like iPhone OS/, ''));\r\n      manufacturer = data.manufacturer;\r\n      product = data.product;\r\n    }\r\n    // Detect iOS.\r\n    else if (/^iP/.test(product)) {\r\n      name || (name = 'Safari');\r\n      os = 'iOS' + ((data = / OS ([\\d_]+)/i.exec(ua))\r\n        ? ' ' + data[1].replace(/_/g, '.')\r\n        : '');\r\n    }\r\n    // Detect Kubuntu.\r\n    else if (name == 'Konqueror' && !/buntu/i.test(os)) {\r\n      os = 'Kubuntu';\r\n    }\r\n    // Detect Android browsers.\r\n    else if ((manufacturer && manufacturer != 'Google' &&\r\n        ((/Chrome/.test(name) && !/\\bMobile Safari\\b/i.test(ua)) || /\\bVita\\b/.test(product))) ||\r\n        (/\\bAndroid\\b/.test(os) && /^Chrome/.test(name) && /\\bVersion\\//i.test(ua))) {\r\n      name = 'Android Browser';\r\n      os = /\\bAndroid\\b/.test(os) ? os : 'Android';\r\n    }\r\n    // Detect Silk desktop/accelerated modes.\r\n    else if (name == 'Silk') {\r\n      if (!/\\bMobi/i.test(ua)) {\r\n        os = 'Android';\r\n        description.unshift('desktop mode');\r\n      }\r\n      if (/Accelerated *= *true/i.test(ua)) {\r\n        description.unshift('accelerated');\r\n      }\r\n    }\r\n    // Detect PaleMoon identifying as Firefox.\r\n    else if (name == 'PaleMoon' && (data = /\\bFirefox\\/([\\d.]+)\\b/.exec(ua))) {\r\n      description.push('identifying as Firefox ' + data[1]);\r\n    }\r\n    // Detect Firefox OS and products running Firefox.\r\n    else if (name == 'Firefox' && (data = /\\b(Mobile|Tablet|TV)\\b/i.exec(ua))) {\r\n      os || (os = 'Firefox OS');\r\n      product || (product = data[1]);\r\n    }\r\n    // Detect false positives for Firefox/Safari.\r\n    else if (!name || (data = !/\\bMinefield\\b/i.test(ua) && /\\b(?:Firefox|Safari)\\b/.exec(name))) {\r\n      // Escape the `/` for Firefox 1.\r\n      if (name && !product && /[\\/,]|^[^(]+?\\)/.test(ua.slice(ua.indexOf(data + '/') + 8))) {\r\n        // Clear name of false positives.\r\n        name = null;\r\n      }\r\n      // Reassign a generic name.\r\n      if ((data = product || manufacturer || os) &&\r\n          (product || manufacturer || /\\b(?:Android|Symbian OS|Tablet OS|webOS)\\b/.test(os))) {\r\n        name = /[a-z]+(?: Hat)?/i.exec(/\\bAndroid\\b/.test(os) ? os : data) + ' Browser';\r\n      }\r\n    }\r\n    // Detect non-Opera (Presto-based) versions (order is important).\r\n    if (!version) {\r\n      version = getVersion([\r\n        '(?:Cloud9|CriOS|CrMo|Edge|FxiOS|IEMobile|Iron|Opera ?Mini|OPiOS|OPR|Raven|Silk(?!/[\\\\d.]+$))',\r\n        'Version',\r\n        qualify(name),\r\n        '(?:Firefox|Minefield|NetFront)'\r\n      ]);\r\n    }\r\n    // Detect stubborn layout engines.\r\n    if ((data =\r\n          layout == 'iCab' && parseFloat(version) > 3 && 'WebKit' ||\r\n          /\\bOpera\\b/.test(name) && (/\\bOPR\\b/.test(ua) ? 'Blink' : 'Presto') ||\r\n          /\\b(?:Midori|Nook|Safari)\\b/i.test(ua) && !/^(?:Trident|EdgeHTML)$/.test(layout) && 'WebKit' ||\r\n          !layout && /\\bMSIE\\b/i.test(ua) && (os == 'Mac OS' ? 'Tasman' : 'Trident') ||\r\n          layout == 'WebKit' && /\\bPlayStation\\b(?! Vita\\b)/i.test(name) && 'NetFront'\r\n        )) {\r\n      layout = [data];\r\n    }\r\n    // Detect Windows Phone 7 desktop mode.\r\n    if (name == 'IE' && (data = (/; *(?:XBLWP|ZuneWP)(\\d+)/i.exec(ua) || 0)[1])) {\r\n      name += ' Mobile';\r\n      os = 'Windows Phone ' + (/\\+$/.test(data) ? data : data + '.x');\r\n      description.unshift('desktop mode');\r\n    }\r\n    // Detect Windows Phone 8.x desktop mode.\r\n    else if (/\\bWPDesktop\\b/i.test(ua)) {\r\n      name = 'IE Mobile';\r\n      os = 'Windows Phone 8.x';\r\n      description.unshift('desktop mode');\r\n      version || (version = (/\\brv:([\\d.]+)/.exec(ua) || 0)[1]);\r\n    }\r\n    // Detect IE 11.\r\n    else if (name != 'IE' && layout == 'Trident' && (data = /\\brv:([\\d.]+)/.exec(ua))) {\r\n      if (name) {\r\n        description.push('identifying as ' + name + (version ? ' ' + version : ''));\r\n      }\r\n      name = 'IE';\r\n      version = data[1];\r\n    }\r\n    // Leverage environment features.\r\n    if (useFeatures) {\r\n      // Detect server-side environments.\r\n      // Rhino has a global function while others have a global object.\r\n      if (isHostType(context, 'global')) {\r\n        if (java) {\r\n          data = java.lang.System;\r\n          arch = data.getProperty('os.arch');\r\n          os = os || data.getProperty('os.name') + ' ' + data.getProperty('os.version');\r\n        }\r\n        if (isModuleScope && isHostType(context, 'system') && (data = [context.system])[0]) {\r\n          os || (os = data[0].os || null);\r\n          try {\r\n            data[1] = context.require('ringo/engine').version;\r\n            version = data[1].join('.');\r\n            name = 'RingoJS';\r\n          } catch(e) {\r\n            if (data[0].global.system == context.system) {\r\n              name = 'Narwhal';\r\n            }\r\n          }\r\n        }\r\n        else if (\r\n          typeof context.process == 'object' && !context.process.browser &&\r\n          (data = context.process)\r\n        ) {\r\n          name = 'Node.js';\r\n          arch = data.arch;\r\n          os = data.platform;\r\n          version = /[\\d.]+/.exec(data.version)[0];\r\n        }\r\n        else if (rhino) {\r\n          name = 'Rhino';\r\n        }\r\n      }\r\n      // Detect Adobe AIR.\r\n      else if (getClassOf((data = context.runtime)) == airRuntimeClass) {\r\n        name = 'Adobe AIR';\r\n        os = data.flash.system.Capabilities.os;\r\n      }\r\n      // Detect PhantomJS.\r\n      else if (getClassOf((data = context.phantom)) == phantomClass) {\r\n        name = 'PhantomJS';\r\n        version = (data = data.version || null) && (data.major + '.' + data.minor + '.' + data.patch);\r\n      }\r\n      // Detect IE compatibility modes.\r\n      else if (typeof doc.documentMode == 'number' && (data = /\\bTrident\\/(\\d+)/i.exec(ua))) {\r\n        // We're in compatibility mode when the Trident version + 4 doesn't\r\n        // equal the document mode.\r\n        version = [version, doc.documentMode];\r\n        if ((data = +data[1] + 4) != version[1]) {\r\n          description.push('IE ' + version[1] + ' mode');\r\n          layout && (layout[1] = '');\r\n          version[1] = data;\r\n        }\r\n        version = name == 'IE' ? String(version[1].toFixed(1)) : version[0];\r\n      }\r\n      os = os && format(os);\r\n    }\r\n    // Detect prerelease phases.\r\n    if (version && (data =\r\n          /(?:[ab]|dp|pre|[ab]\\d+pre)(?:\\d+\\+?)?$/i.exec(version) ||\r\n          /(?:alpha|beta)(?: ?\\d)?/i.exec(ua + ';' + (useFeatures && nav.appMinorVersion)) ||\r\n          /\\bMinefield\\b/i.test(ua) && 'a'\r\n        )) {\r\n      prerelease = /b/i.test(data) ? 'beta' : 'alpha';\r\n      version = version.replace(RegExp(data + '\\\\+?$'), '') +\r\n        (prerelease == 'beta' ? beta : alpha) + (/\\d+\\+?/.exec(data) || '');\r\n    }\r\n    // Detect Firefox Mobile.\r\n    if (name == 'Fennec' || name == 'Firefox' && /\\b(?:Android|Firefox OS)\\b/.test(os)) {\r\n      name = 'Firefox Mobile';\r\n    }\r\n    // Obscure Maxthon's unreliable version.\r\n    else if (name == 'Maxthon' && version) {\r\n      version = version.replace(/\\.[\\d.]+/, '.x');\r\n    }\r\n    // Detect Xbox 360 and Xbox One.\r\n    else if (/\\bXbox\\b/i.test(product)) {\r\n      os = null;\r\n      if (product == 'Xbox 360' && /\\bIEMobile\\b/.test(ua)) {\r\n        description.unshift('mobile mode');\r\n      }\r\n    }\r\n    // Add mobile postfix.\r\n    else if ((/^(?:Chrome|IE|Opera)$/.test(name) || name && !product && !/Browser|Mobi/.test(name)) &&\r\n        (os == 'Windows CE' || /Mobi/i.test(ua))) {\r\n      name += ' Mobile';\r\n    }\r\n    // Detect IE platform preview.\r\n    else if (name == 'IE' && useFeatures && context.external === null) {\r\n      description.unshift('platform preview');\r\n    }\r\n    // Detect BlackBerry OS version.\r\n    // http://docs.blackberry.com/en/developers/deliverables/18169/HTTP_headers_sent_by_BB_Browser_1234911_11.jsp\r\n    else if ((/\\bBlackBerry\\b/.test(product) || /\\bBB10\\b/.test(ua)) && (data =\r\n          (RegExp(product.replace(/ +/g, ' *') + '/([.\\\\d]+)', 'i').exec(ua) || 0)[1] ||\r\n          version\r\n        )) {\r\n      data = [data, /BB10/.test(ua)];\r\n      os = (data[1] ? (product = null, manufacturer = 'BlackBerry') : 'Device Software') + ' ' + data[0];\r\n      version = null;\r\n    }\r\n    // Detect Opera identifying/masking itself as another browser.\r\n    // http://www.opera.com/support/kb/view/843/\r\n    else if (this != forOwn && product != 'Wii' && (\r\n          (useFeatures && opera) ||\r\n          (/Opera/.test(name) && /\\b(?:MSIE|Firefox)\\b/i.test(ua)) ||\r\n          (name == 'Firefox' && /\\bOS X (?:\\d+\\.){2,}/.test(os)) ||\r\n          (name == 'IE' && (\r\n            (os && !/^Win/.test(os) && version > 5.5) ||\r\n            /\\bWindows XP\\b/.test(os) && version > 8 ||\r\n            version == 8 && !/\\bTrident\\b/.test(ua)\r\n          ))\r\n        ) && !reOpera.test((data = parse.call(forOwn, ua.replace(reOpera, '') + ';'))) && data.name) {\r\n      // When \"identifying\", the UA contains both Opera and the other browser's name.\r\n      data = 'ing as ' + data.name + ((data = data.version) ? ' ' + data : '');\r\n      if (reOpera.test(name)) {\r\n        if (/\\bIE\\b/.test(data) && os == 'Mac OS') {\r\n          os = null;\r\n        }\r\n        data = 'identify' + data;\r\n      }\r\n      // When \"masking\", the UA contains only the other browser's name.\r\n      else {\r\n        data = 'mask' + data;\r\n        if (operaClass) {\r\n          name = format(operaClass.replace(/([a-z])([A-Z])/g, '$1 $2'));\r\n        } else {\r\n          name = 'Opera';\r\n        }\r\n        if (/\\bIE\\b/.test(data)) {\r\n          os = null;\r\n        }\r\n        if (!useFeatures) {\r\n          version = null;\r\n        }\r\n      }\r\n      layout = ['Presto'];\r\n      description.push(data);\r\n    }\r\n    // Detect WebKit Nightly and approximate Chrome/Safari versions.\r\n    if ((data = (/\\bAppleWebKit\\/([\\d.]+\\+?)/i.exec(ua) || 0)[1])) {\r\n      // Correct build number for numeric comparison.\r\n      // (e.g. \"532.5\" becomes \"532.05\")\r\n      data = [parseFloat(data.replace(/\\.(\\d)$/, '.0$1')), data];\r\n      // Nightly builds are postfixed with a \"+\".\r\n      if (name == 'Safari' && data[1].slice(-1) == '+') {\r\n        name = 'WebKit Nightly';\r\n        prerelease = 'alpha';\r\n        version = data[1].slice(0, -1);\r\n      }\r\n      // Clear incorrect browser versions.\r\n      else if (version == data[1] ||\r\n          version == (data[2] = (/\\bSafari\\/([\\d.]+\\+?)/i.exec(ua) || 0)[1])) {\r\n        version = null;\r\n      }\r\n      // Use the full Chrome version when available.\r\n      data[1] = (/\\bChrome\\/([\\d.]+)/i.exec(ua) || 0)[1];\r\n      // Detect Blink layout engine.\r\n      if (data[0] == 537.36 && data[2] == 537.36 && parseFloat(data[1]) >= 28 && layout == 'WebKit') {\r\n        layout = ['Blink'];\r\n      }\r\n      // Detect JavaScriptCore.\r\n      // http://stackoverflow.com/questions/6768474/how-can-i-detect-which-javascript-engine-v8-or-jsc-is-used-at-runtime-in-androi\r\n      if (!useFeatures || (!likeChrome && !data[1])) {\r\n        layout && (layout[1] = 'like Safari');\r\n        data = (data = data[0], data < 400 ? 1 : data < 500 ? 2 : data < 526 ? 3 : data < 533 ? 4 : data < 534 ? '4+' : data < 535 ? 5 : data < 537 ? 6 : data < 538 ? 7 : data < 601 ? 8 : '8');\r\n      } else {\r\n        layout && (layout[1] = 'like Chrome');\r\n        data = data[1] || (data = data[0], data < 530 ? 1 : data < 532 ? 2 : data < 532.05 ? 3 : data < 533 ? 4 : data < 534.03 ? 5 : data < 534.07 ? 6 : data < 534.10 ? 7 : data < 534.13 ? 8 : data < 534.16 ? 9 : data < 534.24 ? 10 : data < 534.30 ? 11 : data < 535.01 ? 12 : data < 535.02 ? '13+' : data < 535.07 ? 15 : data < 535.11 ? 16 : data < 535.19 ? 17 : data < 536.05 ? 18 : data < 536.10 ? 19 : data < 537.01 ? 20 : data < 537.11 ? '21+' : data < 537.13 ? 23 : data < 537.18 ? 24 : data < 537.24 ? 25 : data < 537.36 ? 26 : layout != 'Blink' ? '27' : '28');\r\n      }\r\n      // Add the postfix of \".x\" or \"+\" for approximate versions.\r\n      layout && (layout[1] += ' ' + (data += typeof data == 'number' ? '.x' : /[.+]/.test(data) ? '' : '+'));\r\n      // Obscure version for some Safari 1-2 releases.\r\n      if (name == 'Safari' && (!version || parseInt(version) > 45)) {\r\n        version = data;\r\n      }\r\n    }\r\n    // Detect Opera desktop modes.\r\n    if (name == 'Opera' &&  (data = /\\bzbov|zvav$/.exec(os))) {\r\n      name += ' ';\r\n      description.unshift('desktop mode');\r\n      if (data == 'zvav') {\r\n        name += 'Mini';\r\n        version = null;\r\n      } else {\r\n        name += 'Mobile';\r\n      }\r\n      os = os.replace(RegExp(' *' + data + '$'), '');\r\n    }\r\n    // Detect Chrome desktop mode.\r\n    else if (name == 'Safari' && /\\bChrome\\b/.exec(layout && layout[1])) {\r\n      description.unshift('desktop mode');\r\n      name = 'Chrome Mobile';\r\n      version = null;\r\n\r\n      if (/\\bOS X\\b/.test(os)) {\r\n        manufacturer = 'Apple';\r\n        os = 'iOS 4.3+';\r\n      } else {\r\n        os = null;\r\n      }\r\n    }\r\n    // Strip incorrect OS versions.\r\n    if (version && version.indexOf((data = /[\\d.]+$/.exec(os))) == 0 &&\r\n        ua.indexOf('/' + data + '-') > -1) {\r\n      os = trim(os.replace(data, ''));\r\n    }\r\n    // Add layout engine.\r\n    if (layout && !/\\b(?:Avant|Nook)\\b/.test(name) && (\r\n        /Browser|Lunascape|Maxthon/.test(name) ||\r\n        name != 'Safari' && /^iOS/.test(os) && /\\bSafari\\b/.test(layout[1]) ||\r\n        /^(?:Adobe|Arora|Breach|Midori|Opera|Phantom|Rekonq|Rock|Sleipnir|Web)/.test(name) && layout[1])) {\r\n      // Don't add layout details to description if they are falsey.\r\n      (data = layout[layout.length - 1]) && description.push(data);\r\n    }\r\n    // Combine contextual information.\r\n    if (description.length) {\r\n      description = ['(' + description.join('; ') + ')'];\r\n    }\r\n    // Append manufacturer to description.\r\n    if (manufacturer && product && product.indexOf(manufacturer) < 0) {\r\n      description.push('on ' + manufacturer);\r\n    }\r\n    // Append product to description.\r\n    if (product) {\r\n      description.push((/^on /.test(description[description.length - 1]) ? '' : 'on ') + product);\r\n    }\r\n    // Parse the OS into an object.\r\n    if (os) {\r\n      data = / ([\\d.+]+)$/.exec(os);\r\n      isSpecialCasedOS = data && os.charAt(os.length - data[0].length - 1) == '/';\r\n      os = {\r\n        'architecture': 32,\r\n        'family': (data && !isSpecialCasedOS) ? os.replace(data[0], '') : os,\r\n        'version': data ? data[1] : null,\r\n        'toString': function() {\r\n          var version = this.version;\r\n          return this.family + ((version && !isSpecialCasedOS) ? ' ' + version : '') + (this.architecture == 64 ? ' 64-bit' : '');\r\n        }\r\n      };\r\n    }\r\n    // Add browser/OS architecture.\r\n    if ((data = /\\b(?:AMD|IA|Win|WOW|x86_|x)64\\b/i.exec(arch)) && !/\\bi686\\b/i.test(arch)) {\r\n      if (os) {\r\n        os.architecture = 64;\r\n        os.family = os.family.replace(RegExp(' *' + data), '');\r\n      }\r\n      if (\r\n          name && (/\\bWOW64\\b/i.test(ua) ||\r\n          (useFeatures && /\\w(?:86|32)$/.test(nav.cpuClass || nav.platform) && !/\\bWin64; x64\\b/i.test(ua)))\r\n      ) {\r\n        description.unshift('32-bit');\r\n      }\r\n    }\r\n    // Chrome 39 and above on OS X is always 64-bit.\r\n    else if (\r\n        os && /^OS X/.test(os.family) &&\r\n        name == 'Chrome' && parseFloat(version) >= 39\r\n    ) {\r\n      os.architecture = 64;\r\n    }\r\n\r\n    ua || (ua = null);\r\n\r\n    /*------------------------------------------------------------------------*/\r\n\r\n    /**\r\n     * The platform object.\r\n     *\r\n     * @name platform\r\n     * @type Object\r\n     */\r\n    var platform = {};\r\n\r\n    /**\r\n     * The platform description.\r\n     *\r\n     * @memberOf platform\r\n     * @type string|null\r\n     */\r\n    platform.description = ua;\r\n\r\n    /**\r\n     * The name of the browser's layout engine.\r\n     *\r\n     * @memberOf platform\r\n     * @type string|null\r\n     */\r\n    platform.layout = layout && layout[0];\r\n\r\n    /**\r\n     * The name of the product's manufacturer.\r\n     *\r\n     * @memberOf platform\r\n     * @type string|null\r\n     */\r\n    platform.manufacturer = manufacturer;\r\n\r\n    /**\r\n     * The name of the browser/environment.\r\n     *\r\n     * @memberOf platform\r\n     * @type string|null\r\n     */\r\n    platform.name = name;\r\n\r\n    /**\r\n     * The alpha/beta release indicator.\r\n     *\r\n     * @memberOf platform\r\n     * @type string|null\r\n     */\r\n    platform.prerelease = prerelease;\r\n\r\n    /**\r\n     * The name of the product hosting the browser.\r\n     *\r\n     * @memberOf platform\r\n     * @type string|null\r\n     */\r\n    platform.product = product;\r\n\r\n    /**\r\n     * The browser's user agent string.\r\n     *\r\n     * @memberOf platform\r\n     * @type string|null\r\n     */\r\n    platform.ua = ua;\r\n\r\n    /**\r\n     * The browser/environment version.\r\n     *\r\n     * @memberOf platform\r\n     * @type string|null\r\n     */\r\n    platform.version = name && version;\r\n\r\n    /**\r\n     * The name of the operating system.\r\n     *\r\n     * @memberOf platform\r\n     * @type Object\r\n     */\r\n    platform.os = os || {\r\n\r\n      /**\r\n       * The CPU architecture the OS is built for.\r\n       *\r\n       * @memberOf platform.os\r\n       * @type number|null\r\n       */\r\n      'architecture': null,\r\n\r\n      /**\r\n       * The family of the OS.\r\n       *\r\n       * Common values include:\r\n       * \"Windows\", \"Windows Server 2008 R2 / 7\", \"Windows Server 2008 / Vista\",\r\n       * \"Windows XP\", \"OS X\", \"Ubuntu\", \"Debian\", \"Fedora\", \"Red Hat\", \"SuSE\",\r\n       * \"Android\", \"iOS\" and \"Windows Phone\"\r\n       *\r\n       * @memberOf platform.os\r\n       * @type string|null\r\n       */\r\n      'family': null,\r\n\r\n      /**\r\n       * The version of the OS.\r\n       *\r\n       * @memberOf platform.os\r\n       * @type string|null\r\n       */\r\n      'version': null,\r\n\r\n      /**\r\n       * Returns the OS string.\r\n       *\r\n       * @memberOf platform.os\r\n       * @returns {string} The OS string.\r\n       */\r\n      'toString': function() { return 'null'; }\r\n    };\r\n\r\n    platform.parse = parse;\r\n    platform.toString = toStringPlatform;\r\n\r\n    if (platform.version) {\r\n      description.unshift(version);\r\n    }\r\n    if (platform.name) {\r\n      description.unshift(name);\r\n    }\r\n    if (os && name && !(os == String(os).split(' ')[0] && (os == name.split(' ')[0] || product))) {\r\n      description.push(product ? '(' + os + ')' : 'on ' + os);\r\n    }\r\n    if (description.length) {\r\n      platform.description = description.join(' ');\r\n    }\r\n    return platform;\r\n  }\r\n\r\n  /*--------------------------------------------------------------------------*/\r\n\r\n  // Export platform.\r\n  var platform = parse();\r\n\r\n  // Some AMD build optimizers, like r.js, check for condition patterns like the following:\r\n  if (true) {\r\n    // Expose platform on the global object to prevent errors when platform is\r\n    // loaded by a script tag in the presence of an AMD loader.\r\n    // See http://requirejs.org/docs/errors.html#mismatch for more details.\r\n    root.platform = platform;\r\n\r\n    // Define as an anonymous module so platform can be aliased through path mapping.\r\n    !(__WEBPACK_AMD_DEFINE_RESULT__ = function() {\r\n      return platform;\r\n    }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n  }\r\n  // Check for `exports` after `define` in case a build optimizer adds an `exports` object.\r\n  else if (freeExports && freeModule) {\r\n    // Export for CommonJS support.\r\n    forOwn(platform, function(value, key) {\r\n      freeExports[key] = value;\r\n    });\r\n  }\r\n  else {\r\n    // Export to the global object.\r\n    root.platform = platform;\r\n  }\r\n}.call(this));\r\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(17)(module), __webpack_require__(0)))\n\n/***/ },\n/* 29 */\n/***/ function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__.p + \"aa8cb5fbc710c7dded973a341ced2e66.js\";\n\n/***/ },\n/* 30 */\n/***/ function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global, setImmediate) {var __WEBPACK_AMD_DEFINE_RESULT__;/*! Native Promise Only\n    v0.8.1 (c) Kyle Simpson\n    MIT License: http://getify.mit-license.org\n*/\n\n(function UMD(name,context,definition){\n\t// special form of UMD for polyfilling across evironments\n\tcontext[name] = context[name] || definition();\n\tif (typeof module != \"undefined\" && module.exports) { module.exports = context[name]; }\n\telse if (true) { !(__WEBPACK_AMD_DEFINE_RESULT__ = function $AMD$(){ return context[name]; }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); }\n})(\"Promise\",typeof global != \"undefined\" ? global : this,function DEF(){\n\t/*jshint validthis:true */\n\t\"use strict\";\n\n\tvar builtInProp, cycle, scheduling_queue,\n\t\tToString = Object.prototype.toString,\n\t\ttimer = (typeof setImmediate != \"undefined\") ?\n\t\t\tfunction timer(fn) { return setImmediate(fn); } :\n\t\t\tsetTimeout\n\t;\n\n\t// dammit, IE8.\n\ttry {\n\t\tObject.defineProperty({},\"x\",{});\n\t\tbuiltInProp = function builtInProp(obj,name,val,config) {\n\t\t\treturn Object.defineProperty(obj,name,{\n\t\t\t\tvalue: val,\n\t\t\t\twritable: true,\n\t\t\t\tconfigurable: config !== false\n\t\t\t});\n\t\t};\n\t}\n\tcatch (err) {\n\t\tbuiltInProp = function builtInProp(obj,name,val) {\n\t\t\tobj[name] = val;\n\t\t\treturn obj;\n\t\t};\n\t}\n\n\t// Note: using a queue instead of array for efficiency\n\tscheduling_queue = (function Queue() {\n\t\tvar first, last, item;\n\n\t\tfunction Item(fn,self) {\n\t\t\tthis.fn = fn;\n\t\t\tthis.self = self;\n\t\t\tthis.next = void 0;\n\t\t}\n\n\t\treturn {\n\t\t\tadd: function add(fn,self) {\n\t\t\t\titem = new Item(fn,self);\n\t\t\t\tif (last) {\n\t\t\t\t\tlast.next = item;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tfirst = item;\n\t\t\t\t}\n\t\t\t\tlast = item;\n\t\t\t\titem = void 0;\n\t\t\t},\n\t\t\tdrain: function drain() {\n\t\t\t\tvar f = first;\n\t\t\t\tfirst = last = cycle = void 0;\n\n\t\t\t\twhile (f) {\n\t\t\t\t\tf.fn.call(f.self);\n\t\t\t\t\tf = f.next;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t})();\n\n\tfunction schedule(fn,self) {\n\t\tscheduling_queue.add(fn,self);\n\t\tif (!cycle) {\n\t\t\tcycle = timer(scheduling_queue.drain);\n\t\t}\n\t}\n\n\t// promise duck typing\n\tfunction isThenable(o) {\n\t\tvar _then, o_type = typeof o;\n\n\t\tif (o != null &&\n\t\t\t(\n\t\t\t\to_type == \"object\" || o_type == \"function\"\n\t\t\t)\n\t\t) {\n\t\t\t_then = o.then;\n\t\t}\n\t\treturn typeof _then == \"function\" ? _then : false;\n\t}\n\n\tfunction notify() {\n\t\tfor (var i=0; i<this.chain.length; i++) {\n\t\t\tnotifyIsolated(\n\t\t\t\tthis,\n\t\t\t\t(this.state === 1) ? this.chain[i].success : this.chain[i].failure,\n\t\t\t\tthis.chain[i]\n\t\t\t);\n\t\t}\n\t\tthis.chain.length = 0;\n\t}\n\n\t// NOTE: This is a separate function to isolate\n\t// the `try..catch` so that other code can be\n\t// optimized better\n\tfunction notifyIsolated(self,cb,chain) {\n\t\tvar ret, _then;\n\t\ttry {\n\t\t\tif (cb === false) {\n\t\t\t\tchain.reject(self.msg);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (cb === true) {\n\t\t\t\t\tret = self.msg;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tret = cb.call(void 0,self.msg);\n\t\t\t\t}\n\n\t\t\t\tif (ret === chain.promise) {\n\t\t\t\t\tchain.reject(TypeError(\"Promise-chain cycle\"));\n\t\t\t\t}\n\t\t\t\telse if (_then = isThenable(ret)) {\n\t\t\t\t\t_then.call(ret,chain.resolve,chain.reject);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tchain.resolve(ret);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcatch (err) {\n\t\t\tchain.reject(err);\n\t\t}\n\t}\n\n\tfunction resolve(msg) {\n\t\tvar _then, self = this;\n\n\t\t// already triggered?\n\t\tif (self.triggered) { return; }\n\n\t\tself.triggered = true;\n\n\t\t// unwrap\n\t\tif (self.def) {\n\t\t\tself = self.def;\n\t\t}\n\n\t\ttry {\n\t\t\tif (_then = isThenable(msg)) {\n\t\t\t\tschedule(function(){\n\t\t\t\t\tvar def_wrapper = new MakeDefWrapper(self);\n\t\t\t\t\ttry {\n\t\t\t\t\t\t_then.call(msg,\n\t\t\t\t\t\t\tfunction $resolve$(){ resolve.apply(def_wrapper,arguments); },\n\t\t\t\t\t\t\tfunction $reject$(){ reject.apply(def_wrapper,arguments); }\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\tcatch (err) {\n\t\t\t\t\t\treject.call(def_wrapper,err);\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\t\t\telse {\n\t\t\t\tself.msg = msg;\n\t\t\t\tself.state = 1;\n\t\t\t\tif (self.chain.length > 0) {\n\t\t\t\t\tschedule(notify,self);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcatch (err) {\n\t\t\treject.call(new MakeDefWrapper(self),err);\n\t\t}\n\t}\n\n\tfunction reject(msg) {\n\t\tvar self = this;\n\n\t\t// already triggered?\n\t\tif (self.triggered) { return; }\n\n\t\tself.triggered = true;\n\n\t\t// unwrap\n\t\tif (self.def) {\n\t\t\tself = self.def;\n\t\t}\n\n\t\tself.msg = msg;\n\t\tself.state = 2;\n\t\tif (self.chain.length > 0) {\n\t\t\tschedule(notify,self);\n\t\t}\n\t}\n\n\tfunction iteratePromises(Constructor,arr,resolver,rejecter) {\n\t\tfor (var idx=0; idx<arr.length; idx++) {\n\t\t\t(function IIFE(idx){\n\t\t\t\tConstructor.resolve(arr[idx])\n\t\t\t\t.then(\n\t\t\t\t\tfunction $resolver$(msg){\n\t\t\t\t\t\tresolver(idx,msg);\n\t\t\t\t\t},\n\t\t\t\t\trejecter\n\t\t\t\t);\n\t\t\t})(idx);\n\t\t}\n\t}\n\n\tfunction MakeDefWrapper(self) {\n\t\tthis.def = self;\n\t\tthis.triggered = false;\n\t}\n\n\tfunction MakeDef(self) {\n\t\tthis.promise = self;\n\t\tthis.state = 0;\n\t\tthis.triggered = false;\n\t\tthis.chain = [];\n\t\tthis.msg = void 0;\n\t}\n\n\tfunction Promise(executor) {\n\t\tif (typeof executor != \"function\") {\n\t\t\tthrow TypeError(\"Not a function\");\n\t\t}\n\n\t\tif (this.__NPO__ !== 0) {\n\t\t\tthrow TypeError(\"Not a promise\");\n\t\t}\n\n\t\t// instance shadowing the inherited \"brand\"\n\t\t// to signal an already \"initialized\" promise\n\t\tthis.__NPO__ = 1;\n\n\t\tvar def = new MakeDef(this);\n\n\t\tthis[\"then\"] = function then(success,failure) {\n\t\t\tvar o = {\n\t\t\t\tsuccess: typeof success == \"function\" ? success : true,\n\t\t\t\tfailure: typeof failure == \"function\" ? failure : false\n\t\t\t};\n\t\t\t// Note: `then(..)` itself can be borrowed to be used against\n\t\t\t// a different promise constructor for making the chained promise,\n\t\t\t// by substituting a different `this` binding.\n\t\t\to.promise = new this.constructor(function extractChain(resolve,reject) {\n\t\t\t\tif (typeof resolve != \"function\" || typeof reject != \"function\") {\n\t\t\t\t\tthrow TypeError(\"Not a function\");\n\t\t\t\t}\n\n\t\t\t\to.resolve = resolve;\n\t\t\t\to.reject = reject;\n\t\t\t});\n\t\t\tdef.chain.push(o);\n\n\t\t\tif (def.state !== 0) {\n\t\t\t\tschedule(notify,def);\n\t\t\t}\n\n\t\t\treturn o.promise;\n\t\t};\n\t\tthis[\"catch\"] = function $catch$(failure) {\n\t\t\treturn this.then(void 0,failure);\n\t\t};\n\n\t\ttry {\n\t\t\texecutor.call(\n\t\t\t\tvoid 0,\n\t\t\t\tfunction publicResolve(msg){\n\t\t\t\t\tresolve.call(def,msg);\n\t\t\t\t},\n\t\t\t\tfunction publicReject(msg) {\n\t\t\t\t\treject.call(def,msg);\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\t\tcatch (err) {\n\t\t\treject.call(def,err);\n\t\t}\n\t}\n\n\tvar PromisePrototype = builtInProp({},\"constructor\",Promise,\n\t\t/*configurable=*/false\n\t);\n\n\t// Note: Android 4 cannot use `Object.defineProperty(..)` here\n\tPromise.prototype = PromisePrototype;\n\n\t// built-in \"brand\" to signal an \"uninitialized\" promise\n\tbuiltInProp(PromisePrototype,\"__NPO__\",0,\n\t\t/*configurable=*/false\n\t);\n\n\tbuiltInProp(Promise,\"resolve\",function Promise$resolve(msg) {\n\t\tvar Constructor = this;\n\n\t\t// spec mandated checks\n\t\t// note: best \"isPromise\" check that's practical for now\n\t\tif (msg && typeof msg == \"object\" && msg.__NPO__ === 1) {\n\t\t\treturn msg;\n\t\t}\n\n\t\treturn new Constructor(function executor(resolve,reject){\n\t\t\tif (typeof resolve != \"function\" || typeof reject != \"function\") {\n\t\t\t\tthrow TypeError(\"Not a function\");\n\t\t\t}\n\n\t\t\tresolve(msg);\n\t\t});\n\t});\n\n\tbuiltInProp(Promise,\"reject\",function Promise$reject(msg) {\n\t\treturn new this(function executor(resolve,reject){\n\t\t\tif (typeof resolve != \"function\" || typeof reject != \"function\") {\n\t\t\t\tthrow TypeError(\"Not a function\");\n\t\t\t}\n\n\t\t\treject(msg);\n\t\t});\n\t});\n\n\tbuiltInProp(Promise,\"all\",function Promise$all(arr) {\n\t\tvar Constructor = this;\n\n\t\t// spec mandated checks\n\t\tif (ToString.call(arr) != \"[object Array]\") {\n\t\t\treturn Constructor.reject(TypeError(\"Not an array\"));\n\t\t}\n\t\tif (arr.length === 0) {\n\t\t\treturn Constructor.resolve([]);\n\t\t}\n\n\t\treturn new Constructor(function executor(resolve,reject){\n\t\t\tif (typeof resolve != \"function\" || typeof reject != \"function\") {\n\t\t\t\tthrow TypeError(\"Not a function\");\n\t\t\t}\n\n\t\t\tvar len = arr.length, msgs = Array(len), count = 0;\n\n\t\t\titeratePromises(Constructor,arr,function resolver(idx,msg) {\n\t\t\t\tmsgs[idx] = msg;\n\t\t\t\tif (++count === len) {\n\t\t\t\t\tresolve(msgs);\n\t\t\t\t}\n\t\t\t},reject);\n\t\t});\n\t});\n\n\tbuiltInProp(Promise,\"race\",function Promise$race(arr) {\n\t\tvar Constructor = this;\n\n\t\t// spec mandated checks\n\t\tif (ToString.call(arr) != \"[object Array]\") {\n\t\t\treturn Constructor.reject(TypeError(\"Not an array\"));\n\t\t}\n\n\t\treturn new Constructor(function executor(resolve,reject){\n\t\t\tif (typeof resolve != \"function\" || typeof reject != \"function\") {\n\t\t\t\tthrow TypeError(\"Not a function\");\n\t\t\t}\n\n\t\t\titeratePromises(Constructor,arr,function resolver(idx,msg){\n\t\t\t\tresolve(msg);\n\t\t\t},reject);\n\t\t});\n\t});\n\n\treturn Promise;\n});\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0), __webpack_require__(14).setImmediate))\n\n/***/ },\n/* 31 */,\n/* 32 */\n/***/ function(module, exports) {\n\n\"use strict\";\n\"use strict\";\n\nexports.__esModule = true;\n/*eslint-env browser*/\n\nexports.default = {\n  pool: {\n    size: navigator.hardwareConcurrency || 8\n  }\n};\n//# sourceMappingURL=defaults.browser.js.map\n\n\n/***/ },\n/* 33 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n\nexports.__esModule = true;\n\nvar _os = __webpack_require__(41);\n\nexports.default = {\n  pool: {\n    size: (0, _os.cpus)().length\n  }\n};\n//# sourceMappingURL=defaults.node.js.map\n\n\n/***/ },\n/* 34 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n\nexports.__esModule = true;\n\nvar _eventemitter = __webpack_require__(3);\n\nvar _eventemitter2 = _interopRequireDefault(_eventemitter);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Job = function (_EventEmitter) {\n  _inherits(Job, _EventEmitter);\n\n  function Job(pool) {\n    _classCallCheck(this, Job);\n\n    var _this = _possibleConstructorReturn(this, _EventEmitter.call(this));\n\n    _this.pool = pool;\n    _this.thread = null;\n\n    _this.runArgs = [];\n    _this.sendArgs = [];\n\n    pool.emit('newJob', _this);\n    return _this;\n  }\n\n  Job.prototype.run = function run() {\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    if (args.length === 0) {\n      throw new Error('Cannot call .run() without arguments.');\n    }\n\n    this.runArgs = args;\n    return this;\n  };\n\n  Job.prototype.send = function send() {\n    if (this.runArgs.length === 0) {\n      throw new Error('Cannot .send() before .run().');\n    }\n\n    for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    this.sendArgs = args;\n\n    this.emit('readyToRun');\n    return this;\n  };\n\n  Job.prototype.executeOn = function executeOn(thread) {\n    var _thread$once$once$run, _thread$once$once;\n\n    (_thread$once$once$run = (_thread$once$once = thread.once('message', this.emit.bind(this, 'done')).once('error', this.emit.bind(this, 'error'))).run.apply(_thread$once$once, this.runArgs)).send.apply(_thread$once$once$run, this.sendArgs);\n\n    this.thread = thread;\n\n    this.emit('threadChanged');\n    return this;\n  };\n\n  Job.prototype.promise = function promise() {\n    var _this2 = this;\n\n    // Always return a promise\n    return new Promise(function (resolve) {\n      // If the thread isn't set, listen for the threadChanged event\n      if (!_this2.thread) {\n        _this2.once('threadChanged', function () {\n          resolve(_this2.thread.promise());\n        });\n      } else {\n        resolve(_this2.thread.promise());\n      }\n    });\n  };\n\n  return Job;\n}(_eventemitter2.default);\n\nexports.default = Job;\n//# sourceMappingURL=job.js.map\n\n\n/***/ },\n/* 35 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n\nexports.__esModule = true;\n\nvar _eventemitter = __webpack_require__(3);\n\nvar _eventemitter2 = _interopRequireDefault(_eventemitter);\n\nvar _job = __webpack_require__(34);\n\nvar _job2 = _interopRequireDefault(_job);\n\nvar _defaults = __webpack_require__(16);\n\nvar _defaults2 = _interopRequireDefault(_defaults);\n\nvar _ = __webpack_require__(15);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Pool = function (_EventEmitter) {\n  _inherits(Pool, _EventEmitter);\n\n  function Pool(threads) {\n    _classCallCheck(this, Pool);\n\n    var _this = _possibleConstructorReturn(this, _EventEmitter.call(this));\n\n    _this.threads = Pool.spawn(threads || _defaults2.default.pool.size);\n    _this.idleThreads = _this.threads.slice();\n    _this.jobQueue = [];\n    _this.runArgs = [];\n\n    _this.on('newJob', function (job) {\n      return _this.handleNewJob(job);\n    });\n    _this.on('threadAvailable', function () {\n      return _this.dequeue();\n    });\n    return _this;\n  }\n\n  Pool.prototype.run = function run() {\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    this.runArgs = args;\n    return this;\n  };\n\n  Pool.prototype.send = function send() {\n    if (!this.runArgs) {\n      throw new Error('Pool.send() called without prior Pool.run(). You need to define what to run first.');\n    }\n\n    var job = new _job2.default(this);\n    job.run.apply(job, this.runArgs);\n    return job.send.apply(job, arguments);\n  };\n\n  Pool.prototype.killAll = function killAll() {\n    this.threads.forEach(function (thread) {\n      thread.kill();\n    });\n  };\n\n  Pool.prototype.queueJob = function queueJob(job) {\n    this.jobQueue.push(job);\n    this.dequeue();\n  };\n\n  Pool.prototype.dequeue = function dequeue() {\n    var _this2 = this;\n\n    if (this.jobQueue.length === 0 || this.idleThreads.length === 0) {\n      return;\n    }\n\n    var job = this.jobQueue.shift();\n    var thread = this.idleThreads.shift();\n\n    job.once('done', function () {\n      for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      return _this2.handleJobSuccess.apply(_this2, [thread, job].concat(args));\n    }).once('error', function () {\n      for (var _len3 = arguments.length, args = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        args[_key3] = arguments[_key3];\n      }\n\n      return _this2.handleJobError.apply(_this2, [thread, job].concat(args));\n    });\n\n    job.executeOn(thread);\n  };\n\n  Pool.prototype.handleNewJob = function handleNewJob(job) {\n    var _this3 = this;\n\n    this.lastCreatedJob = job;\n    job.once('readyToRun', function () {\n      return _this3.queueJob(job);\n    }); // triggered by job.send()\n  };\n\n  Pool.prototype.handleJobSuccess = function handleJobSuccess(thread, job) {\n    for (var _len4 = arguments.length, responseArgs = Array(_len4 > 2 ? _len4 - 2 : 0), _key4 = 2; _key4 < _len4; _key4++) {\n      responseArgs[_key4 - 2] = arguments[_key4];\n    }\n\n    this.emit.apply(this, ['done', job].concat(responseArgs));\n    this.handleJobDone(thread);\n  };\n\n  Pool.prototype.handleJobError = function handleJobError(thread, job, error) {\n    this.emit('error', job, error);\n    this.handleJobDone(thread);\n  };\n\n  Pool.prototype.handleJobDone = function handleJobDone(thread) {\n    var _this4 = this;\n\n    this.idleThreads.push(thread);\n    this.emit('threadAvailable');\n\n    if (this.idleThreads.length === this.threads.length) {\n      // run deferred to give other job.on('done') handlers time to run first\n      setTimeout(function () {\n        _this4.emit('finished');\n      }, 0);\n    }\n  };\n\n  return Pool;\n}(_eventemitter2.default);\n\nexports.default = Pool;\n\n\nPool.spawn = function (threadCount) {\n  var threads = [];\n\n  for (var threadIndex = 0; threadIndex < threadCount; threadIndex++) {\n    threads.push((0, _.spawn)());\n  }\n\n  return threads;\n};\n//# sourceMappingURL=pool.js.map\n\n\n/***/ },\n/* 36 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n\nexports.__esModule = true;\n\nvar _slaveCode = __webpack_require__(37);\n\nvar _slaveCode2 = _interopRequireDefault(_slaveCode);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar slaveCodeDataUri = 'data:text/javascript;charset=utf-8,' + encodeURI(_slaveCode2.default);\nvar createBlobURL = window.createBlobURL || window.createObjectURL;\n\nif (!createBlobURL) {\n  var URL = window.URL || window.webkitURL;\n\n  if (URL) {\n    createBlobURL = URL.createObjectURL;\n  } else {\n    throw new Error('No Blob creation implementation found.');\n  }\n}\n\nif (typeof window.BlobBuilder === 'function' && typeof createBlobURL === 'function') {\n  var blobBuilder = new window.BlobBuilder();\n  blobBuilder.append(_slaveCode2.default);\n  slaveCodeDataUri = createBlobURL(blobBuilder.getBlob());\n} else if (typeof window.Blob === 'function' && typeof createBlobURL === 'function') {\n  var blob = new window.Blob([_slaveCode2.default], { type: 'text/javascript' });\n  slaveCodeDataUri = createBlobURL(blob);\n}\n\nexports.default = slaveCodeDataUri;\n//# sourceMappingURL=slave-code-uri.js.map\n\n\n/***/ },\n/* 37 */\n/***/ function(module, exports) {\n\nmodule.exports = \"/*eslint-env worker*/\\n/*global importScripts*/\\n/*eslint-disable no-console*/\\nself.module = {\\n  exports : function() {\\n    if (console) { console.error('No thread logic initialized.'); }\\n  }\\n};\\n\\nfunction handlerDone() {\\n  var args = Array.prototype.slice.call(arguments, 0);\\n  this.postMessage({ response : args });\\n}\\n\\nfunction handlerProgress(progress) {\\n  this.postMessage({ progress : progress });\\n}\\n\\nfunction handlerDoneTransfer() {\\n  var args = Array.prototype.slice.call(arguments);\\n  var lastArg = args.pop();\\n\\n  if (!(lastArg instanceof Array) && this.console) {\\n    console.error('Expected 2nd parameter of <doneCallback>.transfer() to be an array. Got:', lastArg);\\n  }\\n\\n  this.postMessage({ response : args }, lastArg);\\n}\\n\\nself.onmessage = function (event) {\\n  var scripts = event.data.scripts;\\n  if (scripts && scripts.length > 0 && typeof importScripts !== 'function') {\\n    throw new Error('importScripts() not supported.');\\n  }\\n\\n  if (event.data.initByScripts) {\\n    importScripts.apply(null, scripts);\\n  }\\n\\n  if (event.data.initByMethod) {\\n    var method = event.data.method;\\n    this.module.exports = Function.apply(null, method.args.concat(method.body));\\n\\n    if (scripts && scripts.length > 0) {\\n      importScripts.apply(null, scripts);\\n    }\\n  }\\n\\n  if (event.data.doRun) {\\n    var handler = this.module.exports;\\n    if (typeof handler !== 'function') {\\n      throw new Error('Cannot run thread logic. No handler has been exported.');\\n    }\\n\\n    var preparedHandlerDone = handlerDone.bind(this);\\n    preparedHandlerDone.transfer = handlerDoneTransfer.bind(this);\\n\\n    handler.call(this, event.data.param, preparedHandlerDone, handlerProgress.bind(this));\\n  }\\n}.bind(self);\\n\";\n\n/***/ },\n/* 38 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n\nexports.__esModule = true;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _eventemitter = __webpack_require__(3);\n\nvar _eventemitter2 = _interopRequireDefault(_eventemitter);\n\nvar _slaveCodeUri = __webpack_require__(36);\n\nvar _slaveCodeUri2 = _interopRequireDefault(_slaveCodeUri);\n\nvar _config = __webpack_require__(13);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nif (_typeof(window.Worker) !== 'object' && typeof window.Worker !== 'function') {\n  throw new Error('Browser does not support web workers!');\n}\n\nfunction joinPaths(path1, path2) {\n  if (!path1 || !path2) {\n    return path1 + path2;\n  } else if (path1.charAt(path1.length - 1) === '/' || path2.charAt(0) === '/') {\n    return path1 + path2;\n  } else {\n    return path1 + '/' + path2;\n  }\n}\n\nfunction prependScriptUrl(scriptUrl) {\n  var prefix = (0, _config.getConfig)().basepath.web;\n  return prefix ? joinPaths(prefix, scriptUrl) : scriptUrl;\n}\n\nfunction convertToArray(input) {\n  var outputArray = [];\n  var index = 0;\n\n  while (typeof input[index] !== 'undefined') {\n    outputArray.push(input[index]);\n    index++;\n  }\n\n  return outputArray;\n}\n\nfunction logError(error) {\n  if (error.stack) {\n    console.error(error.stack); // eslint-disable-line no-console\n  } else if (error.message && error.filename && error.lineno) {\n    var fileName = error.filename.match(/^data:text\\/javascript/) && error.filename.length > 50 ? error.filename.substr(0, 50) + '...' : error.filename;\n    console.error(error.message + ' @' + fileName + ':' + error.lineno); // eslint-disable-line no-console\n  } else {\n    console.error(error); // eslint-disable-line no-console\n  }\n}\n\nvar Worker = function (_EventEmitter) {\n  _inherits(Worker, _EventEmitter);\n\n  function Worker() {\n    var initialScript = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n    var importScripts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n\n    _classCallCheck(this, Worker);\n\n    // used by `run()` to decide if the worker must be re-initialized\n    var _this = _possibleConstructorReturn(this, _EventEmitter.call(this));\n\n    _this.currentRunnable = null;\n    _this.currentImportScripts = [];\n\n    _this.initWorker();\n    _this.worker.addEventListener('message', _this.handleMessage.bind(_this));\n    _this.worker.addEventListener('error', _this.handleError.bind(_this));\n\n    if (initialScript) {\n      _this.run(initialScript, importScripts);\n    }\n    return _this;\n  }\n\n  Worker.prototype.initWorker = function initWorker() {\n    try {\n      this.worker = new window.Worker(_slaveCodeUri2.default);\n    } catch (error) {\n      var slaveScriptUrl = (0, _config.getConfig)().fallback.slaveScriptUrl;\n      if (slaveScriptUrl) {\n        // try using the slave script file instead of the data URI\n        this.worker = new window.Worker(_slaveCodeUri2.default);\n      } else {\n        // re-throw\n        throw error;\n      }\n    }\n  };\n\n  Worker.prototype.run = function run(toRun) {\n    var importScripts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n\n    if (this.alreadyInitializedToRun(toRun, importScripts)) {\n      // don't re-initialize with the new logic if it already has been\n      return this;\n    }\n\n    if (typeof toRun === 'function') {\n      this.runMethod(toRun, importScripts);\n    } else {\n      this.runScripts(toRun, importScripts);\n    }\n\n    this.currentRunnable = toRun;\n    this.currentImportScripts = importScripts;\n\n    return this;\n  };\n\n  Worker.prototype.runMethod = function runMethod(method, importScripts) {\n    var methodStr = method.toString();\n    var args = methodStr.substring(methodStr.indexOf('(') + 1, methodStr.indexOf(')')).split(',');\n    var body = methodStr.substring(methodStr.indexOf('{') + 1, methodStr.lastIndexOf('}'));\n\n    this.worker.postMessage({\n      initByMethod: true,\n      method: { args: args, body: body },\n      scripts: importScripts.map(prependScriptUrl)\n    });\n  };\n\n  Worker.prototype.runScripts = function runScripts(script, importScripts) {\n    if (!script) {\n      throw new Error('Must pass a function or a script URL to run().');\n    }\n\n    // attention: array for browser, single script for node\n    this.worker.postMessage({\n      initByScripts: true,\n      scripts: importScripts.concat([script]).map(prependScriptUrl)\n    });\n  };\n\n  Worker.prototype.send = function send(param) {\n    var transferables = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n\n    this.worker.postMessage({\n      doRun: true,\n      param: param\n    }, transferables);\n    return this;\n  };\n\n  Worker.prototype.kill = function kill() {\n    this.worker.terminate();\n    this.emit('exit');\n    return this;\n  };\n\n  Worker.prototype.promise = function promise() {\n    var _this2 = this;\n\n    return new Promise(function (resolve, reject) {\n      var resolved = void 0,\n          rejected = void 0;\n      resolved = function resolved(result) {\n        _this2.removeListener('error', rejected);\n        resolve(result);\n      };\n      rejected = function rejected(err) {\n        _this2.removeListener('message', resolved);\n        reject(err);\n      };\n\n      _this2.once('message', resolved).once('error', rejected);\n    });\n  };\n\n  Worker.prototype.alreadyInitializedToRun = function alreadyInitializedToRun(toRun, importScripts) {\n    var runnablesMatch = this.currentRunnable === toRun;\n    var importScriptsMatch = this.currentImportScripts === importScripts || importScripts.length === 0 && this.currentImportScripts.length === 0;\n\n    return runnablesMatch && importScriptsMatch;\n  };\n\n  Worker.prototype.handleMessage = function handleMessage(event) {\n    if (event.data.error) {\n      this.handleError(event.data.error);\n    } else if (event.data.progress) {\n      this.handleProgress(event.data.progress);\n    } else {\n      var responseArgs = convertToArray(event.data.response);\n      this.emit.apply(this, ['message'].concat(responseArgs));\n      this.emit.apply(this, ['done'].concat(responseArgs)); // this one is just for convenience\n    }\n  };\n\n  Worker.prototype.handleProgress = function handleProgress(progress) {\n    this.emit('progress', progress);\n  };\n\n  Worker.prototype.handleError = function handleError(error) {\n    if (!this.listeners('error', true)) {\n      logError(error);\n    }\n\n    if (error.preventDefault) {\n      error.preventDefault();\n    }\n\n    this.emit('error', error);\n  };\n\n  return Worker;\n}(_eventemitter2.default);\n\nexports.default = Worker;\n//# sourceMappingURL=worker.js.map\n\n\n/***/ },\n/* 39 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(process) {'use strict';\n\n/*eslint-env node*/\n/*\n * This file is only a stub to make './worker' resolve the './worker.node/worker' module.\n * Loading the browser worker into the browser bundle is done in the gulpfile by\n * configuring a browserify override.\n */\n\nif (typeof process !== 'undefined' && 'pid' in process) {\n  module.exports = __webpack_require__(40);\n} else {\n  module.exports = __webpack_require__(38);\n}\n//# sourceMappingURL=worker.js.map\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))\n\n/***/ },\n/* 40 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(__dirname) {'use strict';\n\nexports.__esModule = true;\n\nvar _child_process = __webpack_require__(42);\n\nvar _child_process2 = _interopRequireDefault(_child_process);\n\nvar _path = __webpack_require__(43);\n\nvar _path2 = _interopRequireDefault(_path);\n\nvar _eventemitter = __webpack_require__(3);\n\nvar _eventemitter2 = _interopRequireDefault(_eventemitter);\n\nvar _config = __webpack_require__(13);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Worker = function (_EventEmitter) {\n  _inherits(Worker, _EventEmitter);\n\n  function Worker(initialRunnable) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    _classCallCheck(this, Worker);\n\n    var _this = _possibleConstructorReturn(this, _EventEmitter.call(this));\n\n    _this.slave = _child_process2.default.fork(_path2.default.join(__dirname, 'slave.js'), [], options);\n    _this.slave.on('message', _this.handleMessage.bind(_this));\n    _this.slave.on('error', _this.handleError.bind(_this));\n    _this.slave.on('exit', _this.emit.bind(_this, 'exit'));\n\n    if (initialRunnable) {\n      _this.run(initialRunnable);\n    }\n    return _this;\n  }\n\n  Worker.prototype.run = function run(toRun) {\n    if (typeof toRun === 'function') {\n      this.runMethod(toRun);\n    } else {\n      this.runScript(toRun);\n    }\n    return this;\n  };\n\n  Worker.prototype.runMethod = function runMethod(method) {\n    this.slave.send({\n      initByMethod: true,\n      method: method.toString()\n    });\n  };\n\n  Worker.prototype.runScript = function runScript(script) {\n    if (!script) {\n      throw new Error('Must pass a function or a script path to run().');\n    }\n\n    var prefixedScriptPath = _path2.default.join((0, _config.getConfig)().basepath.node, script);\n\n    // attention: single script for node, array for browser\n    this.slave.send({\n      initByScript: true,\n      script: _path2.default.resolve(prefixedScriptPath)\n    });\n  };\n\n  Worker.prototype.send = function send(param) {\n    this.slave.send({\n      doRun: true,\n      param: param\n    });\n    return this;\n  };\n\n  Worker.prototype.kill = function kill() {\n    this.slave.kill();\n    return this;\n  };\n\n  Worker.prototype.promise = function promise() {\n    var _this2 = this;\n\n    return new Promise(function (resolve, reject) {\n      var resolved = void 0,\n          rejected = void 0;\n      resolved = function resolved(result) {\n        _this2.removeListener('error', rejected);\n        resolve(result);\n      };\n      rejected = function rejected(err) {\n        _this2.removeListener('message', resolved);\n        reject(err);\n      };\n\n      _this2.once('message', resolved).once('error', rejected);\n    });\n  };\n\n  Worker.prototype.handleMessage = function handleMessage(message) {\n    if (message.error) {\n      var error = new Error(message.error.message);\n      error.stack = message.error.stack;\n\n      this.handleError(error);\n    } else if (message.progress) {\n      this.handleProgress(message.progress);\n    } else {\n      this.emit.apply(this, ['message'].concat(message.response));\n      this.emit.apply(this, ['done'].concat(message.response)); // this one is just for convenience\n    }\n  };\n\n  Worker.prototype.handleProgress = function handleProgress(progress) {\n    this.emit('progress', progress);\n  };\n\n  Worker.prototype.handleError = function handleError(error) {\n    if (!this.listeners('error', true)) {\n      console.error(error.stack || error); // eslint-disable-line no-console\n    }\n    this.emit('error', error);\n  };\n\n  return Worker;\n}(_eventemitter2.default);\n\nexports.default = Worker;\n//# sourceMappingURL=worker.js.map\n\n/* WEBPACK VAR INJECTION */}.call(exports, \"/\"))\n\n/***/ },\n/* 41 */\n/***/ function(module, exports) {\n\n/* (ignored) */\n\n/***/ },\n/* 42 */\n41,\n/* 43 */\n41,\n/* 44 */,\n/* 45 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_lodash__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_lodash___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_lodash__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_benchmark__ = __webpack_require__(27);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_benchmark___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_benchmark__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__transpiled_mandelbrot__ = __webpack_require__(9);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__transpiled_knights_tour__ = __webpack_require__(8);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__transpiled_monte_carlo__ = __webpack_require__(10);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__dynamic_knights_tour__ = __webpack_require__(5);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__dynamic_mandelbrot__ = __webpack_require__(6);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__dynamic_monte_carlo__ = __webpack_require__(7);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__paralleljs_mandelbrot__ = __webpack_require__(22);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__paralleljs_monte_carlo__ = __webpack_require__(23);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__paralleljs_knights_tour__ = __webpack_require__(21);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__threads_monte_carlo__ = __webpack_require__(26);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__threads_mandelbrot__ = __webpack_require__(25);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13__threads_knights_tour__ = __webpack_require__(24);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_14_threads__ = __webpack_require__(15);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_14_threads___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_14_threads__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_15__hamstersjs_mandelbrot__ = __webpack_require__(19);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_16__hamstersjs_knights_tour__ = __webpack_require__(18);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_17__hamstersjs_monte_carlo__ = __webpack_require__(20);\n\n/* tslint:disable:no-var-requires */\n\nvar platform = __webpack_require__(28);\n/* tslint:enable:no-var-requires */\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar Benchmark = __WEBPACK_IMPORTED_MODULE_1_benchmark__[\"runInContext\"]({ _: __WEBPACK_IMPORTED_MODULE_0_lodash__ });\nwindow.Benchmark = Benchmark;\nvar runButton = document.querySelector(\"#run\");\nvar outputTable = document.querySelector(\"#output-table\");\nvar jsonOutputField = document.querySelector(\"#json-output\");\nvar setCheckboxes = document.querySelectorAll('[id*=\"-set\"]');\nvar knightRunner6x6 = document.querySelector(\"#knight-runner-6-6\");\nfunction addAsyncTest(suite, optionsOrTitle, fn) {\n    var options = typeof optionsOrTitle === \"string\" ? { name: optionsOrTitle, fn: fn } : optionsOrTitle;\n    var asyncFn = options.fn;\n    options.defer = true;\n    options.fn = function (deferred) {\n        var benchmark = this;\n        asyncFn.apply(undefined, []).then(function () {\n            deferred.resolve();\n        }, function (error) {\n            console.error(error);\n            benchmark.error = error;\n            deferred.resolve();\n        });\n    };\n    return suite.add(options);\n}\n/**\n * Helper for threadjs tests. Creates the thread pool before the tests are run. A new thread pool for each test run is needed\n * to avoid caching of the environment across runs.\n */\nfunction addThreadJsTest(suite, name, _fn) {\n    for (var _len = arguments.length, args = Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {\n        args[_key - 3] = arguments[_key];\n    }\n\n    var _this = this;\n\n    var argsWithPool = void 0;\n    var pool = void 0;\n    addAsyncTest(suite, {\n        name: name,\n        setup: function setup() {\n            pool = new __WEBPACK_IMPORTED_MODULE_14_threads__[\"Pool\"]();\n            argsWithPool = args.slice();\n            argsWithPool.push(pool);\n        },\n        fn: function fn() {\n            return _fn.apply(_this, argsWithPool);\n        },\n        teardown: function teardown() {\n            if (pool) {\n                pool.killAll();\n            }\n        }\n    });\n}\nfunction addKnightBoardTests(suite) {\n    var boardSizes = knightRunner6x6.checked ? [5, 6] : [5];\n\n    var _loop = function _loop() {\n        if (_isArray) {\n            if (_i >= _iterator.length) return \"break\";\n            _ref = _iterator[_i++];\n        } else {\n            _i = _iterator.next();\n            if (_i.done) return \"break\";\n            _ref = _i.value;\n        }\n\n        var boardSize = _ref;\n\n        var title = \"Knights Tour (\" + boardSize + \"x\" + boardSize + \")\";\n        suite.add(\"sync: \" + title, function () {\n            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__transpiled_knights_tour__[\"b\" /* syncKnightTours */])({ x: 0, y: 0 }, boardSize);\n        });\n        addAsyncTest(suite, \"parallel-dynamic: \" + title, function () {\n            return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_5__dynamic_knights_tour__[\"a\" /* parallelKnightTours */])({ x: 0, y: 0 }, boardSize);\n        });\n        addAsyncTest(suite, \"parallel-transpiled: \" + title, function () {\n            return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__transpiled_knights_tour__[\"a\" /* parallelKnightTours */])({ x: 0, y: 0 }, boardSize);\n        });\n        addAsyncTest(suite, \"paralleljs: \" + title, function () {\n            return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_10__paralleljs_knights_tour__[\"a\" /* parallelJSKnightTours */])({ x: 0, y: 0 }, boardSize);\n        });\n        addThreadJsTest(suite, \"threadsjs: \" + title, __WEBPACK_IMPORTED_MODULE_13__threads_knights_tour__[\"a\" /* threadsKnightTours */], { x: 0, y: 0 }, boardSize);\n        addAsyncTest(suite, \"hamstersjs: \" + title, function () {\n            return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_16__hamstersjs_knights_tour__[\"a\" /* parallelKnightTours */])({ x: 0, y: 0 }, boardSize);\n        });\n    };\n\n    for (var _iterator = boardSizes, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n        var _ref;\n\n        var _ret = _loop();\n\n        if (_ret === \"break\") break;\n    }\n}\nfunction addMonteCarloTest(suite, options) {\n    var runOptions = __WEBPACK_IMPORTED_MODULE_0_lodash__[\"extend\"](options, {\n        projects: createProjects(options.numberOfProjects)\n    });\n    var configName = \"(projects: \" + options.numberOfProjects + \", runs: \" + options.numRuns.toLocaleString() + \")\";\n    suite.add(\"sync: Monte Carlo Math.random \" + configName, function () {\n        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_7__dynamic_monte_carlo__[\"a\" /* syncMonteCarlo */])(options);\n    });\n    addAsyncTest(suite, \"parallel-dynamic: Monte Carlo Math.random \" + configName, function () {\n        return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_7__dynamic_monte_carlo__[\"b\" /* parallelMonteCarlo */])(runOptions);\n    });\n    suite.add(\"sync: Monte Carlo simjs \" + configName, function () {\n        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_4__transpiled_monte_carlo__[\"b\" /* syncMonteCarlo */])(options);\n    });\n    addAsyncTest(suite, \"parallel-transpiled: Monte Carlo simjs \" + configName, function () {\n        return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_4__transpiled_monte_carlo__[\"a\" /* parallelMonteCarlo */])(runOptions);\n    });\n    addAsyncTest(suite, \"paralleljs: Monte Carlo simjs \" + configName, function () {\n        return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__paralleljs_monte_carlo__[\"a\" /* parallelJSMonteCarlo */])(runOptions);\n    });\n    addThreadJsTest(suite, \"threadsjs: Monte Carlo simjs \" + configName, __WEBPACK_IMPORTED_MODULE_11__threads_monte_carlo__[\"a\" /* threadsMonteCarlo */], runOptions);\n    addAsyncTest(suite, \"hamstersjs: Monte Carlo Math.random \" + configName, function () {\n        return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_17__hamstersjs_monte_carlo__[\"a\" /* parallelMonteCarlo */])(runOptions);\n    });\n}\nfunction addMonteCarloTests(suite) {\n    var oneMillionRuns = document.querySelector(\"#monte-carlo-1m\").checked;\n    var monteCarloOptions = {\n        investmentAmount: 620000,\n        numYears: 15,\n        performance: 0.0340000,\n        seed: 10,\n        volatility: 0.0896000\n    };\n    var runs = [Math.pow(10, 4), Math.pow(10, 5)];\n    if (oneMillionRuns) {\n        runs.push(Math.pow(10, 6));\n    }\n    for (var _iterator2 = runs, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {\n        var _ref2;\n\n        if (_isArray2) {\n            if (_i2 >= _iterator2.length) break;\n            _ref2 = _iterator2[_i2++];\n        } else {\n            _i2 = _iterator2.next();\n            if (_i2.done) break;\n            _ref2 = _i2.value;\n        }\n\n        var numRuns = _ref2;\n        var _arr = [1, 4, 8, 16];\n\n        for (var _i3 = 0; _i3 < _arr.length; _i3++) {\n            var numberOfProjects = _arr[_i3];\n            var options = __WEBPACK_IMPORTED_MODULE_0_lodash__[\"extend\"]({}, monteCarloOptions, { numberOfProjects: numberOfProjects, numRuns: numRuns });\n            addMonteCarloTest(suite, options);\n        }\n    }\n}\nfunction addMandelbrotTests(suite) {\n    var mandelbrotHeight = parseInt(document.querySelector(\"#mandelbrot-height\").value, 10);\n    var mandelbrotWidth = parseInt(document.querySelector(\"#mandelbrot-width\").value, 10);\n    var mandelbrotIterations = parseInt(document.querySelector(\"#mandelbrot-iterations\").value, 10);\n    var onlyDefaultScheduling = document.querySelector(\"#mandelbrot-only-default-scheduling\").checked;\n    var mandelbrotOptions = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_6__dynamic_mandelbrot__[\"a\" /* createMandelOptions */])(mandelbrotWidth, mandelbrotHeight, mandelbrotIterations);\n    suite.add(\"sync: Mandelbrot \" + mandelbrotWidth + \"x\" + mandelbrotHeight + \", \" + mandelbrotIterations, function () {\n        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_6__dynamic_mandelbrot__[\"b\" /* syncMandelbrot */])(mandelbrotOptions, function () {\n            return undefined;\n        });\n    });\n    var taskSizes = onlyDefaultScheduling ? [undefined] : [undefined, 1, 150, 312, 625, 1250, 2500];\n\n    var _loop2 = function _loop2() {\n        if (_isArray3) {\n            if (_i4 >= _iterator3.length) return \"break\";\n            _ref3 = _iterator3[_i4++];\n        } else {\n            _i4 = _iterator3.next();\n            if (_i4.done) return \"break\";\n            _ref3 = _i4.value;\n        }\n\n        var valuesPerTask = _ref3;\n\n        var parallelOptions = { maxValuesPerTask: valuesPerTask, minValuesPerTask: valuesPerTask };\n        var title = \"Mandelbrot \" + mandelbrotOptions.imageWidth + \"x\" + mandelbrotOptions.imageHeight + \", \" + mandelbrotOptions.iterations;\n        if (valuesPerTask) {\n            title += \" (\" + valuesPerTask + \")\";\n        }\n        addAsyncTest(suite, \"parallel-dynamic: \" + title, function () {\n            return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_6__dynamic_mandelbrot__[\"c\" /* parallelMandelbrot */])(mandelbrotOptions, parallelOptions);\n        });\n        addAsyncTest(suite, \"parallel-transpiled: \" + title, function () {\n            return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__transpiled_mandelbrot__[\"a\" /* mandelbrot */])(mandelbrotOptions, parallelOptions);\n        });\n    };\n\n    for (var _iterator3 = taskSizes, _isArray3 = Array.isArray(_iterator3), _i4 = 0, _iterator3 = _isArray3 ? _iterator3 : _iterator3[Symbol.iterator]();;) {\n        var _ref3;\n\n        var _ret2 = _loop2();\n\n        if (_ret2 === \"break\") break;\n    }\n    addAsyncTest(suite, \"paralleljs: Mandelbrot \" + mandelbrotWidth + \"x\" + mandelbrotHeight + \", \" + mandelbrotIterations, function () {\n        return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_8__paralleljs_mandelbrot__[\"a\" /* parallelJSMandelbrot */])(mandelbrotOptions);\n    });\n    addThreadJsTest(suite, \"threadsjs: Mandelbrot \" + mandelbrotWidth + \"x\" + mandelbrotHeight + \", \" + mandelbrotIterations, __WEBPACK_IMPORTED_MODULE_12__threads_mandelbrot__[\"a\" /* threadsMandelbrot */], mandelbrotOptions);\n    addAsyncTest(suite, \"hamstersjs: Mandelbrot \" + mandelbrotWidth + \"x\" + mandelbrotHeight + \", \" + mandelbrotIterations, function () {\n        return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_15__hamstersjs_mandelbrot__[\"a\" /* mandelbrot */])(mandelbrotOptions);\n    });\n}\nfunction measure() {\n    var runMonteCarlo = document.querySelector(\"#monte-carlo\").checked;\n    var runMandelbrot = document.querySelector(\"#mandelbrot-field\").checked;\n    var runKnightTour = document.querySelector(\"#knight-runner\").checked;\n    var allTestsSuite = new Benchmark.Suite();\n    if (runMandelbrot) {\n        addMandelbrotTests(allTestsSuite);\n    }\n    if (runKnightTour) {\n        addKnightBoardTests(allTestsSuite);\n    }\n    if (runMonteCarlo) {\n        addMonteCarloTests(allTestsSuite);\n    }\n    var suite = allTestsSuite.filter(function (benchmark) {\n        for (var i = 0; i < setCheckboxes.length; ++i) {\n            var checkbox = setCheckboxes[i];\n            var parts = checkbox.id.split(\"-\");\n            var name = parts.slice(0, parts.length - 1).join(\"-\");\n            if (checkbox.checked && benchmark.name.indexOf(name) === 0) {\n                return true;\n            }\n        }\n        return false;\n    });\n    suite.forEach(function (benchmark) {\n        var index = suite.indexOf(benchmark);\n        benchmark.on(\"cycle\", function () {\n            return appendTestResults(benchmark, index);\n        });\n    });\n    suite.on(\"cycle\", function (event) {\n        var benchmark = event.target;\n        var index = event.currentTarget.indexOf(benchmark);\n        appendTestResults(benchmark, index);\n    });\n    suite.on(\"complete\", function (event) {\n        var benchmarks = event.currentTarget.map(function (benchmark) {\n            return {\n                info: benchmark.toString,\n                name: benchmark.name,\n                stats: benchmark.stats,\n                times: benchmark.times\n            };\n        });\n        jsonOutputField.textContent = JSON.stringify({ benchmarks: benchmarks, platform: platform }, undefined, \"    \");\n        runButton.disabled = false;\n    });\n    suite.on(\"start\", initResultTable);\n    suite.run({ async: true });\n}\nrunButton.addEventListener(\"click\", function (event) {\n    event.preventDefault();\n    runButton.disabled = true;\n    measure();\n});\nfunction initResultTable(event) {\n    clearOutputTable();\n    function clearOutputTable() {\n        while (outputTable.tBodies.length > 0) {\n            outputTable.removeChild(outputTable.tBodies[0]);\n        }\n    }\n    var body = outputTable.createTBody();\n    event.currentTarget.forEach(function (suite) {\n        var row = body.insertRow();\n\n        var _suite$name$split = suite.name.split(\":\"),\n            set = _suite$name$split[0],\n            nameParts = _suite$name$split.slice(1);\n\n        row.insertCell().textContent = set;\n        row.insertCell().textContent = nameParts.join(\":\");\n        var columns = outputTable.tHead.rows[0].cells.length;\n        for (var i = 0; i < columns; ++i) {\n            row.insertCell();\n        }\n    });\n}\nfunction appendTestResults(benchmark, index) {\n    var body = outputTable.tBodies[0];\n    var row = body.rows[index];\n    row.cells[2].textContent = benchmark.stats.deviation.toFixed(4);\n    row.cells[3].textContent = benchmark.stats.mean.toFixed(4);\n    row.cells[4].textContent = benchmark.stats.moe.toFixed(4);\n    row.cells[5].textContent = benchmark.stats.rme.toFixed(4);\n    row.cells[6].textContent = benchmark.stats.sem.toFixed(4);\n    row.cells[7].textContent = benchmark.stats.variance.toFixed(4);\n    row.cells[8].textContent = benchmark.stats.sample.length.toFixed(0);\n    row.cells[9].textContent = benchmark.hz.toFixed(4);\n}\nfunction createProjects(count) {\n    var projects = [];\n    for (var i = 0; i < count; ++i) {\n        projects.push({\n            startYear: Math.round(Math.random() * 15),\n            totalAmount: Math.round(Math.random() * 100000)\n        });\n    }\n    return projects;\n}\n\n/***/ }\n],[45]);\n\n\n// WEBPACK FOOTER //\n// performance-measurements.js","'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @api private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {Mixed} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @api private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @api public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @api public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {String|Symbol} event The event name.\n * @param {Boolean} exists Only check if there are listeners.\n * @returns {Array|Boolean}\n * @api public\n */\nEventEmitter.prototype.listeners = function listeners(event, exists) {\n  var evt = prefix ? prefix + event : event\n    , available = this._events[evt];\n\n  if (exists) return !!available;\n  if (!available) return [];\n  if (available.fn) return [available.fn];\n\n  for (var i = 0, l = available.length, ee = new Array(l); i < l; i++) {\n    ee[i] = available[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {String|Symbol} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @api public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {String|Symbol} event The event name.\n * @param {Function} fn The listener function.\n * @param {Mixed} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @api public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  var listener = new EE(fn, context || this)\n    , evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) this._events[evt] = listener, this._eventsCount++;\n  else if (!this._events[evt].fn) this._events[evt].push(listener);\n  else this._events[evt] = [this._events[evt], listener];\n\n  return this;\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {String|Symbol} event The event name.\n * @param {Function} fn The listener function.\n * @param {Mixed} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @api public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  var listener = new EE(fn, context || this, true)\n    , evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) this._events[evt] = listener, this._eventsCount++;\n  else if (!this._events[evt].fn) this._events[evt].push(listener);\n  else this._events[evt] = [this._events[evt], listener];\n\n  return this;\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {String|Symbol} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {Mixed} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @api public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    if (--this._eventsCount === 0) this._events = new Events();\n    else delete this._events[evt];\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n         listeners.fn === fn\n      && (!once || listeners.once)\n      && (!context || listeners.context === context)\n    ) {\n      if (--this._eventsCount === 0) this._events = new Events();\n      else delete this._events[evt];\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n           listeners[i].fn !== fn\n        || (once && !listeners[i].once)\n        || (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else if (--this._eventsCount === 0) this._events = new Events();\n    else delete this._events[evt];\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {String|Symbol} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @api public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) {\n      if (--this._eventsCount === 0) this._events = new Events();\n      else delete this._events[evt];\n    }\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// This function doesn't apply anymore.\n//\nEventEmitter.prototype.setMaxListeners = function setMaxListeners() {\n  return this;\n};\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/eventemitter3/index.js\n// module id = 3\n// module chunks = 0","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/process/browser.js\n// module id = 4\n// module chunks = 0","/*\n* Title: WebHamsters\n* Description: Javascript library to add multi-threading support to javascript by exploiting concurrent web workers\n* Author: Austin K. Smith\n* Contact: austin@asmithdev.com\n* Copyright: 2015 Austin K. Smith - austin@asmithdev.com\n* License: Artistic License 2.0\n*/\n\nlet hamsters = {\n    version: '3.9',\n    debug: false,\n    cache: false,\n    persistence: true,\n    maxThreads: (navigator.hardwareConcurrency || 4),\n    tools: {},\n    wheel: {\n      env: {\n        legacy: false,\n        node: false,\n        shell: false,\n        worker: false,\n        browser: false,\n        ie10: false,\n        transferrable: true\n      },\n      queue: {\n        running: [],\n        pending: []\n      },\n      hamsters: [], \n      tasks: [],\n      errors: [],\n      uri: null\n    }\n  };\n\n/**\n * @description: Initializes and sets up library functionality\n * @return\n */\n(function() {\n  \"use strict\";\n\n  /**\n   * @description: Detect Internet Explorer by Version IE10 and below\n   * @method isIE\n   * @param {integer} version\n   * @return CallExpression\n   */\n  let isIE = function(version) {\n    return (new RegExp('msie' + (!isNaN(version) ? ('\\\\s'+version) : ''), 'i').test(navigator.userAgent));\n  };\n\n  /**\n   * Description\n   * @description: Detect support for web workers\n   * @method setupEnv\n   * @return\n   */\n  let setupEnv = function(callback) {\n    hamsters.wheel.env.browser = typeof window === \"object\";\n    hamsters.wheel.env.worker  = typeof importScripts === \"function\";\n    hamsters.wheel.env.node = typeof process === \"object\" && typeof require === \"function\" && !hamsters.wheel.env.browser && !hamsters.wheel.env.worker && !hamsters.wheel.env.reactNative;\n    hamsters.wheel.env.reactNative = !hamsters.wheel.env.node && typeof global === 'object';\n    hamsters.wheel.env.shell = !hamsters.wheel.env.browser && !hamsters.wheel.env.node && !hamsters.wheel.env.worker && !hamsters.wheel.env.reactNative;\n    if(hamsters.wheel.env.reactNative || hamsters.wheel.env.node) {\n      global.self = global;\n    }\n    if(hamsters.wheel.env.browser && !hamsters.wheel.env.worker) {\n      if(isIE(10)) {\n        try {\n          let hamster = new Worker('common/wheel.min.js');\n          hamster.terminate();\n          hamsters.wheel.env.ie10 = true;\n        } catch(e) {\n          hamsters.wheel.env.legacy = true;\n        }\n      }\n      if(!self.Worker || navigator.userAgent.indexOf('Kindle/3.0') !== -1 || navigator.userAgent.indexOf('Mobile/8F190') !== -1  || navigator.userAgent.indexOf('IEMobile') !== -1) {\n        hamsters.wheel.env.legacy = true;\n      } else if(navigator.userAgent.toLowerCase().indexOf('firefox') !== -1) {\n        if(hamsters.maxThreads > 20) {\n          hamsters.maxThreads = 20;\n        }\n      }\n    }\n    if(hamsters.wheel.env.worker) {\n       try {\n        hamsters.wheel.uri = self.URL.createObjectURL(createBlob('(' + String(giveHamsterWork(true)) + '());'));\n        let SharedHamster = new SharedWorker(hamsters.wheel.uri, 'SharedHamsterWheel');\n      } catch(e) {\n        hamsters.wheel.env.legacy = true;\n      }\n    }\n    if(hamsters.wheel.env.shell) {\n      hamsters.wheel.env.legacy = true;\n    }\n    //Check for transferrable object support\n    if(!Uint8Array) {\n      hamsters.wheel.env.transferrable = false;\n    }\n    callback(hamsters.wheel.env.legacy);\n  };\n\n  /**\n   * @description: Method for checking wheel error log\n   * @method checkErrors\n   * @return ObjectExpression\n   */\n  hamsters.tools.checkErrors = function() {\n    return {\n      msg: 'There are currently ' + hamsters.wheel.errors.length + ' errors captured in the wheel',\n      total: hamsters.wheel.errors.length,\n      errors: hamsters.wheel.errors\n    };\n  };\n  \n  /**\n   * @description: Splits an array into equal sized subarrays for individual workers\n   * @constructor\n   * @method splitArray\n   * @param {array} array - incoming array to be split\n   * @param {integer} n - total subarrays  \n   * @return ArrayExpression\n   */\n  hamsters.tools.splitArray = function(array, n) {\n    let i = 0;\n    let tasks = [];\n    let size = Math.ceil(array.length/n);\n    if(array.slice) {\n      while(i < array.length) {\n        tasks.push(array.slice(i, i += size));\n      }\n    } else {\n      while (i < array.length) {\n        tasks.push(array.subarray(i, i += size));\n      }\n    }\n    return tasks;\n  };\n\n  /**\n   * @description: Abstracts for loop usage\n   * @constructor\n   * @method for\n   * @param {object} input - input params\n   * @param {function} callback - callback when output ready\n   * @return \n   */\n  hamsters.tools.loop = function(input, callback) {\n    if(!input.array) {\n      console.error('Missing data array');\n      return;\n    }\n    let threads = input.threads || 1;\n    if(!hamsters.wheel.env.legacy) {\n      input.operator = String(input.operator);\n      if(!hamsters.wheel.env.worker) {\n        input.operator = input.operator.substring(input.operator.indexOf(\"{\")+1, input.operator.length-1);\n      }\n    }\n    let params = {\n      run: input.operator,\n      init: input.startIndex || 0,\n      array: input.array,\n      incrementBy: input.incrementBy || 1,\n      dataType: input.dataType || null,\n      worker: hamsters.wheel.env.worker\n    };\n    if(threads === 1) {\n      params.limit = input.limit || input.array.length;\n    } else {\n      params.limit = 'compute';\n    }\n    hamsters.run(params, function() {\n      if(typeof self.params.run === 'string') {\n        if(!self.params.worker) {\n          self.operator = new Function(self.params.run);\n        } else {\n          self.operator = eval(\"(\" + self.params.run + \")\");\n        }\n      } else {\n        self.operator = self.params.run;\n      }\n      if(self.params.limit === 'compute') {\n        self.params.limit = self.params.array.length;\n      }\n      let i = 0;\n      for (i = self.params.init; i < self.params.limit; i += self.params.incrementBy) {\n        rtn.data.push(self.operator(self.params.array[i]));\n      }\n    }, function(output) {\n      callback(output);\n    }, threads, true, input.dataType);\n  };\n\n  /**\n   * @description: Parses a json string in a background thread\n   * @constructor\n   * @method parseJson\n   * @param {string} string - json string object\n   * @param {function} callback - callback when output ready\n   * @return \n   */\n  hamsters.tools.parseJson = function(string, callback) {\n    hamsters.run({input: string}, function() {\n      rtn.data.push(JSON.parse(params.input));\n    }, function(output) {\n      callback(output[0]);\n    }, 1, true);\n  };\n\n  /**\n   * @description: Stringifies a json object in a background thread\n   * @constructor\n   * @method parseJson\n   * @param {object} json - json object\n   * @param {function} callback - callback when output ready\n   * @return \n   */\n  hamsters.tools.stringifyJson = function(json, callback) {\n    hamsters.run({input: json}, function() {\n      rtn.data.push(JSON.stringify(params.input));\n    }, function(output) {\n      callback(output[0]);\n    }, 1, true);\n  };\n\n  /**\n   * @description: Generates a worker which generates an array of random numbers for testing\n   * @constructor\n   * @function randomArray\n   * @method randomArray\n   * @param {integer} count - array size\n   * @param {function} callback - callback when array ready\n   * @return \n   */\n  hamsters.tools.randomArray = function(count, callback) {\n    if(!count || !callback) {\n      hamsters.wheel.errors.push({\n        msg: 'Unable to generate random array, missing required params'\n      });\n      return;\n    }\n    let params = {\n      count: count\n    };\n    hamsters.run(params, function() {\n      let total = params.count;\n      let i = 0;\n      while(i < total) {\n        rtn.data[rtn.data.length] = Math.round(Math.random() * (100 - 1) + 1);\n        i += 1;\n      }\n    }, function(output) {\n        callback(output);\n    }, 1, false, null, false);\n  };\n\n    /**\n * Description\n * @method compareArrays\n * @param {array} array1\n * @param {array} array2\n * @return CallExpression\n */\n  hamsters.wheel.compareArrays = function (array1, array2) {\n      if(!array1 && !array2) {\n        return true;\n      }\n      if (array1.length !== array2.length) {\n          return false;\n      }\n      return array1.every(function (el, i) {\n          return (el === array2[i]);\n      });\n  };\n\n  /**\n   * Description\n   * @method checkCache\n   * @param {string} fn\n   * @param {array} input\n   * @param {string} dataType\n   * @return \n  */\n  hamsters.wheel.checkCache = function(fn, input, dataType) {\n    let item;\n    for (let i = 0, len = sessionStorage.length; i < len; i++) {\n      item = eval('('+sessionStorage[i]+')');\n      let equals = hamsters.wheel.compareArrays(item.input, input);\n      if(item && item.func === fn && equals  && !item.dataType && !dataType) {\n        return item.output;\n      } else if(item && item.func === fn && equals && item.dataType === dataType) {\n        return hamsters.wheel.processDataType(item.dataType, item.output);\n      }\n    }\n  };\n\n  hamsters.wheel.memoize = function(fn, inputArray, output, dataType) {\n    if(hamsters.wheel.checkCache(fn, input, dataType)) {\n      return;\n    }\n    try {\n      sessionStorage.setItem(sessionStorage.length, JSON.stringify({'func': fn, 'input': inputArray, 'output': output, 'dataType': dataType}));\n    } catch(eve) {\n      if(eve.name === 'QuotaExceededError') {\n        sessionStorage.clear();\n        try {\n          sessionStorage.setItem(sessionStorage.length, JSON.stringify({'func': fn, 'input': inputArray, 'output': output, 'dataType': dataType}));\n        } catch(e) { //Do nothing, can't cache this result..too large\n          return;\n        }\n      }\n    }\n  };\n\n  /**\n    * @description: Setups library objects for web worker use with library boilerplate\n    * @constructor\n    * @function spawnHamsters\n    * @method spawnHamsters\n    * @return \n  */\n  let spawnHamsters = function() {\n    if(hamsters.wheel.env.browser) {\n      hamsters.wheel.uri = self.URL.createObjectURL(createBlob('(' + String(giveHamsterWork(false)) + '());'));\n    }\n    if(hamsters.persistence) {\n      let i = hamsters.maxThreads;\n      for (i; i > 0; i--) {\n        if(hamsters.wheel.env.node || hamsters.wheel.env.ie10) {\n          hamsters.wheel.hamsters.push(new Worker('common/wheel.min.js'));\n        } else if(hamsters.wheel.env.worker) {\n          hamsters.wheel.hamsters.push(new SharedWorker(hamsters.wheel.uri, 'SharedHamsterWheel'));\n        } else {\n          hamsters.wheel.hamsters.push(new Worker(hamsters.wheel.uri));\n        }\n      }\n    }\n  };\n  \n  /**\n    * @description: Creates boiler plate logic for worker thread\n    * @constructor\n    * @method giveHamsterWork\n    * @return work\n  */\n  let giveHamsterWork = function(worker) {\n    /**\n     * Description\n     * @method processDataType\n     * @param {string} dataType\n     * @param {array} buffer\n     * @return arr\n     */\n    /**\n     * Description\n     * @method onmessage\n     * @param {object} e\n     * @return \n     */\n    if(worker) {\n      return function() {\n        self.processDataType = function(dataType, buffer) {\n          let types = {\n            'uint32': Uint32Array,\n            'uint16': Uint16Array,\n            'uint8': Uint8Array,\n            'uint8clamped': Uint8ClampedArray,\n            'int32': Int32Array,\n            'int16': Int16Array,\n            'int8': Int8Array,\n            'float32': Float32Array,\n            'float64': Float64Array\n          };\n          if(!types[dataType]) {\n            return dataType;\n          }\n          return new types[dataType](buffer);\n        };\n        self.addEventListener(\"connect\", function(e) {\n            let port = e.ports[0];\n            port.start();\n            port.addEventListener(\"message\", function(e) {\n                self.rtn = {\n                    success: true,\n                    data: []\n                };\n                self.params = e.data;\n                self.fn = eval(\"(\" + params.fn + \")\");\n                if (fn) {\n                  self.fn();\n                }\n                if(self.params.dataType && self.params.dataType != \"na\") {\n                  self.rtn.data = self.processDataType(self.params.dataType, self.rtn.data);\n                  self.rtn.dataType = self.params.dataType;\n                }\n                port.postMessage({\n                  results: self.rtn\n                });\n            }, false);\n        }, false);\n      };\n    }\n    /**\n     * Description\n     * @method onmessage\n     * @param {object} e\n     * @return \n     */\n    return function() {\n      self.processDataType = function(dataType, buffer) {\n        let types = {\n          'uint32': Uint32Array,\n          'uint16': Uint16Array,\n          'uint8': Uint8Array,\n          'uint8clamped': Uint8ClampedArray,\n          'int32': Int32Array,\n          'int16': Int16Array,\n          'int8': Int8Array,\n          'float32': Float32Array,\n          'float64': Float64Array\n        };\n        if(!types[dataType]) {\n          return dataType;\n        }\n        return new types[dataType](buffer);\n      };\n      self.onmessage = function(e) {\n        self.rtn = {\n          success: true, \n          data: []\n        };\n        self.params = e.data;\n        self.fn = new Function(self.params.fn);\n        if(self.fn) {\n          self.fn();\n        }\n        if(self.params.dataType && self.params.dataType != \"na\") {\n          self.rtn.data = self.processDataType(self.params.dataType, self.rtn.data);\n          self.rtn.dataType = self.params.dataType;\n          self.postMessage({\n            results: self.rtn\n          }, [rtn.data.buffer]);\n        } else {\n          self.postMessage({\n            results: self.rtn\n          });\n        }\n      };\n    };\n  };\n\n  /**\n    * @description: Sorts an array of objects based on incoming property param\n    * @constructor\n    * @method sort\n    * @param {string} property - property to sort by\n    * @return FunctionExpression\n  */\n  hamsters.wheel.sort = function(arr, order) {\n    if(order === 'desc') {\n      return Array.prototype.sort.call(arr, function(a, b) {\n        return b - a; \n     });\n    } \n    if(order === 'asc') {\n      return Array.prototype.sort.call(arr, function(a, b) {\n        return a - b; \n     });\n    }\n    if(order === 'ascAlpha') {\n      return arr.sort();\n    }\n    if(order === 'descAlpha') {\n      return arr.reverse();\n    }\n  };\n\n  /**\n    * @description: Takes an incoming sequential function and automatically splits the work across as many defined threads for paralell execution\n    * @constructor\n    * @method run\n    * @param {object} params - Incoming params object for task\n    * @param {function} fn - Sequential function to execute\n    * @param {function} callback - Task callback when all threads complete\n    * @param {integer} workers - Total number of threads to use\n    * @param {boolean} aggregate - Aggregate individual thread outputs into final array (yes/no)\n    * @param {string} dataType - Optional typedArray data type for transferrable object support\n    * @param {boolean} memoize - Memoize final result (yes/no)\n    * @param {string} order - Optional sort direction param \n    * @return \n  */\n  hamsters.run = function(params, fn, callback, workers, aggregate, dataType, memoize, order) {\n    if(!params || !fn) {\n      return 'Error processing for loop, missing params or function';\n    }\n    workers = workers || 1;\n    let task = hamsters.wheel.newTask(hamsters.wheel.tasks.length, workers, order, dataType, fn, callback);\n    if(dataType) {\n      dataType = dataType.toLowerCase();\n    }\n    if(hamsters.cache && memoize) {\n      let result = hamsters.wheel.checkCache(fn, task.input, dataType);\n      if(result && callback) {\n        setTimeout(function() {\n          hamsters.wheel.tasks[taskid] = null; //Clean up our task, not needed any longer\n          callback(result);\n        }, 4);\n        return;\n      }\n    } else {\n      hamsters.wheel.work(task, params, fn, callback, aggregate, dataType, memoize, order);\n    }\n  };\n\n  hamsters.wheel.work = function(task, params, fn, callback, aggregate, dataType, memoize, order) {\n    let workArray = params.array || null;\n    if(params.array && task.threads !== 1) {\n      workArray = hamsters.tools.splitArray(params.array, task.threads); //Divide our array into equal array sizes\n    }\n    if(!hamsters.wheel.env.legacy) {\n      params.fn = String(fn);\n      if(!hamsters.wheel.env.worker) { //Truncate function string so we can use new Function call instead of eval\n        params.fn = params.fn.substring(params.fn.indexOf(\"{\")+1, params.fn.length-1);\n      }\n    } else {\n      params.fn = fn;\n    }\n    let food = {};\n    let key;\n    for(key in params) {\n      if(params.hasOwnProperty(key) && key !== 'array') {\n        food[key] = params[key];\n      }\n    }\n    food.dataType = dataType;\n    let i = 0;\n    while(i < task.threads) {\n      if(workArray && task.threads !== 1) {\n        hamsters.wheel.newWheel(workArray[i], food, aggregate, callback, task, task.count, null, memoize);\n      } else {\n        hamsters.wheel.newWheel(workArray, food, aggregate, callback, task, task.count, null, memoize);\n      }\n      i += 1;\n    }\n  };\n\n  /**\n    * @description: Registers new task for runtime\n    * @constructor\n    * @method newTask\n    * @param {integer} taskid - ID to use for task generation\n    * @param {integer} workers - Number of threads to spawn for this task\n    * @param {string}  order - Optional sorting order param\n    * @param {string}  dataType - Optional dataType param\n    * @param {function} fn - Function to run for this task\n    * @param {function} cb - Task callback for output result\n    * @return \n  */\n  hamsters.wheel.newTask = function(taskid, workers, order, dataType, fn, cb) {\n    hamsters.wheel.tasks.push({\n      id: taskid,\n      workers: [],\n      count: 0,\n      threads: workers, \n      input: [],\n      dataType: dataType || null,\n      fn: fn,\n      output: [], \n      order: order || null,\n      callback: cb\n    });\n    return hamsters.wheel.tasks[taskid];\n  };\n\n  /**\n    * @description: Tracks thread input for memoization\n    * @constructor\n    * @method trackInput\n    * @param {array} inputArray - Incoming array param\n    * @param {string} threadid - Current worker threadid\n    * @param {object} task - Current task to track\n    * @param {object} hamsterfood - Incoming task params\n    * @return \n  */\n  hamsters.wheel.trackInput = function(inputArray, threadid, task, hamsterfood) {\n    task.input.push({ \n      input: inputArray,\n      workerid: threadid, \n      taskid: task.id, \n      params: hamsterfood, \n      start: new Date().getTime()\n    });\n  };\n\n  hamsters.wheel.trackThread = function(task, running, id) {\n    task.workers.push(id); //Keep track of threads scoped to current task\n    running.push(id); //Keep track of all currently running threads\n  };\n\n  /**\n    * @description: Adds thread to thread pool for execution when a free thread is available\n    * @constructor\n    * @method poolThread\n    * @param {array} inputArray - Input array\n    * @param {object} hamsterfood - Input params object\n    * @param {string} threadid - task scoped worker thread id\n    * @param {function} callback - Callback function to return response\n    * @param {function} task - Work to be executed inside thread\n    * @param {boolean} agg - Aggregate final result (yes/no)\n    * @param {boolean} memoize - Memoize final result (yes/no)\n    * @return \n  */\n  hamsters.wheel.poolThread = function(inputArray, hamsterfood, threadid, cb, task, agg, memoize) {\n    hamsters.wheel.queue.pending.push({\n      memoize: memoize,\n      input: inputArray,\n      params: hamsterfood,\n      workerid: threadid, \n      callback: cb, \n      task: task,\n      aggregate: agg\n    });\n  };\n\n  /**\n    * @description: Simulates threading for execution on devices that don't support workers\n    * @constructor\n    * @method legacyProcessor\n    * @param {object} food - Input params object\n    * @param {array} inputArray - Input array\n    * @param {function} callback - Callback function to return response\n    * @return \n  */\n  hamsters.wheel.legacyProcessor = function(params, inputArray, callback) {\n    setTimeout(function() {\n      self.rtn = {\n        success: true, \n        data: []\n      };\n      self.params = params;\n      self.params.array = inputArray;\n      if(self.params.fn) {\n        self.params.fn();\n        if(self.params.dataType) {\n          self.rtn.data = hamsters.wheel.processDataType(self.params.dataType, self.rtn.data);\n          self.rtn.dataType = self.params.dataType;\n        }\n        callback(self.rtn);\n      } else {\n        self.rtn.success = false;\n        self.rtn.error = 'Missing function';\n        callback(self.rtn);\n      }\n    }, 4); //4ms delay (HTML5 spec minimum), simulate threading\n  };\n\n  /**\n    * @description: Creates dataBlob for worker generation\n    * @constructor\n    * @method createBlob\n    * @param {string} textContent - Web worker boiler plate\n    * @return blob\n  */\n  let createBlob = function(textContent) {\n    if(!self.Blob) {\n      self.BlobBuilder = self.BlobBuilder || self.WebKitBlobBuilder || self.MozBlobBuilder || self.MSBlobBuilder;\n      let blob = new BlobBuilder();\n      blob.append([textContent], {\n        type: 'application/javascript'\n      });\n      return blob.getBlob();\n    } \n    return new Blob([textContent], {\n      type: 'application/javascript'\n    });\n  };\n\n  /**\n    * @description: Aggregates individual hamster outputs into a single array\n    * @constructor\n    * @method aggregate\n    * @param {array} input - incoming array of subarrays\n    * @param {string} dataType\n    * @return output\n  */\n  hamsters.tools.aggregate = function(input, dataType) {\n    if(!dataType || !hamsters.wheel.env.transferrable) {\n      return input.reduce(function(a, b) {\n        return a.concat(b);\n      });\n    }\n    let i = 0;\n    let len = input.length;\n    let bufferLength = 0;\n    for (i; i < len; i += 1) {\n      bufferLength += input[i].length;\n    }\n    let output = hamsters.wheel.processDataType(dataType, bufferLength);\n    let offset = 0;\n    for (i = 0; i < len; i += 1) {\n      output.set(input[i], offset);\n      offset += input[i].length;\n    }\n    return output;\n  };\n\n  /**\n    * @description: Get our nested output values from each task, return array of subarrays\n    * @constructor\n    * @method getOutput\n    * @param {array} output - incoming task output\n    * @param {boolean} aggregate\n    * @param {string} dataType\n    * @return rtn\n  */\n  hamsters.wheel.getOutput = function(output, aggregate, dataType) {\n    if(aggregate && output.length <= 20) {\n      return hamsters.tools.aggregate(output, dataType);\n    }\n    return output;\n  };\n\n  /**\n    * @description: Process next item in queue\n    * @constructor\n    * @method processQueue\n    * @param {object} hamster - Most recently finished web worker, for reuse\n    * @param {blob} dataBlob\n    * @return \n  */\n  hamsters.wheel.processQueue = function(hamster, item) {\n    if(!item) {\n      return;\n    }\n    hamsters.wheel.newWheel(item.input, item.params, item.aggregate, item.callback, item.task, item.workerid, hamster, item.memoize); //Assign most recently finished thread to queue item\n  };\n\n  /**\n    * @description: Cleans up last running thread\n    * @constructor\n    * @method clean\n    * @param {object} task - Task associated with id\n    * @param {string} id - Most recently finished thread id\n    * @return \n  */\n  hamsters.wheel.clean = function(task, id) {\n    hamsters.wheel.queue.running.splice(hamsters.wheel.queue.running.indexOf(id), 1); //Remove thread from running pool\n    task.workers.splice(task.workers.indexOf(id), 1); //Remove thread from task running pool\n  };\n\n  /**\n    * @description: Handle response from worker thread, setup error handling\n    * @constructor\n    * @method trainHamster\n    * @param {integer} id - global wheel threadid\n    * @param {boolean} aggregate - boolean aggregate individual thread outputs into final array  \n    * @param {function} callback - task callback when all hamsters complete\n    * @param {integer} taskid - global wheel task id\n    * @param {integer} workerid - worker wheel threadid\n    * @param {object} hamster - web worker\n    * @param {blob} dataBlob\n    * @return \n  */\n  hamsters.wheel.trainHamster = function(id, aggregate, callback, task, hamster, memoize) {\n    /**\n      * @description: Runs when a hamster (thread) finishes it's work\n      * @constructor\n      * @method onmessage\n      * @param {object} e - Web Worker event object\n      * @return \n    */\n    let onmessage = function(e, results) {\n      hamsters.wheel.clean(task, id);\n      results = e.data.results;\n      task.output[id] = results.data;\n      if(hamsters.debug === 'verbose') {\n        console.info('Hamster #' + id + ' finished ' + '@ ' + e.timeStamp);\n      }\n      if(task.workers.length === 0 && task.count === task.threads) {\n        if(task.order) {\n          callback(hamsters.wheel.sort(hamsters.wheel.getOutput(task.output, aggregate, results.dataType), task.order));\n        } else {\n          callback(hamsters.wheel.getOutput(task.output, aggregate, results.dataType));\n        }\n        if(hamsters.debug) {\n          console.info('Execution Complete! Elapsed: ' + ((e.timeStamp - task.input[0].start)/1000) + 's');\n        }\n        hamsters.wheel.tasks[task.id] = null; //Clean up our task, not needed any longer\n        if(hamsters.cache && memoize) {\n          prepareToMemoize(task, aggregate, results);\n        }\n      }\n      if(hamsters.wheel.queue.pending.length !== 0) {\n        hamsters.wheel.processQueue(hamster, hamsters.wheel.queue.pending.shift());\n      } else if(!hamsters.persistence && !hamsters.wheel.env.worker) {\n        hamster.terminate(); //Kill the thread only if no items waiting to run (20-22% performance improvement observed during testing, repurposing threads vs recreating them)\n      }\n    };\n\n    let prepareToMemoize = function(task, aggregate, results) {\n      let output = hamsters.wheel.getOutput(task.output, aggregate, results.dataType);\n      if(output && !output.slice) {\n        hamsters.wheel.memoize(task.fn, task.input[0].input, hamsters.wheel.normalizeArray(output), results.dataType);\n      } else {\n        hamsters.wheel.memoize(task.fn, task.input[0].input, hamsters.wheel.getOutput(task.output, aggregate, results.dataType), results.dataType);\n      }\n    };\n\n    /**\n      * @description: Setup error handling\n      * @constructor\n      * @method errorHandler\n      * @param {object} e - Web Worker event object\n      * @return \n    */\n    let onerror = function(e) {\n      if(!hamsters.wheel.env.worker) {\n        hamster.terminate(); //Kill the thread\n      }\n      hamsters.wheel.errors.push({\n        msg: 'Error Hamster #' + id + ': Line ' + e.lineno + ' in ' + e.filename + ': ' + e.message\n      });\n      console.error('Error Hamster #' + id + ': Line ' + e.lineno + ' in ' + e.filename + ': ' + e.message);\n    };\n\n    if(hamsters.wheel.env.worker) {\n      hamster.port.onmessage = onmessage;\n      hamster.port.onerror = onerror;\n    } else {\n      hamster.onmessage = onmessage;\n      hamster.onerror = onerror;\n    }   \n  };\n\n  /**\n    * @description: Normalizes typed array into normal array\n    * @constructor\n    * @method normalizeArray\n    * @param {object} input - typedArray input\n    * @return arr\n  */\n  hamsters.wheel.normalizeArray = function(input) {\n    let arr = [];\n    let n = 0;\n    let len = input.length;\n    for (n; n < len; n += 1) {\n      arr.push(input[n]);\n    }\n    return arr;\n  };\n\n  hamsters.wheel.processData = function(dataType, buffer) {\n    let types = {\n      'uint32': Uint32Array,\n      'uint16': Uint16Array,\n      'uint8': Uint8Array,\n      'uint8clamped': Uint8ClampedArray,\n      'int32': Int32Array,\n      'int16': Int16Array,\n      'int8': Int8Array,\n      'float32': Float32Array,\n      'float64': Float64Array\n    };\n    if(!types[dataType]) {\n      return dataType;\n    }\n    return new types[dataType](buffer);\n  };\n\n  /**\n    * @description: Converts array buffer or normal array into a typed array\n    * @constructor\n    * @method processDataType\n    * @param {string} dataType - dataType config param\n    * @param {object} buffer - buffer object or normal array\n    * @return arr\n  */\n  hamsters.wheel.processDataType = function(dataType, buffer) {\n    if(hamsters.wheel.env.transferrable) {\n      return hamsters.wheel.processData(dataType, buffer);\n    }\n    return buffer; //Return normal array if transferrable objects not supported\n  };\n\n  /**\n    * @description: Sends message to worker thread to invoke execution\n    * @constructor\n    * @method feedHamster\n    * @param {object} hamster - web worker\n    * @param {object} food - params object for worker\n    * @param {array} inputArray\n    * @return \n  */\n  hamsters.wheel.feedHamster = function(hamster, food, inputArray) {\n    if(hamsters.wheel.env.worker || hamsters.wheel.env.ie10) {\n      food.array = inputArray;\n      if(hamsters.wheel.env.ie10) {\n        food.ie = true;\n        hamster.postMessage(food);\n      } else {\n        hamster.port.postMessage(food);\n      }\n    } else {\n      let key, buffers = [];\n      if(inputArray) {\n        if(food.dataType) { //Transferable object transfer if using typed array\n          food.array = hamsters.wheel.processDataType(food.dataType, inputArray);\n        } else {\n          food.array = inputArray;\n        }\n      }\n      for(key in food) {\n        if(food.hasOwnProperty(key) && food[key] && food[key].buffer) {\n          buffers.push(food[key].buffer);\n        }\n      }\n      hamster.postMessage(food,  buffers);\n    }\n  };\n\n  /**\n    * @description: Creates new worker thread with body of work to be completed\n    * @constructor\n    * @method newWheel\n    * @param {array} inputArray\n    * @param {object} hamsterfood - incoming params object for worker\n    * @param {boolean} aggregate - boolean aggregate individual thread outputs into final array  \n    * @param {function} callback - task callback when all hamsters complete\n    * @param {integer} taskid - global wheel task id\n    * @param {integer} threadid - global wheel threadid\n    * @param {object} hamster - web worker\n    * @param {blob} dataBlob\n    * @return \n   */\n  setupEnv(function(legacy) {\n    if(legacy) {\n      hamsters.wheel.newWheel = function(inputArray, hamsterfood, aggregate, callback, task, threadid, hamster, memoize) {\n        hamsters.wheel.trackThread(task, hamsters.wheel.queue.running, threadid);\n        if(memoize || hamsters.debug) {\n          hamsters.wheel.trackInput(inputArray, threadid, task, hamsterfood);\n        }\n        hamsters.wheel.legacyProcessor(hamsterfood, inputArray, function(output) {\n          hamsters.wheel.clean(task, threadid);\n          task.output[threadid] = output.data;\n          if(task.workers.length === 0 && task.count === task.threads) { //Task complete get output and return\n            if(hamsters.debug) {\n              console.info('Execution Complete! Elapsed: ' + ((new Date().getTime() - task.input[0].start)/1000) + 's');\n            }\n            callback(hamsters.wheel.getOutput(task.output, aggregate, output.dataType));\n            hamsters.wheel.tasks[task.id] = null; //Clean up our task, not needed any longer\n            if(hamsters.cache && memoize !== false) {\n              if(output.data.length > 0 && !output.dataType) {\n                hamsters.wheel.memoize(task.fn, task.input, output.data, 'na');\n              } else if(output.data.length > 0 && output.dataType) {\n                hamsters.wheel.memoize(task.fn, task.input, hamsters.wheel.normalizeArray(output.data), output.dataType);\n              }\n            }\n          }\n        });\n        task.count += 1; //Thread finished\n        return;\n      };\n    } else {\n      hamsters.wheel.newWheel = function(inputArray, hamsterfood, aggregate, callback, task, threadid, hamster, memoize) {\n        if(hamsters.maxThreads === hamsters.wheel.queue.running.length) {\n          hamsters.wheel.poolThread(inputArray, hamsterfood, threadid, callback, task, aggregate, memoize);\n          return;\n        }\n        if(memoize || hamsters.debug) {\n          hamsters.wheel.trackInput(inputArray, threadid, task, hamsterfood);\n        }\n        if(!hamster) {\n          if(hamsters.persistence) {\n            hamster = hamsters.wheel.hamsters[hamsters.wheel.queue.running.length];\n          } else if(hamsters.wheel.env.node || hamsters.wheel.env.ie10) {\n            hamster = new Worker('common/wheel.min.js');\n          } else if(hamsters.wheel.env.worker) {\n            hamster = new SharedWorker(hamsters.wheel.uri, 'SharedHamsterWheel');\n          } else {\n            hamster = new Worker(hamsters.wheel.uri);\n          }\n        }\n        hamsters.wheel.trainHamster(threadid, aggregate, callback, task, hamster, memoize);\n        hamsters.wheel.trackThread(task, hamsters.wheel.queue.running, threadid);\n        hamsters.wheel.feedHamster(hamster, hamsterfood, inputArray);\n        task.count += 1; //Increment count, thread is running\n        if(hamsters.debug === 'verbose') {\n          console.info('Spawning Hamster #' + threadid + ' @ ' + new Date().getTime());\n        }\n      };\n      spawnHamsters();\n    }\n  });\n})();\n\n\n\n// WEBPACK FOOTER //\n// ./~/Hamsters.js/src/es6/hamsters.js","﻿(function () {\n\tvar isCommonJS = typeof module !== 'undefined' && module.exports;\n\tvar isNode = !(typeof window !== 'undefined' && this === window);\n\tvar setImmediate = setImmediate || function (cb) {\n\t\tsetTimeout(cb, 0);\n\t};\n\tvar Worker = isNode ? require(__dirname + '/Worker.js') : self.Worker;\n\tvar URL = typeof self !== 'undefined' ? (self.URL ? self.URL : self.webkitURL) : null;\n\tvar _supports = (isNode || self.Worker) ? true : false; // node always supports parallel\n\n\tfunction extend(from, to) {\n\t\tif (!to) to = {};\n\t\tfor (var i in from) {\n\t\t\tif (to[i] === undefined) to[i] = from[i];\n\t\t}\n\t\treturn to;\n\t}\n\n\tfunction Operation() {\n\t\tthis._callbacks = [];\n\t\tthis._errCallbacks = [];\n\n\t\tthis._resolved = 0;\n\t\tthis._result = null;\n\t}\n\n\tOperation.prototype.resolve = function (err, res) {\n\t\tif (!err) {\n\t\t\tthis._resolved = 1;\n\t\t\tthis._result = res;\n\n\t\t\tfor (var i = 0; i < this._callbacks.length; ++i) {\n\t\t\t\tthis._callbacks[i](res);\n\t\t\t}\n\t\t} else {\n\t\t\tthis._resolved = 2;\n\t\t\tthis._result = err;\n\n\t\t\tfor (var iE = 0; iE < this._errCallbacks.length; ++iE) {\n\t\t\t\tthis._errCallbacks[iE](err);\n\t\t\t}\n\t\t}\n\n\t\tthis._callbacks = [];\n\t\tthis._errCallbacks = [];\n\t};\n\n\tOperation.prototype.then = function (cb, errCb) {\n\t\tif (this._resolved === 1) { // result\n\t\t\tif (cb) {\n\t\t\t\tcb(this._result);\n\t\t\t}\n\n\t\t\treturn;\n\t\t} else if (this._resolved === 2) { // error\n\t\t\tif (errCb) {\n\t\t\t\terrCb(this._result);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tif (cb) {\n\t\t\tthis._callbacks[this._callbacks.length] = cb;\n\t\t}\n\n\t\tif (errCb) {\n\t\t\tthis._errCallbacks[this._errCallbacks.length] = errCb;\n\t\t}\n\t\treturn this;\n\t};\n\n\tvar defaults = {\n\t\tevalPath: isNode ? __dirname + '/eval.js' : null,\n\t\tmaxWorkers: isNode ? require('os').cpus().length : (navigator.hardwareConcurrency || 4),\n\t\tsynchronous: true,\n\t\tenv: {},\n\t\tenvNamespace: 'env'\n\t};\n\n\tfunction Parallel(data, options) {\n\t\tthis.data = data;\n\t\tthis.options = extend(defaults, options);\n\t\tthis.operation = new Operation();\n\t\tthis.operation.resolve(null, this.data);\n\t\tthis.requiredScripts = [];\n\t\tthis.requiredFunctions = [];\n\t}\n\n\t// static method\n\tParallel.isSupported = function () { return _supports; }\n\n\tParallel.prototype.getWorkerSource = function (cb, env) {\n\t\tvar that = this;\n\t\tvar preStr = '';\n\t\tvar i = 0;\n\t\tif (!isNode && this.requiredScripts.length !== 0) {\n\t\t\tpreStr += 'importScripts(\"' + this.requiredScripts.join('\",\"') + '\");\\r\\n';\n\t\t}\n\n\t\tfor (i = 0; i < this.requiredFunctions.length; ++i) {\n\t\t\tif (this.requiredFunctions[i].name) {\n\t\t\t\tpreStr += 'var ' + this.requiredFunctions[i].name + ' = ' + this.requiredFunctions[i].fn.toString() + ';';\n\t\t\t} else {\n\t\t\t\tpreStr += this.requiredFunctions[i].fn.toString();\n\t\t\t}\n\t\t}\n\n\t\tenv = JSON.stringify(env || {});\n\n\t\tvar ns = this.options.envNamespace;\n\n\t\tif (isNode) {\n\t\t\treturn preStr + 'process.on(\"message\", function(e) {global.' + ns + ' = ' + env + ';process.send(JSON.stringify((' + cb.toString() + ')(JSON.parse(e).data)))})';\n\t\t} else {\n\t\t\treturn preStr + 'self.onmessage = function(e) {var global = {}; global.' + ns + ' = ' + env + ';self.postMessage((' + cb.toString() + ')(e.data))}';\n\t\t}\n\t};\n\n\tParallel.prototype.require = function () {\n\t\tvar args = Array.prototype.slice.call(arguments, 0),\n\t\t\tfunc;\n\n\t\tfor (var i = 0; i < args.length; i++) {\n\t\t\tfunc = args[i];\n\n\t\t\tif (typeof func === 'string') {\n\t\t\t\tthis.requiredScripts.push(func);\n\t\t\t} else if (typeof func === 'function') {\n\t\t\t\tthis.requiredFunctions.push({ fn: func });\n\t\t\t} else if (typeof func === 'object') {\n\t\t\t\tthis.requiredFunctions.push(func);\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t};\n\n\tParallel.prototype._spawnWorker = function (cb, env) {\n\t\tvar wrk;\n\t\tvar src = this.getWorkerSource(cb, env);\n\t\tif (isNode) {\n\t\t\twrk = new Worker(this.options.evalPath);\n\t\t\twrk.postMessage(src);\n\t\t} else {\n\t\t\tif (Worker === undefined) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (this.requiredScripts.length !== 0) {\n\t\t\t\t\tif (this.options.evalPath !== null) {\n\t\t\t\t\t\twrk = new Worker(this.options.evalPath);\n\t\t\t\t\t\twrk.postMessage(src);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthrow new Error('Can\\'t use required scripts without eval.js!');\n\t\t\t\t\t}\n\t\t\t\t} else if (!URL) {\n\t\t\t\t\tthrow new Error('Can\\'t create a blob URL in this browser!');\n\t\t\t\t} else {\n\t\t\t\t\tvar blob = new Blob([src], { type: 'text/javascript' });\n\t\t\t\t\tvar url = URL.createObjectURL(blob);\n\n\t\t\t\t\twrk = new Worker(url);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\tif (this.options.evalPath !== null) { // blob/url unsupported, cross-origin error\n\t\t\t\t\twrk = new Worker(this.options.evalPath);\n\t\t\t\t\twrk.postMessage(src);\n\t\t\t\t} else {\n\t\t\t\t\tthrow e;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn wrk;\n\t};\n\n\tParallel.prototype.spawn = function (cb, env) {\n\t\tvar that = this;\n\t\tvar newOp = new Operation();\n\n\t\tenv = extend(this.options.env, env || {});\n\n\t\tthis.operation.then(function () {\n\t\t\tvar wrk = that._spawnWorker(cb, env);\n\t\t\tif (wrk !== undefined) {\n\t\t\t\twrk.onmessage = function (msg) {\n\t\t\t\t\twrk.terminate();\n\t\t\t\t\tthat.data = msg.data;\n\t\t\t\t\tnewOp.resolve(null, that.data);\n\t\t\t\t};\n\t\t\t\twrk.onerror = function (e) {\n\t\t\t\t\twrk.terminate();\n\t\t\t\t\tnewOp.resolve(e, null);\n\t\t\t\t};\n\t\t\t\twrk.postMessage(that.data);\n\t\t\t} else if (that.options.synchronous) {\n\t\t\t\tsetImmediate(function () {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tthat.data = cb(that.data);\n\t\t\t\t\t\tnewOp.resolve(null, that.data);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\tnewOp.resolve(e, null);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthrow new Error('Workers do not exist and synchronous operation not allowed!');\n\t\t\t}\n\t\t});\n\t\tthis.operation = newOp;\n\t\treturn this;\n\t};\n\n\tParallel.prototype._spawnMapWorker = function (i, cb, done, env, wrk) {\n\t\tvar that = this;\n\n\t\tif (!wrk) wrk = that._spawnWorker(cb, env);\n\n\t\tif (wrk !== undefined) {\n\t\t\twrk.onmessage = function (msg) {\n\t\t\t\tthat.data[i] = msg.data;\n\t\t\t\tdone(null, wrk);\n\t\t\t};\n\t\t\twrk.onerror = function (e) {\n\t\t\t\twrk.terminate();\n\t\t\t\tdone(e);\n\t\t\t};\n\t\t\twrk.postMessage(that.data[i]);\n\t\t} else if (that.options.synchronous) {\n\t\t\tsetImmediate(function () {\n\t\t\t\tthat.data[i] = cb(that.data[i]);\n\t\t\t\tdone();\n\t\t\t});\n\t\t} else {\n\t\t\tthrow new Error('Workers do not exist and synchronous operation not allowed!');\n\t\t}\n\t};\n\n\tParallel.prototype.map = function (cb, env) {\n\t\tenv = extend(this.options.env, env || {});\n\n\t\tif (!this.data.length) {\n\t\t\treturn this.spawn(cb, env);\n\t\t}\n\n\t\tvar that = this;\n\t\tvar startedOps = 0;\n\t\tvar doneOps = 0;\n\t\tfunction done(err, wrk) {\n\t\t\tif (err) {\n\t\t\t\tnewOp.resolve(err, null);\n\t\t\t} else if (++doneOps === that.data.length) {\n\t\t\t\tnewOp.resolve(null, that.data);\n\t\t\t\tif (wrk) wrk.terminate();\n\t\t\t} else if (startedOps < that.data.length) {\n\t\t\t\tthat._spawnMapWorker(startedOps++, cb, done, env, wrk);\n\t\t\t} else {\n\t\t\t\tif (wrk) wrk.terminate();\n\t\t\t}\n\t\t}\n\n\t\tvar newOp = new Operation();\n\t\tthis.operation.then(function () {\n\t\t\tfor (; startedOps - doneOps < that.options.maxWorkers && startedOps < that.data.length; ++startedOps) {\n\t\t\t\tthat._spawnMapWorker(startedOps, cb, done, env);\n\t\t\t}\n\t\t}, function (err) {\n\t\t\tnewOp.resolve(err, null);\n\t\t});\n\t\tthis.operation = newOp;\n\t\treturn this;\n\t};\n\n\tParallel.prototype._spawnReduceWorker = function (data, cb, done, env, wrk) {\n\t\tvar that = this;\n\t\tif (!wrk) wrk = that._spawnWorker(cb, env);\n\n\t\tif (wrk !== undefined) {\n\t\t\twrk.onmessage = function (msg) {\n\t\t\t\tthat.data[that.data.length] = msg.data;\n\t\t\t\tdone(null, wrk);\n\t\t\t};\n\t\t\twrk.onerror = function (e) {\n\t\t\t\twrk.terminate();\n\t\t\t\tdone(e, null);\n\t\t\t}\n\t\t\twrk.postMessage(data);\n\t\t} else if (that.options.synchronous) {\n\t\t\tsetImmediate(function () {\n\t\t\t\tthat.data[that.data.length] = cb(data);\n\t\t\t\tdone();\n\t\t\t});\n\t\t} else {\n\t\t\tthrow new Error('Workers do not exist and synchronous operation not allowed!');\n\t\t}\n\t};\n\n\tParallel.prototype.reduce = function (cb, env) {\n\t\tenv = extend(this.options.env, env || {});\n\n\t\tif (!this.data.length) {\n\t\t\tthrow new Error('Can\\'t reduce non-array data');\n\t\t}\n\n\t\tvar runningWorkers = 0;\n\t\tvar that = this;\n\t\tfunction done(err, wrk) {\n\t\t\t--runningWorkers;\n\t\t\tif (err) {\n\t\t\t\tnewOp.resolve(err, null);\n\t\t\t} else if (that.data.length === 1 && runningWorkers === 0) {\n\t\t\t\tthat.data = that.data[0];\n\t\t\t\tnewOp.resolve(null, that.data);\n\t\t\t\tif (wrk) wrk.terminate();\n\t\t\t} else if (that.data.length > 1) {\n\t\t\t\t++runningWorkers;\n\t\t\t\tthat._spawnReduceWorker([that.data[0], that.data[1]], cb, done, env, wrk);\n\t\t\t\tthat.data.splice(0, 2);\n\t\t\t} else {\n\t\t\t\tif (wrk) wrk.terminate();\n\t\t\t}\n\t\t}\n\n\t\tvar newOp = new Operation();\n\t\tthis.operation.then(function () {\n\t\t\tif (that.data.length === 1) {\n\t\t\t\tnewOp.resolve(null, that.data[0]);\n\t\t\t} else {\n\t\t\t\tfor (var i = 0; i < that.options.maxWorkers && i < Math.floor(that.data.length / 2) ; ++i) {\n\t\t\t\t\t++runningWorkers;\n\t\t\t\t\tthat._spawnReduceWorker([that.data[i * 2], that.data[i * 2 + 1]], cb, done, env);\n\t\t\t\t}\n\n\t\t\t\tthat.data.splice(0, i * 2);\n\t\t\t}\n\t\t});\n\t\tthis.operation = newOp;\n\t\treturn this;\n\t};\n\n\tParallel.prototype.then = function (cb, errCb) {\n\t\tvar that = this;\n\t\tvar newOp = new Operation();\n\t\terrCb = typeof errCb === 'function' ? errCb : function(){};\n\n\t\tthis.operation.then(function () {\n\t\t\tvar retData;\n\n\t\t\ttry {\n\t\t\t\tif (cb) {\n\t\t\t\t\tretData = cb(that.data);\n\t\t\t\t\tif (retData !== undefined) {\n\t\t\t\t\t\tthat.data = retData;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tnewOp.resolve(null, that.data);\n\t\t\t} catch (e) {\n\t\t\t\tif (errCb) {\n\t\t\t\t\tretData = errCb(e);\n\t\t\t\t\tif (retData !== undefined) {\n\t\t\t\t\t\tthat.data = retData;\n\t\t\t\t\t}\n\n\t\t\t\t\tnewOp.resolve(null, that.data);\n\t\t\t\t} else {\n\t\t\t\t\tnewOp.resolve(null, e);\n\t\t\t\t}\n\t\t\t}\n\t\t}, function (err) {\n\t\t\tif (errCb) {\n\t\t\t\tvar retData = errCb(err);\n\t\t\t\tif (retData !== undefined) {\n\t\t\t\t\tthat.data = retData;\n\t\t\t\t}\n\n\t\t\t\tnewOp.resolve(null, that.data);\n\t\t\t} else {\n\t\t\t\tnewOp.resolve(null, err);\n\t\t\t}\n\t\t});\n\t\tthis.operation = newOp;\n\t\treturn this;\n\t};\n\n\tif (isCommonJS) {\n\t\tmodule.exports = Parallel;\n\t} else {\n\t\tself.Parallel = Parallel;\n\t}\n})();\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/paralleljs/lib/parallel.js\n// module id = 12\n// module chunks = 0","'use strict';\n\nexports.__esModule = true;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nexports.getConfig = getConfig;\nexports.setConfig = setConfig;\nvar configuration = {\n  basepath: {\n    node: '',\n    web: ''\n  },\n  fallback: {\n    slaveScriptUrl: ''\n  }\n};\n\nfunction configDeepMerge(destObj, srcObj) {\n  var ancestorProps = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n\n  Object.keys(srcObj).forEach(function (propKey) {\n    var srcValue = srcObj[propKey];\n    var ancestorPropsAndThis = ancestorProps.concat([propKey]);\n\n    if ((typeof srcValue === 'undefined' ? 'undefined' : _typeof(srcValue)) === 'object') {\n      if (typeof destObj[propKey] !== 'undefined' && _typeof(destObj[propKey]) !== 'object') {\n        throw new Error('Expected config property not to be an object: ' + ancestorPropsAndThis.join('.'));\n      }\n      configDeepMerge(destObj[propKey], srcValue, ancestorPropsAndThis);\n    } else {\n      if (_typeof(destObj[propKey]) === 'object') {\n        throw new Error('Expected config property to be an object: ' + ancestorPropsAndThis.join('.'));\n      }\n      destObj[propKey] = srcValue;\n    }\n  });\n}\n\nvar config = {\n  get: function get() {\n    return configuration;\n  },\n\n  set: function set(newConfig) {\n    if ((typeof newConfig === 'undefined' ? 'undefined' : _typeof(newConfig)) !== 'object') {\n      throw new Error('Expected config object.');\n    }\n\n    configDeepMerge(configuration, newConfig);\n  }\n};\n\nexports.default = config;\nfunction getConfig() {\n  return config.get();\n}\n\nfunction setConfig() {\n  return config.set.apply(config, arguments);\n}\n//# sourceMappingURL=config.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/threads/lib/config.js\n// module id = 13\n// module chunks = 0","var nextTick = require('process/browser.js').nextTick;\nvar apply = Function.prototype.apply;\nvar slice = Array.prototype.slice;\nvar immediateIds = {};\nvar nextImmediateId = 0;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function() {\n  return new Timeout(apply.call(setTimeout, window, arguments), clearTimeout);\n};\nexports.setInterval = function() {\n  return new Timeout(apply.call(setInterval, window, arguments), clearInterval);\n};\nexports.clearTimeout =\nexports.clearInterval = function(timeout) { timeout.close(); };\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\nTimeout.prototype.close = function() {\n  this._clearFn.call(window, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function(item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function(item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function(item) {\n  clearTimeout(item._idleTimeoutId);\n\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout)\n        item._onTimeout();\n    }, msecs);\n  }\n};\n\n// That's not how node.js implements it but the exposed api is the same.\nexports.setImmediate = typeof setImmediate === \"function\" ? setImmediate : function(fn) {\n  var id = nextImmediateId++;\n  var args = arguments.length < 2 ? false : slice.call(arguments, 1);\n\n  immediateIds[id] = true;\n\n  nextTick(function onNextTick() {\n    if (immediateIds[id]) {\n      // fn.call() is faster so we optimize for the common use-case\n      // @see http://jsperf.com/call-apply-segu\n      if (args) {\n        fn.apply(null, args);\n      } else {\n        fn.call(null);\n      }\n      // Prevent ids from leaking\n      exports.clearImmediate(id);\n    }\n  });\n\n  return id;\n};\n\nexports.clearImmediate = typeof clearImmediate === \"function\" ? clearImmediate : function(id) {\n  delete immediateIds[id];\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/timers-browserify/main.js\n// module id = 14\n// module chunks = 0","'use strict';\n\nexports.__esModule = true;\nexports.Pool = exports.defaults = exports.config = undefined;\nexports.spawn = spawn;\n\nrequire('native-promise-only');\n\nvar _config = require('./config');\n\nvar _config2 = _interopRequireDefault(_config);\n\nvar _defaults = require('./defaults');\n\nvar _defaults2 = _interopRequireDefault(_defaults);\n\nvar _pool = require('./pool');\n\nvar _pool2 = _interopRequireDefault(_pool);\n\nvar _worker = require('./worker');\n\nvar _worker2 = _interopRequireDefault(_worker);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.config = _config2.default;\nexports.defaults = _defaults2.default;\nexports.Pool = _pool2.default;\nfunction spawn() {\n  var runnable = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n  var importScripts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n\n  return new _worker2.default(runnable, importScripts);\n}\n\nexports.default = {\n  config: _config2.default,\n  defaults: _defaults2.default,\n  Pool: _pool2.default,\n  spawn: spawn,\n  Worker: _worker2.default\n};\n//# sourceMappingURL=index.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/threads/lib/index.js\n// module id = 15\n// module chunks = 0","'use strict';\n\n/*eslint-env node*/\n/*\n * This file is only a stub to make './defaults' resolve the './defaults.node' module.\n * Loading the browser defaults into the browser bundle is done in the gulpfile by\n * configuring a browserify override.\n */\n\nif (typeof process !== 'undefined' && 'pid' in process) {\n  module.exports = require('./defaults.node');\n} else {\n  module.exports = require('./defaults.browser');\n}\n//# sourceMappingURL=defaults.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/threads/lib/defaults.js\n// module id = 16\n// module chunks = 0","import {hamsters, HamsterClosure} from \"Hamsters.js\";\nimport {Params} from \"Hamsters.js\";\n\nexport interface ICoordinate {\n    readonly x: number;\n    readonly y: number;\n}\n\nfunction knightTours(this: HamsterClosure<{ array: ICoordinate[][], boardSize: number}, number>): void {\n    const moves = [\n        { x: -2, y: -1 }, { x: -2, y: 1}, { x: -1, y: -2 }, { x: -1, y: 2 },\n        { x: 1, y: -2 }, { x: 1, y: 2}, { x: 2, y: -1 }, { x: 2, y: 1 }\n    ];\n    const boardSize = this.params.boardSize;\n    const numberOfFields = boardSize * boardSize;\n    const board: number[] = new Array(boardSize * boardSize);\n    board.fill(0);\n\n    let results: number = 0;\n\n    for (let i = 0; i < this.params.array.length; ++i) {\n        const startPath = this.params.array[i];\n\n        const stack: { coordinate: ICoordinate, n: number }[] = startPath.map((pos, index) => ({ coordinate: pos, n: index + 1 }));\n\n        for (let index = 0; index < startPath.length - 1; ++index) {\n            const fieldIndex = startPath[index].x * boardSize + startPath[index].y;\n            board[fieldIndex] = index + 1;\n        }\n\n        while (stack.length > 0) {\n            const { coordinate, n } = stack[stack.length - 1];\n            const fieldIndex = coordinate.x * boardSize + coordinate.y;\n\n            if (board[fieldIndex] !== 0) {\n                // back tracking\n                board[fieldIndex] = 0;\n                stack.pop(); // remove current value\n                continue;\n            }\n\n            // entry\n            if (n === numberOfFields) {\n                ++results;\n                stack.pop();\n                continue;\n            }\n\n            board[fieldIndex] = n!;\n\n            for (let i = 0; i < moves.length; ++i) {\n                const move = moves[i];\n                const successor = { x: coordinate.x + move.x, y: coordinate.y + move.y };\n                // not outside of board and not yet accessed\n                const accessible = successor.x >= 0 && successor.y >= 0 && successor.x < boardSize &&  successor.y < boardSize && board[successor.x * boardSize + successor.y] === 0;\n\n                if (accessible) {\n                    stack.push({ coordinate: successor, n: n + 1 });\n                }\n            }\n        }\n    }\n    this.rtn.data.push(results);\n}\n\nfunction computeTours(start: ICoordinate, boardSize: number): PromiseLike<number[]> {\n    function successors(coordinate: ICoordinate) {\n        const moves = [\n            {x: -2, y: -1}, {x: -2, y: 1}, {x: -1, y: -2}, {x: -1, y: 2},\n            {x: 1, y: -2}, {x: 1, y: 2}, {x: 2, y: -1}, {x: 2, y: 1}\n        ];\n        const result: ICoordinate[] = [];\n\n        for (let i = 0; i < moves.length; ++i) {\n            const move = moves[i];\n            const successor = {x: coordinate.x + move.x, y: coordinate.y + move.y};\n            const accessible = successor.x >= 0 && successor.y >= 0 && successor.x < boardSize && successor.y < boardSize &&\n                (successor.x !== start.x || successor.y !== start.y) && (successor.x !== coordinate.x && successor.y !== coordinate.y);\n            if (accessible) {\n                result.push(successor);\n            }\n        }\n\n        return result;\n    }\n\n    function computeStartFields() {\n        const result: ICoordinate[][] = [];\n        for (const directSuccessor of successors(start)) {\n            for (const indirectSuccessor of successors(directSuccessor)) {\n                result.push([start, directSuccessor, indirectSuccessor]);\n            }\n        }\n        return result;\n    }\n\n    let resolve: (result: number[]) => void;\n    let reject: (error: any) => void;\n\n    const promise = new Promise((res, rej) => {\n        resolve = res;\n        reject = rej;\n    });\n\n    const startFields = computeStartFields();\n    const params = {\n        array: startFields,\n        boardSize\n    };\n\n    hamsters.run(params, knightTours, (result: number[]) => resolve(result), hamsters.maxThreads, true);\n    return promise;\n}\n\nfunction aggregateTours(results: number[]): PromiseLike<number> {\n    let resolve: (result: number) => void;\n    let reject: (error: any) => void;\n\n    const promise = new Promise((res, rej) => {\n        resolve = res;\n        reject = rej;\n    });\n\n    hamsters.run({ array: results }, function (this: HamsterClosure<Params<number>, number>): void {\n        const result = this.params.array.reduce((memo, value) => memo + value, 0);\n        this.rtn.data.push(result);\n    }, function (results: number[]) {\n        resolve(results[0]);\n    }, 1, true);\n    return promise;\n}\n\nexport function parallelKnightTours(start: ICoordinate, boardSize: number): PromiseLike<number> {\n    return computeTours(start, boardSize).then(aggregateTours);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/hamstersjs/knights-tour.ts","import {hamsters, HamsterClosure} from \"Hamsters.js\";\nimport * as _ from \"lodash\";\n\nexport interface IComplexNumber {\n    i: number;\n    real: number;\n}\n\nexport interface IMandelbrotOptions {\n    imageHeight: number;\n    imageWidth: number;\n    iterations: number;\n    max: IComplexNumber;\n    min: IComplexNumber;\n    scalingFactor: IComplexNumber;\n}\nfunction computeMandelbrotLine (this: HamsterClosure<{ array: number[], options: IMandelbrotOptions }, Uint8ClampedArray>) {\n    const options = this.params.options;\n    // Function inline is up to 30% faster than if the function is not inline\n    // https://jsperf.com/mandelbrot-env3 https://jsperf.com/mandelbrot-env4\n    function calculateZ(c: IComplexNumber): number {\n        const z = { i: c.i, real: c.real };\n        let n = 0;\n\n        for (; n < options.iterations; ++n) {\n            if (z.real ** 2 + z.i ** 2 > 4) {\n                break;\n            }\n\n            // z ** 2 + c\n            const zI = z.i;\n            z.i = 2 * z.real * z.i + c.i;\n            z.real = z.real ** 2 - zI ** 2 + c.real;\n        }\n\n        return n;\n    }\n\n    const array = this.params.array;\n\n    for (let i = 0; i < array.length; ++i) {\n        const y = array[i];\n        const line = new Uint8ClampedArray(options.imageWidth * 4);\n        const cI = options.max.i - y * options.scalingFactor.i;\n\n        for (let x = 0; x < options.imageWidth; ++x) {\n            const c = {\n                i: cI,\n                real: options.min.real + x * options.scalingFactor.real\n            };\n\n            const n = calculateZ(c);\n            const base = x * 4;\n            /* tslint:disable:no-bitwise */\n            line[base] = n & 0xFF;\n            line[base + 1] = n & 0xFF00;\n            line[base + 2] = n & 0xFF0000;\n            line[base + 3] = 255;\n        }\n        this.rtn.data.push(line);\n    }\n}\n\nexport function mandelbrot(options: IMandelbrotOptions): Promise<any> {\n    let resolve: (result: Uint8ClampedArray[]) => void;\n    let reject: (error: any) => void;\n\n    const promise = new Promise((res, rej) => {\n        resolve = res;\n        reject = rej;\n    });\n\n    const range = _.range(options.imageHeight);\n    const params = {\n        array: range,\n        options\n    };\n\n    hamsters.run(params, computeMandelbrotLine, result => resolve(result), hamsters.maxThreads, true);\n    return promise;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/hamstersjs/mandelbrot.ts","import {hamsters, HamsterClosure} from \"Hamsters.js\";\nimport {Dictionary} from \"lodash\";\n\n/* tslint:disable:no-var-requires */\n// declare function require(name: string): any;\n// const Random = require(\"simjs-random\");\n// const random = new Random(10);\n\nexport interface IProject {\n    startYear: number;\n    totalAmount: number;\n}\n\ninterface IBucket {\n    min: number;\n    max: number;\n\n    subBuckets: { [groupName: string]: { group: string; min: number, max: number } };\n}\n\ninterface IGroup {\n    /**\n     * The unique name of this group\n     */\n    name: string;\n\n    /**\n     * The description of the group\n     */\n    description: string;\n\n    /**\n     * Should a separator line been drawn for this group?\n     */\n    separator: boolean;\n\n    /**\n     * Whats the percentage of values in this group to the total number of simulated values\n     */\n    percentage: number;\n\n    /**\n     * Whats the minimum value that is still part of this group\n     */\n        from?: number;\n    /**\n     * Whats the maximum value (exclusive) that defines the upper end of this group\n     */\n    to?: number;\n}\n\nexport interface IProjectResult {\n    /**\n     * The minimal simulated value for this project\n     */\n    min: number;\n    /**\n     * The maximal simulated value\n     */\n    max: number;\n\n    /** The median of the values found for this project\n     */\n    median: number;\n\n    /**\n     * Defines where the 2/3 of the simulated values start / end.\n     */\n    twoThird: {\n        min: number;\n        max: number;\n    };\n\n    buckets: IBucket[];\n\n    groups: IGroup[];\n\n    /**\n     * The project\n     */\n    project: IProject;\n}\n\ninterface IMonteCarloEnvironment {\n    investmentAmount: number;\n    liquidity: number;\n    noInterestReferenceLine: number[];\n    numRuns: number;\n    numYears: number;\n    projectsByStartYear: Dictionary<IProject[]>;\n    simulatedValues: number[][];\n}\n\nexport interface IMonteCarloSimulationOptions {\n    numYears?: number;\n    numRuns?: number;\n    projects?: IProject[];\n    investmentAmount?: number;\n    performance?: number;\n    seed?: number;\n    volatility: number;\n    liquidity?: number;\n}\n\ninterface IInitializedMonteCarloSimulationOptions {\n    numYears: number;\n    numRuns: number;\n    projects: IProject[];\n    investmentAmount: number;\n    performance: number;\n    seed?: number;\n    taskIndex?: number;\n    valuesPerWorker?: number;\n    liquidity: number;\n    volatility: number;\n}\n\nfunction initializeOptions(options?: IMonteCarloSimulationOptions): IInitializedMonteCarloSimulationOptions {\n    return Object.assign({}, {\n        investmentAmount: 1000000,\n        liquidity: 10000,\n        numRuns: 10000,\n        numYears: 10,\n        performance: 0,\n        projects: [],\n        seed: undefined,\n        volatility: 0.01\n    }, options);\n}\n\nfunction runSimulation(this: HamsterClosure<{ array: IProject[], options: IInitializedMonteCarloSimulationOptions }, IProjectResult>): void {\n    function createMonteCarloEnvironment(options: IInitializedMonteCarloSimulationOptions): IMonteCarloEnvironment {\n        /**\n         * Performs the monte carlo simulation for all years and num runs.\n         * @param cashFlows the cash flows\n         * @returns {number[][]} the simulated outcomes grouped by year\n         */\n        function simulateOutcomes(cashFlows: number[], numYears: number): number[][]  {\n            function toAbsoluteIndices(indices: number[]) {\n                let currentPortfolioValue = options.investmentAmount;\n                let previousYearIndex = 100;\n\n                for (let relativeYear = 0; relativeYear < indices.length; ++relativeYear) {\n                    const currentYearIndex = indices[relativeYear];\n                    const cashFlowStartOfYear = relativeYear === 0 ? 0 : cashFlows[relativeYear - 1];\n\n                    // scale current value with performance gain according to index\n                    const performance = currentYearIndex / previousYearIndex;\n                    currentPortfolioValue = (currentPortfolioValue + cashFlowStartOfYear) * performance;\n\n                    indices[relativeYear] = Math.round(currentPortfolioValue);\n                    previousYearIndex = currentYearIndex;\n                }\n\n                return indices;\n            }\n\n            const result: number[][] = new Array(options.numYears);\n            for (let year = 0; year <= numYears; ++year) {\n                result[year] = new Array(options.numRuns);\n            }\n\n            for (let run = 0; run < options.numRuns; run++) {\n                const indices = [100];\n\n                for (let i = 1; i <= numYears; i++) {\n                    // const randomPerformance = 1 + random.normal(options.performance, options.volatility);\n                    const randomPerformance = 1 + Math.random();\n                    indices.push(indices[i - 1] * randomPerformance);\n                }\n\n                // convert the relative values from above to absolute values.\n                toAbsoluteIndices(indices);\n\n                for (let year = 0; year < indices.length; ++year) {\n                    result[year][run] = indices[year];\n                }\n            }\n\n            return result;\n        }\n\n        function projectsToCashFlows() {\n            const cashFlows: number[] = [];\n            for (let year = 0; year < options.numYears; ++year) {\n                const projectsByThisYear = projectsByStartYear[year] || [];\n                const cashFlow = -projectsByThisYear.reduce((memo, project) => memo + project.totalAmount, 0);\n                cashFlows.push(cashFlow);\n            }\n            return cashFlows;\n        }\n\n        function calculateNoInterestReferenceLine(cashFlows: number[]) {\n            const noInterestReferenceLine: number[] = [];\n\n            let investmentAmountLeft = options.investmentAmount;\n            for (let year = 0; year < options.numYears; ++year) {\n                investmentAmountLeft = investmentAmountLeft + cashFlows[year];\n                noInterestReferenceLine.push(investmentAmountLeft);\n            }\n            return noInterestReferenceLine;\n        }\n\n        let projectsToSimulate: IProject[] = options.projects;\n\n        if (options.taskIndex && options.valuesPerWorker) {\n            projectsToSimulate = options.projects.slice(options.taskIndex * options.valuesPerWorker, (options.taskIndex + 1) * options.valuesPerWorker);\n        }\n\n        const projects = options.projects.sort((a, b) => a.startYear - b.startYear);\n\n        // Group projects by startYear, use lodash groupBy instead\n        const projectsByStartYear: Dictionary<IProject[]> = {};\n        for (const project of projects) {\n            const arr = projectsByStartYear[project.startYear] = projectsByStartYear[project.startYear] || [];\n            arr.push(project);\n        }\n\n        const cashFlows = projectsToCashFlows();\n        const noInterestReferenceLine = calculateNoInterestReferenceLine(cashFlows);\n\n        const numYears = projectsToSimulate.reduce((memo, project) => Math.max(memo, project.startYear), 0);\n\n        return {\n            investmentAmount: options.investmentAmount,\n            liquidity: options.liquidity,\n            noInterestReferenceLine,\n            numRuns: options.numRuns,\n            numYears,\n            projectsByStartYear,\n            simulatedValues: simulateOutcomes(cashFlows, numYears)\n        };\n    }\n\n    function calculateProject(project: IProject, environment: IMonteCarloEnvironment): IProjectResult {\n        const NUMBER_OF_BUCKETS = 10;\n        function groupForValue(value: number, groups: IGroup[]): IGroup {\n            return groups.find(group => (typeof group.from === \"undefined\" || group.from <= value) && (typeof group.to === \"undefined\" || group.to > value))!;\n        }\n\n        function createGroups(requiredAmount: number, noInterestReference: number): IGroup[] {\n            return [\n                { description: \"Ziel erreichbar\", from: requiredAmount, name: \"green\", percentage: 0, separator: true},\n                { description: \"mit Zusatzliquidität erreichbar\", from: requiredAmount - environment.liquidity, name: \"yellow\", percentage: 0, separator: true, to: requiredAmount },\n                { description: \"nicht erreichbar\", from: noInterestReference, name: \"gray\", percentage: 0, separator: false, to: requiredAmount - environment.liquidity },\n                { description: \"nicht erreichbar, mit Verlust\", name: \"red\", percentage: 0, separator: false, to: noInterestReference }\n            ];\n        }\n\n        function calculateRequiredAmount() {\n            let amount = project.totalAmount;\n            const projectsSameYear = environment.projectsByStartYear[project.startYear];\n\n            for (const otherProject of projectsSameYear) {\n                if (otherProject === project) {\n                    break;\n                }\n                amount += otherProject.totalAmount;\n            }\n            return amount;\n        }\n\n        function median(values: number[]) {\n            const half = Math.floor(values.length / 2);\n\n            if (values.length % 2) {\n                return values[half];\n            }\n\n            return (values[half - 1] + values[half]) / 2.0;\n        }\n\n        const requiredAmount = calculateRequiredAmount();\n        const simulatedValuesThisYear = environment.simulatedValues[project.startYear];\n        simulatedValuesThisYear.sort((a, b) => a - b);\n\n        const groups = createGroups(requiredAmount, environment.noInterestReferenceLine[project.startYear]);\n        const valuesByGroup: { [groupName: string]: number } = {};\n        const bucketSize = Math.round(simulatedValuesThisYear.length / NUMBER_OF_BUCKETS);\n        const buckets: IBucket[] = [];\n\n        for (let i = 0; i < simulatedValuesThisYear.length; i += bucketSize) {\n            const bucket: IBucket = {\n                max: Number.MIN_VALUE,\n                min: Number.MAX_VALUE,\n                subBuckets: {}\n            };\n\n            for (let j = i; j < i + bucketSize; ++j) {\n                const value = simulatedValuesThisYear[j];\n                bucket.min = Math.min(bucket.min, value);\n                bucket.max = Math.max(bucket.max, value);\n\n                const group = groupForValue(simulatedValuesThisYear[j], groups);\n                valuesByGroup[group.name] = (valuesByGroup[group.name] || 0) + 1;\n                const subBucket = bucket.subBuckets[group.name] = bucket.subBuckets[group.name] || { group: group.name, max: Number.MIN_VALUE, min: Number.MAX_VALUE };\n                subBucket.min = Math.min(subBucket.min, value);\n                subBucket.max = Math.max(subBucket.max, value);\n            }\n\n            buckets.push(bucket);\n        }\n\n        const nonEmptyGroups = groups.filter(group => !!valuesByGroup[group.name]);\n        nonEmptyGroups.forEach(group => group.percentage = valuesByGroup[group.name] / simulatedValuesThisYear.length);\n\n        const oneSixth = Math.round(simulatedValuesThisYear.length / 6);\n        return {\n            buckets,\n            groups: nonEmptyGroups,\n            max: simulatedValuesThisYear[simulatedValuesThisYear.length - 1],\n            median: median(simulatedValuesThisYear),\n            min: simulatedValuesThisYear[0],\n            project,\n            twoThird: {\n                max: simulatedValuesThisYear[simulatedValuesThisYear.length - oneSixth],\n                min: simulatedValuesThisYear[oneSixth]\n            }\n        };\n    }\n\n    const environment = createMonteCarloEnvironment(this.params.options);\n\n    for (let i = 0; i < this.params.array.length; ++i) {\n        const project = this.params.array[i];\n        this.rtn.data.push(calculateProject(project, environment));\n    }\n}\n\n\nexport function parallelMonteCarlo(userOptions?: IMonteCarloSimulationOptions) {\n    const options = initializeOptions(userOptions);\n\n    let resolve: (result: Uint8ClampedArray[]) => void;\n    let reject: (error: any) => void;\n\n    const promise = new Promise((res, rej) => {\n        resolve = res;\n        reject = rej;\n    });\n\n    hamsters.run({ array: options.projects, options }, runSimulation, result => resolve(result), hamsters.maxThreads, true);\n\n    return promise;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/hamstersjs/monte-carlo.ts","const Parallel = require(\"paralleljs\");\n\nexport interface ICoordinate {\n    readonly x: number;\n    readonly y: number;\n}\n\nexport interface IKnightTourEnvironment {\n    boardSize: number;\n    board: number[];\n}\n\nexport function knightTours(startPath: ICoordinate[], boardSize: number): number {\n    const moves = [\n        { x: -2, y: -1 }, { x: -2, y: 1}, { x: -1, y: -2 }, { x: -1, y: 2 },\n        { x: 1, y: -2 }, { x: 1, y: 2}, { x: 2, y: -1 }, { x: 2, y: 1 }\n    ];\n\n    const board: number[] = new Array(boardSize * boardSize);\n    board.fill(0);\n\n    const numberOfFields = boardSize * boardSize;\n    let results: number = 0;\n    const stack: { coordinate: ICoordinate, n: number }[] = startPath.map((pos, index) => ({ coordinate: pos, n: index + 1 }));\n\n    for (let index = 0; index < startPath.length - 1; ++index) {\n        const fieldIndex = startPath[index].x * boardSize + startPath[index].y;\n        board[fieldIndex] = index + 1;\n    }\n\n    while (stack.length > 0) {\n        const { coordinate, n } = stack[stack.length - 1];\n        const fieldIndex = coordinate.x * boardSize + coordinate.y;\n\n        if (board[fieldIndex] !== 0) {\n            // back tracking\n            board[fieldIndex] = 0;\n            stack.pop(); // remove current value\n            continue;\n        }\n\n        // entry\n        if (n === numberOfFields) {\n            ++results;\n            stack.pop();\n            continue;\n        }\n\n        board[fieldIndex] = n!;\n\n        for (let i = 0; i < moves.length; ++i) {\n            const move = moves[i];\n            const successor = { x: coordinate.x + move.x, y: coordinate.y + move.y };\n            // not outside of board and not yet accessed\n            const accessible = successor.x >= 0 && successor.y >= 0 && successor.x < boardSize &&  successor.y < boardSize && board[successor.x * boardSize + successor.y] === 0;\n\n            if (accessible) {\n                stack.push({ coordinate: successor, n: n + 1 });\n            }\n        }\n    }\n\n    return results;\n}\n\ndeclare const global: { env: { boardSize: number }};\n\nexport function parallelJSKnightTours(start: ICoordinate, boardSize: number): PromiseLike<number> {\n\n    function successors(coordinate: ICoordinate) {\n        const moves = [\n            {x: -2, y: -1}, {x: -2, y: 1}, {x: -1, y: -2}, {x: -1, y: 2},\n            {x: 1, y: -2}, {x: 1, y: 2}, {x: 2, y: -1}, {x: 2, y: 1}\n        ];\n        const result: ICoordinate[] = [];\n\n        for (let i = 0; i < moves.length; ++i) {\n            const move = moves[i];\n            const successor = {x: coordinate.x + move.x, y: coordinate.y + move.y};\n            const accessible = successor.x >= 0 && successor.y >= 0 && successor.x < boardSize && successor.y < boardSize &&\n                (successor.x !== start.x || successor.y !== start.y) && (successor.x !== coordinate.x && successor.y !== coordinate.y);\n            if (accessible) {\n                result.push(successor);\n            }\n        }\n\n        return result;\n    }\n\n    function computeStartFields() {\n        const result: ICoordinate[][] = [];\n        for (const directSuccessor of successors(start)) {\n            for (const indirectSuccessor of successors(directSuccessor)) {\n                result.push([start, directSuccessor, indirectSuccessor]);\n            }\n        }\n        return result;\n    }\n\n    return new Parallel(computeStartFields(), { env: { boardSize }})\n        .require(knightTours)\n        .map(function (startField: ICoordinate[]) {\n            return knightTours(startField, global.env.boardSize);\n        })\n        .reduce(function (toursPerRun: number[]) {\n            return toursPerRun.reduce((memo, current) => memo + current, 0);\n        });\n\n    // The reduce operation needs to wait until the map operation is complete, switches back to the main thread and then\n    // a new worker is spawned for each reduce step, e.g. for [1, 2, 3, 4, 5, 6] the three workers with [1, 2], [3, 4], [5, 6]\n    // then the sub sequent workers [3, 7] and finally, [10, 11] are spawned...\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/paralleljs/knights-tour.ts","const Parallel = require(\"paralleljs\");\nimport * as _ from \"lodash\";\n\nexport interface IComplexNumber {\n    i: number;\n    real: number;\n}\n\nexport interface IMandelbrotOptions {\n    imageHeight: number;\n    imageWidth: number;\n    iterations: number;\n    max: IComplexNumber;\n    min: IComplexNumber;\n    scalingFactor: IComplexNumber;\n}\n\nexport function computeMandelbrotLine(y: number, options: IMandelbrotOptions): Uint8ClampedArray {\n    function calculateZ(c: IComplexNumber): number {\n        const z = { i: c.i, real: c.real };\n        let n = 0;\n\n        for (; n < options.iterations; ++n) {\n            if (z.real ** 2 + z.i ** 2 > 4) {\n                break;\n            }\n\n            // z ** 2 + c\n            const zI = z.i;\n            z.i = 2 * z.real * z.i + c.i;\n            z.real = z.real ** 2 - zI ** 2 + c.real;\n        }\n\n        return n;\n    }\n\n    const line = new Uint8ClampedArray(options.imageWidth * 4);\n    const cI = options.max.i - y * options.scalingFactor.i;\n\n    for (let x = 0; x < options.imageWidth; ++x) {\n        const c = {\n            i: cI,\n            real: options.min.real + x * options.scalingFactor.real\n        };\n\n        const n = calculateZ(c);\n        const base = x * 4;\n        /* tslint:disable:no-bitwise */\n        line[base] = n & 0xFF;\n        line[base + 1] = n & 0xFF00;\n        line[base + 2] = n & 0xFF0000;\n        line[base + 3] = 255;\n    }\n    return line;\n}\n\ndeclare const global: { env: IMandelbrotOptions};\n\nexport function parallelJSMandelbrot(mandelbrotOptions: IMandelbrotOptions) {\n    const lines = _.range(mandelbrotOptions.imageHeight);\n    return new Parallel(lines, { env: mandelbrotOptions })\n        .require(computeMandelbrotLine)\n        .map(function (line: number): Uint8ClampedArray {\n            return computeMandelbrotLine(line, global.env);\n        });\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/paralleljs/mandelbrot.ts","const Parallel = require(\"paralleljs\");\nimport {Dictionary} from \"lodash\";\n\n\n/* tslint:disable:no-var-requires */\n// declare function require(name: string): any;\n// const Random = require(\"simjs-random\");\n// const random = new Random(10);\n\nexport interface IProject {\n    startYear: number;\n    totalAmount: number;\n}\n\ninterface IBucket {\n    min: number;\n    max: number;\n\n    subBuckets: { [groupName: string]: { group: string; min: number, max: number } };\n}\n\ninterface IGroup {\n    /**\n     * The unique name of this group\n     */\n    name: string;\n\n    /**\n     * The description of the group\n     */\n    description: string;\n\n    /**\n     * Should a separator line been drawn for this group?\n     */\n    separator: boolean;\n\n    /**\n     * Whats the percentage of values in this group to the total number of simulated values\n     */\n    percentage: number;\n\n    /**\n     * Whats the minimum value that is still part of this group\n     */\n    from?: number;\n    /**\n     * Whats the maximum value (exclusive) that defines the upper end of this group\n     */\n    to?: number;\n}\n\nexport interface IProjectResult {\n    /**\n     * The minimal simulated value for this project\n     */\n    min: number;\n    /**\n     * The maximal simulated value\n     */\n    max: number;\n\n    /** The median of the values found for this project\n     */\n    median: number;\n\n    /**\n     * Defines where the 2/3 of the simulated values start / end.\n     */\n    twoThird: {\n        min: number;\n        max: number;\n    };\n\n    buckets: IBucket[];\n\n    groups: IGroup[];\n\n    /**\n     * The project\n     */\n    project: IProject;\n}\n\ninterface IMonteCarloEnvironment {\n    investmentAmount: number;\n    liquidity: number;\n    noInterestReferenceLine: number[];\n    numRuns: number;\n    numYears: number;\n    projectsByStartYear: Dictionary<IProject[]>;\n    simulatedValues: number[][];\n}\n\nexport interface IMonteCarloSimulationOptions {\n    numYears?: number;\n    numRuns?: number;\n    projects?: IProject[];\n    investmentAmount?: number;\n    performance?: number;\n    seed?: number;\n    volatility: number;\n    liquidity?: number;\n}\n\ninterface IInitializedMonteCarloSimulationOptions {\n    numYears: number;\n    numRuns: number;\n    projects: IProject[];\n    investmentAmount: number;\n    performance: number;\n    seed?: number;\n    taskIndex?: number;\n    valuesPerWorker?: number;\n    liquidity: number;\n    volatility: number;\n}\n\nfunction initializeOptions(options?: IMonteCarloSimulationOptions): IInitializedMonteCarloSimulationOptions {\n    return Object.assign({}, {\n        investmentAmount: 1000000,\n        liquidity: 10000,\n        numRuns: 10000,\n        numYears: 10,\n        performance: 0,\n        projects: [],\n        seed: undefined,\n        volatility: 0.01\n    }, options);\n}\n\nfunction createMonteCarloEnvironment(options: IInitializedMonteCarloSimulationOptions): IMonteCarloEnvironment {\n    const random = new (self as any).Random(10);\n\n    /**\n     * Performs the monte carlo simulation for all years and num runs.\n     * @param cashFlows the cash flows\n     * @returns {number[][]} the simulated outcomes grouped by year\n     */\n    function simulateOutcomes(cashFlows: number[], numYears: number): number[][]  {\n        function toAbsoluteIndices(indices: number[]) {\n            let currentPortfolioValue = options.investmentAmount;\n            let previousYearIndex = 100;\n\n            for (let relativeYear = 0; relativeYear < indices.length; ++relativeYear) {\n                const currentYearIndex = indices[relativeYear];\n                const cashFlowStartOfYear = relativeYear === 0 ? 0 : cashFlows[relativeYear - 1];\n\n                // scale current value with performance gain according to index\n                const performance = currentYearIndex / previousYearIndex;\n                currentPortfolioValue = (currentPortfolioValue + cashFlowStartOfYear) * performance;\n\n                indices[relativeYear] =  1 + random.normal(performance, options.volatility);\n\n                previousYearIndex = currentYearIndex;\n            }\n\n            return indices;\n        }\n\n        const result: number[][] = new Array(options.numYears);\n        for (let year = 0; year <= numYears; ++year) {\n            result[year] = new Array(options.numRuns);\n        }\n\n        for (let run = 0; run < options.numRuns; run++) {\n            const indices = [100];\n\n            for (let i = 1; i <= numYears; i++) {\n                // const randomPerformance = 1 + random.normal(options.performance, options.volatility);\n                const randomPerformance = 1 + Math.random();\n                indices.push(indices[i - 1] * randomPerformance);\n            }\n\n            // convert the relative values from above to absolute values.\n            toAbsoluteIndices(indices);\n\n            for (let year = 0; year < indices.length; ++year) {\n                result[year][run] = indices[year];\n            }\n        }\n\n        return result;\n    }\n\n    function projectsToCashFlows() {\n        const cashFlows: number[] = [];\n        for (let year = 0; year < options.numYears; ++year) {\n            const projectsByThisYear = projectsByStartYear[year] || [];\n            const cashFlow = -projectsByThisYear.reduce((memo, project) => memo + project.totalAmount, 0);\n            cashFlows.push(cashFlow);\n        }\n        return cashFlows;\n    }\n\n    function calculateNoInterestReferenceLine(cashFlows: number[]) {\n        const noInterestReferenceLine: number[] = [];\n\n        let investmentAmountLeft = options.investmentAmount;\n        for (let year = 0; year < options.numYears; ++year) {\n            investmentAmountLeft = investmentAmountLeft + cashFlows[year];\n            noInterestReferenceLine.push(investmentAmountLeft);\n        }\n        return noInterestReferenceLine;\n    }\n\n    let projectsToSimulate: IProject[] = options.projects;\n\n    if (options.taskIndex && options.valuesPerWorker) {\n        projectsToSimulate = options.projects.slice(options.taskIndex * options.valuesPerWorker, (options.taskIndex + 1) * options.valuesPerWorker);\n    }\n\n    const projects = options.projects.sort((a, b) => a.startYear - b.startYear);\n\n    // Group projects by startYear, use lodash groupBy instead\n    const projectsByStartYear: Dictionary<IProject[]> = {};\n    for (const project of projects) {\n        const arr = projectsByStartYear[project.startYear] = projectsByStartYear[project.startYear] || [];\n        arr.push(project);\n    }\n\n    const cashFlows = projectsToCashFlows();\n    const noInterestReferenceLine = calculateNoInterestReferenceLine(cashFlows);\n\n    const numYears = projectsToSimulate.reduce((memo, project) => Math.max(memo, project.startYear), 0);\n\n    return {\n        investmentAmount: options.investmentAmount,\n        liquidity: options.liquidity,\n        noInterestReferenceLine,\n        numRuns: options.numRuns,\n        numYears,\n        projectsByStartYear,\n        simulatedValues: simulateOutcomes(cashFlows, numYears)\n    };\n}\n\nfunction calculateProject(project: IProject, environment: IMonteCarloEnvironment): IProjectResult {\n    const NUMBER_OF_BUCKETS = 10;\n    function groupForValue(value: number, groups: IGroup[]): IGroup {\n        return groups.find(group => (typeof group.from === \"undefined\" || group.from <= value) && (typeof group.to === \"undefined\" || group.to > value))!;\n    }\n\n    function createGroups(requiredAmount: number, noInterestReference: number): IGroup[] {\n        return [\n            { description: \"Ziel erreichbar\", from: requiredAmount, name: \"green\", percentage: 0, separator: true},\n            { description: \"mit Zusatzliquidität erreichbar\", from: requiredAmount - environment.liquidity, name: \"yellow\", percentage: 0, separator: true, to: requiredAmount },\n            { description: \"nicht erreichbar\", from: noInterestReference, name: \"gray\", percentage: 0, separator: false, to: requiredAmount - environment.liquidity },\n            { description: \"nicht erreichbar, mit Verlust\", name: \"red\", percentage: 0, separator: false, to: noInterestReference }\n        ];\n    }\n\n    function calculateRequiredAmount() {\n        let amount = project.totalAmount;\n        const projectsSameYear = environment.projectsByStartYear[project.startYear];\n\n        for (const otherProject of projectsSameYear) {\n            if (otherProject === project) {\n                break;\n            }\n            amount += otherProject.totalAmount;\n        }\n        return amount;\n    }\n\n    function median(values: number[]) {\n        const half = Math.floor(values.length / 2);\n\n        if (values.length % 2) {\n            return values[half];\n        }\n\n        return (values[half - 1] + values[half]) / 2.0;\n    }\n\n    const requiredAmount = calculateRequiredAmount();\n    const simulatedValuesThisYear = environment.simulatedValues[project.startYear];\n    simulatedValuesThisYear.sort((a, b) => a - b);\n\n    const groups = createGroups(requiredAmount, environment.noInterestReferenceLine[project.startYear]);\n    const valuesByGroup: { [groupName: string]: number } = {};\n    const bucketSize = Math.round(simulatedValuesThisYear.length / NUMBER_OF_BUCKETS);\n    const buckets: IBucket[] = [];\n\n    for (let i = 0; i < simulatedValuesThisYear.length; i += bucketSize) {\n        const bucket: IBucket = {\n            max: Number.MIN_VALUE,\n            min: Number.MAX_VALUE,\n            subBuckets: {}\n        };\n\n        for (let j = i; j < i + bucketSize; ++j) {\n            const value = simulatedValuesThisYear[j];\n            bucket.min = Math.min(bucket.min, value);\n            bucket.max = Math.max(bucket.max, value);\n\n            const group = groupForValue(simulatedValuesThisYear[j], groups);\n            valuesByGroup[group.name] = (valuesByGroup[group.name] || 0) + 1;\n            const subBucket = bucket.subBuckets[group.name] = bucket.subBuckets[group.name] || { group: group.name, max: Number.MIN_VALUE, min: Number.MAX_VALUE };\n            subBucket.min = Math.min(subBucket.min, value);\n            subBucket.max = Math.max(subBucket.max, value);\n        }\n\n        buckets.push(bucket);\n    }\n\n    const nonEmptyGroups = groups.filter(group => !!valuesByGroup[group.name]);\n    nonEmptyGroups.forEach(group => group.percentage = valuesByGroup[group.name] / simulatedValuesThisYear.length);\n\n    const oneSixth = Math.round(simulatedValuesThisYear.length / 6);\n    return {\n        buckets,\n        groups: nonEmptyGroups,\n        max: simulatedValuesThisYear[simulatedValuesThisYear.length - 1],\n        median: median(simulatedValuesThisYear),\n        min: simulatedValuesThisYear[0],\n        project,\n        twoThird: {\n            max: simulatedValuesThisYear[simulatedValuesThisYear.length - oneSixth],\n            min: simulatedValuesThisYear[oneSixth]\n        }\n    };\n}\n\ndeclare const global: { simulation: { options: IInitializedMonteCarloSimulationOptions, env?: IMonteCarloEnvironment } };\n\nexport function parallelJSMonteCarlo(userOptions?: IMonteCarloSimulationOptions) {\n    const options = initializeOptions(userOptions);\n\n    // Array needs to be cloned, otherwise the original array is manipulated!\n    return new Parallel(options.projects.slice(), {\n            evalPath: \"./\" + require(\"file!paralleljs/lib/eval.js\"),\n            env: { options },\n            envNamespace: \"simulation\"\n        })\n        .require(\"https://raw.githubusercontent.com/mvarshney/simjs-source/master/src/random.js\") // the one from node uses module syntax\n        .require(createMonteCarloEnvironment)\n        .require(calculateProject)\n        .map(function (project: IProject): IProjectResult {\n            global.simulation.env = global.simulation.env || createMonteCarloEnvironment(global.simulation.options);\n            return calculateProject(project, global.simulation.env);\n        });\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/paralleljs/monte-carlo.ts","import {Pool, Done} from \"threads\";\nimport {Job} from \"threads\";\n\nexport interface ICoordinate {\n    readonly x: number;\n    readonly y: number;\n}\n\nexport interface IKnightTourEnvironment {\n    boardSize: number;\n    board: number[];\n}\n\nexport function knightTours({ startPath, boardSize }: {startPath: ICoordinate[], boardSize: number}, done: Done): void{\n    const moves = [\n        { x: -2, y: -1 }, { x: -2, y: 1}, { x: -1, y: -2 }, { x: -1, y: 2 },\n        { x: 1, y: -2 }, { x: 1, y: 2}, { x: 2, y: -1 }, { x: 2, y: 1 }\n    ];\n\n    const board: number[] = new Array(boardSize * boardSize);\n    board.fill(0);\n\n    const numberOfFields = boardSize * boardSize;\n    let results: number = 0;\n    const stack: { coordinate: ICoordinate, n: number }[] = startPath.map((pos, index) => ({ coordinate: pos, n: index + 1 }));\n\n    for (let index = 0; index < startPath.length - 1; ++index) {\n        const fieldIndex = startPath[index].x * boardSize + startPath[index].y;\n        board[fieldIndex] = index + 1;\n    }\n\n    while (stack.length > 0) {\n        const { coordinate, n } = stack[stack.length - 1];\n        const fieldIndex = coordinate.x * boardSize + coordinate.y;\n\n        if (board[fieldIndex] !== 0) {\n            // back tracking\n            board[fieldIndex] = 0;\n            stack.pop(); // remove current value\n            continue;\n        }\n\n        // entry\n        if (n === numberOfFields) {\n            ++results;\n            stack.pop();\n            continue;\n        }\n\n        board[fieldIndex] = n!;\n\n        for (let i = 0; i < moves.length; ++i) {\n            const move = moves[i];\n            const successor = { x: coordinate.x + move.x, y: coordinate.y + move.y };\n            // not outside of board and not yet accessed\n            const accessible = successor.x >= 0 && successor.y >= 0 && successor.x < boardSize &&  successor.y < boardSize && board[successor.x * boardSize + successor.y] === 0;\n\n            if (accessible) {\n                stack.push({ coordinate: successor, n: n + 1 });\n            }\n        }\n    }\n\n    done(results);\n}\n\nexport function threadsKnightTours(start: ICoordinate, boardSize: number, pool: Pool): PromiseLike<number> {\n\n    function successors(coordinate: ICoordinate) {\n        const moves = [\n            {x: -2, y: -1}, {x: -2, y: 1}, {x: -1, y: -2}, {x: -1, y: 2},\n            {x: 1, y: -2}, {x: 1, y: 2}, {x: 2, y: -1}, {x: 2, y: 1}\n        ];\n        const result: ICoordinate[] = [];\n\n        for (let i = 0; i < moves.length; ++i) {\n            const move = moves[i];\n            const successor = {x: coordinate.x + move.x, y: coordinate.y + move.y};\n            const accessible = successor.x >= 0 && successor.y >= 0 && successor.x < boardSize && successor.y < boardSize &&\n                (successor.x !== start.x || successor.y !== start.y) && (successor.x !== coordinate.x && successor.y !== coordinate.y);\n            if (accessible) {\n                result.push(successor);\n            }\n        }\n\n        return result;\n    }\n\n    function computeStartFields() {\n        const result: ICoordinate[][] = [];\n        for (const directSuccessor of successors(start)) {\n            for (const indirectSuccessor of successors(directSuccessor)) {\n                result.push([start, directSuccessor, indirectSuccessor]);\n            }\n        }\n        return result;\n    }\n\n    let resolve: (value: number) => void;\n    let reject: (error: any) => void;\n    const promise = new Promise((_resolve, _reject) => {\n        resolve = _resolve;\n        reject = _reject;\n    });\n\n    let totalTours = 0;\n    pool.run(knightTours)\n        .on(\"done\", (job: Job, tours: number) => totalTours += tours)\n        .on(\"finished\", () => {\n            resolve(totalTours)\n        });\n\n    for (const startPath of computeStartFields()) {\n        pool.send({ startPath, boardSize });\n    }\n\n    return promise;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/threads/knights-tour.ts","import {Pool, Done} from \"threads\";\nimport * as _ from \"lodash\";\n\nexport interface IComplexNumber {\n    i: number;\n    real: number;\n}\n\nexport interface IMandelbrotOptions {\n    imageHeight: number;\n    imageWidth: number;\n    iterations: number;\n    max: IComplexNumber;\n    min: IComplexNumber;\n    scalingFactor: IComplexNumber;\n}\n\nexport function computeMandelbrotLine({ y, options}: { y: number, options: IMandelbrotOptions}, done: Done): void{\n    function calculateZ(c: IComplexNumber): number {\n        const z = { i: c.i, real: c.real };\n        let n = 0;\n\n        for (; n < options.iterations; ++n) {\n            if (z.real ** 2 + z.i ** 2 > 4) {\n                break;\n            }\n\n            // z ** 2 + c\n            const zI = z.i;\n            z.i = 2 * z.real * z.i + c.i;\n            z.real = z.real ** 2 - zI ** 2 + c.real;\n        }\n\n        return n;\n    }\n\n    const line = new Uint8ClampedArray(options.imageWidth * 4);\n    const cI = options.max.i - y * options.scalingFactor.i;\n\n    for (let x = 0; x < options.imageWidth; ++x) {\n        const c = {\n            i: cI,\n            real: options.min.real + x * options.scalingFactor.real\n        };\n\n        const n = calculateZ(c);\n        const base = x * 4;\n        /* tslint:disable:no-bitwise */\n        line[base] = n & 0xFF;\n        line[base + 1] = n & 0xFF00;\n        line[base + 2] = n & 0xFF0000;\n        line[base + 3] = 255;\n    }\n    done.transfer(line, [line.buffer]);\n}\n\nexport function threadsMandelbrot(mandelbrotOptions: IMandelbrotOptions, pool: Pool) {\n    const promises: PromiseLike<Uint8ClampedArray>[] = [];\n    pool.run(computeMandelbrotLine);\n\n    const lines = _.range(mandelbrotOptions.imageHeight);\n    for (const line of lines) {\n        promises.push(pool.send({y: line, options: mandelbrotOptions}).promise());\n    }\n\n    return Promise.all(promises);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/threads/mandelbrot.ts","import {Pool, Done} from \"threads\";\nimport {Dictionary} from \"lodash\";\n\nexport interface IProject {\n    startYear: number;\n    totalAmount: number;\n}\n\ninterface IBucket {\n    min: number;\n    max: number;\n\n    subBuckets: { [groupName: string]: { group: string; min: number, max: number } };\n}\n\ninterface IGroup {\n    /**\n     * The unique name of this group\n     */\n    name: string;\n\n    /**\n     * The description of the group\n     */\n    description: string;\n\n    /**\n     * Should a separator line been drawn for this group?\n     */\n    separator: boolean;\n\n    /**\n     * Whats the percentage of values in this group to the total number of simulated values\n     */\n    percentage: number;\n\n    /**\n     * Whats the minimum value that is still part of this group\n     */\n    from?: number;\n    /**\n     * Whats the maximum value (exclusive) that defines the upper end of this group\n     */\n    to?: number;\n}\n\nexport interface IProjectResult {\n    /**\n     * The minimal simulated value for this project\n     */\n    min: number;\n    /**\n     * The maximal simulated value\n     */\n    max: number;\n\n    /** The median of the values found for this project\n     */\n    median: number;\n\n    /**\n     * Defines where the 2/3 of the simulated values start / end.\n     */\n    twoThird: {\n        min: number;\n        max: number;\n    };\n\n    buckets: IBucket[];\n\n    groups: IGroup[];\n\n    /**\n     * The project\n     */\n    project: IProject;\n}\n\ninterface IMonteCarloEnvironment {\n    investmentAmount: number;\n    liquidity: number;\n    noInterestReferenceLine: number[];\n    numRuns: number;\n    numYears: number;\n    projectsByStartYear: Dictionary<IProject[]>;\n    simulatedValues: number[][];\n}\n\nexport interface IMonteCarloSimulationOptions {\n    numYears?: number;\n    numRuns?: number;\n    projects?: IProject[];\n    investmentAmount?: number;\n    performance?: number;\n    seed?: number;\n    volatility: number;\n    liquidity?: number;\n}\n\ninterface IInitializedMonteCarloSimulationOptions {\n    numYears: number;\n    numRuns: number;\n    projects: IProject[];\n    investmentAmount: number;\n    performance: number;\n    seed?: number;\n    taskIndex?: number;\n    valuesPerWorker?: number;\n    liquidity: number;\n    volatility: number;\n}\n\nfunction initializeOptions(options?: IMonteCarloSimulationOptions): IInitializedMonteCarloSimulationOptions {\n    return Object.assign({}, {\n        investmentAmount: 1000000,\n        liquidity: 10000,\n        numRuns: 10000,\n        numYears: 10,\n        performance: 0,\n        projects: [],\n        seed: undefined,\n        volatility: 0.01\n    }, options);\n}\n\ninterface IMonteCarloSimulation {\n    environment?: IMonteCarloEnvironment;\n}\n\nfunction calculateProject(this: IMonteCarloSimulation, { project, options}: { project: IProject, options: IInitializedMonteCarloSimulationOptions}, done: Done): void {\n    const NUMBER_OF_BUCKETS = 10;\n    const environment = this.environment = this.environment || createMonteCarloEnvironment(options);\n\n    function createMonteCarloEnvironment(options: IInitializedMonteCarloSimulationOptions): IMonteCarloEnvironment {\n        const random = new (self as any).Random(10);\n\n        /**\n         * Performs the monte carlo simulation for all years and num runs.\n         * @param cashFlows the cash flows\n         * @returns {number[][]} the simulated outcomes grouped by year\n         */\n        function simulateOutcomes(cashFlows: number[], numYears: number): number[][]  {\n            function toAbsoluteIndices(indices: number[]) {\n                let currentPortfolioValue = options.investmentAmount;\n                let previousYearIndex = 100;\n\n                for (let relativeYear = 0; relativeYear < indices.length; ++relativeYear) {\n                    const currentYearIndex = indices[relativeYear];\n                    const cashFlowStartOfYear = relativeYear === 0 ? 0 : cashFlows[relativeYear - 1];\n\n                    // scale current value with performance gain according to index\n                    const performance = currentYearIndex / previousYearIndex;\n                    currentPortfolioValue = (currentPortfolioValue + cashFlowStartOfYear) * performance;\n\n                    indices[relativeYear] =  1 + random.normal(performance, options.volatility);\n\n                    previousYearIndex = currentYearIndex;\n                }\n\n                return indices;\n            }\n\n            const result: number[][] = new Array(options.numYears);\n            for (let year = 0; year <= numYears; ++year) {\n                result[year] = new Array(options.numRuns);\n            }\n\n            for (let run = 0; run < options.numRuns; run++) {\n                const indices = [100];\n\n                for (let i = 1; i <= numYears; i++) {\n                    // const randomPerformance = 1 + random.normal(options.performance, options.volatility);\n                    const randomPerformance = 1 + Math.random();\n                    indices.push(indices[i - 1] * randomPerformance);\n                }\n\n                // convert the relative values from above to absolute values.\n                toAbsoluteIndices(indices);\n\n                for (let year = 0; year < indices.length; ++year) {\n                    result[year][run] = indices[year];\n                }\n            }\n\n            return result;\n        }\n\n        function projectsToCashFlows() {\n            const cashFlows: number[] = [];\n            for (let year = 0; year < options.numYears; ++year) {\n                const projectsByThisYear = projectsByStartYear[year] || [];\n                const cashFlow = -projectsByThisYear.reduce((memo, project) => memo + project.totalAmount, 0);\n                cashFlows.push(cashFlow);\n            }\n            return cashFlows;\n        }\n\n        function calculateNoInterestReferenceLine(cashFlows: number[]) {\n            const noInterestReferenceLine: number[] = [];\n\n            let investmentAmountLeft = options.investmentAmount;\n            for (let year = 0; year < options.numYears; ++year) {\n                investmentAmountLeft = investmentAmountLeft + cashFlows[year];\n                noInterestReferenceLine.push(investmentAmountLeft);\n            }\n            return noInterestReferenceLine;\n        }\n\n        let projectsToSimulate: IProject[] = options.projects;\n\n        if (options.taskIndex && options.valuesPerWorker) {\n            projectsToSimulate = options.projects.slice(options.taskIndex * options.valuesPerWorker, (options.taskIndex + 1) * options.valuesPerWorker);\n        }\n\n        const projects = options.projects.sort((a, b) => a.startYear - b.startYear);\n\n        // Group projects by startYear, use lodash groupBy instead\n        const projectsByStartYear: Dictionary<IProject[]> = {};\n        for (const project of projects) {\n            const arr = projectsByStartYear[project.startYear] = projectsByStartYear[project.startYear] || [];\n            arr.push(project);\n        }\n\n        const cashFlows = projectsToCashFlows();\n        const noInterestReferenceLine = calculateNoInterestReferenceLine(cashFlows);\n\n        const numYears = projectsToSimulate.reduce((memo, project) => Math.max(memo, project.startYear), 0);\n\n        return {\n            investmentAmount: options.investmentAmount,\n            liquidity: options.liquidity,\n            noInterestReferenceLine,\n            numRuns: options.numRuns,\n            numYears,\n            projectsByStartYear,\n            simulatedValues: simulateOutcomes(cashFlows, numYears)\n        };\n    }\n\n    function groupForValue(value: number, groups: IGroup[]): IGroup {\n        return groups.find(group => (typeof group.from === \"undefined\" || group.from <= value) && (typeof group.to === \"undefined\" || group.to > value))!;\n    }\n\n    function createGroups(requiredAmount: number, noInterestReference: number): IGroup[] {\n        return [\n            { description: \"Ziel erreichbar\", from: requiredAmount, name: \"green\", percentage: 0, separator: true},\n            { description: \"mit Zusatzliquidität erreichbar\", from: requiredAmount - environment.liquidity, name: \"yellow\", percentage: 0, separator: true, to: requiredAmount },\n            { description: \"nicht erreichbar\", from: noInterestReference, name: \"gray\", percentage: 0, separator: false, to: requiredAmount - environment.liquidity },\n            { description: \"nicht erreichbar, mit Verlust\", name: \"red\", percentage: 0, separator: false, to: noInterestReference }\n        ];\n    }\n\n    function calculateRequiredAmount() {\n        let amount = project.totalAmount;\n        const projectsSameYear = environment.projectsByStartYear[project.startYear];\n\n        for (const otherProject of projectsSameYear) {\n            if (otherProject === project) {\n                break;\n            }\n            amount += otherProject.totalAmount;\n        }\n        return amount;\n    }\n\n    function median(values: number[]) {\n        const half = Math.floor(values.length / 2);\n\n        if (values.length % 2) {\n            return values[half];\n        }\n\n        return (values[half - 1] + values[half]) / 2.0;\n    }\n\n\n    const requiredAmount = calculateRequiredAmount();\n    const simulatedValuesThisYear = environment.simulatedValues[project.startYear];\n    simulatedValuesThisYear.sort((a, b) => a - b);\n\n    const groups = createGroups(requiredAmount, environment.noInterestReferenceLine[project.startYear]);\n    const valuesByGroup: { [groupName: string]: number } = {};\n    const bucketSize = Math.round(simulatedValuesThisYear.length / NUMBER_OF_BUCKETS);\n    const buckets: IBucket[] = [];\n\n    for (let i = 0; i < simulatedValuesThisYear.length; i += bucketSize) {\n        const bucket: IBucket = {\n            max: Number.MIN_VALUE,\n            min: Number.MAX_VALUE,\n            subBuckets: {}\n        };\n\n        for (let j = i; j < i + bucketSize; ++j) {\n            const value = simulatedValuesThisYear[j];\n            bucket.min = Math.min(bucket.min, value);\n            bucket.max = Math.max(bucket.max, value);\n\n            const group = groupForValue(simulatedValuesThisYear[j], groups);\n            valuesByGroup[group.name] = (valuesByGroup[group.name] || 0) + 1;\n            const subBucket = bucket.subBuckets[group.name] = bucket.subBuckets[group.name] || { group: group.name, max: Number.MIN_VALUE, min: Number.MAX_VALUE };\n            subBucket.min = Math.min(subBucket.min, value);\n            subBucket.max = Math.max(subBucket.max, value);\n        }\n\n        buckets.push(bucket);\n    }\n\n    const nonEmptyGroups = groups.filter(group => !!valuesByGroup[group.name]);\n    nonEmptyGroups.forEach(group => group.percentage = valuesByGroup[group.name] / simulatedValuesThisYear.length);\n\n    const oneSixth = Math.round(simulatedValuesThisYear.length / 6);\n    done({\n        buckets,\n        groups: nonEmptyGroups,\n        max: simulatedValuesThisYear[simulatedValuesThisYear.length - 1],\n        median: median(simulatedValuesThisYear),\n        min: simulatedValuesThisYear[0],\n        project,\n        twoThird: {\n            max: simulatedValuesThisYear[simulatedValuesThisYear.length - oneSixth],\n            min: simulatedValuesThisYear[oneSixth]\n        }\n    });\n}\n\nexport function threadsMonteCarlo(userOptions: IMonteCarloSimulationOptions, pool: Pool) {\n    const options = initializeOptions(userOptions);\n\n    const jobs: PromiseLike<IProjectResult>[] = [];\n    pool.run(calculateProject, [ \"https://raw.githubusercontent.com/mvarshney/simjs-source/master/src/random.js\" ]);\n\n    for (const project of options.projects) {\n        jobs.push(pool.send({ options, project }).promise());\n    }\n\n    return Promise.all(jobs);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/threads/monte-carlo.ts","/*!\n * Benchmark.js <https://benchmarkjs.com/>\n * Copyright 2010-2016 Mathias Bynens <https://mths.be/>\n * Based on JSLitmus.js, copyright Robert Kieffer <http://broofa.com/>\n * Modified by John-David Dalton <http://allyoucanleet.com/>\n * Available under MIT license <https://mths.be/mit>\n */\n;(function() {\n  'use strict';\n\n  /** Used as a safe reference for `undefined` in pre ES5 environments. */\n  var undefined;\n\n  /** Used to determine if values are of the language type Object. */\n  var objectTypes = {\n    'function': true,\n    'object': true\n  };\n\n  /** Used as a reference to the global object. */\n  var root = (objectTypes[typeof window] && window) || this;\n\n  /** Detect free variable `define`. */\n  var freeDefine = typeof define == 'function' && typeof define.amd == 'object' && define.amd && define;\n\n  /** Detect free variable `exports`. */\n  var freeExports = objectTypes[typeof exports] && exports && !exports.nodeType && exports;\n\n  /** Detect free variable `module`. */\n  var freeModule = objectTypes[typeof module] && module && !module.nodeType && module;\n\n  /** Detect free variable `global` from Node.js or Browserified code and use it as `root`. */\n  var freeGlobal = freeExports && freeModule && typeof global == 'object' && global;\n  if (freeGlobal && (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal || freeGlobal.self === freeGlobal)) {\n    root = freeGlobal;\n  }\n\n  /** Detect free variable `require`. */\n  var freeRequire = typeof require == 'function' && require;\n\n  /** Used to assign each benchmark an incremented id. */\n  var counter = 0;\n\n  /** Detect the popular CommonJS extension `module.exports`. */\n  var moduleExports = freeModule && freeModule.exports === freeExports && freeExports;\n\n  /** Used to detect primitive types. */\n  var rePrimitive = /^(?:boolean|number|string|undefined)$/;\n\n  /** Used to make every compiled test unique. */\n  var uidCounter = 0;\n\n  /** Used to assign default `context` object properties. */\n  var contextProps = [\n    'Array', 'Date', 'Function', 'Math', 'Object', 'RegExp', 'String', '_',\n    'clearTimeout', 'chrome', 'chromium', 'document', 'navigator', 'phantom',\n    'platform', 'process', 'runtime', 'setTimeout'\n  ];\n\n  /** Used to avoid hz of Infinity. */\n  var divisors = {\n    '1': 4096,\n    '2': 512,\n    '3': 64,\n    '4': 8,\n    '5': 0\n  };\n\n  /**\n   * T-Distribution two-tailed critical values for 95% confidence.\n   * For more info see http://www.itl.nist.gov/div898/handbook/eda/section3/eda3672.htm.\n   */\n  var tTable = {\n    '1':  12.706, '2':  4.303, '3':  3.182, '4':  2.776, '5':  2.571, '6':  2.447,\n    '7':  2.365,  '8':  2.306, '9':  2.262, '10': 2.228, '11': 2.201, '12': 2.179,\n    '13': 2.16,   '14': 2.145, '15': 2.131, '16': 2.12,  '17': 2.11,  '18': 2.101,\n    '19': 2.093,  '20': 2.086, '21': 2.08,  '22': 2.074, '23': 2.069, '24': 2.064,\n    '25': 2.06,   '26': 2.056, '27': 2.052, '28': 2.048, '29': 2.045, '30': 2.042,\n    'infinity': 1.96\n  };\n\n  /**\n   * Critical Mann-Whitney U-values for 95% confidence.\n   * For more info see http://www.saburchill.com/IBbiology/stats/003.html.\n   */\n  var uTable = {\n    '5':  [0, 1, 2],\n    '6':  [1, 2, 3, 5],\n    '7':  [1, 3, 5, 6, 8],\n    '8':  [2, 4, 6, 8, 10, 13],\n    '9':  [2, 4, 7, 10, 12, 15, 17],\n    '10': [3, 5, 8, 11, 14, 17, 20, 23],\n    '11': [3, 6, 9, 13, 16, 19, 23, 26, 30],\n    '12': [4, 7, 11, 14, 18, 22, 26, 29, 33, 37],\n    '13': [4, 8, 12, 16, 20, 24, 28, 33, 37, 41, 45],\n    '14': [5, 9, 13, 17, 22, 26, 31, 36, 40, 45, 50, 55],\n    '15': [5, 10, 14, 19, 24, 29, 34, 39, 44, 49, 54, 59, 64],\n    '16': [6, 11, 15, 21, 26, 31, 37, 42, 47, 53, 59, 64, 70, 75],\n    '17': [6, 11, 17, 22, 28, 34, 39, 45, 51, 57, 63, 67, 75, 81, 87],\n    '18': [7, 12, 18, 24, 30, 36, 42, 48, 55, 61, 67, 74, 80, 86, 93, 99],\n    '19': [7, 13, 19, 25, 32, 38, 45, 52, 58, 65, 72, 78, 85, 92, 99, 106, 113],\n    '20': [8, 14, 20, 27, 34, 41, 48, 55, 62, 69, 76, 83, 90, 98, 105, 112, 119, 127],\n    '21': [8, 15, 22, 29, 36, 43, 50, 58, 65, 73, 80, 88, 96, 103, 111, 119, 126, 134, 142],\n    '22': [9, 16, 23, 30, 38, 45, 53, 61, 69, 77, 85, 93, 101, 109, 117, 125, 133, 141, 150, 158],\n    '23': [9, 17, 24, 32, 40, 48, 56, 64, 73, 81, 89, 98, 106, 115, 123, 132, 140, 149, 157, 166, 175],\n    '24': [10, 17, 25, 33, 42, 50, 59, 67, 76, 85, 94, 102, 111, 120, 129, 138, 147, 156, 165, 174, 183, 192],\n    '25': [10, 18, 27, 35, 44, 53, 62, 71, 80, 89, 98, 107, 117, 126, 135, 145, 154, 163, 173, 182, 192, 201, 211],\n    '26': [11, 19, 28, 37, 46, 55, 64, 74, 83, 93, 102, 112, 122, 132, 141, 151, 161, 171, 181, 191, 200, 210, 220, 230],\n    '27': [11, 20, 29, 38, 48, 57, 67, 77, 87, 97, 107, 118, 125, 138, 147, 158, 168, 178, 188, 199, 209, 219, 230, 240, 250],\n    '28': [12, 21, 30, 40, 50, 60, 70, 80, 90, 101, 111, 122, 132, 143, 154, 164, 175, 186, 196, 207, 218, 228, 239, 250, 261, 272],\n    '29': [13, 22, 32, 42, 52, 62, 73, 83, 94, 105, 116, 127, 138, 149, 160, 171, 182, 193, 204, 215, 226, 238, 249, 260, 271, 282, 294],\n    '30': [13, 23, 33, 43, 54, 65, 76, 87, 98, 109, 120, 131, 143, 154, 166, 177, 189, 200, 212, 223, 235, 247, 258, 270, 282, 293, 305, 317]\n  };\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Create a new `Benchmark` function using the given `context` object.\n   *\n   * @static\n   * @memberOf Benchmark\n   * @param {Object} [context=root] The context object.\n   * @returns {Function} Returns a new `Benchmark` function.\n   */\n  function runInContext(context) {\n    // Exit early if unable to acquire lodash.\n    var _ = context && context._ || require('lodash') || root._;\n    if (!_) {\n      Benchmark.runInContext = runInContext;\n      return Benchmark;\n    }\n    // Avoid issues with some ES3 environments that attempt to use values, named\n    // after built-in constructors like `Object`, for the creation of literals.\n    // ES5 clears this up by stating that literals must use built-in constructors.\n    // See http://es5.github.io/#x11.1.5.\n    context = context ? _.defaults(root.Object(), context, _.pick(root, contextProps)) : root;\n\n    /** Native constructor references. */\n    var Array = context.Array,\n        Date = context.Date,\n        Function = context.Function,\n        Math = context.Math,\n        Object = context.Object,\n        RegExp = context.RegExp,\n        String = context.String;\n\n    /** Used for `Array` and `Object` method references. */\n    var arrayRef = [],\n        objectProto = Object.prototype;\n\n    /** Native method shortcuts. */\n    var abs = Math.abs,\n        clearTimeout = context.clearTimeout,\n        floor = Math.floor,\n        log = Math.log,\n        max = Math.max,\n        min = Math.min,\n        pow = Math.pow,\n        push = arrayRef.push,\n        setTimeout = context.setTimeout,\n        shift = arrayRef.shift,\n        slice = arrayRef.slice,\n        sqrt = Math.sqrt,\n        toString = objectProto.toString,\n        unshift = arrayRef.unshift;\n\n    /** Used to avoid inclusion in Browserified bundles. */\n    var req = require;\n\n    /** Detect DOM document object. */\n    var doc = isHostType(context, 'document') && context.document;\n\n    /** Used to access Wade Simmons' Node.js `microtime` module. */\n    var microtimeObject = req('microtime');\n\n    /** Used to access Node.js's high resolution timer. */\n    var processObject = isHostType(context, 'process') && context.process;\n\n    /** Used to prevent a `removeChild` memory leak in IE < 9. */\n    var trash = doc && doc.createElement('div');\n\n    /** Used to integrity check compiled tests. */\n    var uid = 'uid' + _.now();\n\n    /** Used to avoid infinite recursion when methods call each other. */\n    var calledBy = {};\n\n    /**\n     * An object used to flag environments/features.\n     *\n     * @static\n     * @memberOf Benchmark\n     * @type Object\n     */\n    var support = {};\n\n    (function() {\n\n      /**\n       * Detect if running in a browser environment.\n       *\n       * @memberOf Benchmark.support\n       * @type boolean\n       */\n      support.browser = doc && isHostType(context, 'navigator') && !isHostType(context, 'phantom');\n\n      /**\n       * Detect if the Timers API exists.\n       *\n       * @memberOf Benchmark.support\n       * @type boolean\n       */\n      support.timeout = isHostType(context, 'setTimeout') && isHostType(context, 'clearTimeout');\n\n      /**\n       * Detect if function decompilation is support.\n       *\n       * @name decompilation\n       * @memberOf Benchmark.support\n       * @type boolean\n       */\n      try {\n        // Safari 2.x removes commas in object literals from `Function#toString` results.\n        // See http://webk.it/11609 for more details.\n        // Firefox 3.6 and Opera 9.25 strip grouping parentheses from `Function#toString` results.\n        // See http://bugzil.la/559438 for more details.\n        support.decompilation = Function(\n          ('return (' + (function(x) { return { 'x': '' + (1 + x) + '', 'y': 0 }; }) + ')')\n          // Avoid issues with code added by Istanbul.\n          .replace(/__cov__[^;]+;/g, '')\n        )()(0).x === '1';\n      } catch(e) {\n        support.decompilation = false;\n      }\n    }());\n\n    /**\n     * Timer object used by `clock()` and `Deferred#resolve`.\n     *\n     * @private\n     * @type Object\n     */\n    var timer = {\n\n      /**\n       * The timer namespace object or constructor.\n       *\n       * @private\n       * @memberOf timer\n       * @type {Function|Object}\n       */\n      'ns': Date,\n\n      /**\n       * Starts the deferred timer.\n       *\n       * @private\n       * @memberOf timer\n       * @param {Object} deferred The deferred instance.\n       */\n      'start': null, // Lazy defined in `clock()`.\n\n      /**\n       * Stops the deferred timer.\n       *\n       * @private\n       * @memberOf timer\n       * @param {Object} deferred The deferred instance.\n       */\n      'stop': null // Lazy defined in `clock()`.\n    };\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The Benchmark constructor.\n     *\n     * Note: The Benchmark constructor exposes a handful of lodash methods to\n     * make working with arrays, collections, and objects easier. The lodash\n     * methods are:\n     * [`each/forEach`](https://lodash.com/docs#forEach), [`forOwn`](https://lodash.com/docs#forOwn),\n     * [`has`](https://lodash.com/docs#has), [`indexOf`](https://lodash.com/docs#indexOf),\n     * [`map`](https://lodash.com/docs#map), and [`reduce`](https://lodash.com/docs#reduce)\n     *\n     * @constructor\n     * @param {string} name A name to identify the benchmark.\n     * @param {Function|string} fn The test to benchmark.\n     * @param {Object} [options={}] Options object.\n     * @example\n     *\n     * // basic usage (the `new` operator is optional)\n     * var bench = new Benchmark(fn);\n     *\n     * // or using a name first\n     * var bench = new Benchmark('foo', fn);\n     *\n     * // or with options\n     * var bench = new Benchmark('foo', fn, {\n     *\n     *   // displayed by `Benchmark#toString` if `name` is not available\n     *   'id': 'xyz',\n     *\n     *   // called when the benchmark starts running\n     *   'onStart': onStart,\n     *\n     *   // called after each run cycle\n     *   'onCycle': onCycle,\n     *\n     *   // called when aborted\n     *   'onAbort': onAbort,\n     *\n     *   // called when a test errors\n     *   'onError': onError,\n     *\n     *   // called when reset\n     *   'onReset': onReset,\n     *\n     *   // called when the benchmark completes running\n     *   'onComplete': onComplete,\n     *\n     *   // compiled/called before the test loop\n     *   'setup': setup,\n     *\n     *   // compiled/called after the test loop\n     *   'teardown': teardown\n     * });\n     *\n     * // or name and options\n     * var bench = new Benchmark('foo', {\n     *\n     *   // a flag to indicate the benchmark is deferred\n     *   'defer': true,\n     *\n     *   // benchmark test function\n     *   'fn': function(deferred) {\n     *     // call `Deferred#resolve` when the deferred test is finished\n     *     deferred.resolve();\n     *   }\n     * });\n     *\n     * // or options only\n     * var bench = new Benchmark({\n     *\n     *   // benchmark name\n     *   'name': 'foo',\n     *\n     *   // benchmark test as a string\n     *   'fn': '[1,2,3,4].sort()'\n     * });\n     *\n     * // a test's `this` binding is set to the benchmark instance\n     * var bench = new Benchmark('foo', function() {\n     *   'My name is '.concat(this.name); // \"My name is foo\"\n     * });\n     */\n    function Benchmark(name, fn, options) {\n      var bench = this;\n\n      // Allow instance creation without the `new` operator.\n      if (!(bench instanceof Benchmark)) {\n        return new Benchmark(name, fn, options);\n      }\n      // Juggle arguments.\n      if (_.isPlainObject(name)) {\n        // 1 argument (options).\n        options = name;\n      }\n      else if (_.isFunction(name)) {\n        // 2 arguments (fn, options).\n        options = fn;\n        fn = name;\n      }\n      else if (_.isPlainObject(fn)) {\n        // 2 arguments (name, options).\n        options = fn;\n        fn = null;\n        bench.name = name;\n      }\n      else {\n        // 3 arguments (name, fn [, options]).\n        bench.name = name;\n      }\n      setOptions(bench, options);\n\n      bench.id || (bench.id = ++counter);\n      bench.fn == null && (bench.fn = fn);\n\n      bench.stats = cloneDeep(bench.stats);\n      bench.times = cloneDeep(bench.times);\n    }\n\n    /**\n     * The Deferred constructor.\n     *\n     * @constructor\n     * @memberOf Benchmark\n     * @param {Object} clone The cloned benchmark instance.\n     */\n    function Deferred(clone) {\n      var deferred = this;\n      if (!(deferred instanceof Deferred)) {\n        return new Deferred(clone);\n      }\n      deferred.benchmark = clone;\n      clock(deferred);\n    }\n\n    /**\n     * The Event constructor.\n     *\n     * @constructor\n     * @memberOf Benchmark\n     * @param {Object|string} type The event type.\n     */\n    function Event(type) {\n      var event = this;\n      if (type instanceof Event) {\n        return type;\n      }\n      return (event instanceof Event)\n        ? _.assign(event, { 'timeStamp': _.now() }, typeof type == 'string' ? { 'type': type } : type)\n        : new Event(type);\n    }\n\n    /**\n     * The Suite constructor.\n     *\n     * Note: Each Suite instance has a handful of wrapped lodash methods to\n     * make working with Suites easier. The wrapped lodash methods are:\n     * [`each/forEach`](https://lodash.com/docs#forEach), [`indexOf`](https://lodash.com/docs#indexOf),\n     * [`map`](https://lodash.com/docs#map), and [`reduce`](https://lodash.com/docs#reduce)\n     *\n     * @constructor\n     * @memberOf Benchmark\n     * @param {string} name A name to identify the suite.\n     * @param {Object} [options={}] Options object.\n     * @example\n     *\n     * // basic usage (the `new` operator is optional)\n     * var suite = new Benchmark.Suite;\n     *\n     * // or using a name first\n     * var suite = new Benchmark.Suite('foo');\n     *\n     * // or with options\n     * var suite = new Benchmark.Suite('foo', {\n     *\n     *   // called when the suite starts running\n     *   'onStart': onStart,\n     *\n     *   // called between running benchmarks\n     *   'onCycle': onCycle,\n     *\n     *   // called when aborted\n     *   'onAbort': onAbort,\n     *\n     *   // called when a test errors\n     *   'onError': onError,\n     *\n     *   // called when reset\n     *   'onReset': onReset,\n     *\n     *   // called when the suite completes running\n     *   'onComplete': onComplete\n     * });\n     */\n    function Suite(name, options) {\n      var suite = this;\n\n      // Allow instance creation without the `new` operator.\n      if (!(suite instanceof Suite)) {\n        return new Suite(name, options);\n      }\n      // Juggle arguments.\n      if (_.isPlainObject(name)) {\n        // 1 argument (options).\n        options = name;\n      } else {\n        // 2 arguments (name [, options]).\n        suite.name = name;\n      }\n      setOptions(suite, options);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * A specialized version of `_.cloneDeep` which only clones arrays and plain\n     * objects assigning all other values by reference.\n     *\n     * @private\n     * @param {*} value The value to clone.\n     * @returns {*} The cloned value.\n     */\n    var cloneDeep = _.partial(_.cloneDeepWith, _, function(value) {\n      // Only clone primitives, arrays, and plain objects.\n      return (_.isObject(value) && !_.isArray(value) && !_.isPlainObject(value))\n        ? value\n        : undefined;\n    });\n\n    /**\n     * Creates a function from the given arguments string and body.\n     *\n     * @private\n     * @param {string} args The comma separated function arguments.\n     * @param {string} body The function body.\n     * @returns {Function} The new function.\n     */\n    function createFunction() {\n      // Lazy define.\n      createFunction = function(args, body) {\n        var result,\n            anchor = freeDefine ? freeDefine.amd : Benchmark,\n            prop = uid + 'createFunction';\n\n        runScript((freeDefine ? 'define.amd.' : 'Benchmark.') + prop + '=function(' + args + '){' + body + '}');\n        result = anchor[prop];\n        delete anchor[prop];\n        return result;\n      };\n      // Fix JaegerMonkey bug.\n      // For more information see http://bugzil.la/639720.\n      createFunction = support.browser && (createFunction('', 'return\"' + uid + '\"') || _.noop)() == uid ? createFunction : Function;\n      return createFunction.apply(null, arguments);\n    }\n\n    /**\n     * Delay the execution of a function based on the benchmark's `delay` property.\n     *\n     * @private\n     * @param {Object} bench The benchmark instance.\n     * @param {Object} fn The function to execute.\n     */\n    function delay(bench, fn) {\n      bench._timerId = _.delay(fn, bench.delay * 1e3);\n    }\n\n    /**\n     * Destroys the given element.\n     *\n     * @private\n     * @param {Element} element The element to destroy.\n     */\n    function destroyElement(element) {\n      trash.appendChild(element);\n      trash.innerHTML = '';\n    }\n\n    /**\n     * Gets the name of the first argument from a function's source.\n     *\n     * @private\n     * @param {Function} fn The function.\n     * @returns {string} The argument name.\n     */\n    function getFirstArgument(fn) {\n      return (!_.has(fn, 'toString') &&\n        (/^[\\s(]*function[^(]*\\(([^\\s,)]+)/.exec(fn) || 0)[1]) || '';\n    }\n\n    /**\n     * Computes the arithmetic mean of a sample.\n     *\n     * @private\n     * @param {Array} sample The sample.\n     * @returns {number} The mean.\n     */\n    function getMean(sample) {\n      return (_.reduce(sample, function(sum, x) {\n        return sum + x;\n      }) / sample.length) || 0;\n    }\n\n    /**\n     * Gets the source code of a function.\n     *\n     * @private\n     * @param {Function} fn The function.\n     * @returns {string} The function's source code.\n     */\n    function getSource(fn) {\n      var result = '';\n      if (isStringable(fn)) {\n        result = String(fn);\n      } else if (support.decompilation) {\n        // Escape the `{` for Firefox 1.\n        result = _.result(/^[^{]+\\{([\\s\\S]*)\\}\\s*$/.exec(fn), 1);\n      }\n      // Trim string.\n      result = (result || '').replace(/^\\s+|\\s+$/g, '');\n\n      // Detect strings containing only the \"use strict\" directive.\n      return /^(?:\\/\\*+[\\w\\W]*?\\*\\/|\\/\\/.*?[\\n\\r\\u2028\\u2029]|\\s)*([\"'])use strict\\1;?$/.test(result)\n        ? ''\n        : result;\n    }\n\n    /**\n     * Checks if an object is of the specified class.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {string} name The name of the class.\n     * @returns {boolean} Returns `true` if the value is of the specified class, else `false`.\n     */\n    function isClassOf(value, name) {\n      return value != null && toString.call(value) == '[object ' + name + ']';\n    }\n\n    /**\n     * Host objects can return type values that are different from their actual\n     * data type. The objects we are concerned with usually return non-primitive\n     * types of \"object\", \"function\", or \"unknown\".\n     *\n     * @private\n     * @param {*} object The owner of the property.\n     * @param {string} property The property to check.\n     * @returns {boolean} Returns `true` if the property value is a non-primitive, else `false`.\n     */\n    function isHostType(object, property) {\n      if (object == null) {\n        return false;\n      }\n      var type = typeof object[property];\n      return !rePrimitive.test(type) && (type != 'object' || !!object[property]);\n    }\n\n    /**\n     * Checks if a value can be safely coerced to a string.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if the value can be coerced, else `false`.\n     */\n    function isStringable(value) {\n      return _.isString(value) || (_.has(value, 'toString') && _.isFunction(value.toString));\n    }\n\n    /**\n     * A wrapper around `require` to suppress `module missing` errors.\n     *\n     * @private\n     * @param {string} id The module id.\n     * @returns {*} The exported module or `null`.\n     */\n    function require(id) {\n      try {\n        var result = freeExports && freeRequire(id);\n      } catch(e) {}\n      return result || null;\n    }\n\n    /**\n     * Runs a snippet of JavaScript via script injection.\n     *\n     * @private\n     * @param {string} code The code to run.\n     */\n    function runScript(code) {\n      var anchor = freeDefine ? define.amd : Benchmark,\n          script = doc.createElement('script'),\n          sibling = doc.getElementsByTagName('script')[0],\n          parent = sibling.parentNode,\n          prop = uid + 'runScript',\n          prefix = '(' + (freeDefine ? 'define.amd.' : 'Benchmark.') + prop + '||function(){})();';\n\n      // Firefox 2.0.0.2 cannot use script injection as intended because it executes\n      // asynchronously, but that's OK because script injection is only used to avoid\n      // the previously commented JaegerMonkey bug.\n      try {\n        // Remove the inserted script *before* running the code to avoid differences\n        // in the expected script element count/order of the document.\n        script.appendChild(doc.createTextNode(prefix + code));\n        anchor[prop] = function() { destroyElement(script); };\n      } catch(e) {\n        parent = parent.cloneNode(false);\n        sibling = null;\n        script.text = code;\n      }\n      parent.insertBefore(script, sibling);\n      delete anchor[prop];\n    }\n\n    /**\n     * A helper function for setting options/event handlers.\n     *\n     * @private\n     * @param {Object} object The benchmark or suite instance.\n     * @param {Object} [options={}] Options object.\n     */\n    function setOptions(object, options) {\n      options = object.options = _.assign({}, cloneDeep(object.constructor.options), cloneDeep(options));\n\n      _.forOwn(options, function(value, key) {\n        if (value != null) {\n          // Add event listeners.\n          if (/^on[A-Z]/.test(key)) {\n            _.each(key.split(' '), function(key) {\n              object.on(key.slice(2).toLowerCase(), value);\n            });\n          } else if (!_.has(object, key)) {\n            object[key] = cloneDeep(value);\n          }\n        }\n      });\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Handles cycling/completing the deferred benchmark.\n     *\n     * @memberOf Benchmark.Deferred\n     */\n    function resolve() {\n      var deferred = this,\n          clone = deferred.benchmark,\n          bench = clone._original;\n\n      if (bench.aborted) {\n        // cycle() -> clone cycle/complete event -> compute()'s invoked bench.run() cycle/complete.\n        deferred.teardown();\n        clone.running = false;\n        cycle(deferred);\n      }\n      else if (++deferred.cycles < clone.count) {\n        clone.compiled.call(deferred, context, timer);\n      }\n      else {\n        timer.stop(deferred);\n        deferred.teardown();\n        delay(clone, function() { cycle(deferred); });\n      }\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * A generic `Array#filter` like method.\n     *\n     * @static\n     * @memberOf Benchmark\n     * @param {Array} array The array to iterate over.\n     * @param {Function|string} callback The function/alias called per iteration.\n     * @returns {Array} A new array of values that passed callback filter.\n     * @example\n     *\n     * // get odd numbers\n     * Benchmark.filter([1, 2, 3, 4, 5], function(n) {\n     *   return n % 2;\n     * }); // -> [1, 3, 5];\n     *\n     * // get fastest benchmarks\n     * Benchmark.filter(benches, 'fastest');\n     *\n     * // get slowest benchmarks\n     * Benchmark.filter(benches, 'slowest');\n     *\n     * // get benchmarks that completed without erroring\n     * Benchmark.filter(benches, 'successful');\n     */\n    function filter(array, callback) {\n      if (callback === 'successful') {\n        // Callback to exclude those that are errored, unrun, or have hz of Infinity.\n        callback = function(bench) {\n          return bench.cycles && _.isFinite(bench.hz) && !bench.error;\n        };\n      }\n      else if (callback === 'fastest' || callback === 'slowest') {\n        // Get successful, sort by period + margin of error, and filter fastest/slowest.\n        var result = filter(array, 'successful').sort(function(a, b) {\n          a = a.stats; b = b.stats;\n          return (a.mean + a.moe > b.mean + b.moe ? 1 : -1) * (callback === 'fastest' ? 1 : -1);\n        });\n\n        return _.filter(result, function(bench) {\n          return result[0].compare(bench) == 0;\n        });\n      }\n      return _.filter(array, callback);\n    }\n\n    /**\n     * Converts a number to a more readable comma-separated string representation.\n     *\n     * @static\n     * @memberOf Benchmark\n     * @param {number} number The number to convert.\n     * @returns {string} The more readable string representation.\n     */\n    function formatNumber(number) {\n      number = String(number).split('.');\n      return number[0].replace(/(?=(?:\\d{3})+$)(?!\\b)/g, ',') +\n        (number[1] ? '.' + number[1] : '');\n    }\n\n    /**\n     * Invokes a method on all items in an array.\n     *\n     * @static\n     * @memberOf Benchmark\n     * @param {Array} benches Array of benchmarks to iterate over.\n     * @param {Object|string} name The name of the method to invoke OR options object.\n     * @param {...*} [args] Arguments to invoke the method with.\n     * @returns {Array} A new array of values returned from each method invoked.\n     * @example\n     *\n     * // invoke `reset` on all benchmarks\n     * Benchmark.invoke(benches, 'reset');\n     *\n     * // invoke `emit` with arguments\n     * Benchmark.invoke(benches, 'emit', 'complete', listener);\n     *\n     * // invoke `run(true)`, treat benchmarks as a queue, and register invoke callbacks\n     * Benchmark.invoke(benches, {\n     *\n     *   // invoke the `run` method\n     *   'name': 'run',\n     *\n     *   // pass a single argument\n     *   'args': true,\n     *\n     *   // treat as queue, removing benchmarks from front of `benches` until empty\n     *   'queued': true,\n     *\n     *   // called before any benchmarks have been invoked.\n     *   'onStart': onStart,\n     *\n     *   // called between invoking benchmarks\n     *   'onCycle': onCycle,\n     *\n     *   // called after all benchmarks have been invoked.\n     *   'onComplete': onComplete\n     * });\n     */\n    function invoke(benches, name) {\n      var args,\n          bench,\n          queued,\n          index = -1,\n          eventProps = { 'currentTarget': benches },\n          options = { 'onStart': _.noop, 'onCycle': _.noop, 'onComplete': _.noop },\n          result = _.toArray(benches);\n\n      /**\n       * Invokes the method of the current object and if synchronous, fetches the next.\n       */\n      function execute() {\n        var listeners,\n            async = isAsync(bench);\n\n        if (async) {\n          // Use `getNext` as the first listener.\n          bench.on('complete', getNext);\n          listeners = bench.events.complete;\n          listeners.splice(0, 0, listeners.pop());\n        }\n        // Execute method.\n        result[index] = _.isFunction(bench && bench[name]) ? bench[name].apply(bench, args) : undefined;\n        // If synchronous return `true` until finished.\n        return !async && getNext();\n      }\n\n      /**\n       * Fetches the next bench or executes `onComplete` callback.\n       */\n      function getNext(event) {\n        var cycleEvent,\n            last = bench,\n            async = isAsync(last);\n\n        if (async) {\n          last.off('complete', getNext);\n          last.emit('complete');\n        }\n        // Emit \"cycle\" event.\n        eventProps.type = 'cycle';\n        eventProps.target = last;\n        cycleEvent = Event(eventProps);\n        options.onCycle.call(benches, cycleEvent);\n\n        // Choose next benchmark if not exiting early.\n        if (!cycleEvent.aborted && raiseIndex() !== false) {\n          bench = queued ? benches[0] : result[index];\n          if (isAsync(bench)) {\n            delay(bench, execute);\n          }\n          else if (async) {\n            // Resume execution if previously asynchronous but now synchronous.\n            while (execute()) {}\n          }\n          else {\n            // Continue synchronous execution.\n            return true;\n          }\n        } else {\n          // Emit \"complete\" event.\n          eventProps.type = 'complete';\n          options.onComplete.call(benches, Event(eventProps));\n        }\n        // When used as a listener `event.aborted = true` will cancel the rest of\n        // the \"complete\" listeners because they were already called above and when\n        // used as part of `getNext` the `return false` will exit the execution while-loop.\n        if (event) {\n          event.aborted = true;\n        } else {\n          return false;\n        }\n      }\n\n      /**\n       * Checks if invoking `Benchmark#run` with asynchronous cycles.\n       */\n      function isAsync(object) {\n        // Avoid using `instanceof` here because of IE memory leak issues with host objects.\n        var async = args[0] && args[0].async;\n        return name == 'run' && (object instanceof Benchmark) &&\n          ((async == null ? object.options.async : async) && support.timeout || object.defer);\n      }\n\n      /**\n       * Raises `index` to the next defined index or returns `false`.\n       */\n      function raiseIndex() {\n        index++;\n\n        // If queued remove the previous bench.\n        if (queued && index > 0) {\n          shift.call(benches);\n        }\n        // If we reached the last index then return `false`.\n        return (queued ? benches.length : index < result.length)\n          ? index\n          : (index = false);\n      }\n      // Juggle arguments.\n      if (_.isString(name)) {\n        // 2 arguments (array, name).\n        args = slice.call(arguments, 2);\n      } else {\n        // 2 arguments (array, options).\n        options = _.assign(options, name);\n        name = options.name;\n        args = _.isArray(args = 'args' in options ? options.args : []) ? args : [args];\n        queued = options.queued;\n      }\n      // Start iterating over the array.\n      if (raiseIndex() !== false) {\n        // Emit \"start\" event.\n        bench = result[index];\n        eventProps.type = 'start';\n        eventProps.target = bench;\n        options.onStart.call(benches, Event(eventProps));\n\n        // End early if the suite was aborted in an \"onStart\" listener.\n        if (name == 'run' && (benches instanceof Suite) && benches.aborted) {\n          // Emit \"cycle\" event.\n          eventProps.type = 'cycle';\n          options.onCycle.call(benches, Event(eventProps));\n          // Emit \"complete\" event.\n          eventProps.type = 'complete';\n          options.onComplete.call(benches, Event(eventProps));\n        }\n        // Start method execution.\n        else {\n          if (isAsync(bench)) {\n            delay(bench, execute);\n          } else {\n            while (execute()) {}\n          }\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates a string of joined array values or object key-value pairs.\n     *\n     * @static\n     * @memberOf Benchmark\n     * @param {Array|Object} object The object to operate on.\n     * @param {string} [separator1=','] The separator used between key-value pairs.\n     * @param {string} [separator2=': '] The separator used between keys and values.\n     * @returns {string} The joined result.\n     */\n    function join(object, separator1, separator2) {\n      var result = [],\n          length = (object = Object(object)).length,\n          arrayLike = length === length >>> 0;\n\n      separator2 || (separator2 = ': ');\n      _.each(object, function(value, key) {\n        result.push(arrayLike ? value : key + separator2 + value);\n      });\n      return result.join(separator1 || ',');\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Aborts all benchmarks in the suite.\n     *\n     * @name abort\n     * @memberOf Benchmark.Suite\n     * @returns {Object} The suite instance.\n     */\n    function abortSuite() {\n      var event,\n          suite = this,\n          resetting = calledBy.resetSuite;\n\n      if (suite.running) {\n        event = Event('abort');\n        suite.emit(event);\n        if (!event.cancelled || resetting) {\n          // Avoid infinite recursion.\n          calledBy.abortSuite = true;\n          suite.reset();\n          delete calledBy.abortSuite;\n\n          if (!resetting) {\n            suite.aborted = true;\n            invoke(suite, 'abort');\n          }\n        }\n      }\n      return suite;\n    }\n\n    /**\n     * Adds a test to the benchmark suite.\n     *\n     * @memberOf Benchmark.Suite\n     * @param {string} name A name to identify the benchmark.\n     * @param {Function|string} fn The test to benchmark.\n     * @param {Object} [options={}] Options object.\n     * @returns {Object} The suite instance.\n     * @example\n     *\n     * // basic usage\n     * suite.add(fn);\n     *\n     * // or using a name first\n     * suite.add('foo', fn);\n     *\n     * // or with options\n     * suite.add('foo', fn, {\n     *   'onCycle': onCycle,\n     *   'onComplete': onComplete\n     * });\n     *\n     * // or name and options\n     * suite.add('foo', {\n     *   'fn': fn,\n     *   'onCycle': onCycle,\n     *   'onComplete': onComplete\n     * });\n     *\n     * // or options only\n     * suite.add({\n     *   'name': 'foo',\n     *   'fn': fn,\n     *   'onCycle': onCycle,\n     *   'onComplete': onComplete\n     * });\n     */\n    function add(name, fn, options) {\n      var suite = this,\n          bench = new Benchmark(name, fn, options),\n          event = Event({ 'type': 'add', 'target': bench });\n\n      if (suite.emit(event), !event.cancelled) {\n        suite.push(bench);\n      }\n      return suite;\n    }\n\n    /**\n     * Creates a new suite with cloned benchmarks.\n     *\n     * @name clone\n     * @memberOf Benchmark.Suite\n     * @param {Object} options Options object to overwrite cloned options.\n     * @returns {Object} The new suite instance.\n     */\n    function cloneSuite(options) {\n      var suite = this,\n          result = new suite.constructor(_.assign({}, suite.options, options));\n\n      // Copy own properties.\n      _.forOwn(suite, function(value, key) {\n        if (!_.has(result, key)) {\n          result[key] = value && _.isFunction(value.clone)\n            ? value.clone()\n            : cloneDeep(value);\n        }\n      });\n      return result;\n    }\n\n    /**\n     * An `Array#filter` like method.\n     *\n     * @name filter\n     * @memberOf Benchmark.Suite\n     * @param {Function|string} callback The function/alias called per iteration.\n     * @returns {Object} A new suite of benchmarks that passed callback filter.\n     */\n    function filterSuite(callback) {\n      var suite = this,\n          result = new suite.constructor(suite.options);\n\n      result.push.apply(result, filter(suite, callback));\n      return result;\n    }\n\n    /**\n     * Resets all benchmarks in the suite.\n     *\n     * @name reset\n     * @memberOf Benchmark.Suite\n     * @returns {Object} The suite instance.\n     */\n    function resetSuite() {\n      var event,\n          suite = this,\n          aborting = calledBy.abortSuite;\n\n      if (suite.running && !aborting) {\n        // No worries, `resetSuite()` is called within `abortSuite()`.\n        calledBy.resetSuite = true;\n        suite.abort();\n        delete calledBy.resetSuite;\n      }\n      // Reset if the state has changed.\n      else if ((suite.aborted || suite.running) &&\n          (suite.emit(event = Event('reset')), !event.cancelled)) {\n        suite.aborted = suite.running = false;\n        if (!aborting) {\n          invoke(suite, 'reset');\n        }\n      }\n      return suite;\n    }\n\n    /**\n     * Runs the suite.\n     *\n     * @name run\n     * @memberOf Benchmark.Suite\n     * @param {Object} [options={}] Options object.\n     * @returns {Object} The suite instance.\n     * @example\n     *\n     * // basic usage\n     * suite.run();\n     *\n     * // or with options\n     * suite.run({ 'async': true, 'queued': true });\n     */\n    function runSuite(options) {\n      var suite = this;\n\n      suite.reset();\n      suite.running = true;\n      options || (options = {});\n\n      invoke(suite, {\n        'name': 'run',\n        'args': options,\n        'queued': options.queued,\n        'onStart': function(event) {\n          suite.emit(event);\n        },\n        'onCycle': function(event) {\n          var bench = event.target;\n          if (bench.error) {\n            suite.emit({ 'type': 'error', 'target': bench });\n          }\n          suite.emit(event);\n          event.aborted = suite.aborted;\n        },\n        'onComplete': function(event) {\n          suite.running = false;\n          suite.emit(event);\n        }\n      });\n      return suite;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Executes all registered listeners of the specified event type.\n     *\n     * @memberOf Benchmark, Benchmark.Suite\n     * @param {Object|string} type The event type or object.\n     * @param {...*} [args] Arguments to invoke the listener with.\n     * @returns {*} Returns the return value of the last listener executed.\n     */\n    function emit(type) {\n      var listeners,\n          object = this,\n          event = Event(type),\n          events = object.events,\n          args = (arguments[0] = event, arguments);\n\n      event.currentTarget || (event.currentTarget = object);\n      event.target || (event.target = object);\n      delete event.result;\n\n      if (events && (listeners = _.has(events, event.type) && events[event.type])) {\n        _.each(listeners.slice(), function(listener) {\n          if ((event.result = listener.apply(object, args)) === false) {\n            event.cancelled = true;\n          }\n          return !event.aborted;\n        });\n      }\n      return event.result;\n    }\n\n    /**\n     * Returns an array of event listeners for a given type that can be manipulated\n     * to add or remove listeners.\n     *\n     * @memberOf Benchmark, Benchmark.Suite\n     * @param {string} type The event type.\n     * @returns {Array} The listeners array.\n     */\n    function listeners(type) {\n      var object = this,\n          events = object.events || (object.events = {});\n\n      return _.has(events, type) ? events[type] : (events[type] = []);\n    }\n\n    /**\n     * Unregisters a listener for the specified event type(s),\n     * or unregisters all listeners for the specified event type(s),\n     * or unregisters all listeners for all event types.\n     *\n     * @memberOf Benchmark, Benchmark.Suite\n     * @param {string} [type] The event type.\n     * @param {Function} [listener] The function to unregister.\n     * @returns {Object} The current instance.\n     * @example\n     *\n     * // unregister a listener for an event type\n     * bench.off('cycle', listener);\n     *\n     * // unregister a listener for multiple event types\n     * bench.off('start cycle', listener);\n     *\n     * // unregister all listeners for an event type\n     * bench.off('cycle');\n     *\n     * // unregister all listeners for multiple event types\n     * bench.off('start cycle complete');\n     *\n     * // unregister all listeners for all event types\n     * bench.off();\n     */\n    function off(type, listener) {\n      var object = this,\n          events = object.events;\n\n      if (!events) {\n        return object;\n      }\n      _.each(type ? type.split(' ') : events, function(listeners, type) {\n        var index;\n        if (typeof listeners == 'string') {\n          type = listeners;\n          listeners = _.has(events, type) && events[type];\n        }\n        if (listeners) {\n          if (listener) {\n            index = _.indexOf(listeners, listener);\n            if (index > -1) {\n              listeners.splice(index, 1);\n            }\n          } else {\n            listeners.length = 0;\n          }\n        }\n      });\n      return object;\n    }\n\n    /**\n     * Registers a listener for the specified event type(s).\n     *\n     * @memberOf Benchmark, Benchmark.Suite\n     * @param {string} type The event type.\n     * @param {Function} listener The function to register.\n     * @returns {Object} The current instance.\n     * @example\n     *\n     * // register a listener for an event type\n     * bench.on('cycle', listener);\n     *\n     * // register a listener for multiple event types\n     * bench.on('start cycle', listener);\n     */\n    function on(type, listener) {\n      var object = this,\n          events = object.events || (object.events = {});\n\n      _.each(type.split(' '), function(type) {\n        (_.has(events, type)\n          ? events[type]\n          : (events[type] = [])\n        ).push(listener);\n      });\n      return object;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Aborts the benchmark without recording times.\n     *\n     * @memberOf Benchmark\n     * @returns {Object} The benchmark instance.\n     */\n    function abort() {\n      var event,\n          bench = this,\n          resetting = calledBy.reset;\n\n      if (bench.running) {\n        event = Event('abort');\n        bench.emit(event);\n        if (!event.cancelled || resetting) {\n          // Avoid infinite recursion.\n          calledBy.abort = true;\n          bench.reset();\n          delete calledBy.abort;\n\n          if (support.timeout) {\n            clearTimeout(bench._timerId);\n            delete bench._timerId;\n          }\n          if (!resetting) {\n            bench.aborted = true;\n            bench.running = false;\n          }\n        }\n      }\n      return bench;\n    }\n\n    /**\n     * Creates a new benchmark using the same test and options.\n     *\n     * @memberOf Benchmark\n     * @param {Object} options Options object to overwrite cloned options.\n     * @returns {Object} The new benchmark instance.\n     * @example\n     *\n     * var bizarro = bench.clone({\n     *   'name': 'doppelganger'\n     * });\n     */\n    function clone(options) {\n      var bench = this,\n          result = new bench.constructor(_.assign({}, bench, options));\n\n      // Correct the `options` object.\n      result.options = _.assign({}, cloneDeep(bench.options), cloneDeep(options));\n\n      // Copy own custom properties.\n      _.forOwn(bench, function(value, key) {\n        if (!_.has(result, key)) {\n          result[key] = cloneDeep(value);\n        }\n      });\n\n      return result;\n    }\n\n    /**\n     * Determines if a benchmark is faster than another.\n     *\n     * @memberOf Benchmark\n     * @param {Object} other The benchmark to compare.\n     * @returns {number} Returns `-1` if slower, `1` if faster, and `0` if indeterminate.\n     */\n    function compare(other) {\n      var bench = this;\n\n      // Exit early if comparing the same benchmark.\n      if (bench == other) {\n        return 0;\n      }\n      var critical,\n          zStat,\n          sample1 = bench.stats.sample,\n          sample2 = other.stats.sample,\n          size1 = sample1.length,\n          size2 = sample2.length,\n          maxSize = max(size1, size2),\n          minSize = min(size1, size2),\n          u1 = getU(sample1, sample2),\n          u2 = getU(sample2, sample1),\n          u = min(u1, u2);\n\n      function getScore(xA, sampleB) {\n        return _.reduce(sampleB, function(total, xB) {\n          return total + (xB > xA ? 0 : xB < xA ? 1 : 0.5);\n        }, 0);\n      }\n\n      function getU(sampleA, sampleB) {\n        return _.reduce(sampleA, function(total, xA) {\n          return total + getScore(xA, sampleB);\n        }, 0);\n      }\n\n      function getZ(u) {\n        return (u - ((size1 * size2) / 2)) / sqrt((size1 * size2 * (size1 + size2 + 1)) / 12);\n      }\n      // Reject the null hypothesis the two samples come from the\n      // same population (i.e. have the same median) if...\n      if (size1 + size2 > 30) {\n        // ...the z-stat is greater than 1.96 or less than -1.96\n        // http://www.statisticslectures.com/topics/mannwhitneyu/\n        zStat = getZ(u);\n        return abs(zStat) > 1.96 ? (u == u1 ? 1 : -1) : 0;\n      }\n      // ...the U value is less than or equal the critical U value.\n      critical = maxSize < 5 || minSize < 3 ? 0 : uTable[maxSize][minSize - 3];\n      return u <= critical ? (u == u1 ? 1 : -1) : 0;\n    }\n\n    /**\n     * Reset properties and abort if running.\n     *\n     * @memberOf Benchmark\n     * @returns {Object} The benchmark instance.\n     */\n    function reset() {\n      var bench = this;\n      if (bench.running && !calledBy.abort) {\n        // No worries, `reset()` is called within `abort()`.\n        calledBy.reset = true;\n        bench.abort();\n        delete calledBy.reset;\n        return bench;\n      }\n      var event,\n          index = 0,\n          changes = [],\n          queue = [];\n\n      // A non-recursive solution to check if properties have changed.\n      // For more information see http://www.jslab.dk/articles/non.recursive.preorder.traversal.part4.\n      var data = {\n        'destination': bench,\n        'source': _.assign({}, cloneDeep(bench.constructor.prototype), cloneDeep(bench.options))\n      };\n\n      do {\n        _.forOwn(data.source, function(value, key) {\n          var changed,\n              destination = data.destination,\n              currValue = destination[key];\n\n          // Skip pseudo private properties like `_timerId` which could be a\n          // Java object in environments like RingoJS.\n          if (key.charAt(0) == '_') {\n            return;\n          }\n          if (value && typeof value == 'object') {\n            if (_.isArray(value)) {\n              // Check if an array value has changed to a non-array value.\n              if (!_.isArray(currValue)) {\n                changed = currValue = [];\n              }\n              // Check if an array has changed its length.\n              if (currValue.length != value.length) {\n                changed = currValue = currValue.slice(0, value.length);\n                currValue.length = value.length;\n              }\n            }\n            // Check if an object has changed to a non-object value.\n            else if (!currValue || typeof currValue != 'object') {\n              changed = currValue = {};\n            }\n            // Register a changed object.\n            if (changed) {\n              changes.push({ 'destination': destination, 'key': key, 'value': currValue });\n            }\n            queue.push({ 'destination': currValue, 'source': value });\n          }\n          // Register a changed primitive.\n          else if (value !== currValue && !(value == null || _.isFunction(value))) {\n            changes.push({ 'destination': destination, 'key': key, 'value': value });\n          }\n        });\n      }\n      while ((data = queue[index++]));\n\n      // If changed emit the `reset` event and if it isn't cancelled reset the benchmark.\n      if (changes.length && (bench.emit(event = Event('reset')), !event.cancelled)) {\n        _.each(changes, function(data) {\n          data.destination[data.key] = data.value;\n        });\n      }\n      return bench;\n    }\n\n    /**\n     * Displays relevant benchmark information when coerced to a string.\n     *\n     * @name toString\n     * @memberOf Benchmark\n     * @returns {string} A string representation of the benchmark instance.\n     */\n    function toStringBench() {\n      var bench = this,\n          error = bench.error,\n          hz = bench.hz,\n          id = bench.id,\n          stats = bench.stats,\n          size = stats.sample.length,\n          pm = '\\xb1',\n          result = bench.name || (_.isNaN(id) ? id : '<Test #' + id + '>');\n\n      if (error) {\n        var errorStr;\n        if (!_.isObject(error)) {\n          errorStr = String(error);\n        } else if (!_.isError(Error)) {\n          errorStr = join(error);\n        } else {\n          // Error#name and Error#message properties are non-enumerable.\n          errorStr = join(_.assign({ 'name': error.name, 'message': error.message }, error));\n        }\n        result += ': ' + errorStr;\n      }\n      else {\n        result += ' x ' + formatNumber(hz.toFixed(hz < 100 ? 2 : 0)) + ' ops/sec ' + pm +\n          stats.rme.toFixed(2) + '% (' + size + ' run' + (size == 1 ? '' : 's') + ' sampled)';\n      }\n      return result;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Clocks the time taken to execute a test per cycle (secs).\n     *\n     * @private\n     * @param {Object} bench The benchmark instance.\n     * @returns {number} The time taken.\n     */\n    function clock() {\n      var options = Benchmark.options,\n          templateData = {},\n          timers = [{ 'ns': timer.ns, 'res': max(0.0015, getRes('ms')), 'unit': 'ms' }];\n\n      // Lazy define for hi-res timers.\n      clock = function(clone) {\n        var deferred;\n\n        if (clone instanceof Deferred) {\n          deferred = clone;\n          clone = deferred.benchmark;\n        }\n        var bench = clone._original,\n            stringable = isStringable(bench.fn),\n            count = bench.count = clone.count,\n            decompilable = stringable || (support.decompilation && (clone.setup !== _.noop || clone.teardown !== _.noop)),\n            id = bench.id,\n            name = bench.name || (typeof id == 'number' ? '<Test #' + id + '>' : id),\n            result = 0;\n\n        // Init `minTime` if needed.\n        clone.minTime = bench.minTime || (bench.minTime = bench.options.minTime = options.minTime);\n\n        // Compile in setup/teardown functions and the test loop.\n        // Create a new compiled test, instead of using the cached `bench.compiled`,\n        // to avoid potential engine optimizations enabled over the life of the test.\n        var funcBody = deferred\n          ? 'var d#=this,${fnArg}=d#,m#=d#.benchmark._original,f#=m#.fn,su#=m#.setup,td#=m#.teardown;' +\n            // When `deferred.cycles` is `0` then...\n            'if(!d#.cycles){' +\n            // set `deferred.fn`,\n            'd#.fn=function(){var ${fnArg}=d#;if(typeof f#==\"function\"){try{${fn}\\n}catch(e#){f#(d#)}}else{${fn}\\n}};' +\n            // set `deferred.teardown`,\n            'd#.teardown=function(){d#.cycles=0;if(typeof td#==\"function\"){try{${teardown}\\n}catch(e#){td#()}}else{${teardown}\\n}};' +\n            // execute the benchmark's `setup`,\n            'if(typeof su#==\"function\"){try{${setup}\\n}catch(e#){su#()}}else{${setup}\\n};' +\n            // start timer,\n            't#.start(d#);' +\n            // and then execute `deferred.fn` and return a dummy object.\n            '}d#.fn();return{uid:\"${uid}\"}'\n\n          : 'var r#,s#,m#=this,f#=m#.fn,i#=m#.count,n#=t#.ns;${setup}\\n${begin};' +\n            'while(i#--){${fn}\\n}${end};${teardown}\\nreturn{elapsed:r#,uid:\"${uid}\"}';\n\n        var compiled = bench.compiled = clone.compiled = createCompiled(bench, decompilable, deferred, funcBody),\n            isEmpty = !(templateData.fn || stringable);\n\n        try {\n          if (isEmpty) {\n            // Firefox may remove dead code from `Function#toString` results.\n            // For more information see http://bugzil.la/536085.\n            throw new Error('The test \"' + name + '\" is empty. This may be the result of dead code removal.');\n          }\n          else if (!deferred) {\n            // Pretest to determine if compiled code exits early, usually by a\n            // rogue `return` statement, by checking for a return object with the uid.\n            bench.count = 1;\n            compiled = decompilable && (compiled.call(bench, context, timer) || {}).uid == templateData.uid && compiled;\n            bench.count = count;\n          }\n        } catch(e) {\n          compiled = null;\n          clone.error = e || new Error(String(e));\n          bench.count = count;\n        }\n        // Fallback when a test exits early or errors during pretest.\n        if (!compiled && !deferred && !isEmpty) {\n          funcBody = (\n            stringable || (decompilable && !clone.error)\n              ? 'function f#(){${fn}\\n}var r#,s#,m#=this,i#=m#.count'\n              : 'var r#,s#,m#=this,f#=m#.fn,i#=m#.count'\n            ) +\n            ',n#=t#.ns;${setup}\\n${begin};m#.f#=f#;while(i#--){m#.f#()}${end};' +\n            'delete m#.f#;${teardown}\\nreturn{elapsed:r#}';\n\n          compiled = createCompiled(bench, decompilable, deferred, funcBody);\n\n          try {\n            // Pretest one more time to check for errors.\n            bench.count = 1;\n            compiled.call(bench, context, timer);\n            bench.count = count;\n            delete clone.error;\n          }\n          catch(e) {\n            bench.count = count;\n            if (!clone.error) {\n              clone.error = e || new Error(String(e));\n            }\n          }\n        }\n        // If no errors run the full test loop.\n        if (!clone.error) {\n          compiled = bench.compiled = clone.compiled = createCompiled(bench, decompilable, deferred, funcBody);\n          result = compiled.call(deferred || bench, context, timer).elapsed;\n        }\n        return result;\n      };\n\n      /*----------------------------------------------------------------------*/\n\n      /**\n       * Creates a compiled function from the given function `body`.\n       */\n      function createCompiled(bench, decompilable, deferred, body) {\n        var fn = bench.fn,\n            fnArg = deferred ? getFirstArgument(fn) || 'deferred' : '';\n\n        templateData.uid = uid + uidCounter++;\n\n        _.assign(templateData, {\n          'setup': decompilable ? getSource(bench.setup) : interpolate('m#.setup()'),\n          'fn': decompilable ? getSource(fn) : interpolate('m#.fn(' + fnArg + ')'),\n          'fnArg': fnArg,\n          'teardown': decompilable ? getSource(bench.teardown) : interpolate('m#.teardown()')\n        });\n\n        // Use API of chosen timer.\n        if (timer.unit == 'ns') {\n          _.assign(templateData, {\n            'begin': interpolate('s#=n#()'),\n            'end': interpolate('r#=n#(s#);r#=r#[0]+(r#[1]/1e9)')\n          });\n        }\n        else if (timer.unit == 'us') {\n          if (timer.ns.stop) {\n            _.assign(templateData, {\n              'begin': interpolate('s#=n#.start()'),\n              'end': interpolate('r#=n#.microseconds()/1e6')\n            });\n          } else {\n            _.assign(templateData, {\n              'begin': interpolate('s#=n#()'),\n              'end': interpolate('r#=(n#()-s#)/1e6')\n            });\n          }\n        }\n        else if (timer.ns.now) {\n          _.assign(templateData, {\n            'begin': interpolate('s#=n#.now()'),\n            'end': interpolate('r#=(n#.now()-s#)/1e3')\n          });\n        }\n        else {\n          _.assign(templateData, {\n            'begin': interpolate('s#=new n#().getTime()'),\n            'end': interpolate('r#=(new n#().getTime()-s#)/1e3')\n          });\n        }\n        // Define `timer` methods.\n        timer.start = createFunction(\n          interpolate('o#'),\n          interpolate('var n#=this.ns,${begin};o#.elapsed=0;o#.timeStamp=s#')\n        );\n\n        timer.stop = createFunction(\n          interpolate('o#'),\n          interpolate('var n#=this.ns,s#=o#.timeStamp,${end};o#.elapsed=r#')\n        );\n\n        // Create compiled test.\n        return createFunction(\n          interpolate('window,t#'),\n          'var global = window, clearTimeout = global.clearTimeout, setTimeout = global.setTimeout;\\n' +\n          interpolate(body)\n        );\n      }\n\n      /**\n       * Gets the current timer's minimum resolution (secs).\n       */\n      function getRes(unit) {\n        var measured,\n            begin,\n            count = 30,\n            divisor = 1e3,\n            ns = timer.ns,\n            sample = [];\n\n        // Get average smallest measurable time.\n        while (count--) {\n          if (unit == 'us') {\n            divisor = 1e6;\n            if (ns.stop) {\n              ns.start();\n              while (!(measured = ns.microseconds())) {}\n            } else {\n              begin = ns();\n              while (!(measured = ns() - begin)) {}\n            }\n          }\n          else if (unit == 'ns') {\n            divisor = 1e9;\n            begin = (begin = ns())[0] + (begin[1] / divisor);\n            while (!(measured = ((measured = ns())[0] + (measured[1] / divisor)) - begin)) {}\n            divisor = 1;\n          }\n          else if (ns.now) {\n            begin = ns.now();\n            while (!(measured = ns.now() - begin)) {}\n          }\n          else {\n            begin = new ns().getTime();\n            while (!(measured = new ns().getTime() - begin)) {}\n          }\n          // Check for broken timers.\n          if (measured > 0) {\n            sample.push(measured);\n          } else {\n            sample.push(Infinity);\n            break;\n          }\n        }\n        // Convert to seconds.\n        return getMean(sample) / divisor;\n      }\n\n      /**\n       * Interpolates a given template string.\n       */\n      function interpolate(string) {\n        // Replaces all occurrences of `#` with a unique number and template tokens with content.\n        return _.template(string.replace(/\\#/g, /\\d+/.exec(templateData.uid)))(templateData);\n      }\n\n      /*----------------------------------------------------------------------*/\n\n      // Detect Chrome's microsecond timer:\n      // enable benchmarking via the --enable-benchmarking command\n      // line switch in at least Chrome 7 to use chrome.Interval\n      try {\n        if ((timer.ns = new (context.chrome || context.chromium).Interval)) {\n          timers.push({ 'ns': timer.ns, 'res': getRes('us'), 'unit': 'us' });\n        }\n      } catch(e) {}\n\n      // Detect Node.js's nanosecond resolution timer available in Node.js >= 0.8.\n      if (processObject && typeof (timer.ns = processObject.hrtime) == 'function') {\n        timers.push({ 'ns': timer.ns, 'res': getRes('ns'), 'unit': 'ns' });\n      }\n      // Detect Wade Simmons' Node.js `microtime` module.\n      if (microtimeObject && typeof (timer.ns = microtimeObject.now) == 'function') {\n        timers.push({ 'ns': timer.ns,  'res': getRes('us'), 'unit': 'us' });\n      }\n      // Pick timer with highest resolution.\n      timer = _.minBy(timers, 'res');\n\n      // Error if there are no working timers.\n      if (timer.res == Infinity) {\n        throw new Error('Benchmark.js was unable to find a working timer.');\n      }\n      // Resolve time span required to achieve a percent uncertainty of at most 1%.\n      // For more information see http://spiff.rit.edu/classes/phys273/uncert/uncert.html.\n      options.minTime || (options.minTime = max(timer.res / 2 / 0.01, 0.05));\n      return clock.apply(null, arguments);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Computes stats on benchmark results.\n     *\n     * @private\n     * @param {Object} bench The benchmark instance.\n     * @param {Object} options The options object.\n     */\n    function compute(bench, options) {\n      options || (options = {});\n\n      var async = options.async,\n          elapsed = 0,\n          initCount = bench.initCount,\n          minSamples = bench.minSamples,\n          queue = [],\n          sample = bench.stats.sample;\n\n      /**\n       * Adds a clone to the queue.\n       */\n      function enqueue() {\n        queue.push(bench.clone({\n          '_original': bench,\n          'events': {\n            'abort': [update],\n            'cycle': [update],\n            'error': [update],\n            'start': [update]\n          }\n        }));\n      }\n\n      /**\n       * Updates the clone/original benchmarks to keep their data in sync.\n       */\n      function update(event) {\n        var clone = this,\n            type = event.type;\n\n        if (bench.running) {\n          if (type == 'start') {\n            // Note: `clone.minTime` prop is inited in `clock()`.\n            clone.count = bench.initCount;\n          }\n          else {\n            if (type == 'error') {\n              bench.error = clone.error;\n            }\n            if (type == 'abort') {\n              bench.abort();\n              bench.emit('cycle');\n            } else {\n              event.currentTarget = event.target = bench;\n              bench.emit(event);\n            }\n          }\n        } else if (bench.aborted) {\n          // Clear abort listeners to avoid triggering bench's abort/cycle again.\n          clone.events.abort.length = 0;\n          clone.abort();\n        }\n      }\n\n      /**\n       * Determines if more clones should be queued or if cycling should stop.\n       */\n      function evaluate(event) {\n        var critical,\n            df,\n            mean,\n            moe,\n            rme,\n            sd,\n            sem,\n            variance,\n            clone = event.target,\n            done = bench.aborted,\n            now = _.now(),\n            size = sample.push(clone.times.period),\n            maxedOut = size >= minSamples && (elapsed += now - clone.times.timeStamp) / 1e3 > bench.maxTime,\n            times = bench.times,\n            varOf = function(sum, x) { return sum + pow(x - mean, 2); };\n\n        // Exit early for aborted or unclockable tests.\n        if (done || clone.hz == Infinity) {\n          maxedOut = !(size = sample.length = queue.length = 0);\n        }\n\n        if (!done) {\n          // Compute the sample mean (estimate of the population mean).\n          mean = getMean(sample);\n          // Compute the sample variance (estimate of the population variance).\n          variance = _.reduce(sample, varOf, 0) / (size - 1) || 0;\n          // Compute the sample standard deviation (estimate of the population standard deviation).\n          sd = sqrt(variance);\n          // Compute the standard error of the mean (a.k.a. the standard deviation of the sampling distribution of the sample mean).\n          sem = sd / sqrt(size);\n          // Compute the degrees of freedom.\n          df = size - 1;\n          // Compute the critical value.\n          critical = tTable[Math.round(df) || 1] || tTable.infinity;\n          // Compute the margin of error.\n          moe = sem * critical;\n          // Compute the relative margin of error.\n          rme = (moe / mean) * 100 || 0;\n\n          _.assign(bench.stats, {\n            'deviation': sd,\n            'mean': mean,\n            'moe': moe,\n            'rme': rme,\n            'sem': sem,\n            'variance': variance\n          });\n\n          // Abort the cycle loop when the minimum sample size has been collected\n          // and the elapsed time exceeds the maximum time allowed per benchmark.\n          // We don't count cycle delays toward the max time because delays may be\n          // increased by browsers that clamp timeouts for inactive tabs. For more\n          // information see https://developer.mozilla.org/en/window.setTimeout#Inactive_tabs.\n          if (maxedOut) {\n            // Reset the `initCount` in case the benchmark is rerun.\n            bench.initCount = initCount;\n            bench.running = false;\n            done = true;\n            times.elapsed = (now - times.timeStamp) / 1e3;\n          }\n          if (bench.hz != Infinity) {\n            bench.hz = 1 / mean;\n            times.cycle = mean * bench.count;\n            times.period = mean;\n          }\n        }\n        // If time permits, increase sample size to reduce the margin of error.\n        if (queue.length < 2 && !maxedOut) {\n          enqueue();\n        }\n        // Abort the `invoke` cycle when done.\n        event.aborted = done;\n      }\n\n      // Init queue and begin.\n      enqueue();\n      invoke(queue, {\n        'name': 'run',\n        'args': { 'async': async },\n        'queued': true,\n        'onCycle': evaluate,\n        'onComplete': function() { bench.emit('complete'); }\n      });\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Cycles a benchmark until a run `count` can be established.\n     *\n     * @private\n     * @param {Object} clone The cloned benchmark instance.\n     * @param {Object} options The options object.\n     */\n    function cycle(clone, options) {\n      options || (options = {});\n\n      var deferred;\n      if (clone instanceof Deferred) {\n        deferred = clone;\n        clone = clone.benchmark;\n      }\n      var clocked,\n          cycles,\n          divisor,\n          event,\n          minTime,\n          period,\n          async = options.async,\n          bench = clone._original,\n          count = clone.count,\n          times = clone.times;\n\n      // Continue, if not aborted between cycles.\n      if (clone.running) {\n        // `minTime` is set to `Benchmark.options.minTime` in `clock()`.\n        cycles = ++clone.cycles;\n        clocked = deferred ? deferred.elapsed : clock(clone);\n        minTime = clone.minTime;\n\n        if (cycles > bench.cycles) {\n          bench.cycles = cycles;\n        }\n        if (clone.error) {\n          event = Event('error');\n          event.message = clone.error;\n          clone.emit(event);\n          if (!event.cancelled) {\n            clone.abort();\n          }\n        }\n      }\n      // Continue, if not errored.\n      if (clone.running) {\n        // Compute the time taken to complete last test cycle.\n        bench.times.cycle = times.cycle = clocked;\n        // Compute the seconds per operation.\n        period = bench.times.period = times.period = clocked / count;\n        // Compute the ops per second.\n        bench.hz = clone.hz = 1 / period;\n        // Avoid working our way up to this next time.\n        bench.initCount = clone.initCount = count;\n        // Do we need to do another cycle?\n        clone.running = clocked < minTime;\n\n        if (clone.running) {\n          // Tests may clock at `0` when `initCount` is a small number,\n          // to avoid that we set its count to something a bit higher.\n          if (!clocked && (divisor = divisors[clone.cycles]) != null) {\n            count = floor(4e6 / divisor);\n          }\n          // Calculate how many more iterations it will take to achieve the `minTime`.\n          if (count <= clone.count) {\n            count += Math.ceil((minTime - clocked) / period);\n          }\n          clone.running = count != Infinity;\n        }\n      }\n      // Should we exit early?\n      event = Event('cycle');\n      clone.emit(event);\n      if (event.aborted) {\n        clone.abort();\n      }\n      // Figure out what to do next.\n      if (clone.running) {\n        // Start a new cycle.\n        clone.count = count;\n        if (deferred) {\n          clone.compiled.call(deferred, context, timer);\n        } else if (async) {\n          delay(clone, function() { cycle(clone, options); });\n        } else {\n          cycle(clone);\n        }\n      }\n      else {\n        // Fix TraceMonkey bug associated with clock fallbacks.\n        // For more information see http://bugzil.la/509069.\n        if (support.browser) {\n          runScript(uid + '=1;delete ' + uid);\n        }\n        // We're done.\n        clone.emit('complete');\n      }\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Runs the benchmark.\n     *\n     * @memberOf Benchmark\n     * @param {Object} [options={}] Options object.\n     * @returns {Object} The benchmark instance.\n     * @example\n     *\n     * // basic usage\n     * bench.run();\n     *\n     * // or with options\n     * bench.run({ 'async': true });\n     */\n    function run(options) {\n      var bench = this,\n          event = Event('start');\n\n      // Set `running` to `false` so `reset()` won't call `abort()`.\n      bench.running = false;\n      bench.reset();\n      bench.running = true;\n\n      bench.count = bench.initCount;\n      bench.times.timeStamp = _.now();\n      bench.emit(event);\n\n      if (!event.cancelled) {\n        options = { 'async': ((options = options && options.async) == null ? bench.async : options) && support.timeout };\n\n        // For clones created within `compute()`.\n        if (bench._original) {\n          if (bench.defer) {\n            Deferred(bench);\n          } else {\n            cycle(bench, options);\n          }\n        }\n        // For original benchmarks.\n        else {\n          compute(bench, options);\n        }\n      }\n      return bench;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    // Firefox 1 erroneously defines variable and argument names of functions on\n    // the function itself as non-configurable properties with `undefined` values.\n    // The bugginess continues as the `Benchmark` constructor has an argument\n    // named `options` and Firefox 1 will not assign a value to `Benchmark.options`,\n    // making it non-writable in the process, unless it is the first property\n    // assigned by for-in loop of `_.assign()`.\n    _.assign(Benchmark, {\n\n      /**\n       * The default options copied by benchmark instances.\n       *\n       * @static\n       * @memberOf Benchmark\n       * @type Object\n       */\n      'options': {\n\n        /**\n         * A flag to indicate that benchmark cycles will execute asynchronously\n         * by default.\n         *\n         * @memberOf Benchmark.options\n         * @type boolean\n         */\n        'async': false,\n\n        /**\n         * A flag to indicate that the benchmark clock is deferred.\n         *\n         * @memberOf Benchmark.options\n         * @type boolean\n         */\n        'defer': false,\n\n        /**\n         * The delay between test cycles (secs).\n         * @memberOf Benchmark.options\n         * @type number\n         */\n        'delay': 0.005,\n\n        /**\n         * Displayed by `Benchmark#toString` when a `name` is not available\n         * (auto-generated if absent).\n         *\n         * @memberOf Benchmark.options\n         * @type string\n         */\n        'id': undefined,\n\n        /**\n         * The default number of times to execute a test on a benchmark's first cycle.\n         *\n         * @memberOf Benchmark.options\n         * @type number\n         */\n        'initCount': 1,\n\n        /**\n         * The maximum time a benchmark is allowed to run before finishing (secs).\n         *\n         * Note: Cycle delays aren't counted toward the maximum time.\n         *\n         * @memberOf Benchmark.options\n         * @type number\n         */\n        'maxTime': 5,\n\n        /**\n         * The minimum sample size required to perform statistical analysis.\n         *\n         * @memberOf Benchmark.options\n         * @type number\n         */\n        'minSamples': 5,\n\n        /**\n         * The time needed to reduce the percent uncertainty of measurement to 1% (secs).\n         *\n         * @memberOf Benchmark.options\n         * @type number\n         */\n        'minTime': 0,\n\n        /**\n         * The name of the benchmark.\n         *\n         * @memberOf Benchmark.options\n         * @type string\n         */\n        'name': undefined,\n\n        /**\n         * An event listener called when the benchmark is aborted.\n         *\n         * @memberOf Benchmark.options\n         * @type Function\n         */\n        'onAbort': undefined,\n\n        /**\n         * An event listener called when the benchmark completes running.\n         *\n         * @memberOf Benchmark.options\n         * @type Function\n         */\n        'onComplete': undefined,\n\n        /**\n         * An event listener called after each run cycle.\n         *\n         * @memberOf Benchmark.options\n         * @type Function\n         */\n        'onCycle': undefined,\n\n        /**\n         * An event listener called when a test errors.\n         *\n         * @memberOf Benchmark.options\n         * @type Function\n         */\n        'onError': undefined,\n\n        /**\n         * An event listener called when the benchmark is reset.\n         *\n         * @memberOf Benchmark.options\n         * @type Function\n         */\n        'onReset': undefined,\n\n        /**\n         * An event listener called when the benchmark starts running.\n         *\n         * @memberOf Benchmark.options\n         * @type Function\n         */\n        'onStart': undefined\n      },\n\n      /**\n       * Platform object with properties describing things like browser name,\n       * version, and operating system. See [`platform.js`](https://mths.be/platform).\n       *\n       * @static\n       * @memberOf Benchmark\n       * @type Object\n       */\n      'platform': context.platform || require('platform') || ({\n        'description': context.navigator && context.navigator.userAgent || null,\n        'layout': null,\n        'product': null,\n        'name': null,\n        'manufacturer': null,\n        'os': null,\n        'prerelease': null,\n        'version': null,\n        'toString': function() {\n          return this.description || '';\n        }\n      }),\n\n      /**\n       * The semantic version number.\n       *\n       * @static\n       * @memberOf Benchmark\n       * @type string\n       */\n      'version': '2.1.2'\n    });\n\n    _.assign(Benchmark, {\n      'filter': filter,\n      'formatNumber': formatNumber,\n      'invoke': invoke,\n      'join': join,\n      'runInContext': runInContext,\n      'support': support\n    });\n\n    // Add lodash methods to Benchmark.\n    _.each(['each', 'forEach', 'forOwn', 'has', 'indexOf', 'map', 'reduce'], function(methodName) {\n      Benchmark[methodName] = _[methodName];\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    _.assign(Benchmark.prototype, {\n\n      /**\n       * The number of times a test was executed.\n       *\n       * @memberOf Benchmark\n       * @type number\n       */\n      'count': 0,\n\n      /**\n       * The number of cycles performed while benchmarking.\n       *\n       * @memberOf Benchmark\n       * @type number\n       */\n      'cycles': 0,\n\n      /**\n       * The number of executions per second.\n       *\n       * @memberOf Benchmark\n       * @type number\n       */\n      'hz': 0,\n\n      /**\n       * The compiled test function.\n       *\n       * @memberOf Benchmark\n       * @type {Function|string}\n       */\n      'compiled': undefined,\n\n      /**\n       * The error object if the test failed.\n       *\n       * @memberOf Benchmark\n       * @type Object\n       */\n      'error': undefined,\n\n      /**\n       * The test to benchmark.\n       *\n       * @memberOf Benchmark\n       * @type {Function|string}\n       */\n      'fn': undefined,\n\n      /**\n       * A flag to indicate if the benchmark is aborted.\n       *\n       * @memberOf Benchmark\n       * @type boolean\n       */\n      'aborted': false,\n\n      /**\n       * A flag to indicate if the benchmark is running.\n       *\n       * @memberOf Benchmark\n       * @type boolean\n       */\n      'running': false,\n\n      /**\n       * Compiled into the test and executed immediately **before** the test loop.\n       *\n       * @memberOf Benchmark\n       * @type {Function|string}\n       * @example\n       *\n       * // basic usage\n       * var bench = Benchmark({\n       *   'setup': function() {\n       *     var c = this.count,\n       *         element = document.getElementById('container');\n       *     while (c--) {\n       *       element.appendChild(document.createElement('div'));\n       *     }\n       *   },\n       *   'fn': function() {\n       *     element.removeChild(element.lastChild);\n       *   }\n       * });\n       *\n       * // compiles to something like:\n       * var c = this.count,\n       *     element = document.getElementById('container');\n       * while (c--) {\n       *   element.appendChild(document.createElement('div'));\n       * }\n       * var start = new Date;\n       * while (count--) {\n       *   element.removeChild(element.lastChild);\n       * }\n       * var end = new Date - start;\n       *\n       * // or using strings\n       * var bench = Benchmark({\n       *   'setup': '\\\n       *     var a = 0;\\n\\\n       *     (function() {\\n\\\n       *       (function() {\\n\\\n       *         (function() {',\n       *   'fn': 'a += 1;',\n       *   'teardown': '\\\n       *          }())\\n\\\n       *        }())\\n\\\n       *      }())'\n       * });\n       *\n       * // compiles to something like:\n       * var a = 0;\n       * (function() {\n       *   (function() {\n       *     (function() {\n       *       var start = new Date;\n       *       while (count--) {\n       *         a += 1;\n       *       }\n       *       var end = new Date - start;\n       *     }())\n       *   }())\n       * }())\n       */\n      'setup': _.noop,\n\n      /**\n       * Compiled into the test and executed immediately **after** the test loop.\n       *\n       * @memberOf Benchmark\n       * @type {Function|string}\n       */\n      'teardown': _.noop,\n\n      /**\n       * An object of stats including mean, margin or error, and standard deviation.\n       *\n       * @memberOf Benchmark\n       * @type Object\n       */\n      'stats': {\n\n        /**\n         * The margin of error.\n         *\n         * @memberOf Benchmark#stats\n         * @type number\n         */\n        'moe': 0,\n\n        /**\n         * The relative margin of error (expressed as a percentage of the mean).\n         *\n         * @memberOf Benchmark#stats\n         * @type number\n         */\n        'rme': 0,\n\n        /**\n         * The standard error of the mean.\n         *\n         * @memberOf Benchmark#stats\n         * @type number\n         */\n        'sem': 0,\n\n        /**\n         * The sample standard deviation.\n         *\n         * @memberOf Benchmark#stats\n         * @type number\n         */\n        'deviation': 0,\n\n        /**\n         * The sample arithmetic mean (secs).\n         *\n         * @memberOf Benchmark#stats\n         * @type number\n         */\n        'mean': 0,\n\n        /**\n         * The array of sampled periods.\n         *\n         * @memberOf Benchmark#stats\n         * @type Array\n         */\n        'sample': [],\n\n        /**\n         * The sample variance.\n         *\n         * @memberOf Benchmark#stats\n         * @type number\n         */\n        'variance': 0\n      },\n\n      /**\n       * An object of timing data including cycle, elapsed, period, start, and stop.\n       *\n       * @memberOf Benchmark\n       * @type Object\n       */\n      'times': {\n\n        /**\n         * The time taken to complete the last cycle (secs).\n         *\n         * @memberOf Benchmark#times\n         * @type number\n         */\n        'cycle': 0,\n\n        /**\n         * The time taken to complete the benchmark (secs).\n         *\n         * @memberOf Benchmark#times\n         * @type number\n         */\n        'elapsed': 0,\n\n        /**\n         * The time taken to execute the test once (secs).\n         *\n         * @memberOf Benchmark#times\n         * @type number\n         */\n        'period': 0,\n\n        /**\n         * A timestamp of when the benchmark started (ms).\n         *\n         * @memberOf Benchmark#times\n         * @type number\n         */\n        'timeStamp': 0\n      }\n    });\n\n    _.assign(Benchmark.prototype, {\n      'abort': abort,\n      'clone': clone,\n      'compare': compare,\n      'emit': emit,\n      'listeners': listeners,\n      'off': off,\n      'on': on,\n      'reset': reset,\n      'run': run,\n      'toString': toStringBench\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    _.assign(Deferred.prototype, {\n\n      /**\n       * The deferred benchmark instance.\n       *\n       * @memberOf Benchmark.Deferred\n       * @type Object\n       */\n      'benchmark': null,\n\n      /**\n       * The number of deferred cycles performed while benchmarking.\n       *\n       * @memberOf Benchmark.Deferred\n       * @type number\n       */\n      'cycles': 0,\n\n      /**\n       * The time taken to complete the deferred benchmark (secs).\n       *\n       * @memberOf Benchmark.Deferred\n       * @type number\n       */\n      'elapsed': 0,\n\n      /**\n       * A timestamp of when the deferred benchmark started (ms).\n       *\n       * @memberOf Benchmark.Deferred\n       * @type number\n       */\n      'timeStamp': 0\n    });\n\n    _.assign(Deferred.prototype, {\n      'resolve': resolve\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    _.assign(Event.prototype, {\n\n      /**\n       * A flag to indicate if the emitters listener iteration is aborted.\n       *\n       * @memberOf Benchmark.Event\n       * @type boolean\n       */\n      'aborted': false,\n\n      /**\n       * A flag to indicate if the default action is cancelled.\n       *\n       * @memberOf Benchmark.Event\n       * @type boolean\n       */\n      'cancelled': false,\n\n      /**\n       * The object whose listeners are currently being processed.\n       *\n       * @memberOf Benchmark.Event\n       * @type Object\n       */\n      'currentTarget': undefined,\n\n      /**\n       * The return value of the last executed listener.\n       *\n       * @memberOf Benchmark.Event\n       * @type Mixed\n       */\n      'result': undefined,\n\n      /**\n       * The object to which the event was originally emitted.\n       *\n       * @memberOf Benchmark.Event\n       * @type Object\n       */\n      'target': undefined,\n\n      /**\n       * A timestamp of when the event was created (ms).\n       *\n       * @memberOf Benchmark.Event\n       * @type number\n       */\n      'timeStamp': 0,\n\n      /**\n       * The event type.\n       *\n       * @memberOf Benchmark.Event\n       * @type string\n       */\n      'type': ''\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The default options copied by suite instances.\n     *\n     * @static\n     * @memberOf Benchmark.Suite\n     * @type Object\n     */\n    Suite.options = {\n\n      /**\n       * The name of the suite.\n       *\n       * @memberOf Benchmark.Suite.options\n       * @type string\n       */\n      'name': undefined\n    };\n\n    /*------------------------------------------------------------------------*/\n\n    _.assign(Suite.prototype, {\n\n      /**\n       * The number of benchmarks in the suite.\n       *\n       * @memberOf Benchmark.Suite\n       * @type number\n       */\n      'length': 0,\n\n      /**\n       * A flag to indicate if the suite is aborted.\n       *\n       * @memberOf Benchmark.Suite\n       * @type boolean\n       */\n      'aborted': false,\n\n      /**\n       * A flag to indicate if the suite is running.\n       *\n       * @memberOf Benchmark.Suite\n       * @type boolean\n       */\n      'running': false\n    });\n\n    _.assign(Suite.prototype, {\n      'abort': abortSuite,\n      'add': add,\n      'clone': cloneSuite,\n      'emit': emit,\n      'filter': filterSuite,\n      'join': arrayRef.join,\n      'listeners': listeners,\n      'off': off,\n      'on': on,\n      'pop': arrayRef.pop,\n      'push': push,\n      'reset': resetSuite,\n      'run': runSuite,\n      'reverse': arrayRef.reverse,\n      'shift': shift,\n      'slice': slice,\n      'sort': arrayRef.sort,\n      'splice': arrayRef.splice,\n      'unshift': unshift\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    // Expose Deferred, Event, and Suite.\n    _.assign(Benchmark, {\n      'Deferred': Deferred,\n      'Event': Event,\n      'Suite': Suite\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    // Add lodash methods as Suite methods.\n    _.each(['each', 'forEach', 'indexOf', 'map', 'reduce'], function(methodName) {\n      var func = _[methodName];\n      Suite.prototype[methodName] = function() {\n        var args = [this];\n        push.apply(args, arguments);\n        return func.apply(_, args);\n      };\n    });\n\n    // Avoid array-like object bugs with `Array#shift` and `Array#splice`\n    // in Firefox < 10 and IE < 9.\n    _.each(['pop', 'shift', 'splice'], function(methodName) {\n      var func = arrayRef[methodName];\n\n      Suite.prototype[methodName] = function() {\n        var value = this,\n            result = func.apply(value, arguments);\n\n        if (value.length === 0) {\n          delete value[0];\n        }\n        return result;\n      };\n    });\n\n    // Avoid buggy `Array#unshift` in IE < 8 which doesn't return the new\n    // length of the array.\n    Suite.prototype.unshift = function() {\n      var value = this;\n      unshift.apply(value, arguments);\n      return value.length;\n    };\n\n    return Benchmark;\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  // Export Benchmark.\n  // Some AMD build optimizers, like r.js, check for condition patterns like the following:\n  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {\n    // Define as an anonymous module so, through path mapping, it can be aliased.\n    define(['lodash', 'platform'], function(_, platform) {\n      return runInContext({\n        '_': _,\n        'platform': platform\n      });\n    });\n  }\n  else {\n    var Benchmark = runInContext();\n\n    // Check for `exports` after `define` in case a build optimizer adds an `exports` object.\n    if (freeExports && freeModule) {\n      // Export for Node.js.\n      if (moduleExports) {\n        (freeModule.exports = Benchmark).Benchmark = Benchmark;\n      }\n      // Export for CommonJS support.\n      freeExports.Benchmark = Benchmark;\n    }\n    else {\n      // Export to the global object.\n      root.Benchmark = Benchmark;\n    }\n  }\n}.call(this));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/benchmark/benchmark.js\n// module id = 27\n// module chunks = 0","/*!\r\n * Platform.js <https://mths.be/platform>\r\n * Copyright 2014-2016 Benjamin Tan <https://demoneaux.github.io/>\r\n * Copyright 2011-2013 John-David Dalton <http://allyoucanleet.com/>\r\n * Available under MIT license <https://mths.be/mit>\r\n */\r\n;(function() {\r\n  'use strict';\r\n\r\n  /** Used to determine if values are of the language type `Object`. */\r\n  var objectTypes = {\r\n    'function': true,\r\n    'object': true\r\n  };\r\n\r\n  /** Used as a reference to the global object. */\r\n  var root = (objectTypes[typeof window] && window) || this;\r\n\r\n  /** Backup possible global object. */\r\n  var oldRoot = root;\r\n\r\n  /** Detect free variable `exports`. */\r\n  var freeExports = objectTypes[typeof exports] && exports;\r\n\r\n  /** Detect free variable `module`. */\r\n  var freeModule = objectTypes[typeof module] && module && !module.nodeType && module;\r\n\r\n  /** Detect free variable `global` from Node.js or Browserified code and use it as `root`. */\r\n  var freeGlobal = freeExports && freeModule && typeof global == 'object' && global;\r\n  if (freeGlobal && (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal || freeGlobal.self === freeGlobal)) {\r\n    root = freeGlobal;\r\n  }\r\n\r\n  /**\r\n   * Used as the maximum length of an array-like object.\r\n   * See the [ES6 spec](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength)\r\n   * for more details.\r\n   */\r\n  var maxSafeInteger = Math.pow(2, 53) - 1;\r\n\r\n  /** Regular expression to detect Opera. */\r\n  var reOpera = /\\bOpera/;\r\n\r\n  /** Possible global object. */\r\n  var thisBinding = this;\r\n\r\n  /** Used for native method references. */\r\n  var objectProto = Object.prototype;\r\n\r\n  /** Used to check for own properties of an object. */\r\n  var hasOwnProperty = objectProto.hasOwnProperty;\r\n\r\n  /** Used to resolve the internal `[[Class]]` of values. */\r\n  var toString = objectProto.toString;\r\n\r\n  /*--------------------------------------------------------------------------*/\r\n\r\n  /**\r\n   * Capitalizes a string value.\r\n   *\r\n   * @private\r\n   * @param {string} string The string to capitalize.\r\n   * @returns {string} The capitalized string.\r\n   */\r\n  function capitalize(string) {\r\n    string = String(string);\r\n    return string.charAt(0).toUpperCase() + string.slice(1);\r\n  }\r\n\r\n  /**\r\n   * A utility function to clean up the OS name.\r\n   *\r\n   * @private\r\n   * @param {string} os The OS name to clean up.\r\n   * @param {string} [pattern] A `RegExp` pattern matching the OS name.\r\n   * @param {string} [label] A label for the OS.\r\n   */\r\n  function cleanupOS(os, pattern, label) {\r\n    // Platform tokens are defined at:\r\n    // http://msdn.microsoft.com/en-us/library/ms537503(VS.85).aspx\r\n    // http://web.archive.org/web/20081122053950/http://msdn.microsoft.com/en-us/library/ms537503(VS.85).aspx\r\n    var data = {\r\n      '10.0': '10',\r\n      '6.4':  '10 Technical Preview',\r\n      '6.3':  '8.1',\r\n      '6.2':  '8',\r\n      '6.1':  'Server 2008 R2 / 7',\r\n      '6.0':  'Server 2008 / Vista',\r\n      '5.2':  'Server 2003 / XP 64-bit',\r\n      '5.1':  'XP',\r\n      '5.01': '2000 SP1',\r\n      '5.0':  '2000',\r\n      '4.0':  'NT',\r\n      '4.90': 'ME'\r\n    };\r\n    // Detect Windows version from platform tokens.\r\n    if (pattern && label && /^Win/i.test(os) && !/^Windows Phone /i.test(os) &&\r\n        (data = data[/[\\d.]+$/.exec(os)])) {\r\n      os = 'Windows ' + data;\r\n    }\r\n    // Correct character case and cleanup string.\r\n    os = String(os);\r\n\r\n    if (pattern && label) {\r\n      os = os.replace(RegExp(pattern, 'i'), label);\r\n    }\r\n\r\n    os = format(\r\n      os.replace(/ ce$/i, ' CE')\r\n        .replace(/\\bhpw/i, 'web')\r\n        .replace(/\\bMacintosh\\b/, 'Mac OS')\r\n        .replace(/_PowerPC\\b/i, ' OS')\r\n        .replace(/\\b(OS X) [^ \\d]+/i, '$1')\r\n        .replace(/\\bMac (OS X)\\b/, '$1')\r\n        .replace(/\\/(\\d)/, ' $1')\r\n        .replace(/_/g, '.')\r\n        .replace(/(?: BePC|[ .]*fc[ \\d.]+)$/i, '')\r\n        .replace(/\\bx86\\.64\\b/gi, 'x86_64')\r\n        .replace(/\\b(Windows Phone) OS\\b/, '$1')\r\n        .replace(/\\b(Chrome OS \\w+) [\\d.]+\\b/, '$1')\r\n        .split(' on ')[0]\r\n    );\r\n\r\n    return os;\r\n  }\r\n\r\n  /**\r\n   * An iteration utility for arrays and objects.\r\n   *\r\n   * @private\r\n   * @param {Array|Object} object The object to iterate over.\r\n   * @param {Function} callback The function called per iteration.\r\n   */\r\n  function each(object, callback) {\r\n    var index = -1,\r\n        length = object ? object.length : 0;\r\n\r\n    if (typeof length == 'number' && length > -1 && length <= maxSafeInteger) {\r\n      while (++index < length) {\r\n        callback(object[index], index, object);\r\n      }\r\n    } else {\r\n      forOwn(object, callback);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Trim and conditionally capitalize string values.\r\n   *\r\n   * @private\r\n   * @param {string} string The string to format.\r\n   * @returns {string} The formatted string.\r\n   */\r\n  function format(string) {\r\n    string = trim(string);\r\n    return /^(?:webOS|i(?:OS|P))/.test(string)\r\n      ? string\r\n      : capitalize(string);\r\n  }\r\n\r\n  /**\r\n   * Iterates over an object's own properties, executing the `callback` for each.\r\n   *\r\n   * @private\r\n   * @param {Object} object The object to iterate over.\r\n   * @param {Function} callback The function executed per own property.\r\n   */\r\n  function forOwn(object, callback) {\r\n    for (var key in object) {\r\n      if (hasOwnProperty.call(object, key)) {\r\n        callback(object[key], key, object);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Gets the internal `[[Class]]` of a value.\r\n   *\r\n   * @private\r\n   * @param {*} value The value.\r\n   * @returns {string} The `[[Class]]`.\r\n   */\r\n  function getClassOf(value) {\r\n    return value == null\r\n      ? capitalize(value)\r\n      : toString.call(value).slice(8, -1);\r\n  }\r\n\r\n  /**\r\n   * Host objects can return type values that are different from their actual\r\n   * data type. The objects we are concerned with usually return non-primitive\r\n   * types of \"object\", \"function\", or \"unknown\".\r\n   *\r\n   * @private\r\n   * @param {*} object The owner of the property.\r\n   * @param {string} property The property to check.\r\n   * @returns {boolean} Returns `true` if the property value is a non-primitive, else `false`.\r\n   */\r\n  function isHostType(object, property) {\r\n    var type = object != null ? typeof object[property] : 'number';\r\n    return !/^(?:boolean|number|string|undefined)$/.test(type) &&\r\n      (type == 'object' ? !!object[property] : true);\r\n  }\r\n\r\n  /**\r\n   * Prepares a string for use in a `RegExp` by making hyphens and spaces optional.\r\n   *\r\n   * @private\r\n   * @param {string} string The string to qualify.\r\n   * @returns {string} The qualified string.\r\n   */\r\n  function qualify(string) {\r\n    return String(string).replace(/([ -])(?!$)/g, '$1?');\r\n  }\r\n\r\n  /**\r\n   * A bare-bones `Array#reduce` like utility function.\r\n   *\r\n   * @private\r\n   * @param {Array} array The array to iterate over.\r\n   * @param {Function} callback The function called per iteration.\r\n   * @returns {*} The accumulated result.\r\n   */\r\n  function reduce(array, callback) {\r\n    var accumulator = null;\r\n    each(array, function(value, index) {\r\n      accumulator = callback(accumulator, value, index, array);\r\n    });\r\n    return accumulator;\r\n  }\r\n\r\n  /**\r\n   * Removes leading and trailing whitespace from a string.\r\n   *\r\n   * @private\r\n   * @param {string} string The string to trim.\r\n   * @returns {string} The trimmed string.\r\n   */\r\n  function trim(string) {\r\n    return String(string).replace(/^ +| +$/g, '');\r\n  }\r\n\r\n  /*--------------------------------------------------------------------------*/\r\n\r\n  /**\r\n   * Creates a new platform object.\r\n   *\r\n   * @memberOf platform\r\n   * @param {Object|string} [ua=navigator.userAgent] The user agent string or\r\n   *  context object.\r\n   * @returns {Object} A platform object.\r\n   */\r\n  function parse(ua) {\r\n\r\n    /** The environment context object. */\r\n    var context = root;\r\n\r\n    /** Used to flag when a custom context is provided. */\r\n    var isCustomContext = ua && typeof ua == 'object' && getClassOf(ua) != 'String';\r\n\r\n    // Juggle arguments.\r\n    if (isCustomContext) {\r\n      context = ua;\r\n      ua = null;\r\n    }\r\n\r\n    /** Browser navigator object. */\r\n    var nav = context.navigator || {};\r\n\r\n    /** Browser user agent string. */\r\n    var userAgent = nav.userAgent || '';\r\n\r\n    ua || (ua = userAgent);\r\n\r\n    /** Used to flag when `thisBinding` is the [ModuleScope]. */\r\n    var isModuleScope = isCustomContext || thisBinding == oldRoot;\r\n\r\n    /** Used to detect if browser is like Chrome. */\r\n    var likeChrome = isCustomContext\r\n      ? !!nav.likeChrome\r\n      : /\\bChrome\\b/.test(ua) && !/internal|\\n/i.test(toString.toString());\r\n\r\n    /** Internal `[[Class]]` value shortcuts. */\r\n    var objectClass = 'Object',\r\n        airRuntimeClass = isCustomContext ? objectClass : 'ScriptBridgingProxyObject',\r\n        enviroClass = isCustomContext ? objectClass : 'Environment',\r\n        javaClass = (isCustomContext && context.java) ? 'JavaPackage' : getClassOf(context.java),\r\n        phantomClass = isCustomContext ? objectClass : 'RuntimeObject';\r\n\r\n    /** Detect Java environments. */\r\n    var java = /\\bJava/.test(javaClass) && context.java;\r\n\r\n    /** Detect Rhino. */\r\n    var rhino = java && getClassOf(context.environment) == enviroClass;\r\n\r\n    /** A character to represent alpha. */\r\n    var alpha = java ? 'a' : '\\u03b1';\r\n\r\n    /** A character to represent beta. */\r\n    var beta = java ? 'b' : '\\u03b2';\r\n\r\n    /** Browser document object. */\r\n    var doc = context.document || {};\r\n\r\n    /**\r\n     * Detect Opera browser (Presto-based).\r\n     * http://www.howtocreate.co.uk/operaStuff/operaObject.html\r\n     * http://dev.opera.com/articles/view/opera-mini-web-content-authoring-guidelines/#operamini\r\n     */\r\n    var opera = context.operamini || context.opera;\r\n\r\n    /** Opera `[[Class]]`. */\r\n    var operaClass = reOpera.test(operaClass = (isCustomContext && opera) ? opera['[[Class]]'] : getClassOf(opera))\r\n      ? operaClass\r\n      : (opera = null);\r\n\r\n    /*------------------------------------------------------------------------*/\r\n\r\n    /** Temporary variable used over the script's lifetime. */\r\n    var data;\r\n\r\n    /** The CPU architecture. */\r\n    var arch = ua;\r\n\r\n    /** Platform description array. */\r\n    var description = [];\r\n\r\n    /** Platform alpha/beta indicator. */\r\n    var prerelease = null;\r\n\r\n    /** A flag to indicate that environment features should be used to resolve the platform. */\r\n    var useFeatures = ua == userAgent;\r\n\r\n    /** The browser/environment version. */\r\n    var version = useFeatures && opera && typeof opera.version == 'function' && opera.version();\r\n\r\n    /** A flag to indicate if the OS ends with \"/ Version\" */\r\n    var isSpecialCasedOS;\r\n\r\n    /* Detectable layout engines (order is important). */\r\n    var layout = getLayout([\r\n      { 'label': 'EdgeHTML', 'pattern': 'Edge' },\r\n      'Trident',\r\n      { 'label': 'WebKit', 'pattern': 'AppleWebKit' },\r\n      'iCab',\r\n      'Presto',\r\n      'NetFront',\r\n      'Tasman',\r\n      'KHTML',\r\n      'Gecko'\r\n    ]);\r\n\r\n    /* Detectable browser names (order is important). */\r\n    var name = getName([\r\n      'Adobe AIR',\r\n      'Arora',\r\n      'Avant Browser',\r\n      'Breach',\r\n      'Camino',\r\n      'Epiphany',\r\n      'Fennec',\r\n      'Flock',\r\n      'Galeon',\r\n      'GreenBrowser',\r\n      'iCab',\r\n      'Iceweasel',\r\n      'K-Meleon',\r\n      'Konqueror',\r\n      'Lunascape',\r\n      'Maxthon',\r\n      { 'label': 'Microsoft Edge', 'pattern': 'Edge' },\r\n      'Midori',\r\n      'Nook Browser',\r\n      'PaleMoon',\r\n      'PhantomJS',\r\n      'Raven',\r\n      'Rekonq',\r\n      'RockMelt',\r\n      'SeaMonkey',\r\n      { 'label': 'Silk', 'pattern': '(?:Cloud9|Silk-Accelerated)' },\r\n      'Sleipnir',\r\n      'SlimBrowser',\r\n      { 'label': 'SRWare Iron', 'pattern': 'Iron' },\r\n      'Sunrise',\r\n      'Swiftfox',\r\n      'WebPositive',\r\n      'Opera Mini',\r\n      { 'label': 'Opera Mini', 'pattern': 'OPiOS' },\r\n      'Opera',\r\n      { 'label': 'Opera', 'pattern': 'OPR' },\r\n      'Chrome',\r\n      { 'label': 'Chrome Mobile', 'pattern': '(?:CriOS|CrMo)' },\r\n      { 'label': 'Firefox', 'pattern': '(?:Firefox|Minefield)' },\r\n      { 'label': 'Firefox for iOS', 'pattern': 'FxiOS' },\r\n      { 'label': 'IE', 'pattern': 'IEMobile' },\r\n      { 'label': 'IE', 'pattern': 'MSIE' },\r\n      'Safari'\r\n    ]);\r\n\r\n    /* Detectable products (order is important). */\r\n    var product = getProduct([\r\n      { 'label': 'BlackBerry', 'pattern': 'BB10' },\r\n      'BlackBerry',\r\n      { 'label': 'Galaxy S', 'pattern': 'GT-I9000' },\r\n      { 'label': 'Galaxy S2', 'pattern': 'GT-I9100' },\r\n      { 'label': 'Galaxy S3', 'pattern': 'GT-I9300' },\r\n      { 'label': 'Galaxy S4', 'pattern': 'GT-I9500' },\r\n      'Google TV',\r\n      'Lumia',\r\n      'iPad',\r\n      'iPod',\r\n      'iPhone',\r\n      'Kindle',\r\n      { 'label': 'Kindle Fire', 'pattern': '(?:Cloud9|Silk-Accelerated)' },\r\n      'Nexus',\r\n      'Nook',\r\n      'PlayBook',\r\n      'PlayStation 3',\r\n      'PlayStation 4',\r\n      'PlayStation Vita',\r\n      'TouchPad',\r\n      'Transformer',\r\n      { 'label': 'Wii U', 'pattern': 'WiiU' },\r\n      'Wii',\r\n      'Xbox One',\r\n      { 'label': 'Xbox 360', 'pattern': 'Xbox' },\r\n      'Xoom'\r\n    ]);\r\n\r\n    /* Detectable manufacturers. */\r\n    var manufacturer = getManufacturer({\r\n      'Apple': { 'iPad': 1, 'iPhone': 1, 'iPod': 1 },\r\n      'Archos': {},\r\n      'Amazon': { 'Kindle': 1, 'Kindle Fire': 1 },\r\n      'Asus': { 'Transformer': 1 },\r\n      'Barnes & Noble': { 'Nook': 1 },\r\n      'BlackBerry': { 'PlayBook': 1 },\r\n      'Google': { 'Google TV': 1, 'Nexus': 1 },\r\n      'HP': { 'TouchPad': 1 },\r\n      'HTC': {},\r\n      'LG': {},\r\n      'Microsoft': { 'Xbox': 1, 'Xbox One': 1 },\r\n      'Motorola': { 'Xoom': 1 },\r\n      'Nintendo': { 'Wii U': 1,  'Wii': 1 },\r\n      'Nokia': { 'Lumia': 1 },\r\n      'Samsung': { 'Galaxy S': 1, 'Galaxy S2': 1, 'Galaxy S3': 1, 'Galaxy S4': 1 },\r\n      'Sony': { 'PlayStation 4': 1, 'PlayStation 3': 1, 'PlayStation Vita': 1 }\r\n    });\r\n\r\n    /* Detectable operating systems (order is important). */\r\n    var os = getOS([\r\n      'Windows Phone',\r\n      'Android',\r\n      'CentOS',\r\n      { 'label': 'Chrome OS', 'pattern': 'CrOS' },\r\n      'Debian',\r\n      'Fedora',\r\n      'FreeBSD',\r\n      'Gentoo',\r\n      'Haiku',\r\n      'Kubuntu',\r\n      'Linux Mint',\r\n      'OpenBSD',\r\n      'Red Hat',\r\n      'SuSE',\r\n      'Ubuntu',\r\n      'Xubuntu',\r\n      'Cygwin',\r\n      'Symbian OS',\r\n      'hpwOS',\r\n      'webOS ',\r\n      'webOS',\r\n      'Tablet OS',\r\n      'Linux',\r\n      'Mac OS X',\r\n      'Macintosh',\r\n      'Mac',\r\n      'Windows 98;',\r\n      'Windows '\r\n    ]);\r\n\r\n    /*------------------------------------------------------------------------*/\r\n\r\n    /**\r\n     * Picks the layout engine from an array of guesses.\r\n     *\r\n     * @private\r\n     * @param {Array} guesses An array of guesses.\r\n     * @returns {null|string} The detected layout engine.\r\n     */\r\n    function getLayout(guesses) {\r\n      return reduce(guesses, function(result, guess) {\r\n        return result || RegExp('\\\\b' + (\r\n          guess.pattern || qualify(guess)\r\n        ) + '\\\\b', 'i').exec(ua) && (guess.label || guess);\r\n      });\r\n    }\r\n\r\n    /**\r\n     * Picks the manufacturer from an array of guesses.\r\n     *\r\n     * @private\r\n     * @param {Array} guesses An object of guesses.\r\n     * @returns {null|string} The detected manufacturer.\r\n     */\r\n    function getManufacturer(guesses) {\r\n      return reduce(guesses, function(result, value, key) {\r\n        // Lookup the manufacturer by product or scan the UA for the manufacturer.\r\n        return result || (\r\n          value[product] ||\r\n          value[/^[a-z]+(?: +[a-z]+\\b)*/i.exec(product)] ||\r\n          RegExp('\\\\b' + qualify(key) + '(?:\\\\b|\\\\w*\\\\d)', 'i').exec(ua)\r\n        ) && key;\r\n      });\r\n    }\r\n\r\n    /**\r\n     * Picks the browser name from an array of guesses.\r\n     *\r\n     * @private\r\n     * @param {Array} guesses An array of guesses.\r\n     * @returns {null|string} The detected browser name.\r\n     */\r\n    function getName(guesses) {\r\n      return reduce(guesses, function(result, guess) {\r\n        return result || RegExp('\\\\b' + (\r\n          guess.pattern || qualify(guess)\r\n        ) + '\\\\b', 'i').exec(ua) && (guess.label || guess);\r\n      });\r\n    }\r\n\r\n    /**\r\n     * Picks the OS name from an array of guesses.\r\n     *\r\n     * @private\r\n     * @param {Array} guesses An array of guesses.\r\n     * @returns {null|string} The detected OS name.\r\n     */\r\n    function getOS(guesses) {\r\n      return reduce(guesses, function(result, guess) {\r\n        var pattern = guess.pattern || qualify(guess);\r\n        if (!result && (result =\r\n              RegExp('\\\\b' + pattern + '(?:/[\\\\d.]+|[ \\\\w.]*)', 'i').exec(ua)\r\n            )) {\r\n          result = cleanupOS(result, pattern, guess.label || guess);\r\n        }\r\n        return result;\r\n      });\r\n    }\r\n\r\n    /**\r\n     * Picks the product name from an array of guesses.\r\n     *\r\n     * @private\r\n     * @param {Array} guesses An array of guesses.\r\n     * @returns {null|string} The detected product name.\r\n     */\r\n    function getProduct(guesses) {\r\n      return reduce(guesses, function(result, guess) {\r\n        var pattern = guess.pattern || qualify(guess);\r\n        if (!result && (result =\r\n              RegExp('\\\\b' + pattern + ' *\\\\d+[.\\\\w_]*', 'i').exec(ua) ||\r\n              RegExp('\\\\b' + pattern + '(?:; *(?:[a-z]+[_-])?[a-z]+\\\\d+|[^ ();-]*)', 'i').exec(ua)\r\n            )) {\r\n          // Split by forward slash and append product version if needed.\r\n          if ((result = String((guess.label && !RegExp(pattern, 'i').test(guess.label)) ? guess.label : result).split('/'))[1] && !/[\\d.]+/.test(result[0])) {\r\n            result[0] += ' ' + result[1];\r\n          }\r\n          // Correct character case and cleanup string.\r\n          guess = guess.label || guess;\r\n          result = format(result[0]\r\n            .replace(RegExp(pattern, 'i'), guess)\r\n            .replace(RegExp('; *(?:' + guess + '[_-])?', 'i'), ' ')\r\n            .replace(RegExp('(' + guess + ')[-_.]?(\\\\w)', 'i'), '$1 $2'));\r\n        }\r\n        return result;\r\n      });\r\n    }\r\n\r\n    /**\r\n     * Resolves the version using an array of UA patterns.\r\n     *\r\n     * @private\r\n     * @param {Array} patterns An array of UA patterns.\r\n     * @returns {null|string} The detected version.\r\n     */\r\n    function getVersion(patterns) {\r\n      return reduce(patterns, function(result, pattern) {\r\n        return result || (RegExp(pattern +\r\n          '(?:-[\\\\d.]+/|(?: for [\\\\w-]+)?[ /-])([\\\\d.]+[^ ();/_-]*)', 'i').exec(ua) || 0)[1] || null;\r\n      });\r\n    }\r\n\r\n    /**\r\n     * Returns `platform.description` when the platform object is coerced to a string.\r\n     *\r\n     * @name toString\r\n     * @memberOf platform\r\n     * @returns {string} Returns `platform.description` if available, else an empty string.\r\n     */\r\n    function toStringPlatform() {\r\n      return this.description || '';\r\n    }\r\n\r\n    /*------------------------------------------------------------------------*/\r\n\r\n    // Convert layout to an array so we can add extra details.\r\n    layout && (layout = [layout]);\r\n\r\n    // Detect product names that contain their manufacturer's name.\r\n    if (manufacturer && !product) {\r\n      product = getProduct([manufacturer]);\r\n    }\r\n    // Clean up Google TV.\r\n    if ((data = /\\bGoogle TV\\b/.exec(product))) {\r\n      product = data[0];\r\n    }\r\n    // Detect simulators.\r\n    if (/\\bSimulator\\b/i.test(ua)) {\r\n      product = (product ? product + ' ' : '') + 'Simulator';\r\n    }\r\n    // Detect Opera Mini 8+ running in Turbo/Uncompressed mode on iOS.\r\n    if (name == 'Opera Mini' && /\\bOPiOS\\b/.test(ua)) {\r\n      description.push('running in Turbo/Uncompressed mode');\r\n    }\r\n    // Detect IE Mobile 11.\r\n    if (name == 'IE' && /\\blike iPhone OS\\b/.test(ua)) {\r\n      data = parse(ua.replace(/like iPhone OS/, ''));\r\n      manufacturer = data.manufacturer;\r\n      product = data.product;\r\n    }\r\n    // Detect iOS.\r\n    else if (/^iP/.test(product)) {\r\n      name || (name = 'Safari');\r\n      os = 'iOS' + ((data = / OS ([\\d_]+)/i.exec(ua))\r\n        ? ' ' + data[1].replace(/_/g, '.')\r\n        : '');\r\n    }\r\n    // Detect Kubuntu.\r\n    else if (name == 'Konqueror' && !/buntu/i.test(os)) {\r\n      os = 'Kubuntu';\r\n    }\r\n    // Detect Android browsers.\r\n    else if ((manufacturer && manufacturer != 'Google' &&\r\n        ((/Chrome/.test(name) && !/\\bMobile Safari\\b/i.test(ua)) || /\\bVita\\b/.test(product))) ||\r\n        (/\\bAndroid\\b/.test(os) && /^Chrome/.test(name) && /\\bVersion\\//i.test(ua))) {\r\n      name = 'Android Browser';\r\n      os = /\\bAndroid\\b/.test(os) ? os : 'Android';\r\n    }\r\n    // Detect Silk desktop/accelerated modes.\r\n    else if (name == 'Silk') {\r\n      if (!/\\bMobi/i.test(ua)) {\r\n        os = 'Android';\r\n        description.unshift('desktop mode');\r\n      }\r\n      if (/Accelerated *= *true/i.test(ua)) {\r\n        description.unshift('accelerated');\r\n      }\r\n    }\r\n    // Detect PaleMoon identifying as Firefox.\r\n    else if (name == 'PaleMoon' && (data = /\\bFirefox\\/([\\d.]+)\\b/.exec(ua))) {\r\n      description.push('identifying as Firefox ' + data[1]);\r\n    }\r\n    // Detect Firefox OS and products running Firefox.\r\n    else if (name == 'Firefox' && (data = /\\b(Mobile|Tablet|TV)\\b/i.exec(ua))) {\r\n      os || (os = 'Firefox OS');\r\n      product || (product = data[1]);\r\n    }\r\n    // Detect false positives for Firefox/Safari.\r\n    else if (!name || (data = !/\\bMinefield\\b/i.test(ua) && /\\b(?:Firefox|Safari)\\b/.exec(name))) {\r\n      // Escape the `/` for Firefox 1.\r\n      if (name && !product && /[\\/,]|^[^(]+?\\)/.test(ua.slice(ua.indexOf(data + '/') + 8))) {\r\n        // Clear name of false positives.\r\n        name = null;\r\n      }\r\n      // Reassign a generic name.\r\n      if ((data = product || manufacturer || os) &&\r\n          (product || manufacturer || /\\b(?:Android|Symbian OS|Tablet OS|webOS)\\b/.test(os))) {\r\n        name = /[a-z]+(?: Hat)?/i.exec(/\\bAndroid\\b/.test(os) ? os : data) + ' Browser';\r\n      }\r\n    }\r\n    // Detect non-Opera (Presto-based) versions (order is important).\r\n    if (!version) {\r\n      version = getVersion([\r\n        '(?:Cloud9|CriOS|CrMo|Edge|FxiOS|IEMobile|Iron|Opera ?Mini|OPiOS|OPR|Raven|Silk(?!/[\\\\d.]+$))',\r\n        'Version',\r\n        qualify(name),\r\n        '(?:Firefox|Minefield|NetFront)'\r\n      ]);\r\n    }\r\n    // Detect stubborn layout engines.\r\n    if ((data =\r\n          layout == 'iCab' && parseFloat(version) > 3 && 'WebKit' ||\r\n          /\\bOpera\\b/.test(name) && (/\\bOPR\\b/.test(ua) ? 'Blink' : 'Presto') ||\r\n          /\\b(?:Midori|Nook|Safari)\\b/i.test(ua) && !/^(?:Trident|EdgeHTML)$/.test(layout) && 'WebKit' ||\r\n          !layout && /\\bMSIE\\b/i.test(ua) && (os == 'Mac OS' ? 'Tasman' : 'Trident') ||\r\n          layout == 'WebKit' && /\\bPlayStation\\b(?! Vita\\b)/i.test(name) && 'NetFront'\r\n        )) {\r\n      layout = [data];\r\n    }\r\n    // Detect Windows Phone 7 desktop mode.\r\n    if (name == 'IE' && (data = (/; *(?:XBLWP|ZuneWP)(\\d+)/i.exec(ua) || 0)[1])) {\r\n      name += ' Mobile';\r\n      os = 'Windows Phone ' + (/\\+$/.test(data) ? data : data + '.x');\r\n      description.unshift('desktop mode');\r\n    }\r\n    // Detect Windows Phone 8.x desktop mode.\r\n    else if (/\\bWPDesktop\\b/i.test(ua)) {\r\n      name = 'IE Mobile';\r\n      os = 'Windows Phone 8.x';\r\n      description.unshift('desktop mode');\r\n      version || (version = (/\\brv:([\\d.]+)/.exec(ua) || 0)[1]);\r\n    }\r\n    // Detect IE 11.\r\n    else if (name != 'IE' && layout == 'Trident' && (data = /\\brv:([\\d.]+)/.exec(ua))) {\r\n      if (name) {\r\n        description.push('identifying as ' + name + (version ? ' ' + version : ''));\r\n      }\r\n      name = 'IE';\r\n      version = data[1];\r\n    }\r\n    // Leverage environment features.\r\n    if (useFeatures) {\r\n      // Detect server-side environments.\r\n      // Rhino has a global function while others have a global object.\r\n      if (isHostType(context, 'global')) {\r\n        if (java) {\r\n          data = java.lang.System;\r\n          arch = data.getProperty('os.arch');\r\n          os = os || data.getProperty('os.name') + ' ' + data.getProperty('os.version');\r\n        }\r\n        if (isModuleScope && isHostType(context, 'system') && (data = [context.system])[0]) {\r\n          os || (os = data[0].os || null);\r\n          try {\r\n            data[1] = context.require('ringo/engine').version;\r\n            version = data[1].join('.');\r\n            name = 'RingoJS';\r\n          } catch(e) {\r\n            if (data[0].global.system == context.system) {\r\n              name = 'Narwhal';\r\n            }\r\n          }\r\n        }\r\n        else if (\r\n          typeof context.process == 'object' && !context.process.browser &&\r\n          (data = context.process)\r\n        ) {\r\n          name = 'Node.js';\r\n          arch = data.arch;\r\n          os = data.platform;\r\n          version = /[\\d.]+/.exec(data.version)[0];\r\n        }\r\n        else if (rhino) {\r\n          name = 'Rhino';\r\n        }\r\n      }\r\n      // Detect Adobe AIR.\r\n      else if (getClassOf((data = context.runtime)) == airRuntimeClass) {\r\n        name = 'Adobe AIR';\r\n        os = data.flash.system.Capabilities.os;\r\n      }\r\n      // Detect PhantomJS.\r\n      else if (getClassOf((data = context.phantom)) == phantomClass) {\r\n        name = 'PhantomJS';\r\n        version = (data = data.version || null) && (data.major + '.' + data.minor + '.' + data.patch);\r\n      }\r\n      // Detect IE compatibility modes.\r\n      else if (typeof doc.documentMode == 'number' && (data = /\\bTrident\\/(\\d+)/i.exec(ua))) {\r\n        // We're in compatibility mode when the Trident version + 4 doesn't\r\n        // equal the document mode.\r\n        version = [version, doc.documentMode];\r\n        if ((data = +data[1] + 4) != version[1]) {\r\n          description.push('IE ' + version[1] + ' mode');\r\n          layout && (layout[1] = '');\r\n          version[1] = data;\r\n        }\r\n        version = name == 'IE' ? String(version[1].toFixed(1)) : version[0];\r\n      }\r\n      os = os && format(os);\r\n    }\r\n    // Detect prerelease phases.\r\n    if (version && (data =\r\n          /(?:[ab]|dp|pre|[ab]\\d+pre)(?:\\d+\\+?)?$/i.exec(version) ||\r\n          /(?:alpha|beta)(?: ?\\d)?/i.exec(ua + ';' + (useFeatures && nav.appMinorVersion)) ||\r\n          /\\bMinefield\\b/i.test(ua) && 'a'\r\n        )) {\r\n      prerelease = /b/i.test(data) ? 'beta' : 'alpha';\r\n      version = version.replace(RegExp(data + '\\\\+?$'), '') +\r\n        (prerelease == 'beta' ? beta : alpha) + (/\\d+\\+?/.exec(data) || '');\r\n    }\r\n    // Detect Firefox Mobile.\r\n    if (name == 'Fennec' || name == 'Firefox' && /\\b(?:Android|Firefox OS)\\b/.test(os)) {\r\n      name = 'Firefox Mobile';\r\n    }\r\n    // Obscure Maxthon's unreliable version.\r\n    else if (name == 'Maxthon' && version) {\r\n      version = version.replace(/\\.[\\d.]+/, '.x');\r\n    }\r\n    // Detect Xbox 360 and Xbox One.\r\n    else if (/\\bXbox\\b/i.test(product)) {\r\n      os = null;\r\n      if (product == 'Xbox 360' && /\\bIEMobile\\b/.test(ua)) {\r\n        description.unshift('mobile mode');\r\n      }\r\n    }\r\n    // Add mobile postfix.\r\n    else if ((/^(?:Chrome|IE|Opera)$/.test(name) || name && !product && !/Browser|Mobi/.test(name)) &&\r\n        (os == 'Windows CE' || /Mobi/i.test(ua))) {\r\n      name += ' Mobile';\r\n    }\r\n    // Detect IE platform preview.\r\n    else if (name == 'IE' && useFeatures && context.external === null) {\r\n      description.unshift('platform preview');\r\n    }\r\n    // Detect BlackBerry OS version.\r\n    // http://docs.blackberry.com/en/developers/deliverables/18169/HTTP_headers_sent_by_BB_Browser_1234911_11.jsp\r\n    else if ((/\\bBlackBerry\\b/.test(product) || /\\bBB10\\b/.test(ua)) && (data =\r\n          (RegExp(product.replace(/ +/g, ' *') + '/([.\\\\d]+)', 'i').exec(ua) || 0)[1] ||\r\n          version\r\n        )) {\r\n      data = [data, /BB10/.test(ua)];\r\n      os = (data[1] ? (product = null, manufacturer = 'BlackBerry') : 'Device Software') + ' ' + data[0];\r\n      version = null;\r\n    }\r\n    // Detect Opera identifying/masking itself as another browser.\r\n    // http://www.opera.com/support/kb/view/843/\r\n    else if (this != forOwn && product != 'Wii' && (\r\n          (useFeatures && opera) ||\r\n          (/Opera/.test(name) && /\\b(?:MSIE|Firefox)\\b/i.test(ua)) ||\r\n          (name == 'Firefox' && /\\bOS X (?:\\d+\\.){2,}/.test(os)) ||\r\n          (name == 'IE' && (\r\n            (os && !/^Win/.test(os) && version > 5.5) ||\r\n            /\\bWindows XP\\b/.test(os) && version > 8 ||\r\n            version == 8 && !/\\bTrident\\b/.test(ua)\r\n          ))\r\n        ) && !reOpera.test((data = parse.call(forOwn, ua.replace(reOpera, '') + ';'))) && data.name) {\r\n      // When \"identifying\", the UA contains both Opera and the other browser's name.\r\n      data = 'ing as ' + data.name + ((data = data.version) ? ' ' + data : '');\r\n      if (reOpera.test(name)) {\r\n        if (/\\bIE\\b/.test(data) && os == 'Mac OS') {\r\n          os = null;\r\n        }\r\n        data = 'identify' + data;\r\n      }\r\n      // When \"masking\", the UA contains only the other browser's name.\r\n      else {\r\n        data = 'mask' + data;\r\n        if (operaClass) {\r\n          name = format(operaClass.replace(/([a-z])([A-Z])/g, '$1 $2'));\r\n        } else {\r\n          name = 'Opera';\r\n        }\r\n        if (/\\bIE\\b/.test(data)) {\r\n          os = null;\r\n        }\r\n        if (!useFeatures) {\r\n          version = null;\r\n        }\r\n      }\r\n      layout = ['Presto'];\r\n      description.push(data);\r\n    }\r\n    // Detect WebKit Nightly and approximate Chrome/Safari versions.\r\n    if ((data = (/\\bAppleWebKit\\/([\\d.]+\\+?)/i.exec(ua) || 0)[1])) {\r\n      // Correct build number for numeric comparison.\r\n      // (e.g. \"532.5\" becomes \"532.05\")\r\n      data = [parseFloat(data.replace(/\\.(\\d)$/, '.0$1')), data];\r\n      // Nightly builds are postfixed with a \"+\".\r\n      if (name == 'Safari' && data[1].slice(-1) == '+') {\r\n        name = 'WebKit Nightly';\r\n        prerelease = 'alpha';\r\n        version = data[1].slice(0, -1);\r\n      }\r\n      // Clear incorrect browser versions.\r\n      else if (version == data[1] ||\r\n          version == (data[2] = (/\\bSafari\\/([\\d.]+\\+?)/i.exec(ua) || 0)[1])) {\r\n        version = null;\r\n      }\r\n      // Use the full Chrome version when available.\r\n      data[1] = (/\\bChrome\\/([\\d.]+)/i.exec(ua) || 0)[1];\r\n      // Detect Blink layout engine.\r\n      if (data[0] == 537.36 && data[2] == 537.36 && parseFloat(data[1]) >= 28 && layout == 'WebKit') {\r\n        layout = ['Blink'];\r\n      }\r\n      // Detect JavaScriptCore.\r\n      // http://stackoverflow.com/questions/6768474/how-can-i-detect-which-javascript-engine-v8-or-jsc-is-used-at-runtime-in-androi\r\n      if (!useFeatures || (!likeChrome && !data[1])) {\r\n        layout && (layout[1] = 'like Safari');\r\n        data = (data = data[0], data < 400 ? 1 : data < 500 ? 2 : data < 526 ? 3 : data < 533 ? 4 : data < 534 ? '4+' : data < 535 ? 5 : data < 537 ? 6 : data < 538 ? 7 : data < 601 ? 8 : '8');\r\n      } else {\r\n        layout && (layout[1] = 'like Chrome');\r\n        data = data[1] || (data = data[0], data < 530 ? 1 : data < 532 ? 2 : data < 532.05 ? 3 : data < 533 ? 4 : data < 534.03 ? 5 : data < 534.07 ? 6 : data < 534.10 ? 7 : data < 534.13 ? 8 : data < 534.16 ? 9 : data < 534.24 ? 10 : data < 534.30 ? 11 : data < 535.01 ? 12 : data < 535.02 ? '13+' : data < 535.07 ? 15 : data < 535.11 ? 16 : data < 535.19 ? 17 : data < 536.05 ? 18 : data < 536.10 ? 19 : data < 537.01 ? 20 : data < 537.11 ? '21+' : data < 537.13 ? 23 : data < 537.18 ? 24 : data < 537.24 ? 25 : data < 537.36 ? 26 : layout != 'Blink' ? '27' : '28');\r\n      }\r\n      // Add the postfix of \".x\" or \"+\" for approximate versions.\r\n      layout && (layout[1] += ' ' + (data += typeof data == 'number' ? '.x' : /[.+]/.test(data) ? '' : '+'));\r\n      // Obscure version for some Safari 1-2 releases.\r\n      if (name == 'Safari' && (!version || parseInt(version) > 45)) {\r\n        version = data;\r\n      }\r\n    }\r\n    // Detect Opera desktop modes.\r\n    if (name == 'Opera' &&  (data = /\\bzbov|zvav$/.exec(os))) {\r\n      name += ' ';\r\n      description.unshift('desktop mode');\r\n      if (data == 'zvav') {\r\n        name += 'Mini';\r\n        version = null;\r\n      } else {\r\n        name += 'Mobile';\r\n      }\r\n      os = os.replace(RegExp(' *' + data + '$'), '');\r\n    }\r\n    // Detect Chrome desktop mode.\r\n    else if (name == 'Safari' && /\\bChrome\\b/.exec(layout && layout[1])) {\r\n      description.unshift('desktop mode');\r\n      name = 'Chrome Mobile';\r\n      version = null;\r\n\r\n      if (/\\bOS X\\b/.test(os)) {\r\n        manufacturer = 'Apple';\r\n        os = 'iOS 4.3+';\r\n      } else {\r\n        os = null;\r\n      }\r\n    }\r\n    // Strip incorrect OS versions.\r\n    if (version && version.indexOf((data = /[\\d.]+$/.exec(os))) == 0 &&\r\n        ua.indexOf('/' + data + '-') > -1) {\r\n      os = trim(os.replace(data, ''));\r\n    }\r\n    // Add layout engine.\r\n    if (layout && !/\\b(?:Avant|Nook)\\b/.test(name) && (\r\n        /Browser|Lunascape|Maxthon/.test(name) ||\r\n        name != 'Safari' && /^iOS/.test(os) && /\\bSafari\\b/.test(layout[1]) ||\r\n        /^(?:Adobe|Arora|Breach|Midori|Opera|Phantom|Rekonq|Rock|Sleipnir|Web)/.test(name) && layout[1])) {\r\n      // Don't add layout details to description if they are falsey.\r\n      (data = layout[layout.length - 1]) && description.push(data);\r\n    }\r\n    // Combine contextual information.\r\n    if (description.length) {\r\n      description = ['(' + description.join('; ') + ')'];\r\n    }\r\n    // Append manufacturer to description.\r\n    if (manufacturer && product && product.indexOf(manufacturer) < 0) {\r\n      description.push('on ' + manufacturer);\r\n    }\r\n    // Append product to description.\r\n    if (product) {\r\n      description.push((/^on /.test(description[description.length - 1]) ? '' : 'on ') + product);\r\n    }\r\n    // Parse the OS into an object.\r\n    if (os) {\r\n      data = / ([\\d.+]+)$/.exec(os);\r\n      isSpecialCasedOS = data && os.charAt(os.length - data[0].length - 1) == '/';\r\n      os = {\r\n        'architecture': 32,\r\n        'family': (data && !isSpecialCasedOS) ? os.replace(data[0], '') : os,\r\n        'version': data ? data[1] : null,\r\n        'toString': function() {\r\n          var version = this.version;\r\n          return this.family + ((version && !isSpecialCasedOS) ? ' ' + version : '') + (this.architecture == 64 ? ' 64-bit' : '');\r\n        }\r\n      };\r\n    }\r\n    // Add browser/OS architecture.\r\n    if ((data = /\\b(?:AMD|IA|Win|WOW|x86_|x)64\\b/i.exec(arch)) && !/\\bi686\\b/i.test(arch)) {\r\n      if (os) {\r\n        os.architecture = 64;\r\n        os.family = os.family.replace(RegExp(' *' + data), '');\r\n      }\r\n      if (\r\n          name && (/\\bWOW64\\b/i.test(ua) ||\r\n          (useFeatures && /\\w(?:86|32)$/.test(nav.cpuClass || nav.platform) && !/\\bWin64; x64\\b/i.test(ua)))\r\n      ) {\r\n        description.unshift('32-bit');\r\n      }\r\n    }\r\n    // Chrome 39 and above on OS X is always 64-bit.\r\n    else if (\r\n        os && /^OS X/.test(os.family) &&\r\n        name == 'Chrome' && parseFloat(version) >= 39\r\n    ) {\r\n      os.architecture = 64;\r\n    }\r\n\r\n    ua || (ua = null);\r\n\r\n    /*------------------------------------------------------------------------*/\r\n\r\n    /**\r\n     * The platform object.\r\n     *\r\n     * @name platform\r\n     * @type Object\r\n     */\r\n    var platform = {};\r\n\r\n    /**\r\n     * The platform description.\r\n     *\r\n     * @memberOf platform\r\n     * @type string|null\r\n     */\r\n    platform.description = ua;\r\n\r\n    /**\r\n     * The name of the browser's layout engine.\r\n     *\r\n     * @memberOf platform\r\n     * @type string|null\r\n     */\r\n    platform.layout = layout && layout[0];\r\n\r\n    /**\r\n     * The name of the product's manufacturer.\r\n     *\r\n     * @memberOf platform\r\n     * @type string|null\r\n     */\r\n    platform.manufacturer = manufacturer;\r\n\r\n    /**\r\n     * The name of the browser/environment.\r\n     *\r\n     * @memberOf platform\r\n     * @type string|null\r\n     */\r\n    platform.name = name;\r\n\r\n    /**\r\n     * The alpha/beta release indicator.\r\n     *\r\n     * @memberOf platform\r\n     * @type string|null\r\n     */\r\n    platform.prerelease = prerelease;\r\n\r\n    /**\r\n     * The name of the product hosting the browser.\r\n     *\r\n     * @memberOf platform\r\n     * @type string|null\r\n     */\r\n    platform.product = product;\r\n\r\n    /**\r\n     * The browser's user agent string.\r\n     *\r\n     * @memberOf platform\r\n     * @type string|null\r\n     */\r\n    platform.ua = ua;\r\n\r\n    /**\r\n     * The browser/environment version.\r\n     *\r\n     * @memberOf platform\r\n     * @type string|null\r\n     */\r\n    platform.version = name && version;\r\n\r\n    /**\r\n     * The name of the operating system.\r\n     *\r\n     * @memberOf platform\r\n     * @type Object\r\n     */\r\n    platform.os = os || {\r\n\r\n      /**\r\n       * The CPU architecture the OS is built for.\r\n       *\r\n       * @memberOf platform.os\r\n       * @type number|null\r\n       */\r\n      'architecture': null,\r\n\r\n      /**\r\n       * The family of the OS.\r\n       *\r\n       * Common values include:\r\n       * \"Windows\", \"Windows Server 2008 R2 / 7\", \"Windows Server 2008 / Vista\",\r\n       * \"Windows XP\", \"OS X\", \"Ubuntu\", \"Debian\", \"Fedora\", \"Red Hat\", \"SuSE\",\r\n       * \"Android\", \"iOS\" and \"Windows Phone\"\r\n       *\r\n       * @memberOf platform.os\r\n       * @type string|null\r\n       */\r\n      'family': null,\r\n\r\n      /**\r\n       * The version of the OS.\r\n       *\r\n       * @memberOf platform.os\r\n       * @type string|null\r\n       */\r\n      'version': null,\r\n\r\n      /**\r\n       * Returns the OS string.\r\n       *\r\n       * @memberOf platform.os\r\n       * @returns {string} The OS string.\r\n       */\r\n      'toString': function() { return 'null'; }\r\n    };\r\n\r\n    platform.parse = parse;\r\n    platform.toString = toStringPlatform;\r\n\r\n    if (platform.version) {\r\n      description.unshift(version);\r\n    }\r\n    if (platform.name) {\r\n      description.unshift(name);\r\n    }\r\n    if (os && name && !(os == String(os).split(' ')[0] && (os == name.split(' ')[0] || product))) {\r\n      description.push(product ? '(' + os + ')' : 'on ' + os);\r\n    }\r\n    if (description.length) {\r\n      platform.description = description.join(' ');\r\n    }\r\n    return platform;\r\n  }\r\n\r\n  /*--------------------------------------------------------------------------*/\r\n\r\n  // Export platform.\r\n  var platform = parse();\r\n\r\n  // Some AMD build optimizers, like r.js, check for condition patterns like the following:\r\n  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {\r\n    // Expose platform on the global object to prevent errors when platform is\r\n    // loaded by a script tag in the presence of an AMD loader.\r\n    // See http://requirejs.org/docs/errors.html#mismatch for more details.\r\n    root.platform = platform;\r\n\r\n    // Define as an anonymous module so platform can be aliased through path mapping.\r\n    define(function() {\r\n      return platform;\r\n    });\r\n  }\r\n  // Check for `exports` after `define` in case a build optimizer adds an `exports` object.\r\n  else if (freeExports && freeModule) {\r\n    // Export for CommonJS support.\r\n    forOwn(platform, function(value, key) {\r\n      freeExports[key] = value;\r\n    });\r\n  }\r\n  else {\r\n    // Export to the global object.\r\n    root.platform = platform;\r\n  }\r\n}.call(this));\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/platform/platform.js\n// module id = 28\n// module chunks = 0","module.exports = __webpack_public_path__ + \"aa8cb5fbc710c7dded973a341ced2e66.js\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/file-loader!./~/paralleljs/lib/eval.js\n// module id = 29\n// module chunks = 0","/*! Native Promise Only\n    v0.8.1 (c) Kyle Simpson\n    MIT License: http://getify.mit-license.org\n*/\n\n(function UMD(name,context,definition){\n\t// special form of UMD for polyfilling across evironments\n\tcontext[name] = context[name] || definition();\n\tif (typeof module != \"undefined\" && module.exports) { module.exports = context[name]; }\n\telse if (typeof define == \"function\" && define.amd) { define(function $AMD$(){ return context[name]; }); }\n})(\"Promise\",typeof global != \"undefined\" ? global : this,function DEF(){\n\t/*jshint validthis:true */\n\t\"use strict\";\n\n\tvar builtInProp, cycle, scheduling_queue,\n\t\tToString = Object.prototype.toString,\n\t\ttimer = (typeof setImmediate != \"undefined\") ?\n\t\t\tfunction timer(fn) { return setImmediate(fn); } :\n\t\t\tsetTimeout\n\t;\n\n\t// dammit, IE8.\n\ttry {\n\t\tObject.defineProperty({},\"x\",{});\n\t\tbuiltInProp = function builtInProp(obj,name,val,config) {\n\t\t\treturn Object.defineProperty(obj,name,{\n\t\t\t\tvalue: val,\n\t\t\t\twritable: true,\n\t\t\t\tconfigurable: config !== false\n\t\t\t});\n\t\t};\n\t}\n\tcatch (err) {\n\t\tbuiltInProp = function builtInProp(obj,name,val) {\n\t\t\tobj[name] = val;\n\t\t\treturn obj;\n\t\t};\n\t}\n\n\t// Note: using a queue instead of array for efficiency\n\tscheduling_queue = (function Queue() {\n\t\tvar first, last, item;\n\n\t\tfunction Item(fn,self) {\n\t\t\tthis.fn = fn;\n\t\t\tthis.self = self;\n\t\t\tthis.next = void 0;\n\t\t}\n\n\t\treturn {\n\t\t\tadd: function add(fn,self) {\n\t\t\t\titem = new Item(fn,self);\n\t\t\t\tif (last) {\n\t\t\t\t\tlast.next = item;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tfirst = item;\n\t\t\t\t}\n\t\t\t\tlast = item;\n\t\t\t\titem = void 0;\n\t\t\t},\n\t\t\tdrain: function drain() {\n\t\t\t\tvar f = first;\n\t\t\t\tfirst = last = cycle = void 0;\n\n\t\t\t\twhile (f) {\n\t\t\t\t\tf.fn.call(f.self);\n\t\t\t\t\tf = f.next;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t})();\n\n\tfunction schedule(fn,self) {\n\t\tscheduling_queue.add(fn,self);\n\t\tif (!cycle) {\n\t\t\tcycle = timer(scheduling_queue.drain);\n\t\t}\n\t}\n\n\t// promise duck typing\n\tfunction isThenable(o) {\n\t\tvar _then, o_type = typeof o;\n\n\t\tif (o != null &&\n\t\t\t(\n\t\t\t\to_type == \"object\" || o_type == \"function\"\n\t\t\t)\n\t\t) {\n\t\t\t_then = o.then;\n\t\t}\n\t\treturn typeof _then == \"function\" ? _then : false;\n\t}\n\n\tfunction notify() {\n\t\tfor (var i=0; i<this.chain.length; i++) {\n\t\t\tnotifyIsolated(\n\t\t\t\tthis,\n\t\t\t\t(this.state === 1) ? this.chain[i].success : this.chain[i].failure,\n\t\t\t\tthis.chain[i]\n\t\t\t);\n\t\t}\n\t\tthis.chain.length = 0;\n\t}\n\n\t// NOTE: This is a separate function to isolate\n\t// the `try..catch` so that other code can be\n\t// optimized better\n\tfunction notifyIsolated(self,cb,chain) {\n\t\tvar ret, _then;\n\t\ttry {\n\t\t\tif (cb === false) {\n\t\t\t\tchain.reject(self.msg);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (cb === true) {\n\t\t\t\t\tret = self.msg;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tret = cb.call(void 0,self.msg);\n\t\t\t\t}\n\n\t\t\t\tif (ret === chain.promise) {\n\t\t\t\t\tchain.reject(TypeError(\"Promise-chain cycle\"));\n\t\t\t\t}\n\t\t\t\telse if (_then = isThenable(ret)) {\n\t\t\t\t\t_then.call(ret,chain.resolve,chain.reject);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tchain.resolve(ret);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcatch (err) {\n\t\t\tchain.reject(err);\n\t\t}\n\t}\n\n\tfunction resolve(msg) {\n\t\tvar _then, self = this;\n\n\t\t// already triggered?\n\t\tif (self.triggered) { return; }\n\n\t\tself.triggered = true;\n\n\t\t// unwrap\n\t\tif (self.def) {\n\t\t\tself = self.def;\n\t\t}\n\n\t\ttry {\n\t\t\tif (_then = isThenable(msg)) {\n\t\t\t\tschedule(function(){\n\t\t\t\t\tvar def_wrapper = new MakeDefWrapper(self);\n\t\t\t\t\ttry {\n\t\t\t\t\t\t_then.call(msg,\n\t\t\t\t\t\t\tfunction $resolve$(){ resolve.apply(def_wrapper,arguments); },\n\t\t\t\t\t\t\tfunction $reject$(){ reject.apply(def_wrapper,arguments); }\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\tcatch (err) {\n\t\t\t\t\t\treject.call(def_wrapper,err);\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\t\t\telse {\n\t\t\t\tself.msg = msg;\n\t\t\t\tself.state = 1;\n\t\t\t\tif (self.chain.length > 0) {\n\t\t\t\t\tschedule(notify,self);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcatch (err) {\n\t\t\treject.call(new MakeDefWrapper(self),err);\n\t\t}\n\t}\n\n\tfunction reject(msg) {\n\t\tvar self = this;\n\n\t\t// already triggered?\n\t\tif (self.triggered) { return; }\n\n\t\tself.triggered = true;\n\n\t\t// unwrap\n\t\tif (self.def) {\n\t\t\tself = self.def;\n\t\t}\n\n\t\tself.msg = msg;\n\t\tself.state = 2;\n\t\tif (self.chain.length > 0) {\n\t\t\tschedule(notify,self);\n\t\t}\n\t}\n\n\tfunction iteratePromises(Constructor,arr,resolver,rejecter) {\n\t\tfor (var idx=0; idx<arr.length; idx++) {\n\t\t\t(function IIFE(idx){\n\t\t\t\tConstructor.resolve(arr[idx])\n\t\t\t\t.then(\n\t\t\t\t\tfunction $resolver$(msg){\n\t\t\t\t\t\tresolver(idx,msg);\n\t\t\t\t\t},\n\t\t\t\t\trejecter\n\t\t\t\t);\n\t\t\t})(idx);\n\t\t}\n\t}\n\n\tfunction MakeDefWrapper(self) {\n\t\tthis.def = self;\n\t\tthis.triggered = false;\n\t}\n\n\tfunction MakeDef(self) {\n\t\tthis.promise = self;\n\t\tthis.state = 0;\n\t\tthis.triggered = false;\n\t\tthis.chain = [];\n\t\tthis.msg = void 0;\n\t}\n\n\tfunction Promise(executor) {\n\t\tif (typeof executor != \"function\") {\n\t\t\tthrow TypeError(\"Not a function\");\n\t\t}\n\n\t\tif (this.__NPO__ !== 0) {\n\t\t\tthrow TypeError(\"Not a promise\");\n\t\t}\n\n\t\t// instance shadowing the inherited \"brand\"\n\t\t// to signal an already \"initialized\" promise\n\t\tthis.__NPO__ = 1;\n\n\t\tvar def = new MakeDef(this);\n\n\t\tthis[\"then\"] = function then(success,failure) {\n\t\t\tvar o = {\n\t\t\t\tsuccess: typeof success == \"function\" ? success : true,\n\t\t\t\tfailure: typeof failure == \"function\" ? failure : false\n\t\t\t};\n\t\t\t// Note: `then(..)` itself can be borrowed to be used against\n\t\t\t// a different promise constructor for making the chained promise,\n\t\t\t// by substituting a different `this` binding.\n\t\t\to.promise = new this.constructor(function extractChain(resolve,reject) {\n\t\t\t\tif (typeof resolve != \"function\" || typeof reject != \"function\") {\n\t\t\t\t\tthrow TypeError(\"Not a function\");\n\t\t\t\t}\n\n\t\t\t\to.resolve = resolve;\n\t\t\t\to.reject = reject;\n\t\t\t});\n\t\t\tdef.chain.push(o);\n\n\t\t\tif (def.state !== 0) {\n\t\t\t\tschedule(notify,def);\n\t\t\t}\n\n\t\t\treturn o.promise;\n\t\t};\n\t\tthis[\"catch\"] = function $catch$(failure) {\n\t\t\treturn this.then(void 0,failure);\n\t\t};\n\n\t\ttry {\n\t\t\texecutor.call(\n\t\t\t\tvoid 0,\n\t\t\t\tfunction publicResolve(msg){\n\t\t\t\t\tresolve.call(def,msg);\n\t\t\t\t},\n\t\t\t\tfunction publicReject(msg) {\n\t\t\t\t\treject.call(def,msg);\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\t\tcatch (err) {\n\t\t\treject.call(def,err);\n\t\t}\n\t}\n\n\tvar PromisePrototype = builtInProp({},\"constructor\",Promise,\n\t\t/*configurable=*/false\n\t);\n\n\t// Note: Android 4 cannot use `Object.defineProperty(..)` here\n\tPromise.prototype = PromisePrototype;\n\n\t// built-in \"brand\" to signal an \"uninitialized\" promise\n\tbuiltInProp(PromisePrototype,\"__NPO__\",0,\n\t\t/*configurable=*/false\n\t);\n\n\tbuiltInProp(Promise,\"resolve\",function Promise$resolve(msg) {\n\t\tvar Constructor = this;\n\n\t\t// spec mandated checks\n\t\t// note: best \"isPromise\" check that's practical for now\n\t\tif (msg && typeof msg == \"object\" && msg.__NPO__ === 1) {\n\t\t\treturn msg;\n\t\t}\n\n\t\treturn new Constructor(function executor(resolve,reject){\n\t\t\tif (typeof resolve != \"function\" || typeof reject != \"function\") {\n\t\t\t\tthrow TypeError(\"Not a function\");\n\t\t\t}\n\n\t\t\tresolve(msg);\n\t\t});\n\t});\n\n\tbuiltInProp(Promise,\"reject\",function Promise$reject(msg) {\n\t\treturn new this(function executor(resolve,reject){\n\t\t\tif (typeof resolve != \"function\" || typeof reject != \"function\") {\n\t\t\t\tthrow TypeError(\"Not a function\");\n\t\t\t}\n\n\t\t\treject(msg);\n\t\t});\n\t});\n\n\tbuiltInProp(Promise,\"all\",function Promise$all(arr) {\n\t\tvar Constructor = this;\n\n\t\t// spec mandated checks\n\t\tif (ToString.call(arr) != \"[object Array]\") {\n\t\t\treturn Constructor.reject(TypeError(\"Not an array\"));\n\t\t}\n\t\tif (arr.length === 0) {\n\t\t\treturn Constructor.resolve([]);\n\t\t}\n\n\t\treturn new Constructor(function executor(resolve,reject){\n\t\t\tif (typeof resolve != \"function\" || typeof reject != \"function\") {\n\t\t\t\tthrow TypeError(\"Not a function\");\n\t\t\t}\n\n\t\t\tvar len = arr.length, msgs = Array(len), count = 0;\n\n\t\t\titeratePromises(Constructor,arr,function resolver(idx,msg) {\n\t\t\t\tmsgs[idx] = msg;\n\t\t\t\tif (++count === len) {\n\t\t\t\t\tresolve(msgs);\n\t\t\t\t}\n\t\t\t},reject);\n\t\t});\n\t});\n\n\tbuiltInProp(Promise,\"race\",function Promise$race(arr) {\n\t\tvar Constructor = this;\n\n\t\t// spec mandated checks\n\t\tif (ToString.call(arr) != \"[object Array]\") {\n\t\t\treturn Constructor.reject(TypeError(\"Not an array\"));\n\t\t}\n\n\t\treturn new Constructor(function executor(resolve,reject){\n\t\t\tif (typeof resolve != \"function\" || typeof reject != \"function\") {\n\t\t\t\tthrow TypeError(\"Not a function\");\n\t\t\t}\n\n\t\t\titeratePromises(Constructor,arr,function resolver(idx,msg){\n\t\t\t\tresolve(msg);\n\t\t\t},reject);\n\t\t});\n\t});\n\n\treturn Promise;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/native-promise-only/lib/npo.src.js\n// module id = 30\n// module chunks = 0","\"use strict\";\n\nexports.__esModule = true;\n/*eslint-env browser*/\n\nexports.default = {\n  pool: {\n    size: navigator.hardwareConcurrency || 8\n  }\n};\n//# sourceMappingURL=defaults.browser.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/threads/lib/defaults.browser.js\n// module id = 32\n// module chunks = 0","'use strict';\n\nexports.__esModule = true;\n\nvar _os = require('os');\n\nexports.default = {\n  pool: {\n    size: (0, _os.cpus)().length\n  }\n};\n//# sourceMappingURL=defaults.node.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/threads/lib/defaults.node.js\n// module id = 33\n// module chunks = 0","'use strict';\n\nexports.__esModule = true;\n\nvar _eventemitter = require('eventemitter3');\n\nvar _eventemitter2 = _interopRequireDefault(_eventemitter);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Job = function (_EventEmitter) {\n  _inherits(Job, _EventEmitter);\n\n  function Job(pool) {\n    _classCallCheck(this, Job);\n\n    var _this = _possibleConstructorReturn(this, _EventEmitter.call(this));\n\n    _this.pool = pool;\n    _this.thread = null;\n\n    _this.runArgs = [];\n    _this.sendArgs = [];\n\n    pool.emit('newJob', _this);\n    return _this;\n  }\n\n  Job.prototype.run = function run() {\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    if (args.length === 0) {\n      throw new Error('Cannot call .run() without arguments.');\n    }\n\n    this.runArgs = args;\n    return this;\n  };\n\n  Job.prototype.send = function send() {\n    if (this.runArgs.length === 0) {\n      throw new Error('Cannot .send() before .run().');\n    }\n\n    for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    this.sendArgs = args;\n\n    this.emit('readyToRun');\n    return this;\n  };\n\n  Job.prototype.executeOn = function executeOn(thread) {\n    var _thread$once$once$run, _thread$once$once;\n\n    (_thread$once$once$run = (_thread$once$once = thread.once('message', this.emit.bind(this, 'done')).once('error', this.emit.bind(this, 'error'))).run.apply(_thread$once$once, this.runArgs)).send.apply(_thread$once$once$run, this.sendArgs);\n\n    this.thread = thread;\n\n    this.emit('threadChanged');\n    return this;\n  };\n\n  Job.prototype.promise = function promise() {\n    var _this2 = this;\n\n    // Always return a promise\n    return new Promise(function (resolve) {\n      // If the thread isn't set, listen for the threadChanged event\n      if (!_this2.thread) {\n        _this2.once('threadChanged', function () {\n          resolve(_this2.thread.promise());\n        });\n      } else {\n        resolve(_this2.thread.promise());\n      }\n    });\n  };\n\n  return Job;\n}(_eventemitter2.default);\n\nexports.default = Job;\n//# sourceMappingURL=job.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/threads/lib/job.js\n// module id = 34\n// module chunks = 0","'use strict';\n\nexports.__esModule = true;\n\nvar _eventemitter = require('eventemitter3');\n\nvar _eventemitter2 = _interopRequireDefault(_eventemitter);\n\nvar _job = require('./job');\n\nvar _job2 = _interopRequireDefault(_job);\n\nvar _defaults = require('./defaults');\n\nvar _defaults2 = _interopRequireDefault(_defaults);\n\nvar _ = require('./');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Pool = function (_EventEmitter) {\n  _inherits(Pool, _EventEmitter);\n\n  function Pool(threads) {\n    _classCallCheck(this, Pool);\n\n    var _this = _possibleConstructorReturn(this, _EventEmitter.call(this));\n\n    _this.threads = Pool.spawn(threads || _defaults2.default.pool.size);\n    _this.idleThreads = _this.threads.slice();\n    _this.jobQueue = [];\n    _this.runArgs = [];\n\n    _this.on('newJob', function (job) {\n      return _this.handleNewJob(job);\n    });\n    _this.on('threadAvailable', function () {\n      return _this.dequeue();\n    });\n    return _this;\n  }\n\n  Pool.prototype.run = function run() {\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    this.runArgs = args;\n    return this;\n  };\n\n  Pool.prototype.send = function send() {\n    if (!this.runArgs) {\n      throw new Error('Pool.send() called without prior Pool.run(). You need to define what to run first.');\n    }\n\n    var job = new _job2.default(this);\n    job.run.apply(job, this.runArgs);\n    return job.send.apply(job, arguments);\n  };\n\n  Pool.prototype.killAll = function killAll() {\n    this.threads.forEach(function (thread) {\n      thread.kill();\n    });\n  };\n\n  Pool.prototype.queueJob = function queueJob(job) {\n    this.jobQueue.push(job);\n    this.dequeue();\n  };\n\n  Pool.prototype.dequeue = function dequeue() {\n    var _this2 = this;\n\n    if (this.jobQueue.length === 0 || this.idleThreads.length === 0) {\n      return;\n    }\n\n    var job = this.jobQueue.shift();\n    var thread = this.idleThreads.shift();\n\n    job.once('done', function () {\n      for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      return _this2.handleJobSuccess.apply(_this2, [thread, job].concat(args));\n    }).once('error', function () {\n      for (var _len3 = arguments.length, args = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        args[_key3] = arguments[_key3];\n      }\n\n      return _this2.handleJobError.apply(_this2, [thread, job].concat(args));\n    });\n\n    job.executeOn(thread);\n  };\n\n  Pool.prototype.handleNewJob = function handleNewJob(job) {\n    var _this3 = this;\n\n    this.lastCreatedJob = job;\n    job.once('readyToRun', function () {\n      return _this3.queueJob(job);\n    }); // triggered by job.send()\n  };\n\n  Pool.prototype.handleJobSuccess = function handleJobSuccess(thread, job) {\n    for (var _len4 = arguments.length, responseArgs = Array(_len4 > 2 ? _len4 - 2 : 0), _key4 = 2; _key4 < _len4; _key4++) {\n      responseArgs[_key4 - 2] = arguments[_key4];\n    }\n\n    this.emit.apply(this, ['done', job].concat(responseArgs));\n    this.handleJobDone(thread);\n  };\n\n  Pool.prototype.handleJobError = function handleJobError(thread, job, error) {\n    this.emit('error', job, error);\n    this.handleJobDone(thread);\n  };\n\n  Pool.prototype.handleJobDone = function handleJobDone(thread) {\n    var _this4 = this;\n\n    this.idleThreads.push(thread);\n    this.emit('threadAvailable');\n\n    if (this.idleThreads.length === this.threads.length) {\n      // run deferred to give other job.on('done') handlers time to run first\n      setTimeout(function () {\n        _this4.emit('finished');\n      }, 0);\n    }\n  };\n\n  return Pool;\n}(_eventemitter2.default);\n\nexports.default = Pool;\n\n\nPool.spawn = function (threadCount) {\n  var threads = [];\n\n  for (var threadIndex = 0; threadIndex < threadCount; threadIndex++) {\n    threads.push((0, _.spawn)());\n  }\n\n  return threads;\n};\n//# sourceMappingURL=pool.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/threads/lib/pool.js\n// module id = 35\n// module chunks = 0","'use strict';\n\nexports.__esModule = true;\n\nvar _slaveCode = require('./slave-code');\n\nvar _slaveCode2 = _interopRequireDefault(_slaveCode);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar slaveCodeDataUri = 'data:text/javascript;charset=utf-8,' + encodeURI(_slaveCode2.default);\nvar createBlobURL = window.createBlobURL || window.createObjectURL;\n\nif (!createBlobURL) {\n  var URL = window.URL || window.webkitURL;\n\n  if (URL) {\n    createBlobURL = URL.createObjectURL;\n  } else {\n    throw new Error('No Blob creation implementation found.');\n  }\n}\n\nif (typeof window.BlobBuilder === 'function' && typeof createBlobURL === 'function') {\n  var blobBuilder = new window.BlobBuilder();\n  blobBuilder.append(_slaveCode2.default);\n  slaveCodeDataUri = createBlobURL(blobBuilder.getBlob());\n} else if (typeof window.Blob === 'function' && typeof createBlobURL === 'function') {\n  var blob = new window.Blob([_slaveCode2.default], { type: 'text/javascript' });\n  slaveCodeDataUri = createBlobURL(blob);\n}\n\nexports.default = slaveCodeDataUri;\n//# sourceMappingURL=slave-code-uri.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/threads/lib/worker.browser/slave-code-uri.js\n// module id = 36\n// module chunks = 0","module.exports = \"/*eslint-env worker*/\\n/*global importScripts*/\\n/*eslint-disable no-console*/\\nself.module = {\\n  exports : function() {\\n    if (console) { console.error('No thread logic initialized.'); }\\n  }\\n};\\n\\nfunction handlerDone() {\\n  var args = Array.prototype.slice.call(arguments, 0);\\n  this.postMessage({ response : args });\\n}\\n\\nfunction handlerProgress(progress) {\\n  this.postMessage({ progress : progress });\\n}\\n\\nfunction handlerDoneTransfer() {\\n  var args = Array.prototype.slice.call(arguments);\\n  var lastArg = args.pop();\\n\\n  if (!(lastArg instanceof Array) && this.console) {\\n    console.error('Expected 2nd parameter of <doneCallback>.transfer() to be an array. Got:', lastArg);\\n  }\\n\\n  this.postMessage({ response : args }, lastArg);\\n}\\n\\nself.onmessage = function (event) {\\n  var scripts = event.data.scripts;\\n  if (scripts && scripts.length > 0 && typeof importScripts !== 'function') {\\n    throw new Error('importScripts() not supported.');\\n  }\\n\\n  if (event.data.initByScripts) {\\n    importScripts.apply(null, scripts);\\n  }\\n\\n  if (event.data.initByMethod) {\\n    var method = event.data.method;\\n    this.module.exports = Function.apply(null, method.args.concat(method.body));\\n\\n    if (scripts && scripts.length > 0) {\\n      importScripts.apply(null, scripts);\\n    }\\n  }\\n\\n  if (event.data.doRun) {\\n    var handler = this.module.exports;\\n    if (typeof handler !== 'function') {\\n      throw new Error('Cannot run thread logic. No handler has been exported.');\\n    }\\n\\n    var preparedHandlerDone = handlerDone.bind(this);\\n    preparedHandlerDone.transfer = handlerDoneTransfer.bind(this);\\n\\n    handler.call(this, event.data.param, preparedHandlerDone, handlerProgress.bind(this));\\n  }\\n}.bind(self);\\n\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/threads/lib/worker.browser/slave-code.js\n// module id = 37\n// module chunks = 0","'use strict';\n\nexports.__esModule = true;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _eventemitter = require('eventemitter3');\n\nvar _eventemitter2 = _interopRequireDefault(_eventemitter);\n\nvar _slaveCodeUri = require('./slave-code-uri');\n\nvar _slaveCodeUri2 = _interopRequireDefault(_slaveCodeUri);\n\nvar _config = require('../config');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nif (_typeof(window.Worker) !== 'object' && typeof window.Worker !== 'function') {\n  throw new Error('Browser does not support web workers!');\n}\n\nfunction joinPaths(path1, path2) {\n  if (!path1 || !path2) {\n    return path1 + path2;\n  } else if (path1.charAt(path1.length - 1) === '/' || path2.charAt(0) === '/') {\n    return path1 + path2;\n  } else {\n    return path1 + '/' + path2;\n  }\n}\n\nfunction prependScriptUrl(scriptUrl) {\n  var prefix = (0, _config.getConfig)().basepath.web;\n  return prefix ? joinPaths(prefix, scriptUrl) : scriptUrl;\n}\n\nfunction convertToArray(input) {\n  var outputArray = [];\n  var index = 0;\n\n  while (typeof input[index] !== 'undefined') {\n    outputArray.push(input[index]);\n    index++;\n  }\n\n  return outputArray;\n}\n\nfunction logError(error) {\n  if (error.stack) {\n    console.error(error.stack); // eslint-disable-line no-console\n  } else if (error.message && error.filename && error.lineno) {\n    var fileName = error.filename.match(/^data:text\\/javascript/) && error.filename.length > 50 ? error.filename.substr(0, 50) + '...' : error.filename;\n    console.error(error.message + ' @' + fileName + ':' + error.lineno); // eslint-disable-line no-console\n  } else {\n    console.error(error); // eslint-disable-line no-console\n  }\n}\n\nvar Worker = function (_EventEmitter) {\n  _inherits(Worker, _EventEmitter);\n\n  function Worker() {\n    var initialScript = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n    var importScripts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n\n    _classCallCheck(this, Worker);\n\n    // used by `run()` to decide if the worker must be re-initialized\n    var _this = _possibleConstructorReturn(this, _EventEmitter.call(this));\n\n    _this.currentRunnable = null;\n    _this.currentImportScripts = [];\n\n    _this.initWorker();\n    _this.worker.addEventListener('message', _this.handleMessage.bind(_this));\n    _this.worker.addEventListener('error', _this.handleError.bind(_this));\n\n    if (initialScript) {\n      _this.run(initialScript, importScripts);\n    }\n    return _this;\n  }\n\n  Worker.prototype.initWorker = function initWorker() {\n    try {\n      this.worker = new window.Worker(_slaveCodeUri2.default);\n    } catch (error) {\n      var slaveScriptUrl = (0, _config.getConfig)().fallback.slaveScriptUrl;\n      if (slaveScriptUrl) {\n        // try using the slave script file instead of the data URI\n        this.worker = new window.Worker(_slaveCodeUri2.default);\n      } else {\n        // re-throw\n        throw error;\n      }\n    }\n  };\n\n  Worker.prototype.run = function run(toRun) {\n    var importScripts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n\n    if (this.alreadyInitializedToRun(toRun, importScripts)) {\n      // don't re-initialize with the new logic if it already has been\n      return this;\n    }\n\n    if (typeof toRun === 'function') {\n      this.runMethod(toRun, importScripts);\n    } else {\n      this.runScripts(toRun, importScripts);\n    }\n\n    this.currentRunnable = toRun;\n    this.currentImportScripts = importScripts;\n\n    return this;\n  };\n\n  Worker.prototype.runMethod = function runMethod(method, importScripts) {\n    var methodStr = method.toString();\n    var args = methodStr.substring(methodStr.indexOf('(') + 1, methodStr.indexOf(')')).split(',');\n    var body = methodStr.substring(methodStr.indexOf('{') + 1, methodStr.lastIndexOf('}'));\n\n    this.worker.postMessage({\n      initByMethod: true,\n      method: { args: args, body: body },\n      scripts: importScripts.map(prependScriptUrl)\n    });\n  };\n\n  Worker.prototype.runScripts = function runScripts(script, importScripts) {\n    if (!script) {\n      throw new Error('Must pass a function or a script URL to run().');\n    }\n\n    // attention: array for browser, single script for node\n    this.worker.postMessage({\n      initByScripts: true,\n      scripts: importScripts.concat([script]).map(prependScriptUrl)\n    });\n  };\n\n  Worker.prototype.send = function send(param) {\n    var transferables = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n\n    this.worker.postMessage({\n      doRun: true,\n      param: param\n    }, transferables);\n    return this;\n  };\n\n  Worker.prototype.kill = function kill() {\n    this.worker.terminate();\n    this.emit('exit');\n    return this;\n  };\n\n  Worker.prototype.promise = function promise() {\n    var _this2 = this;\n\n    return new Promise(function (resolve, reject) {\n      var resolved = void 0,\n          rejected = void 0;\n      resolved = function resolved(result) {\n        _this2.removeListener('error', rejected);\n        resolve(result);\n      };\n      rejected = function rejected(err) {\n        _this2.removeListener('message', resolved);\n        reject(err);\n      };\n\n      _this2.once('message', resolved).once('error', rejected);\n    });\n  };\n\n  Worker.prototype.alreadyInitializedToRun = function alreadyInitializedToRun(toRun, importScripts) {\n    var runnablesMatch = this.currentRunnable === toRun;\n    var importScriptsMatch = this.currentImportScripts === importScripts || importScripts.length === 0 && this.currentImportScripts.length === 0;\n\n    return runnablesMatch && importScriptsMatch;\n  };\n\n  Worker.prototype.handleMessage = function handleMessage(event) {\n    if (event.data.error) {\n      this.handleError(event.data.error);\n    } else if (event.data.progress) {\n      this.handleProgress(event.data.progress);\n    } else {\n      var responseArgs = convertToArray(event.data.response);\n      this.emit.apply(this, ['message'].concat(responseArgs));\n      this.emit.apply(this, ['done'].concat(responseArgs)); // this one is just for convenience\n    }\n  };\n\n  Worker.prototype.handleProgress = function handleProgress(progress) {\n    this.emit('progress', progress);\n  };\n\n  Worker.prototype.handleError = function handleError(error) {\n    if (!this.listeners('error', true)) {\n      logError(error);\n    }\n\n    if (error.preventDefault) {\n      error.preventDefault();\n    }\n\n    this.emit('error', error);\n  };\n\n  return Worker;\n}(_eventemitter2.default);\n\nexports.default = Worker;\n//# sourceMappingURL=worker.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/threads/lib/worker.browser/worker.js\n// module id = 38\n// module chunks = 0","'use strict';\n\n/*eslint-env node*/\n/*\n * This file is only a stub to make './worker' resolve the './worker.node/worker' module.\n * Loading the browser worker into the browser bundle is done in the gulpfile by\n * configuring a browserify override.\n */\n\nif (typeof process !== 'undefined' && 'pid' in process) {\n  module.exports = require('./worker.node/worker');\n} else {\n  module.exports = require('./worker.browser/worker');\n}\n//# sourceMappingURL=worker.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/threads/lib/worker.js\n// module id = 39\n// module chunks = 0","'use strict';\n\nexports.__esModule = true;\n\nvar _child_process = require('child_process');\n\nvar _child_process2 = _interopRequireDefault(_child_process);\n\nvar _path = require('path');\n\nvar _path2 = _interopRequireDefault(_path);\n\nvar _eventemitter = require('eventemitter3');\n\nvar _eventemitter2 = _interopRequireDefault(_eventemitter);\n\nvar _config = require('../config');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Worker = function (_EventEmitter) {\n  _inherits(Worker, _EventEmitter);\n\n  function Worker(initialRunnable) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    _classCallCheck(this, Worker);\n\n    var _this = _possibleConstructorReturn(this, _EventEmitter.call(this));\n\n    _this.slave = _child_process2.default.fork(_path2.default.join(__dirname, 'slave.js'), [], options);\n    _this.slave.on('message', _this.handleMessage.bind(_this));\n    _this.slave.on('error', _this.handleError.bind(_this));\n    _this.slave.on('exit', _this.emit.bind(_this, 'exit'));\n\n    if (initialRunnable) {\n      _this.run(initialRunnable);\n    }\n    return _this;\n  }\n\n  Worker.prototype.run = function run(toRun) {\n    if (typeof toRun === 'function') {\n      this.runMethod(toRun);\n    } else {\n      this.runScript(toRun);\n    }\n    return this;\n  };\n\n  Worker.prototype.runMethod = function runMethod(method) {\n    this.slave.send({\n      initByMethod: true,\n      method: method.toString()\n    });\n  };\n\n  Worker.prototype.runScript = function runScript(script) {\n    if (!script) {\n      throw new Error('Must pass a function or a script path to run().');\n    }\n\n    var prefixedScriptPath = _path2.default.join((0, _config.getConfig)().basepath.node, script);\n\n    // attention: single script for node, array for browser\n    this.slave.send({\n      initByScript: true,\n      script: _path2.default.resolve(prefixedScriptPath)\n    });\n  };\n\n  Worker.prototype.send = function send(param) {\n    this.slave.send({\n      doRun: true,\n      param: param\n    });\n    return this;\n  };\n\n  Worker.prototype.kill = function kill() {\n    this.slave.kill();\n    return this;\n  };\n\n  Worker.prototype.promise = function promise() {\n    var _this2 = this;\n\n    return new Promise(function (resolve, reject) {\n      var resolved = void 0,\n          rejected = void 0;\n      resolved = function resolved(result) {\n        _this2.removeListener('error', rejected);\n        resolve(result);\n      };\n      rejected = function rejected(err) {\n        _this2.removeListener('message', resolved);\n        reject(err);\n      };\n\n      _this2.once('message', resolved).once('error', rejected);\n    });\n  };\n\n  Worker.prototype.handleMessage = function handleMessage(message) {\n    if (message.error) {\n      var error = new Error(message.error.message);\n      error.stack = message.error.stack;\n\n      this.handleError(error);\n    } else if (message.progress) {\n      this.handleProgress(message.progress);\n    } else {\n      this.emit.apply(this, ['message'].concat(message.response));\n      this.emit.apply(this, ['done'].concat(message.response)); // this one is just for convenience\n    }\n  };\n\n  Worker.prototype.handleProgress = function handleProgress(progress) {\n    this.emit('progress', progress);\n  };\n\n  Worker.prototype.handleError = function handleError(error) {\n    if (!this.listeners('error', true)) {\n      console.error(error.stack || error); // eslint-disable-line no-console\n    }\n    this.emit('error', error);\n  };\n\n  return Worker;\n}(_eventemitter2.default);\n\nexports.default = Worker;\n//# sourceMappingURL=worker.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/threads/lib/worker.node/worker.js\n// module id = 40\n// module chunks = 0","import * as _ from \"lodash\";\n/* tslint:disable:no-var-requires */\nimport * as benchmark from \"benchmark\";\nconst platform = require(\"platform\");\n/* tslint:enable:no-var-requires */\n\nimport {mandelbrot as transpiledParallelMandelbrot} from \"./transpiled/mandelbrot\";\nimport {syncKnightTours, parallelKnightTours as transpiledParallelKnightTours} from \"./transpiled/knights-tour\";\nimport {syncMonteCarlo as simJsMonteCarlo, parallelMonteCarlo as simJsParallelMonteCarlo} from \"./transpiled/monte-carlo\";\n\nimport {parallelKnightTours as dynamicParallelKnightTours} from \"./dynamic/knights-tour\";\nimport {createMandelOptions, parallelMandelbrot as dynamicParallelMandelbrot, syncMandelbrot} from \"./dynamic/mandelbrot\";\nimport {IMonteCarloSimulationOptions, syncMonteCarlo as randomMonteCarlo, parallelMonteCarlo as randomParallelMonteCarlo, IProject} from \"./dynamic/monte-carlo\";\n\nimport {parallelJSMandelbrot} from \"./paralleljs/mandelbrot\";\nimport {parallelJSMonteCarlo} from \"./paralleljs/monte-carlo\";\nimport {parallelJSKnightTours} from \"./paralleljs/knights-tour\";\n\nimport {threadsMonteCarlo} from \"./threads/monte-carlo\";\nimport {threadsMandelbrot} from \"./threads/mandelbrot\";\nimport {threadsKnightTours} from \"./threads/knights-tour\";\nimport {Pool} from \"threads\";\n\nimport {mandelbrot as hamstersjsMandelbrot} from \"./hamstersjs/mandelbrot\";\nimport {parallelKnightTours as hamstersjsKnightTours} from \"./hamstersjs/knights-tour\";\nimport {parallelMonteCarlo as hamstersjsMonteCarlo} from \"./hamstersjs/monte-carlo\";\n\nlet Benchmark = (benchmark as any).runInContext({ _ });\n(window as any).Benchmark = Benchmark;\n\nconst runButton = document.querySelector(\"#run\") as HTMLInputElement;\nconst outputTable = document.querySelector(\"#output-table\") as HTMLTableElement;\nconst jsonOutputField = document.querySelector(\"#json-output\") as HTMLElement;\n\nconst setCheckboxes = document.querySelectorAll('[id*=\"-set\"]') as NodeListOf<HTMLInputElement>;\n\nconst knightRunner6x6 = document.querySelector(\"#knight-runner-6-6\") as HTMLInputElement;\n\ntype Deferred = { resolve: () => void };\n\nfunction addAsyncTest(suite: benchmark.Suite, optionsOrTitle: string | (benchmark.Options & { fn: (this: undefined) => PromiseLike<any> }), fn?: ((this: undefined) => PromiseLike<any>)) {\n    const options: benchmark.Options = typeof(optionsOrTitle) === \"string\" ? { name: optionsOrTitle, fn} : optionsOrTitle;\n    const asyncFn = options.fn as Function;\n\n    options.defer = true;\n    options.fn = function (this: benchmark, deferred: Deferred) {\n        const benchmark = this;\n        asyncFn.apply(undefined, [])\n            .then(function () { deferred.resolve() },\n                function (error: any) {\n                    console.error(error);\n                    benchmark.error = error;\n                    deferred.resolve();\n                }\n            );\n    };\n\n    return suite.add(options);\n}\n\n/**\n * Helper for threadjs tests. Creates the thread pool before the tests are run. A new thread pool for each test run is needed\n * to avoid caching of the environment across runs.\n */\nfunction addThreadJsTest(this: any, suite: benchmark.Suite, name: string, fn: (...args: any[]) => void, ...args: any[]) {\n    let argsWithPool: any[];\n    let pool: Pool;\n    addAsyncTest(suite, {\n        name,\n        setup: function () {\n            pool = new Pool();\n            argsWithPool = args.slice();\n            argsWithPool.push(pool);\n        },\n        fn: () => fn.apply(this, argsWithPool),\n        teardown: function () {\n            if (pool) {\n                pool.killAll();\n            }\n        }\n    });\n}\n\nfunction addKnightBoardTests(suite: benchmark.Suite) {\n    const boardSizes = knightRunner6x6.checked ? [5, 6] : [5];\n\n    for (const boardSize of boardSizes) {\n        const title = `Knights Tour (${boardSize}x${boardSize})`;\n        suite.add(`sync: ${title}`, function () {\n            syncKnightTours({x: 0, y: 0}, boardSize);\n        });\n\n        addAsyncTest(suite, `parallel-dynamic: ${title}`, () => dynamicParallelKnightTours({x: 0, y: 0}, boardSize));\n        addAsyncTest(suite, `parallel-transpiled: ${title}`, () => transpiledParallelKnightTours({x: 0, y: 0}, boardSize));\n        addAsyncTest(suite, `paralleljs: ${title}`, () => parallelJSKnightTours({x: 0, y: 0}, boardSize));\n        addThreadJsTest(suite, `threadsjs: ${title}`, threadsKnightTours, {x: 0, y: 0}, boardSize);\n        addAsyncTest(suite, `hamstersjs: ${title}`, () => hamstersjsKnightTours({x: 0, y: 0}, boardSize));\n    }\n}\n\nfunction addMonteCarloTest(suite: benchmark.Suite, options: IMonteCarloSimulationOptions & {numberOfProjects: number, numRuns: number}) {\n    const runOptions = _.extend(options, {\n        projects: createProjects(options.numberOfProjects)\n    });\n\n    const configName = `(projects: ${options.numberOfProjects}, runs: ${options.numRuns.toLocaleString()})`;\n\n    suite.add(`sync: Monte Carlo Math.random ${configName}`, function () {\n        randomMonteCarlo(options);\n    });\n\n    addAsyncTest(suite, `parallel-dynamic: Monte Carlo Math.random ${configName}`, () => randomParallelMonteCarlo(runOptions));\n    suite.add(`sync: Monte Carlo simjs ${configName}`, function () {\n        simJsMonteCarlo(options);\n    });\n\n    addAsyncTest(suite, `parallel-transpiled: Monte Carlo simjs ${configName}`, () => simJsParallelMonteCarlo(runOptions));\n    addAsyncTest(suite, `paralleljs: Monte Carlo simjs ${configName}`, () => parallelJSMonteCarlo(runOptions));\n    addThreadJsTest(suite, `threadsjs: Monte Carlo simjs ${configName}`, threadsMonteCarlo, runOptions);\n    addAsyncTest(suite, `hamstersjs: Monte Carlo Math.random ${configName}`, () => hamstersjsMonteCarlo(runOptions));\n}\n\nfunction addMonteCarloTests(suite: benchmark.Suite) {\n    const oneMillionRuns = (document.querySelector(\"#monte-carlo-1m\") as HTMLInputElement).checked;\n    const monteCarloOptions = {\n        investmentAmount: 620000,\n        numYears: 15,\n        performance: 0.0340000,\n        seed: 10,\n        volatility: 0.0896000\n    };\n\n    const runs = [10**4, 10**5];\n    if (oneMillionRuns) {\n        runs.push(10**6);\n    }\n\n    for (const numRuns of runs) {\n        for (const numberOfProjects of  [1, 4, 8, 16]) {\n            const options = _.extend({}, monteCarloOptions, { numberOfProjects, numRuns });\n            addMonteCarloTest(suite, options);\n        }\n    }\n}\n\nfunction addMandelbrotTests(suite: benchmark.Suite) {\n    const mandelbrotHeight = parseInt((document.querySelector(\"#mandelbrot-height\") as HTMLInputElement).value, 10);\n    const mandelbrotWidth = parseInt((document.querySelector(\"#mandelbrot-width\") as HTMLInputElement).value, 10);\n    const mandelbrotIterations = parseInt((document.querySelector(\"#mandelbrot-iterations\") as HTMLInputElement).value, 10);\n    const onlyDefaultScheduling = (document.querySelector(\"#mandelbrot-only-default-scheduling\") as HTMLInputElement).checked;\n\n    const mandelbrotOptions = createMandelOptions(mandelbrotWidth, mandelbrotHeight, mandelbrotIterations);\n\n    suite.add(`sync: Mandelbrot ${mandelbrotWidth}x${mandelbrotHeight}, ${mandelbrotIterations}`, function () {\n        syncMandelbrot(mandelbrotOptions, () => undefined);\n    });\n\n    const  taskSizes = onlyDefaultScheduling ? [undefined] : [undefined, 1, 150, 312, 625, 1250, 2500];\n    for (const valuesPerTask of taskSizes) {\n        const parallelOptions = { maxValuesPerTask: valuesPerTask, minValuesPerTask: valuesPerTask };\n        let title = `Mandelbrot ${mandelbrotOptions.imageWidth}x${mandelbrotOptions.imageHeight}, ${mandelbrotOptions.iterations}`;\n        if (valuesPerTask) {\n            title += ` (${valuesPerTask})`;\n        }\n\n        addAsyncTest(suite, `parallel-dynamic: ${title}`, () => dynamicParallelMandelbrot(mandelbrotOptions, parallelOptions));\n        addAsyncTest(suite, `parallel-transpiled: ${title}`, () => transpiledParallelMandelbrot(mandelbrotOptions, parallelOptions));\n    }\n\n    addAsyncTest(suite, `paralleljs: Mandelbrot ${mandelbrotWidth}x${mandelbrotHeight}, ${mandelbrotIterations}`, () => parallelJSMandelbrot(mandelbrotOptions));\n    addThreadJsTest(suite, `threadsjs: Mandelbrot ${mandelbrotWidth}x${mandelbrotHeight}, ${mandelbrotIterations}`, threadsMandelbrot, mandelbrotOptions);\n    addAsyncTest(suite, `hamstersjs: Mandelbrot ${mandelbrotWidth}x${mandelbrotHeight}, ${mandelbrotIterations}`, () => hamstersjsMandelbrot(mandelbrotOptions));\n}\n\nfunction measure() {\n    const runMonteCarlo = (document.querySelector(\"#monte-carlo\") as HTMLInputElement).checked;\n    const runMandelbrot = (document.querySelector(\"#mandelbrot-field\") as HTMLInputElement).checked;\n    const runKnightTour = (document.querySelector(\"#knight-runner\") as HTMLInputElement).checked;\n    const allTestsSuite = new Benchmark.Suite();\n\n    if (runMandelbrot) {\n        addMandelbrotTests(allTestsSuite);\n    }\n    if (runKnightTour) {\n        addKnightBoardTests(allTestsSuite);\n    }\n    if (runMonteCarlo) {\n        addMonteCarloTests(allTestsSuite);\n    }\n\n    const suite = allTestsSuite.filter((benchmark: benchmark  & {name: string }) => {\n        for (let i = 0; i < setCheckboxes.length; ++i) {\n            const checkbox = setCheckboxes[i];\n            const parts = checkbox.id.split(\"-\");\n            const name = parts.slice(0, parts.length - 1).join(\"-\");\n\n            if (checkbox.checked && benchmark.name.indexOf(name) === 0) {\n                return true;\n            }\n        }\n        return false;\n    });\n\n    suite.forEach((benchmark: benchmark) => {\n        const index = suite.indexOf(benchmark);\n        benchmark.on(\"cycle\", () => appendTestResults(benchmark, index));\n    });\n\n    suite.on(\"cycle\", function (event: benchmark.Event) {\n        const benchmark = event.target as (benchmark);\n        const index = (event.currentTarget as Array<benchmark>).indexOf(benchmark);\n        appendTestResults(benchmark, index);\n    });\n\n    suite.on(\"complete\", function (event: benchmark.Event) {\n        const benchmarks = (event.currentTarget as benchmark.Suite).map((benchmark: benchmark & {name: string }) => {\n            return {\n                info: benchmark.toString,\n                name: benchmark.name,\n                stats: benchmark.stats,\n                times: benchmark.times\n            };\n        });\n\n        jsonOutputField.textContent = JSON.stringify({ benchmarks, platform}, undefined, \"    \");\n        runButton.disabled = false;\n    });\n\n    suite.on(\"start\", initResultTable);\n\n    suite.run({async: true });\n}\n\nrunButton.addEventListener(\"click\", function (event: MouseEvent) {\n    event.preventDefault();\n    runButton.disabled = true;\n    measure();\n});\n\nfunction initResultTable(event: benchmark.Event) {\n    clearOutputTable();\n\n    function clearOutputTable() {\n        while (outputTable.tBodies.length > 0) {\n            outputTable.removeChild(outputTable.tBodies[0]);\n        }\n    }\n\n    const body = outputTable.createTBody();\n    (event.currentTarget as Array<benchmark.Options>).forEach(suite => {\n        const row = body.insertRow();\n        const [set, ...nameParts] = suite.name!.split(\":\");\n\n        row.insertCell().textContent = set;\n        row.insertCell().textContent = nameParts.join(\":\");\n        const columns = (outputTable.tHead.rows[0] as HTMLTableRowElement).cells.length;\n        for (let i = 0; i < columns; ++i) {\n            row.insertCell();\n        }\n    });\n}\n\nfunction appendTestResults(benchmark: benchmark, index: number) {\n    const body = outputTable.tBodies[0] as HTMLTableSectionElement;\n    const row = body.rows[index] as HTMLTableRowElement;\n\n    row.cells[2].textContent = benchmark.stats.deviation.toFixed(4);\n    row.cells[3].textContent = benchmark.stats.mean.toFixed(4);\n    row.cells[4].textContent = benchmark.stats.moe.toFixed(4);\n    row.cells[5].textContent = benchmark.stats.rme.toFixed(4);\n    row.cells[6].textContent = benchmark.stats.sem.toFixed(4);\n    row.cells[7].textContent = benchmark.stats.variance.toFixed(4);\n    row.cells[8].textContent = benchmark.stats.sample.length.toFixed(0);\n    row.cells[9].textContent = benchmark.hz.toFixed(4);\n}\n\nfunction createProjects(count: number): IProject[] {\n    const projects: IProject[] = [];\n\n    for (let i = 0; i < count; ++i) {\n        projects.push({\n            startYear: Math.round(Math.random() * 15),\n            totalAmount: Math.round(Math.random() * 100000)\n        });\n    }\n\n    return projects;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/performance-measurement.ts"],"sourceRoot":""}