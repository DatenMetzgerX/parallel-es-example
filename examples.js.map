{"version":3,"sources":["webpack:///./src/browser-example.ts"],"names":[],"mappings":"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","file":"examples.js","sourcesContent":["import {mandelbrot as transpiledParallelMandelbrot} from \"./transpiled/mandelbrot\";\nimport {parallelKnightTours as transpiledParallelKnightTour, syncKnightTours} from \"./transpiled/knights-tour\";\nimport {parallelKnightTours as dynamicKnightTour} from \"./dynamic/knights-tour\";\nimport {syncMandelbrot, createMandelOptions, parallelMandelbrot as dynamicParallelMandelbrot} from \"./dynamic/mandelbrot\";\nimport {syncMonteCarlo as simJsMonteCarlo, parallelMonteCarlo as transpiledParallelMonteCarlo} from \"./transpiled/monte-carlo\";\nimport {syncMonteCarlo as randomMonteCarlo, parallelMonteCarlo as dynamicParallelMonteCarlo, IProjectResult} from \"./dynamic/monte-carlo\";\n\n/* tslint:disable:no-console */\n\nlet parallelMandelbrot = transpiledParallelMandelbrot;\nlet parallelKnightTour = transpiledParallelKnightTour;\nlet parallelMonteCarlo = transpiledParallelMonteCarlo;\nlet syncMonteCarlo = simJsMonteCarlo;\n\nconst mandelbrotCanvas = document.querySelector(\"#mandelbrot-canvas\") as HTMLCanvasElement;\nconst mandelbrotContext = mandelbrotCanvas.getContext(\"2d\");\nconst mandelbrotOptions = createMandelOptions(mandelbrotCanvas.width, mandelbrotCanvas.height, 10000);\n\nconst monteCarloOptions = {\n    investmentAmount: 620000,\n    numRuns: 10000,\n    numYears: 15,\n    performance: 0.0340000,\n    projects: [\n        {\n            startYear: 0,\n            totalAmount: 10000\n        }, {\n            startYear: 1,\n            totalAmount: 10000\n        }, {\n            startYear: 2,\n            totalAmount: 10000\n        }, {\n            startYear: 5,\n            totalAmount: 50000\n        }, {\n            startYear: 15,\n            totalAmount: 800000\n        }\n    ],\n    seed: 10,\n    volatility: 0.0896000\n};\nconst monteCarloTable = document.querySelector(\"#montecarlo-table\") as HTMLTableElement;\n\ndocument.querySelector(\"#mandelbrot-run-parallel\").addEventListener(\"click\", function (event) {\n    event.preventDefault();\n\n    mandelbrotContext!.putImageData(mandelbrotContext!.createImageData(mandelbrotCanvas.width, mandelbrotCanvas.height), 0, 0);\n    const maxValuesPerTask = parseInt((document.querySelector(\"#mandelbrot-values-per-task\") as HTMLInputElement).value, 10);\n\n    console.time(\"mandelbrot-parallel\");\n    parallelMandelbrot(mandelbrotOptions, { maxValuesPerTask })\n        .subscribe((lines, index, blockSize) => {\n            for (let i = 0; i < lines.length; ++i) {\n                mandelbrotContext!.putImageData(new ImageData(lines[i], mandelbrotCanvas.width, 1), 0, index * blockSize + i);\n            }\n        })\n        .then(() => console.timeEnd(\"mandelbrot-parallel\"), reason => console.error(reason));\n});\n\ndocument.querySelector(\"#mandelbrot-run-sync\").addEventListener(\"click\", function () {\n    mandelbrotContext!.putImageData(mandelbrotContext!.createImageData(mandelbrotCanvas.width, mandelbrotCanvas.height), 0, 0);\n\n    setTimeout(() => {\n        console.time(\"mandelbrot-sync\");\n        syncMandelbrot(mandelbrotOptions, function (line, y) {\n            mandelbrotContext!.putImageData(new ImageData(line, mandelbrotCanvas.width, 1), 0, y);\n        });\n        console.timeEnd(\"mandelbrot-sync\");\n    }, 0);\n\n});\n\ndocument.querySelector(\"#montecarlo-run-sync\").addEventListener(\"click\", function () {\n    console.time(\"montecarlo-sync\");\n    const result = syncMonteCarlo(monteCarloOptions);\n    console.timeEnd(\"montecarlo-sync\");\n    paintMonteCarloResult(result);\n    console.log(result);\n});\n\ndocument.querySelector(\"#montecarlo-run-parallel\").addEventListener(\"click\", function () {\n    console.time(\"montecarlo-parallel\");\n    parallelMonteCarlo(monteCarloOptions).then((result) => {\n        console.timeEnd(\"montecarlo-parallel\");\n        paintMonteCarloResult(result);\n        console.log(result);\n    });\n});\n\nfunction paintMonteCarloResult(results: IProjectResult[]) {\n    while (monteCarloTable.rows.length > 1) {\n        monteCarloTable.deleteRow(1);\n    }\n\n    for (const result of results) {\n        const row = monteCarloTable.insertRow();\n        row.insertCell().innerText = result.project.startYear.toLocaleString();\n        row.insertCell().innerText = result.project.totalAmount.toLocaleString();\n\n        for (const groupName of [\"green\", \"yellow\", \"gray\", \"red\"]) {\n            const group = result.groups.find(g => g.name === groupName);\n            row.insertCell().innerText = group ? (group.percentage * 100).toFixed(2) : \"-\";\n        }\n    }\n}\n\nconst knightBoardResult = document.querySelector(\"#knight-board-result\") as HTMLParagraphElement;\n\ndocument.querySelector(\"#knight-run-sync\").addEventListener(\"click\", function () {\n    const boardSize = parseInt((document.querySelector(\"#knight-board-size\")  as HTMLInputElement).value, 10);\n    knightBoardResult.innerText = \"Calculating...\";\n\n    setTimeout(() => {\n        console.time(\"knight-run-sync\");\n        const solutions = syncKnightTours({ x: 0, y: 0}, boardSize);\n        console.timeEnd(\"knight-run-sync\");\n\n        knightBoardResult.innerText = `Found ${solutions} solutions for ${boardSize}x${boardSize} board`;\n    }, 0);\n});\n\ndocument.querySelector(\"#knight-run-parallel\").addEventListener(\"click\", function () {\n    const boardSize = parseInt((document.querySelector(\"#knight-board-size\")  as HTMLInputElement).value, 10);\n    knightBoardResult.innerText = \"Calculating...\";\n\n    console.time(\"knight-run-parallel\");\n    parallelKnightTour({ x: 0, y: 0}, boardSize)\n        .then(solutions => {\n            console.timeEnd(\"knight-run-parallel\");\n            knightBoardResult.innerText = `Found ${solutions} solutions for ${boardSize}x${boardSize} board`;\n        }, (reason) => console.log(reason));\n});\n\nfunction onTranspiledChanged(transpiled: boolean) {\n    if (transpiled) {\n        parallelMandelbrot = transpiledParallelMandelbrot;\n        parallelKnightTour = transpiledParallelKnightTour;\n        syncMonteCarlo = simJsMonteCarlo;\n        parallelMonteCarlo = transpiledParallelMonteCarlo;\n    } else {\n        parallelMandelbrot = dynamicParallelMandelbrot;\n        parallelKnightTour = dynamicKnightTour;\n        syncMonteCarlo = randomMonteCarlo;\n        parallelMonteCarlo = dynamicParallelMonteCarlo;\n    }\n}\n\ndocument.querySelector(\"#transpiled-parallel\")!.addEventListener(\"change\", function (event: Event) {\n    const transpiled = (event.currentTarget as HTMLInputElement).checked;\n    onTranspiledChanged(transpiled);\n});\n\nonTranspiledChanged(true);\n\n\n\n// WEBPACK FOOTER //\n// ./src/browser-example.ts"],"sourceRoot":""}