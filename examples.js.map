{"version":3,"sources":["webpack:///examples.js","webpack:///./src/browser-example.ts"],"names":["webpackJsonp","46","module","exports","__webpack_require__","paintMonteCarloResult","results","monteCarloTable","rows","length","deleteRow","_iterator","_isArray","Array","isArray","_i","Symbol","iterator","_ref","next","done","value","result","row","insertRow","insertCell","innerText","project","startYear","toLocaleString","totalAmount","_arr","_loop","groupName","_i2","group","groups","find","g","name","percentage","toFixed","onTranspiledChanged","transpiled","parallelMandelbrot","__WEBPACK_IMPORTED_MODULE_0__transpiled_mandelbrot__","parallelKnightTour","__WEBPACK_IMPORTED_MODULE_1__transpiled_knights_tour__","syncMonteCarlo","__WEBPACK_IMPORTED_MODULE_6__transpiled_monte_carlo__","parallelMonteCarlo","__WEBPACK_IMPORTED_MODULE_5__dynamic_mandelbrot__","__WEBPACK_IMPORTED_MODULE_2__dynamic_knights_tour__","__WEBPACK_IMPORTED_MODULE_7__dynamic_monte_carlo__","__WEBPACK_IMPORTED_MODULE_3__threads_knights_tour__","__WEBPACK_IMPORTED_MODULE_4_threads__","n","mandelbrotCanvas","document","querySelector","mandelbrotContext","getContext","mandelbrotOptions","i","width","height","pool","monteCarloOptions","investmentAmount","numRuns","numYears","performance","projects","seed","volatility","addEventListener","event","preventDefault","putImageData","createImageData","valuesPerTask","parseInt","console","time","minValuesPerTask","maxValuesPerTask","subscribe","lines","index","blockSize","ImageData","then","timeEnd","reason","error","setTimeout","line","y","log","knightBoardResult","boardSize","solutions","x","currentTarget","checked"],"mappings":"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","file":"examples.js","sourcesContent":["webpackJsonp([1],{\n\n/***/ 46:\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__transpiled_mandelbrot__ = __webpack_require__(11);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__transpiled_knights_tour__ = __webpack_require__(10);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__dynamic_knights_tour__ = __webpack_require__(6);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__threads_knights_tour__ = __webpack_require__(9);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_threads__ = __webpack_require__(3);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_threads___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_threads__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__dynamic_mandelbrot__ = __webpack_require__(7);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__transpiled_monte_carlo__ = __webpack_require__(12);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__dynamic_monte_carlo__ = __webpack_require__(8);\n\n\n\n\n\n\n\n\n/* tslint:disable:no-console */\nvar parallelMandelbrot = __WEBPACK_IMPORTED_MODULE_0__transpiled_mandelbrot__[\"a\" /* mandelbrot */];\nvar parallelKnightTour = __WEBPACK_IMPORTED_MODULE_1__transpiled_knights_tour__[\"a\" /* parallelKnightTours */];\nvar parallelMonteCarlo = __WEBPACK_IMPORTED_MODULE_6__transpiled_monte_carlo__[\"a\" /* parallelMonteCarlo */];\nvar syncMonteCarlo = __WEBPACK_IMPORTED_MODULE_6__transpiled_monte_carlo__[\"b\" /* syncMonteCarlo */];\nvar mandelbrotCanvas = document.querySelector(\"#mandelbrot-canvas\");\nvar mandelbrotContext = mandelbrotCanvas.getContext(\"2d\");\nvar mandelbrotOptions = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_5__dynamic_mandelbrot__[\"a\" /* createMandelOptions */])(mandelbrotCanvas.width, mandelbrotCanvas.height, 10000);\nvar pool = new __WEBPACK_IMPORTED_MODULE_4_threads__[\"Pool\"]();\nvar monteCarloOptions = {\n    investmentAmount: 620000,\n    numRuns: 10000,\n    numYears: 15,\n    performance: 0.0340000,\n    projects: [{\n        startYear: 0,\n        totalAmount: 10000\n    }, {\n        startYear: 1,\n        totalAmount: 10000\n    }, {\n        startYear: 2,\n        totalAmount: 10000\n    }, {\n        startYear: 5,\n        totalAmount: 50000\n    }, {\n        startYear: 15,\n        totalAmount: 800000\n    }],\n    seed: 10,\n    volatility: 0.0896000\n};\nvar monteCarloTable = document.querySelector(\"#montecarlo-table\");\ndocument.querySelector(\"#mandelbrot-run-parallel\").addEventListener(\"click\", function (event) {\n    event.preventDefault();\n    mandelbrotContext.putImageData(mandelbrotContext.createImageData(mandelbrotCanvas.width, mandelbrotCanvas.height), 0, 0);\n    var valuesPerTask = parseInt(document.querySelector(\"#mandelbrot-values-per-task\").value, 10);\n    console.time(\"mandelbrot-parallel\");\n    parallelMandelbrot(mandelbrotOptions, { minValuesPerTask: valuesPerTask, maxValuesPerTask: valuesPerTask }).subscribe(function (lines, index, blockSize) {\n        for (var i = 0; i < lines.length; ++i) {\n            mandelbrotContext.putImageData(new ImageData(lines[i], mandelbrotCanvas.width, 1), 0, index * blockSize + i);\n        }\n    }).then(function () {\n        return console.timeEnd(\"mandelbrot-parallel\");\n    }, function (reason) {\n        return console.error(reason);\n    });\n});\ndocument.querySelector(\"#mandelbrot-run-sync\").addEventListener(\"click\", function () {\n    mandelbrotContext.putImageData(mandelbrotContext.createImageData(mandelbrotCanvas.width, mandelbrotCanvas.height), 0, 0);\n    setTimeout(function () {\n        console.time(\"mandelbrot-sync\");\n        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_5__dynamic_mandelbrot__[\"b\" /* syncMandelbrot */])(mandelbrotOptions, function (line, y) {\n            mandelbrotContext.putImageData(new ImageData(line, mandelbrotCanvas.width, 1), 0, y);\n        });\n        console.timeEnd(\"mandelbrot-sync\");\n    }, 0);\n});\ndocument.querySelector(\"#montecarlo-run-sync\").addEventListener(\"click\", function () {\n    console.time(\"montecarlo-sync\");\n    var result = syncMonteCarlo(monteCarloOptions);\n    console.timeEnd(\"montecarlo-sync\");\n    paintMonteCarloResult(result);\n    console.log(result);\n});\ndocument.querySelector(\"#montecarlo-run-parallel\").addEventListener(\"click\", function () {\n    console.time(\"montecarlo-parallel\");\n    parallelMonteCarlo(monteCarloOptions).then(function (result) {\n        console.timeEnd(\"montecarlo-parallel\");\n        paintMonteCarloResult(result);\n        console.log(result);\n    });\n});\nfunction paintMonteCarloResult(results) {\n    while (monteCarloTable.rows.length > 1) {\n        monteCarloTable.deleteRow(1);\n    }\n    for (var _iterator = results, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n        var _ref;\n\n        if (_isArray) {\n            if (_i >= _iterator.length) break;\n            _ref = _iterator[_i++];\n        } else {\n            _i = _iterator.next();\n            if (_i.done) break;\n            _ref = _i.value;\n        }\n\n        var result = _ref;\n\n        var row = monteCarloTable.insertRow();\n        row.insertCell().innerText = result.project.startYear.toLocaleString();\n        row.insertCell().innerText = result.project.totalAmount.toLocaleString();\n        var _arr = [\"green\", \"yellow\", \"gray\", \"red\"];\n\n        var _loop = function _loop() {\n            var groupName = _arr[_i2];\n            var group = result.groups.find(function (g) {\n                return g.name === groupName;\n            });\n            row.insertCell().innerText = group ? (group.percentage * 100).toFixed(2) : \"-\";\n        };\n\n        for (var _i2 = 0; _i2 < _arr.length; _i2++) {\n            _loop();\n        }\n    }\n}\nvar knightBoardResult = document.querySelector(\"#knight-board-result\");\ndocument.querySelector(\"#knight-run-sync\").addEventListener(\"click\", function () {\n    var boardSize = parseInt(document.querySelector(\"#knight-board-size\").value, 10);\n    knightBoardResult.innerText = \"Calculating...\";\n    setTimeout(function () {\n        console.time(\"knight-run-sync\");\n        var solutions = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__transpiled_knights_tour__[\"b\" /* syncKnightTours */])({ x: 0, y: 0 }, boardSize);\n        console.timeEnd(\"knight-run-sync\");\n        knightBoardResult.innerText = \"Found \" + solutions + \" solutions for \" + boardSize + \"x\" + boardSize + \" board\";\n    }, 0);\n});\ndocument.querySelector(\"#knight-run-parallel\").addEventListener(\"click\", function () {\n    var boardSize = parseInt(document.querySelector(\"#knight-board-size\").value, 10);\n    knightBoardResult.innerText = \"Calculating...\";\n    console.time(\"knight-run-parallel\");\n    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__threads_knights_tour__[\"a\" /* threadsKnightTours */])({ x: 0, y: 0 }, boardSize, pool).then(function (solutions) {\n        console.timeEnd(\"knight-run-parallel\");\n        knightBoardResult.innerText = \"Found \" + solutions + \" solutions for \" + boardSize + \"x\" + boardSize + \" board\";\n    }, function (reason) {\n        return console.log(reason);\n    });\n});\nfunction onTranspiledChanged(transpiled) {\n    if (transpiled) {\n        parallelMandelbrot = __WEBPACK_IMPORTED_MODULE_0__transpiled_mandelbrot__[\"a\" /* mandelbrot */];\n        parallelKnightTour = __WEBPACK_IMPORTED_MODULE_1__transpiled_knights_tour__[\"a\" /* parallelKnightTours */];\n        syncMonteCarlo = __WEBPACK_IMPORTED_MODULE_6__transpiled_monte_carlo__[\"b\" /* syncMonteCarlo */];\n        parallelMonteCarlo = __WEBPACK_IMPORTED_MODULE_6__transpiled_monte_carlo__[\"a\" /* parallelMonteCarlo */];\n    } else {\n        parallelMandelbrot = __WEBPACK_IMPORTED_MODULE_5__dynamic_mandelbrot__[\"c\" /* parallelMandelbrot */];\n        parallelKnightTour = __WEBPACK_IMPORTED_MODULE_2__dynamic_knights_tour__[\"a\" /* parallelKnightTours */];\n        syncMonteCarlo = __WEBPACK_IMPORTED_MODULE_7__dynamic_monte_carlo__[\"a\" /* syncMonteCarlo */];\n        parallelMonteCarlo = __WEBPACK_IMPORTED_MODULE_7__dynamic_monte_carlo__[\"b\" /* parallelMonteCarlo */];\n    }\n}\ndocument.querySelector(\"#transpiled-parallel\").addEventListener(\"change\", function (event) {\n    var transpiled = event.currentTarget.checked;\n    onTranspiledChanged(transpiled);\n});\nonTranspiledChanged(true);\n\n/***/ }\n\n},[46]);\n\n\n// WEBPACK FOOTER //\n// examples.js","import {mandelbrot as transpiledParallelMandelbrot} from \"./transpiled/mandelbrot\";\nimport {parallelKnightTours as transpiledParallelKnightTour, syncKnightTours} from \"./transpiled/knights-tour\";\nimport {parallelKnightTours as dynamicKnightTour} from \"./dynamic/knights-tour\";\nimport {threadsKnightTours} from \"./threads/knights-tour\"\nimport {Pool} from \"threads\";\nimport {syncMandelbrot, createMandelOptions, parallelMandelbrot as dynamicParallelMandelbrot} from \"./dynamic/mandelbrot\";\nimport {syncMonteCarlo as simJsMonteCarlo, parallelMonteCarlo as transpiledParallelMonteCarlo} from \"./transpiled/monte-carlo\";\nimport {syncMonteCarlo as randomMonteCarlo, parallelMonteCarlo as dynamicParallelMonteCarlo, IProjectResult} from \"./dynamic/monte-carlo\";\n\n/* tslint:disable:no-console */\n\nlet parallelMandelbrot = transpiledParallelMandelbrot;\nlet parallelKnightTour = transpiledParallelKnightTour;\nlet parallelMonteCarlo = transpiledParallelMonteCarlo;\nlet syncMonteCarlo = simJsMonteCarlo;\n\nconst mandelbrotCanvas = document.querySelector(\"#mandelbrot-canvas\") as HTMLCanvasElement;\nconst mandelbrotContext = mandelbrotCanvas.getContext(\"2d\");\nconst mandelbrotOptions = createMandelOptions(mandelbrotCanvas.width, mandelbrotCanvas.height, 10000);\n\nconst pool = new Pool();\nconst monteCarloOptions = {\n    investmentAmount: 620000,\n    numRuns: 10000,\n    numYears: 15,\n    performance: 0.0340000,\n    projects: [\n        {\n            startYear: 0,\n            totalAmount: 10000\n        }, {\n            startYear: 1,\n            totalAmount: 10000\n        }, {\n            startYear: 2,\n            totalAmount: 10000\n        }, {\n            startYear: 5,\n            totalAmount: 50000\n        }, {\n            startYear: 15,\n            totalAmount: 800000\n        }\n    ],\n    seed: 10,\n    volatility: 0.0896000\n};\nconst monteCarloTable = document.querySelector(\"#montecarlo-table\") as HTMLTableElement;\n\ndocument.querySelector(\"#mandelbrot-run-parallel\")!.addEventListener(\"click\", function (event) {\n    event.preventDefault();\n\n    mandelbrotContext!.putImageData(mandelbrotContext!.createImageData(mandelbrotCanvas.width, mandelbrotCanvas.height), 0, 0);\n    const valuesPerTask = parseInt((document.querySelector(\"#mandelbrot-values-per-task\") as HTMLInputElement).value, 10);\n\n    console.time(\"mandelbrot-parallel\");\n    parallelMandelbrot(mandelbrotOptions, { minValuesPerTask: valuesPerTask, maxValuesPerTask: valuesPerTask })\n        .subscribe((lines, index, blockSize) => {\n            for (let i = 0; i < lines.length; ++i) {\n                mandelbrotContext!.putImageData(new ImageData(lines[i], mandelbrotCanvas.width, 1), 0, index * blockSize + i);\n            }\n        })\n        .then(() => console.timeEnd(\"mandelbrot-parallel\"), reason => console.error(reason));\n});\n\ndocument.querySelector(\"#mandelbrot-run-sync\")!.addEventListener(\"click\", function () {\n    mandelbrotContext!.putImageData(mandelbrotContext!.createImageData(mandelbrotCanvas.width, mandelbrotCanvas.height), 0, 0);\n\n    setTimeout(() => {\n        console.time(\"mandelbrot-sync\");\n        syncMandelbrot(mandelbrotOptions, function (line, y) {\n            mandelbrotContext!.putImageData(new ImageData(line, mandelbrotCanvas.width, 1), 0, y);\n        });\n        console.timeEnd(\"mandelbrot-sync\");\n    }, 0);\n\n});\n\ndocument.querySelector(\"#montecarlo-run-sync\")!.addEventListener(\"click\", function () {\n    console.time(\"montecarlo-sync\");\n    const result = syncMonteCarlo(monteCarloOptions);\n    console.timeEnd(\"montecarlo-sync\");\n    paintMonteCarloResult(result);\n    console.log(result);\n});\n\ndocument.querySelector(\"#montecarlo-run-parallel\")!.addEventListener(\"click\", function () {\n    console.time(\"montecarlo-parallel\");\n    parallelMonteCarlo(monteCarloOptions).then((result) => {\n        console.timeEnd(\"montecarlo-parallel\");\n        paintMonteCarloResult(result);\n        console.log(result);\n    });\n});\n\nfunction paintMonteCarloResult(results: IProjectResult[]) {\n    while (monteCarloTable.rows.length > 1) {\n        monteCarloTable.deleteRow(1);\n    }\n\n    for (const result of results) {\n        const row = monteCarloTable.insertRow();\n        row.insertCell().innerText = result.project.startYear.toLocaleString();\n        row.insertCell().innerText = result.project.totalAmount.toLocaleString();\n\n        for (const groupName of [\"green\", \"yellow\", \"gray\", \"red\"]) {\n            const group = result.groups.find(g => g.name === groupName);\n            row.insertCell().innerText = group ? (group.percentage * 100).toFixed(2) : \"-\";\n        }\n    }\n}\n\nconst knightBoardResult = document.querySelector(\"#knight-board-result\") as HTMLParagraphElement;\n\ndocument.querySelector(\"#knight-run-sync\")!.addEventListener(\"click\", function () {\n    const boardSize = parseInt((document.querySelector(\"#knight-board-size\")  as HTMLInputElement).value, 10);\n    knightBoardResult.innerText = \"Calculating...\";\n\n    setTimeout(() => {\n        console.time(\"knight-run-sync\");\n        const solutions = syncKnightTours({ x: 0, y: 0}, boardSize);\n        console.timeEnd(\"knight-run-sync\");\n\n        knightBoardResult.innerText = `Found ${solutions} solutions for ${boardSize}x${boardSize} board`;\n    }, 0);\n});\n\ndocument.querySelector(\"#knight-run-parallel\")!.addEventListener(\"click\", function () {\n    const boardSize = parseInt((document.querySelector(\"#knight-board-size\")  as HTMLInputElement).value, 10);\n    knightBoardResult.innerText = \"Calculating...\";\n\n    console.time(\"knight-run-parallel\");\n    threadsKnightTours({ x: 0, y: 0}, boardSize, pool)\n        .then(solutions => {\n            console.timeEnd(\"knight-run-parallel\");\n            knightBoardResult.innerText = `Found ${solutions} solutions for ${boardSize}x${boardSize} board`;\n        }, (reason) => console.log(reason));\n});\n\nfunction onTranspiledChanged(transpiled: boolean) {\n    if (transpiled) {\n        parallelMandelbrot = transpiledParallelMandelbrot;\n        parallelKnightTour = transpiledParallelKnightTour;\n        syncMonteCarlo = simJsMonteCarlo;\n        parallelMonteCarlo = transpiledParallelMonteCarlo;\n    } else {\n        parallelMandelbrot = dynamicParallelMandelbrot;\n        parallelKnightTour = dynamicKnightTour;\n        syncMonteCarlo = randomMonteCarlo;\n        parallelMonteCarlo = dynamicParallelMonteCarlo;\n    }\n}\n\ndocument.querySelector(\"#transpiled-parallel\")!.addEventListener(\"change\", function (event: Event) {\n    const transpiled = (event.currentTarget as HTMLInputElement).checked;\n    onTranspiledChanged(transpiled);\n});\n\nonTranspiledChanged(true);\n\n\n\n// WEBPACK FOOTER //\n// ./src/browser-example.ts"],"sourceRoot":""}